import {
  S as S2,
  d,
  g,
  j as j3
} from "./chunk-5AJSAX2K.js";
import "./chunk-B6C7UPBZ.js";
import {
  f as f2
} from "./chunk-IUQBXXYO.js";
import {
  j as j2
} from "./chunk-VGIEH4HM.js";
import {
  p as p2
} from "./chunk-XLF2NMGX.js";
import {
  t
} from "./chunk-X5GD6LFD.js";
import {
  b2 as b,
  y
} from "./chunk-G4PMFSAZ.js";
import "./chunk-MX5VW6PC.js";
import "./chunk-JJNHUYXK.js";
import "./chunk-UG6RJXJ2.js";
import {
  S
} from "./chunk-OTCYHWWG.js";
import "./chunk-UGXCZZ7N.js";
import "./chunk-OTSYE6UT.js";
import "./chunk-AGDHKBKD.js";
import "./chunk-OC2XWDW2.js";
import "./chunk-C3JHRSMA.js";
import "./chunk-M2UZRY7C.js";
import "./chunk-HUVZEBBO.js";
import "./chunk-VLPG2W66.js";
import "./chunk-GH7GZNY6.js";
import "./chunk-G5DA3EEG.js";
import "./chunk-D443BZKU.js";
import "./chunk-7DFHXN7Z.js";
import "./chunk-NX54JGTL.js";
import "./chunk-I6IIPG56.js";
import "./chunk-JEYXDNAT.js";
import "./chunk-DJJNSAUR.js";
import "./chunk-PZBXBPVO.js";
import "./chunk-TMC6HYGQ.js";
import "./chunk-7FAVUXK2.js";
import "./chunk-IVNFIIVI.js";
import "./chunk-T4QXFCFF.js";
import "./chunk-BFUOEOXA.js";
import "./chunk-NOGWEW4X.js";
import "./chunk-ZCZERMS4.js";
import "./chunk-7CUBIFKN.js";
import "./chunk-GPMIOMDJ.js";
import "./chunk-RGFH75DR.js";
import "./chunk-FEGY3M6U.js";
import "./chunk-RWRC6JKB.js";
import "./chunk-M6AESODI.js";
import "./chunk-NY6S6EMV.js";
import "./chunk-AQGMTI4V.js";
import "./chunk-QG7JWSBW.js";
import "./chunk-6TS2ZJL4.js";
import "./chunk-IBGTNH54.js";
import {
  l as l3
} from "./chunk-4OESBQFK.js";
import {
  h
} from "./chunk-L7EN54WK.js";
import "./chunk-6QTMK7BB.js";
import "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import "./chunk-F4KXGA4J.js";
import "./chunk-KHRHKYU2.js";
import "./chunk-2IMSGFJN.js";
import "./chunk-VHTQ5H2C.js";
import "./chunk-YX2VTIZR.js";
import "./chunk-LYSDGL5S.js";
import "./chunk-SRJX4QLW.js";
import "./chunk-WPTJIN2M.js";
import "./chunk-KUP5BM5G.js";
import "./chunk-HNQNVI5C.js";
import "./chunk-G34OBNLT.js";
import "./chunk-WJUYGRZY.js";
import "./chunk-FKFXOPPT.js";
import "./chunk-KE3WBZYL.js";
import "./chunk-EOMIFMDH.js";
import "./chunk-QFU5COFB.js";
import "./chunk-45ILJ6ZH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-HWKQJUGY.js";
import "./chunk-XDCUZFJX.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import "./chunk-65K4DQAH.js";
import "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import "./chunk-HPGYEHVI.js";
import "./chunk-YBJ5GVXQ.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import "./chunk-N3A2BVTW.js";
import "./chunk-IGYEHOTB.js";
import "./chunk-TVM3SZJR.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import {
  o as o2
} from "./chunk-YIV2QKTZ.js";
import {
  U,
  a as a3,
  j,
  l as l2
} from "./chunk-A3VAC24F.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-6PV45IYU.js";
import {
  p
} from "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import "./chunk-Q6XRAGMA.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  w
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import {
  qt
} from "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import {
  a as a2
} from "./chunk-GZ2P4SCJ.js";
import {
  c
} from "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/layers/support/KMLSublayer.js
var j4;
var S3 = j4 = class extends o2.EventedMixin(l.JSONSupportMixin(p)) {
  constructor(...e) {
    super(...e), this.description = null, this.fullExtent = null, this.id = null, this.networkLink = null, this.parent = null, this.sublayers = null, this.title = null, this.sourceJSON = null, this.layer = null, this.addHandles([a3(() => this.sublayers, "after-add", ({ item: e2 }) => {
      e2.parent = this, e2.layer = this.layer;
    }, U), a3(() => this.sublayers, "after-remove", ({ item: e2 }) => {
      e2.layer = e2.parent = null;
    }, U), l2(() => this.sublayers, (e2, t2) => {
      if (t2) for (const r3 of t2) r3.layer = r3.parent = null;
      if (e2) for (const r3 of e2) r3.parent = this, r3.layer = this.layer;
    }, U), l2(() => this.layer, (e2) => {
      if (this.sublayers) for (const t2 of this.sublayers) t2.layer = e2;
    }, U)]);
  }
  initialize() {
    j(() => this.networkLink).then(() => j(() => true === this.visible)).then(() => this.load());
  }
  load(e) {
    if (!this.networkLink) return;
    if (this.networkLink.viewFormat) return;
    const r3 = null != e ? e.signal : null, s = this._fetchService(this._get("networkLink")?.href ?? "", r3).then((e2) => {
      const r4 = j3(e2.sublayers);
      this.fullExtent = z.fromJSON(r4), this.sourceJSON = e2;
      const s2 = w(V.ofType(j4), S2(j4, e2));
      this.sublayers ? this.sublayers.addMany(s2) : this.sublayers = s2, this.layer?.emit("sublayer-update"), this.layer && this.layer.notifyChange("visibleSublayers");
    });
    return this.addResolvingPromise(s), Promise.resolve(this);
  }
  get visible() {
    return this._get("visible");
  }
  set visible(e) {
    this._get("visible") !== e && (this._set("visible", e), this.layer && this.layer.notifyChange("visibleSublayers"));
  }
  readVisible(e, t2) {
    return !!t2.visibility;
  }
  _fetchService(e, t2) {
    return g(e, this.layer.outSpatialReference, this.layer.refreshInterval, t2).then((e2) => d(e2.data));
  }
};
r([m()], S3.prototype, "description", void 0), r([m({ type: z })], S3.prototype, "fullExtent", void 0), r([m()], S3.prototype, "id", void 0), r([m({ readOnly: true, value: null })], S3.prototype, "networkLink", void 0), r([m({ json: { write: { allowNull: true } } })], S3.prototype, "parent", void 0), r([m({ type: V.ofType(S3), json: { write: { allowNull: true } } })], S3.prototype, "sublayers", void 0), r([m({ value: null, json: { read: { source: "name", reader: (e) => c(e) } } })], S3.prototype, "title", void 0), r([m({ value: true })], S3.prototype, "visible", null), r([o("visible", ["visibility"])], S3.prototype, "readVisible", null), r([m()], S3.prototype, "sourceJSON", void 0), r([m()], S3.prototype, "layer", void 0), S3 = j4 = r([a("esri.layers.support.KMLSublayer")], S3);

// node_modules/@arcgis/core/layers/KMLLayer.js
var w2 = ["kml", "xml"];
var F = class extends p2(f2(t(b(j2(S(h)))))) {
  constructor(...e) {
    super(...e), this._visibleFolders = [], this.allSublayers = new l3({ getCollections: () => [this.sublayers], getChildrenFunction: (e2) => e2.sublayers }), this.outSpatialReference = f.WGS84, this.path = null, this.legendEnabled = false, this.operationalLayerType = "KML", this.sublayers = null, this.type = "kml", this.url = null;
  }
  initialize() {
    this.addHandles([l2(() => this.sublayers, (e, r3) => {
      r3 && r3.forEach((e2) => {
        e2.parent = null, e2.layer = null;
      }), e && e.forEach((e2) => {
        e2.parent = this, e2.layer = this;
      });
    }, U), this.on("sublayer-update", () => this.notifyChange("fullExtent"))]);
  }
  normalizeCtorArgs(e, r3) {
    return "string" == typeof e ? { url: e, ...r3 } : e;
  }
  readSublayersFromItemOrWebMap(e, r3) {
    this._visibleFolders = r3.visibleFolders;
  }
  readSublayers(e, r3, t2) {
    return S2(S3, r3, t2, this._visibleFolders);
  }
  writeSublayers(e, r3) {
    const t2 = [], o3 = e.toArray();
    for (; o3.length; ) {
      const e2 = o3[0];
      e2.networkLink || (e2.visible && t2.push(e2.id), e2.sublayers && o3.push(...e2.sublayers.toArray())), o3.shift();
    }
    r3.visibleFolders = t2;
  }
  get title() {
    const e = this._get("title");
    return e && "defaults" !== this.originOf("title") ? e : this.url ? qt(this.url, w2) || "KML" : e;
  }
  set title(e) {
    this._set("title", e);
  }
  get visibleSublayers() {
    const e = this.sublayers, r3 = [], t2 = (e2) => {
      e2.visible && (r3.push(e2), e2.sublayers && e2.sublayers.forEach(t2));
    };
    return e && e.forEach(t2), r3;
  }
  get fullExtent() {
    return this._recomputeFullExtent();
  }
  load(e) {
    const r3 = null != e ? e.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["KML"], supportsData: false }, e).catch(a2).then(() => this._fetchService(r3))), Promise.resolve(this);
  }
  destroy() {
    super.destroy(), this.allSublayers.destroy();
  }
  async _fetchService(e) {
    const r3 = await Promise.resolve().then(() => this.resourceInfo ? { ssl: false, data: this.resourceInfo } : g(this.url ?? "", this.outSpatialReference, this.refreshInterval, e)), t2 = d(r3.data);
    t2 && this.read(t2, { origin: "service" });
  }
  _recomputeFullExtent() {
    let e = null;
    null != this.extent && (e = this.extent.clone());
    const r3 = (t2) => {
      if (t2.sublayers) for (const o3 of t2.sublayers.items) r3(o3), o3.visible && o3.fullExtent && (null != e ? e.union(o3.fullExtent) : e = o3.fullExtent.clone());
    };
    return r3(this), e;
  }
};
r([m({ readOnly: true })], F.prototype, "allSublayers", void 0), r([m({ type: f })], F.prototype, "outSpatialReference", void 0), r([m({ type: String, json: { origins: { "web-scene": { read: true, write: true } }, read: false } })], F.prototype, "path", void 0), r([m({ readOnly: true, json: { read: false, write: false } })], F.prototype, "legendEnabled", void 0), r([m({ type: ["show", "hide", "hide-children"] })], F.prototype, "listMode", void 0), r([m({ type: ["KML"] })], F.prototype, "operationalLayerType", void 0), r([m({})], F.prototype, "resourceInfo", void 0), r([m({ type: V.ofType(S3), json: { write: { ignoreOrigin: true } } })], F.prototype, "sublayers", void 0), r([o(["web-map", "portal-item"], "sublayers", ["visibleFolders"])], F.prototype, "readSublayersFromItemOrWebMap", null), r([o("service", "sublayers", ["sublayers"])], F.prototype, "readSublayers", null), r([r2("sublayers")], F.prototype, "writeSublayers", null), r([m({ readOnly: true, json: { read: false } })], F.prototype, "type", void 0), r([m({ json: { origins: { "web-map": { read: { source: "title" } } }, write: { ignoreOrigin: true } } })], F.prototype, "title", null), r([m(y)], F.prototype, "url", void 0), r([m({ readOnly: true })], F.prototype, "visibleSublayers", null), r([m({ type: z })], F.prototype, "extent", void 0), r([m()], F.prototype, "fullExtent", null), F = r([a("esri.layers.KMLLayer")], F);
var O = F;
export {
  O as default
};
//# sourceMappingURL=KMLLayer-GC7GNUTQ.js.map
