import {
  b as b3,
  c as c3
} from "./chunk-NCLXIRVQ.js";
import "./chunk-LA7PPTGA.js";
import "./chunk-NKOCAN7K.js";
import "./chunk-VOIQQS36.js";
import {
  i
} from "./chunk-2JAL6FAS.js";
import "./chunk-BGR5EVZD.js";
import {
  l as l4
} from "./chunk-TOO7RTKX.js";
import "./chunk-QLJ6JQFC.js";
import "./chunk-3LL6ALVC.js";
import "./chunk-NZPABYQQ.js";
import "./chunk-CCHJ3WNU.js";
import "./chunk-DRAQJS2F.js";
import "./chunk-VNTS5E5O.js";
import "./chunk-TMFB3DKM.js";
import {
  b2
} from "./chunk-G4PMFSAZ.js";
import "./chunk-MX5VW6PC.js";
import {
  c as c2
} from "./chunk-JJNHUYXK.js";
import "./chunk-UG6RJXJ2.js";
import {
  S
} from "./chunk-OTCYHWWG.js";
import "./chunk-7FAVUXK2.js";
import "./chunk-IVNFIIVI.js";
import "./chunk-FEGY3M6U.js";
import {
  v
} from "./chunk-CAZNHUEV.js";
import "./chunk-XDXJG3QL.js";
import "./chunk-YSCIEMYQ.js";
import "./chunk-YZLWQJLF.js";
import {
  h as h2
} from "./chunk-L7EN54WK.js";
import "./chunk-6QTMK7BB.js";
import {
  X
} from "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import {
  a2 as a3,
  c,
  l as l3
} from "./chunk-FKFXOPPT.js";
import "./chunk-QFU5COFB.js";
import "./chunk-45ILJ6ZH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-HWKQJUGY.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import {
  n,
  t
} from "./chunk-65K4DQAH.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import {
  a as a2
} from "./chunk-TVM3SZJR.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-HCYE6OE4.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-YIV2QKTZ.js";
import {
  l as l2,
  w
} from "./chunk-A3VAC24F.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import "./chunk-O5TPFXRT.js";
import {
  _
} from "./chunk-Q6XRAGMA.js";
import "./chunk-JUAPMINU.js";
import "./chunk-PK2ZR2SJ.js";
import "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  b,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import {
  o2 as o
} from "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import {
  h
} from "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisObserver.js
var f = class extends l.JSONSupportMixin(a2.ClonableMixin(b)) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && c3(this.feature, o2.feature);
  }
};
r([m({ type: _, json: { write: { isRequired: true } } })], f.prototype, "position", void 0), r([m({ type: c2 }), v()], f.prototype, "elevationInfo", void 0), r([m(b3)], f.prototype, "feature", void 0), f = r([a("esri.analysis.LineOfSightAnalysisObserver")], f);
var u = f;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisTarget.js
var l5 = class extends l.JSONSupportMixin(a2) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && c3(this.feature, o2.feature);
  }
};
r([m({ type: _, json: { write: true, origins: { "web-scene": { write: { isRequired: true } } } } }), v()], l5.prototype, "position", void 0), r([m({ type: c2 }), v()], l5.prototype, "elevationInfo", void 0), r([m(b3)], l5.prototype, "feature", void 0), l5 = r([a("esri.analysis.LineOfSightAnalysisTarget")], l5);

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var d = V.ofType(l5);
var j = class extends l4 {
  constructor(t2) {
    super(t2), this.type = "line-of-sight", this.observer = null, this.extent = null;
  }
  initialize() {
    this.addHandles(l2(() => this._computeExtent(), (t2) => {
      null == t2?.pending && this._set("extent", null != t2 ? t2.extent : null);
    }, w));
  }
  get targets() {
    return this._get("targets") || new d();
  }
  set targets(t2) {
    this._set("targets", n(t2, this.targets, d));
  }
  get spatialReference() {
    return null != this.observer?.position ? this.observer.position.spatialReference : null;
  }
  get valid() {
    return null != this.observer?.position;
  }
  async waitComputeExtent() {
    const t2 = this._computeExtent();
    return null != t2 ? t2.pending : Promise.resolve();
  }
  _computeExtent() {
    const t2 = this.spatialReference;
    if (null == this.observer?.position || null == t2) return null;
    const e = (t3) => "absolute-height" === i(t3.position, t3.elevationInfo), r2 = this.observer.position, o2 = a3(r2.x, r2.y, r2.z, r2.x, r2.y, r2.z);
    for (const i2 of this.targets) if (null != i2.position) {
      const e2 = X(i2.position, t2);
      if (null != e2.pending) return { pending: e2.pending, extent: null };
      if (null != e2.geometry) {
        const { x: t3, y: r3, z: s2 } = e2.geometry;
        l3(o2, [t3, r3, s2]);
      }
    }
    const s = c(o2, t2);
    return e(this.observer) && this.targets.every(e) || (s.zmin = void 0, s.zmax = void 0), { pending: null, extent: s };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
  equals(t2) {
    return this === t2 || super.equals(t2) && o(this.observer, t2.observer) && h(this.targets.toArray(), t2.targets.toArray(), (t3, e) => t3.equals(e));
  }
};
r([m({ type: ["line-of-sight"] })], j.prototype, "type", void 0), r([m({ type: u, json: { read: true, write: true } })], j.prototype, "observer", void 0), r([m({ cast: t, type: d, nonNullable: true, json: { read: true, write: true } })], j.prototype, "targets", null), r([m({ value: null, readOnly: true })], j.prototype, "extent", void 0), r([m()], j.prototype, "spatialReference", null), r([m({ readOnly: true })], j.prototype, "valid", null), j = r([a("esri.analysis.LineOfSightAnalysis")], j);

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var u2 = V.ofType(l5);
var d2 = class extends b2(S(h2)) {
  constructor(e) {
    super(e), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new j(), this.opacity = 1;
  }
  initialize() {
    this.addHandles(l2(() => this.analysis, (e, t2) => {
      null != t2 && t2.parent === this && (t2.parent = null), null != e && (e.parent = this);
    }, w));
  }
  async load() {
    return null != this.analysis && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    return this.analysis?.observer;
  }
  set observer(e) {
    const { analysis: t2 } = this;
    t2 && (t2.observer = e);
  }
  get targets() {
    return null != this.analysis ? this.analysis.targets : new V();
  }
  set targets(e) {
    n(e, this.analysis?.targets);
  }
  get fullExtent() {
    return null != this.analysis ? this.analysis.extent : null;
  }
  get spatialReference() {
    return null != this.analysis ? this.analysis.spatialReference : null;
  }
  releaseAnalysis(e) {
    this.analysis === e && (this.analysis = new j());
  }
};
r([m({ json: { read: false }, readOnly: true })], d2.prototype, "type", void 0), r([m({ type: ["LineOfSightLayer"] })], d2.prototype, "operationalLayerType", void 0), r([m({ type: u, json: { read: true, write: { isRequired: true, ignoreOrigin: true } } })], d2.prototype, "observer", null), r([m({ type: u2, json: { read: true, write: { ignoreOrigin: true, isRequired: true } } })], d2.prototype, "targets", null), r([m({ type: j, nonNullable: true, json: { read: false, write: false } })], d2.prototype, "analysis", void 0), r([m({ readOnly: true })], d2.prototype, "fullExtent", null), r([m({ readOnly: true })], d2.prototype, "spatialReference", null), r([m({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], d2.prototype, "opacity", void 0), r([m({ type: ["show", "hide"] })], d2.prototype, "listMode", void 0), d2 = r([a("esri.layers.LineOfSightLayer")], d2);
var m2 = d2;
export {
  m2 as default
};
//# sourceMappingURL=LineOfSightLayer-DKZ5NFV4.js.map
