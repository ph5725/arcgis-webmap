import {
  P,
  i as i3
} from "./chunk-YZ7DWVLV.js";
import {
  a as a2
} from "./chunk-TYEOKHW6.js";
import {
  r as r2
} from "./chunk-QRQFF5JU.js";
import {
  M
} from "./chunk-5JLD4TOP.js";
import {
  r as r3
} from "./chunk-HQQ3TIHZ.js";
import "./chunk-IEBPGCZ4.js";
import {
  i as i4
} from "./chunk-5FFOLNHT.js";
import {
  i as i2
} from "./chunk-CEMHA5WX.js";
import {
  S
} from "./chunk-YR4BEFGH.js";
import {
  u
} from "./chunk-EEB2RHCK.js";
import "./chunk-KYHAK7RN.js";
import {
  O
} from "./chunk-4PAILKIT.js";
import "./chunk-QYCJPZF2.js";
import "./chunk-G3V62EXP.js";
import "./chunk-MGE3DVJJ.js";
import "./chunk-A4YQJHJZ.js";
import "./chunk-JSDQVIZI.js";
import "./chunk-GEY3MNEN.js";
import "./chunk-QARUBZM2.js";
import "./chunk-YEQJ7SMN.js";
import "./chunk-F6HYAIOQ.js";
import "./chunk-733XT7D4.js";
import "./chunk-O3AUTEBE.js";
import "./chunk-TUPNUSND.js";
import "./chunk-VZRBHAHT.js";
import "./chunk-73JRZP7E.js";
import "./chunk-I7SMTGBD.js";
import "./chunk-TAPCW5Z5.js";
import "./chunk-JOUWZB2W.js";
import "./chunk-ZQPAEH56.js";
import "./chunk-SEPZOYEZ.js";
import "./chunk-L5FOMWCW.js";
import "./chunk-CF5GNPLI.js";
import "./chunk-5WTH3GBK.js";
import "./chunk-N6WKHIKW.js";
import "./chunk-LHJOMFWG.js";
import "./chunk-A4KKV2O6.js";
import "./chunk-WEJSS4SJ.js";
import "./chunk-IAKXH7PU.js";
import "./chunk-DRLVYVHZ.js";
import "./chunk-DKS7UUDR.js";
import "./chunk-KDQWOWXR.js";
import "./chunk-JOVQBCRD.js";
import "./chunk-2B6XECE5.js";
import "./chunk-GYAK76KG.js";
import "./chunk-QB5ST4HW.js";
import "./chunk-CCHJ3WNU.js";
import "./chunk-NHBIV3BK.js";
import "./chunk-RD652CDC.js";
import "./chunk-KB5I2WHB.js";
import "./chunk-P3YYANTX.js";
import "./chunk-WKCCXG3E.js";
import "./chunk-ZWJOMK2U.js";
import "./chunk-Y2ZAHGIO.js";
import "./chunk-ZCE5HP23.js";
import "./chunk-Y2QTREQA.js";
import "./chunk-OV7XVIQP.js";
import "./chunk-JQSXFLSD.js";
import {
  y
} from "./chunk-PQMTCR4X.js";
import "./chunk-VM7TVSSO.js";
import "./chunk-MXSL6LZA.js";
import "./chunk-H5K53FMS.js";
import "./chunk-VNLFNBKT.js";
import "./chunk-KHEIHGIK.js";
import "./chunk-XGWAEOLO.js";
import "./chunk-76QJRCNC.js";
import "./chunk-YL4WUSSA.js";
import "./chunk-AAC6XSCN.js";
import "./chunk-GKCEBA6Q.js";
import "./chunk-VWMPQK5V.js";
import "./chunk-IGBV77N3.js";
import {
  c as c2
} from "./chunk-5Y3EUPZN.js";
import "./chunk-NFDUQVJM.js";
import "./chunk-2W7OT7Z4.js";
import "./chunk-3PPDORWL.js";
import "./chunk-YIXK32VF.js";
import "./chunk-CHTPXQAG.js";
import "./chunk-2NTKYBCL.js";
import "./chunk-4ADC6HZF.js";
import {
  c
} from "./chunk-XFKS4JQP.js";
import "./chunk-H6F6O2KE.js";
import "./chunk-AF3FX2UV.js";
import "./chunk-DRAQJS2F.js";
import "./chunk-BZYXFNL4.js";
import "./chunk-VNTS5E5O.js";
import "./chunk-TMFB3DKM.js";
import "./chunk-X3UT6DT7.js";
import "./chunk-JD3UVEVP.js";
import "./chunk-NO2XQDLB.js";
import "./chunk-LBC3MAJX.js";
import "./chunk-3ZORAHSR.js";
import "./chunk-SZN55B2M.js";
import "./chunk-NMP7ZOVG.js";
import "./chunk-YHYQP7QX.js";
import "./chunk-RP7FUW55.js";
import "./chunk-MPV4X4LZ.js";
import "./chunk-TNW4TPNP.js";
import "./chunk-IL45XPTT.js";
import "./chunk-J7LSFQNH.js";
import "./chunk-G5DA3EEG.js";
import "./chunk-I6IIPG56.js";
import "./chunk-JEYXDNAT.js";
import "./chunk-DJJNSAUR.js";
import "./chunk-PZBXBPVO.js";
import "./chunk-TMC6HYGQ.js";
import "./chunk-7FAVUXK2.js";
import "./chunk-IVNFIIVI.js";
import "./chunk-NOGWEW4X.js";
import "./chunk-ZCZERMS4.js";
import "./chunk-RGFH75DR.js";
import "./chunk-FEGY3M6U.js";
import "./chunk-NY6S6EMV.js";
import "./chunk-AQGMTI4V.js";
import "./chunk-QG7JWSBW.js";
import "./chunk-6WL2SHX6.js";
import "./chunk-7ZMGKXLG.js";
import "./chunk-JMXPE5PE.js";
import "./chunk-LL73CCBG.js";
import "./chunk-6TS2ZJL4.js";
import "./chunk-IBGTNH54.js";
import "./chunk-ROVRMLYN.js";
import "./chunk-SYPTUUSZ.js";
import "./chunk-6QTMK7BB.js";
import "./chunk-BNO7HCVD.js";
import "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import "./chunk-KHRHKYU2.js";
import "./chunk-2IMSGFJN.js";
import "./chunk-VHTQ5H2C.js";
import "./chunk-YX2VTIZR.js";
import "./chunk-LYSDGL5S.js";
import "./chunk-SRJX4QLW.js";
import "./chunk-WPTJIN2M.js";
import "./chunk-KUP5BM5G.js";
import "./chunk-HNQNVI5C.js";
import "./chunk-G34OBNLT.js";
import "./chunk-WJUYGRZY.js";
import "./chunk-FKFXOPPT.js";
import "./chunk-KE3WBZYL.js";
import "./chunk-EOMIFMDH.js";
import "./chunk-QFU5COFB.js";
import "./chunk-45ILJ6ZH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-HWKQJUGY.js";
import "./chunk-XDCUZFJX.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import "./chunk-65K4DQAH.js";
import "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import "./chunk-X3R5OB6L.js";
import "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import "./chunk-N3A2BVTW.js";
import "./chunk-IGYEHOTB.js";
import "./chunk-TVM3SZJR.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-CMHHL5UO.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-YIV2QKTZ.js";
import {
  l
} from "./chunk-A3VAC24F.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-6PV45IYU.js";
import "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import "./chunk-O5TPFXRT.js";
import "./chunk-Q6XRAGMA.js";
import "./chunk-JUAPMINU.js";
import "./chunk-PK2ZR2SJ.js";
import "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import {
  b,
  e
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/views/layers/MapImageLayerView.js
var i5 = (i6) => {
  let p = class extends i6 {
    initialize() {
      this.exportImageParameters = new y({ layer: this.layer });
    }
    destroy() {
      this.exportImageParameters.destroy(), this.exportImageParameters = null;
    }
    get floors() {
      return this.view?.floors ?? null;
    }
    get exportImageVersion() {
      return this.exportImageParameters?.commitProperty("version"), this.commitProperty("timeExtent"), this.commitProperty("floors"), (this._get("exportImageVersion") || 0) + 1;
    }
    get timeExtent() {
      return i4(this.layer, this.view?.timeExtent, this._get("timeExtent"));
    }
    canResume() {
      return !!super.canResume() && !this.timeExtent?.isEmpty;
    }
  };
  return r([m()], p.prototype, "exportImageParameters", void 0), r([m({ readOnly: true })], p.prototype, "floors", null), r([m({ readOnly: true })], p.prototype, "exportImageVersion", null), r([m()], p.prototype, "layer", void 0), r([m()], p.prototype, "suspended", void 0), r([m({ readOnly: true })], p.prototype, "timeExtent", null), p = r([a("esri.views.layers.MapImageLayerView")], p), p;
};

// node_modules/@arcgis/core/views/2d/layers/MapImageLayerView2D.js
var w = class extends i5(i2(S(u))) {
  constructor() {
    super(...arguments), this._highlightGraphics = new c(), this._updateHash = "";
  }
  fetchPopupFeaturesAtLocation(t, i6) {
    return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t, i6);
  }
  update(t) {
    const i6 = `${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;
    this._updateHash !== i6 && (this._updateHash = i6, this.strategy.update(t).catch((t2) => {
      b(t2) || i.getLogger(this).error(t2);
    }), t.stationary && this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)), this._highlightView.processUpdate(t);
  }
  attach() {
    const { imageMaxWidth: t, imageMaxHeight: i6, version: e2 } = this.layer, r4 = e2 >= 10.3, h = e2 >= 10;
    this._bitmapContainer = new r3(), this.container.addChild(this._bitmapContainer), this._highlightView = new O({ view: this.view, graphics: this._highlightGraphics, requestUpdateCallback: () => this.requestUpdate(), container: new a2(this.view.featuresTilingScheme), defaultPointSymbolEnabled: false }), this.container.addChild(this._highlightView.container), this._popupHighlightHelper = new P({ createFetchPopupFeaturesQueryGeometry: (t2, i7) => r2(t2, i7, this.view), highlightGraphics: this._highlightGraphics, highlightGraphicUpdated: ({ graphic: t2, property: i7 }) => this._highlightView.graphicUpdateHandler({ graphic: t2, property: i7 }), layerView: this, updatingHandles: this._updatingHandles }), this.strategy = new M({ container: this._bitmapContainer, fetchSource: this.fetchImageBitmap.bind(this), requestUpdate: this.requestUpdate.bind(this), imageMaxWidth: t, imageMaxHeight: i6, imageRotationSupported: r4, imageNormalizationSupported: h, hidpi: true }), this.addAttachHandles(l(() => this.exportImageVersion, () => this.requestUpdate())), this.requestUpdate();
  }
  detach() {
    this.strategy.destroy(), this.container.removeAllChildren(), this._bitmapContainer.removeAllChildren(), this._highlightView.destroy(), this._popupHighlightHelper.destroy();
  }
  viewChange() {
  }
  moveEnd() {
    this.requestUpdate();
  }
  supportsSpatialReference(t) {
    return this.layer.serviceSupportsSpatialReference(t);
  }
  async doRefresh() {
    this._updateHash = "", this.requestUpdate();
  }
  isUpdating() {
    return this.strategy.updating || this.updateRequested;
  }
  fetchImage(t, i6, e2, r4) {
    return this.layer.fetchImage(t, i6, e2, { timeExtent: this.timeExtent, floors: this.floors, ...r4 });
  }
  fetchImageBitmap(t, i6, e2, r4) {
    return this.layer.fetchImageBitmap(t, i6, e2, { timeExtent: this.timeExtent, floors: this.floors, ...r4 });
  }
  highlight(t, e2) {
    const r4 = i3(t);
    if (0 === r4.length) return e();
    const s = e2?.name ?? c2;
    return this._addHighlightGraphics(r4, s), e(() => !this.destroyed && this._removeHighlightGraphics(r4, s));
  }
  _processHighlight() {
    const t = this._getHighlights();
    this._highlightView?.setHighlight(t);
  }
  _addHighlightGraphics(t, i6) {
    this._highlightGraphics.addMany(t), this._addHighlights(t.map((t2) => t2.uid), i6);
  }
  _removeHighlightGraphics(t, i6) {
    this._highlightGraphics.removeMany(t), this._removeHighlights(t.map((t2) => t2.uid), i6);
  }
};
r([m()], w.prototype, "strategy", void 0), r([m()], w.prototype, "updating", void 0), w = r([a("esri.views.2d.layers.MapImageLayerView2D")], w);
var j = w;
export {
  j as default
};
//# sourceMappingURL=MapImageLayerView2D-J3JCH4PN.js.map
