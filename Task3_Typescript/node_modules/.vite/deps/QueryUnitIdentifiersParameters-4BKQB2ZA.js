import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m as m2
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  m
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/rest/networks/unitIdentifiers/support/QueryUnitIdentifiersParameters.js
var i;
var p = i = class extends l {
  static from(t) {
    return m(i, t);
  }
  constructor(t) {
    super(t), this.objects = null, this.moment = null, this.gdbVersion = null, this.sessionId = null;
  }
};
r([m2({ json: { type: [Object], write: true } })], p.prototype, "objects", void 0), r([m2({ type: Date, json: { type: Number, write: { writer: (t, r2) => {
  r2.moment = t ? t.getTime() : null;
} } } })], p.prototype, "moment", void 0), r([m2({ type: String, json: { write: true } })], p.prototype, "gdbVersion", void 0), r([m2({ type: String, json: { write: true } })], p.prototype, "sessionId", void 0), p = i = r([a("esri.rest.networks.unitIdentifiers.support.QueryUnitIdentifiersParameters")], p);
var n = p;
export {
  n as default
};
//# sourceMappingURL=QueryUnitIdentifiersParameters-4BKQB2ZA.js.map
