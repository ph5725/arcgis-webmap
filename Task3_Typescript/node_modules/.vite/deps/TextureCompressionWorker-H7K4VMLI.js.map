{
  "version": 3,
  "sources": ["../../@arcgis/core/libs/basisu/BasisUEncoder.js", "../../@arcgis/core/libs/dxtEncoder/DXTEncoder.js", "../../@arcgis/core/views/support/TextureCompressionWorker.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{getAssetUrl as s}from\"../../assets.js\";function i(){return t??=(async()=>{const i=await import(\"../../chunks/basis_encoder.js\"),t=await i.default({locateFile:i=>s(`esri/libs/basisu/${i}`)});return t.initializeBasis(),t})(),t}let t;export{i as getBasisEncoder};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{getAssetUrl as t}from\"../../assets.js\";function e(){return r??=(async()=>{const e=await import(\"../../chunks/dxt_encoder.js\");return await e.default({locateFile:e=>t(`esri/libs/dxtEncoder/${e}`)})})(),r}let r;export{e as getDXTEncoder};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{getBasisEncoder as e}from\"../../libs/basisu/BasisUEncoder.js\";import{TextureFormat as t}from\"../../libs/basisu/TextureFormat.js\";import{getDXTEncoder as n}from\"../../libs/dxtEncoder/DXTEncoder.js\";import{CompressedTextureFormat as r}from\"../webgl/enums.js\";let a,s,l=null,i=null;class o{constructor(e,t){this.internalFormat=e,this.compressedTexture=t}}async function u(e){let t;if(t=e.data instanceof ImageBitmap?p(e.data):m(e.data,e.width,e.height,e.components,e.needsFlip),e.hasS3TC){i||await h();const n=new Uint8Array(t.length);if(i?.encode(t,e.width,e.height,e.preMultiplyAlpha,n)){const e=M(n,!0),t=[n.buffer];return{result:new o(e?.internalFormat??null,e?.textureData??null),transferList:t}}return{result:new o(null,null)}}if(e.hasETC){if(l||await c(),e.preMultiplyAlpha&&!i&&await h(),e.preMultiplyAlpha){const n=new Uint8ClampedArray(t.length);i?.premultiply(new Uint8Array(t),e.width,e.height,n),t=n}const n=await d(t,e.width,e.height,e.hasMipmap),r=n?await f(n):null,a=r?.compressedTexture?.levels.map((e=>e.buffer))||[];return{result:new o(r?.internalFormat??null,r?.compressedTexture??null),transferList:a}}return{result:new o(null,null)}}async function c(){l||(l=await(a??=e()))}async function h(){i||(i=await(s??=n()))}async function d(e,t,n,r,a=255,s=0,i=!1,o=!1){if(!l)return null;const u=new l.BasisEncoder;u.setPerceptual(!o),u.setCheckForAlpha(!0),u.setForceAlpha(!1),u.setRenormalize(o),u.setMipGen(r),u.setMipSRGB(!o),u.setCreateKTX2File(!0),u.setKTX2SRGBTransferFunc(!o),u.setQualityLevel(a),u.setCompressionLevel(s);const c=new Uint8Array(e.byteLength);u.setSliceSourceImage(0,new Uint8Array(e),t,n,i);const h=u.encode(c),d=new Uint8Array(c.buffer,0,h),f=new l.KTX2File(new Uint8Array(d));return f.isValid()?(u.delete(),d):(f.close(),f.delete(),u.delete(),null)}async function f(e){if(!l)return new o(null,null);const n=new l.KTX2File(new Uint8Array(e));n.startTranscoding();const[a,s]=n.getHasAlpha()?[t.ETC2_RGBA,r.COMPRESSED_RGBA8_ETC2_EAC]:[t.ETC1_RGB,r.COMPRESSED_RGB8_ETC2],i=n.getLevels(),u=[];for(let t=0;t<i;t++)u.push(new Uint8Array(n.getImageTranscodedSizeInBytes(t,0,0,a))),n.transcodeImage(u[t],t,0,0,a,0,-1,-1);return n.close(),n.delete(),{internalFormat:s,compressedTexture:{type:\"compressed\",levels:u}}}function p(e){const t=new OffscreenCanvas(e.width,e.height),n=t.getContext(\"2d\");n.drawImage(e,0,0);return n.getImageData(0,0,t.width,t.height).data}function m(e,t,n,r,a){const s=new Uint8ClampedArray(e).subarray(0,t*n*r);if(!a)return s;const l=new Uint8ClampedArray(s.length),i=t*r;for(let o=0;o<n;o++){const e=o*i,t=(n-o-1)*i;l.set(s.subarray(e,e+i),t)}return l}const w=31,y=1,T=2,A=3,C=4,g=7,E=21,b=131072;function S(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}const _=S(\"DXT1\"),D=S(\"DXT3\"),R=S(\"DXT5\");function M(e,t){const n=new Int32Array(e.buffer,e.byteOffset,w);let a,s;switch(n[E]){case _:a=8,s=r.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case D:a=16,s=r.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case R:a=16,s=r.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}let l=1,i=n[C],o=n[A];(3&i||3&o)&&(i=i+3&-4,o=o+3&-4);const u=i,c=o;let h,d;n[T]&b&&!1!==t&&(l=Math.max(1,n[g]));let f=e.byteOffset+n[y]+4;const p=[];for(let r=0;r<l;++r)d=(i+3>>2)*(o+3>>2)*a,h=new Uint8Array(e.buffer,f,d),p.push(h),f+=d,i=Math.max(1,i>>1),o=Math.max(1,o>>1);return{textureData:{type:\"compressed\",levels:p},internalFormat:s,width:u,height:c}}export{o as TextureCompressionWorkerOutput,u as compress,d as compressRGBADataToKTX2,f as createTextureDataKTX2,c as initializeBasisEncoder,h as initializeDXTEncoder};\r\n"],
  "mappings": "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",
  "names": ["i", "t", "e", "l", "i", "e", "t", "n", "r", "a", "s", "o", "u", "c", "h", "d", "f", "_", "p"]
}
