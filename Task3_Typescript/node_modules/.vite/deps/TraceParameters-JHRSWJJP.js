import {
  n as n2
} from "./chunk-UWJW6IHR.js";
import {
  n
} from "./chunk-Z6552KW6.js";
import {
  o
} from "./chunk-EUGUM3DF.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m as m2
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  m
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/rest/networks/support/TraceParameters.js
var l2;
var u = l2 = class extends l {
  static from(t) {
    return m(l2, t);
  }
  constructor(t) {
    super(t), this.namedTraceConfigurationGlobalId = null, this.gdbVersion = null, this.traceLocations = [], this.moment = null, this.outSpatialReference = null, this.traceConfiguration = null, this.resultTypes = null, this.traceType = null;
  }
  writeOutSR(t, o2, r3) {
    if (null != t) {
      const { wkid: e, latestWkid: i, wkt: s, wkt2: p } = t;
      o2[r3] = JSON.stringify({ wkid: e ?? void 0, latestWkid: i ?? void 0, wkt: s ?? void 0, wkt2: p ?? void 0 });
    }
  }
};
r([m2({ type: String, json: { read: { source: "traceConfigurationGlobalId" }, write: { target: "traceConfigurationGlobalId" } } })], u.prototype, "namedTraceConfigurationGlobalId", void 0), r([m2({ type: String, json: { write: true } })], u.prototype, "gdbVersion", void 0), r([m2({ type: [n2], json: { write: true } })], u.prototype, "traceLocations", void 0), r([m2({ type: Date, json: { type: Number, write: { writer: (t, o2) => {
  o2.moment = t ? t.getTime() : null;
} } } })], u.prototype, "moment", void 0), r([m2({ type: f, json: { write: { allowNull: true, target: "outSR" } } })], u.prototype, "outSpatialReference", void 0), r([r2("outSpatialReference")], u.prototype, "writeOutSR", null), r([m2({ type: n, json: { write: true } })], u.prototype, "traceConfiguration", void 0), r([m2({ type: [Object], json: { write: true } })], u.prototype, "resultTypes", void 0), r([m2({ type: o.apiValues, json: { type: o.jsonValues, read: o.read, write: o.write } })], u.prototype, "traceType", void 0), u = l2 = r([a("esri.rest.networks.support.TraceParameters")], u);
var m3 = u;
export {
  m3 as default
};
//# sourceMappingURL=TraceParameters-JHRSWJJP.js.map
