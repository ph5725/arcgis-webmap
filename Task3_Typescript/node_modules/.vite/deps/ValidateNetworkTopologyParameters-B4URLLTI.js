import {
  c
} from "./chunk-EUGUM3DF.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import "./chunk-Q6XRAGMA.js";
import "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m as m2
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  m
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/rest/networks/support/ValidateNetworkTopologyParameters.js
var n;
var c2 = n = class extends l {
  static from(t) {
    return m(n, t);
  }
  constructor(t) {
    super(t), this.gdbVersion = null, this.sessionID = null, this.validationType = null, this.validateArea = null, this.validationSet = null, this.outSpatialReference = null;
  }
  writeOutSR(t, o, e) {
    if (null != t) {
      const { wkid: r3, latestWkid: s, wkt: i, wkt2: p } = t;
      o[e] = JSON.stringify({ wkid: r3 ?? void 0, latestWkid: s ?? void 0, wkt: i ?? void 0, wkt2: p ?? void 0 });
    }
  }
};
r([m2({ type: String, json: { write: true } })], c2.prototype, "gdbVersion", void 0), r([m2({ type: String, json: { write: true } })], c2.prototype, "sessionID", void 0), r([m2({ type: c.apiValues, json: { type: c.jsonValues, read: c.read, write: c.write } })], c2.prototype, "validationType", void 0), r([m2({ type: z, json: { write: true } })], c2.prototype, "validateArea", void 0), r([m2({ type: [Object], json: { write: true } })], c2.prototype, "validationSet", void 0), r([m2({ type: f, json: { write: { allowNull: true, target: "outSR" } } })], c2.prototype, "outSpatialReference", void 0), r([r2("outSpatialReference")], c2.prototype, "writeOutSR", null), c2 = n = r([a("esri.rest.networks.support.ValidateNetworkTopologyParameters")], c2);
var d = c2;
export {
  d as default
};
//# sourceMappingURL=ValidateNetworkTopologyParameters-B4URLLTI.js.map
