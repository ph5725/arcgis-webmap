import {
  C as C2,
  E,
  L,
  a as a7,
  c as c4,
  d,
  f as f2,
  g,
  m as m4,
  m2 as m5,
  p as p3,
  p2 as p4,
  v
} from "./chunk-6JRYYUTZ.js";
import {
  w as w3
} from "./chunk-VKKELZ6R.js";
import {
  e as e4,
  n as n3
} from "./chunk-CCHJ3WNU.js";
import {
  e as e2,
  o as o3
} from "./chunk-56LGCTGZ.js";
import "./chunk-OFHPFWHF.js";
import "./chunk-MZJEBIXX.js";
import {
  i as i3,
  u as u3
} from "./chunk-DRAQJS2F.js";
import {
  N,
  P,
  c as c3,
  q
} from "./chunk-TMFB3DKM.js";
import {
  A
} from "./chunk-VD4HSDHE.js";
import {
  l as l5
} from "./chunk-H7SHPX7W.js";
import {
  e as e3
} from "./chunk-KSVHYEPS.js";
import "./chunk-Z6OMEWWC.js";
import {
  j as j2
} from "./chunk-VGIEH4HM.js";
import {
  l as l3,
  p as p2
} from "./chunk-XLF2NMGX.js";
import {
  t as t2
} from "./chunk-X5GD6LFD.js";
import {
  b2,
  u,
  w as w2,
  y as y2
} from "./chunk-G4PMFSAZ.js";
import "./chunk-MX5VW6PC.js";
import "./chunk-JJNHUYXK.js";
import "./chunk-UG6RJXJ2.js";
import {
  S as S2
} from "./chunk-OTCYHWWG.js";
import "./chunk-UGXCZZ7N.js";
import "./chunk-DJJNSAUR.js";
import "./chunk-PZBXBPVO.js";
import "./chunk-TMC6HYGQ.js";
import {
  i as i2
} from "./chunk-BFUOEOXA.js";
import "./chunk-NOGWEW4X.js";
import "./chunk-ZCZERMS4.js";
import "./chunk-GPMIOMDJ.js";
import "./chunk-RGFH75DR.js";
import "./chunk-FEGY3M6U.js";
import "./chunk-RWRC6JKB.js";
import "./chunk-M6AESODI.js";
import {
  h as h2
} from "./chunk-L7EN54WK.js";
import "./chunk-6QTMK7BB.js";
import "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import {
  o as o2
} from "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import "./chunk-F4KXGA4J.js";
import {
  n as n2
} from "./chunk-LYSDGL5S.js";
import "./chunk-SRJX4QLW.js";
import "./chunk-WPTJIN2M.js";
import {
  a as a6
} from "./chunk-KUP5BM5G.js";
import {
  m as m3,
  u as u2
} from "./chunk-HNQNVI5C.js";
import {
  c as c2,
  m as m2
} from "./chunk-G34OBNLT.js";
import "./chunk-WJUYGRZY.js";
import "./chunk-FKFXOPPT.js";
import {
  l as l4
} from "./chunk-KE3WBZYL.js";
import "./chunk-EOMIFMDH.js";
import "./chunk-QFU5COFB.js";
import "./chunk-45ILJ6ZH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-HWKQJUGY.js";
import "./chunk-XDCUZFJX.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import "./chunk-65K4DQAH.js";
import "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import "./chunk-HPGYEHVI.js";
import "./chunk-YBJ5GVXQ.js";
import "./chunk-X3R5OB6L.js";
import {
  n,
  r as r4
} from "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import {
  a as a4
} from "./chunk-TVM3SZJR.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import {
  y
} from "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-YIV2QKTZ.js";
import {
  a as a5,
  h,
  j,
  l as l2
} from "./chunk-A3VAC24F.js";
import {
  r as r2
} from "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-6PV45IYU.js";
import "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _
} from "./chunk-Q6XRAGMA.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r3
} from "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import {
  t
} from "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  b,
  c,
  e,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2
} from "./chunk-JUAD7TJ6.js";
import {
  x
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import {
  C,
  H,
  S,
  p3 as p,
  w
} from "./chunk-ZWFY3WY5.js";
import {
  I,
  V
} from "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import {
  a as a3
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/layers/support/multiLayerServiceUtils.js
function s2() {
  const o4 = a(y2), e10 = o4.json?.write;
  return "object" == typeof e10 && e10 && (e10.writer = function(r5, t3, o5, e11) {
    C(this, r5, null, t3, e11);
  }), { ...o4, set: function(r5) {
    if (null == r5) return void this._set("url", r5);
    const o5 = S({ layer: this, url: r5, nonStandardUrlAllowed: true, logger: i.getLogger(this) });
    this._set("url", o5.url), null != o5.layerId && this._set("layerId", o5.layerId);
  } };
}
function u4(r5) {
  const t3 = I(r5.url);
  return null != t3 && null != r5.layerId && (t3.path = V(t3.path, r5.layerId.toString())), t3;
}

// node_modules/@arcgis/core/layers/support/PlaybackInfo.js
var s3 = class extends a4.ClonableMixin(l) {
  constructor(o4) {
    super(o4), this.framerate = null, this.containerFormat = null, this.gop = null, this.aspectRatio = null, this.klv = null;
  }
};
r([m({ type: String })], s3.prototype, "framerate", void 0), r([m({ type: String })], s3.prototype, "containerFormat", void 0), r([m({ type: Number })], s3.prototype, "gop", void 0), r([m({ type: String })], s3.prototype, "aspectRatio", void 0), r([m({ type: Object })], s3.prototype, "klv", void 0), s3 = r([a2("esri.layers.support.PlaybackInfo")], s3);
var i4 = s3;

// node_modules/@arcgis/core/layers/support/VideoFrame.js
var l6 = class extends b {
  constructor() {
    super(...arguments), this.sourcePoint = null, this.mapPoint = null;
  }
};
function a8(o4) {
  return null != o4?.sourcePoint && null != o4.mapPoint;
}
r([m()], l6.prototype, "sourcePoint", void 0), r([m({ type: _ })], l6.prototype, "mapPoint", void 0), l6 = r([a2("esri.layers.support.VideoFrame.ControlPoint")], l6);
var m6 = class extends a4.ClonableMixin(l) {
  constructor(o4) {
    super(o4), this.frame = null, this.controlPoints = null;
  }
  readControlPoints(o4) {
    return o4.map((o5) => ({ sourcePoint: { x: o5.frameX, y: o5.frameY }, mapPoint: new _(o5.point) }));
  }
  writeControlPoints(o4, r5) {
    null != o4 && a8(o4[0]) && (r5.controlPoints = o4.map((o5) => {
      const r6 = o5.sourcePoint, t3 = o5.mapPoint;
      return { frameX: r6.x, frameY: r6.y, point: t3.toJSON() };
    }));
  }
};
r([m({ type: String })], m6.prototype, "frame", void 0), r([m({ type: [l6], json: { write: { allowNull: false, isRequired: true } } })], m6.prototype, "controlPoints", void 0), r([o("controlPoints")], m6.prototype, "readControlPoints", null), r([r3("controlPoints")], m6.prototype, "writeControlPoints", null), m6 = r([a2("esri.layers.support.VideoFrame")], m6);
var u5 = m6;

// node_modules/@arcgis/core/core/XHRAdapter.js
var _s = class _s extends EventTarget {
  constructor() {
    super(...arguments), this._readyState = 0, this._responseType = "", this.timeout = 0, this._withCredentials = false, this.onabort = null, this.onerror = null, this.onload = null, this.onloadend = null, this.onloadstart = null, this.onprogress = null, this.ontimeout = null, this.onreadystatechange = null, this.UNSENT = 0, this.OPENED = 1, this.HEADERS_RECEIVED = 2, this.LOADING = 3, this.DONE = 4, this._abortController = null, this._error = null, this._options = {}, this._response = null, this._sendFlag = false, this._url = "";
  }
  get readyState() {
    return this._readyState;
  }
  get response() {
    return "" === this.responseType || "text" === this.responseType ? this.responseText : this.readyState !== this.DONE || this._error || !this._response ? null : this._response.data;
  }
  get responseText() {
    return "" !== this.responseType && "text" !== this.responseType && this._throwDOMException(), this.readyState !== this.DONE ? "" : this._response ? this._response.data : null != this._error?.raw ? "string" == typeof this._error.raw ? this._error.raw : JSON.stringify(this._error.raw) : "";
  }
  get responseType() {
    return this._responseType;
  }
  set responseType(t3) {
    ("document" !== t3 || globalThis instanceof Window) && (this.readyState !== this.LOADING && this.readyState !== this.DONE || this._throwDOMException(), this._responseType = t3);
  }
  get responseURL() {
    return (this._response || this._error)?.url ?? "";
  }
  get responseXML() {
    return "" !== this.responseType && "document" !== this.responseType && this._throwDOMException(), this.readyState !== this.DONE ? null : this._response?.data ?? null;
  }
  get status() {
    return (this._response || this._error)?.httpStatus ?? 0;
  }
  get statusText() {
    return "";
  }
  get upload() {
    return console.warn("upload not implemented"), null;
  }
  get withCredentials() {
    return this._withCredentials;
  }
  set withCredentials(t3) {
    this.readyState !== this.UNSENT && this.readyState !== this.OPENED && this._throwDOMException(), this._withCredentials = t3;
  }
  abort() {
    this.readyState === this.OPENED && this._sendFlag || this.readyState === this.HEADERS_RECEIVED || this.readyState === this.LOADING ? (this._sendFlag = false, this._error = null, this._response = null, this._abortController?.abort(), this._updateReadyState(this.DONE), this._dispatchProgressEvent("abort"), this._dispatchProgressEvent("loadend")) : this.readyState === this.DONE && this._updateReadyState(this.UNSENT);
  }
  getAllResponseHeaders() {
    let t3 = "";
    const e10 = (this._response || this._error)?.getAllHeaders?.();
    if (e10) for (const [s5, r5] of e10) t3 += `${s5}: ${r5}\r
`;
    return t3;
  }
  getResponseHeader(t3) {
    return (this._response || this._error)?.getHeader?.(t3) ?? null;
  }
  open(t3, e10) {
    switch (this._sendFlag = false, this._options = {}, t3) {
      case "GET":
        this._options.method = "auto";
        break;
      case "POST":
        this._options.method = "post";
        break;
      case "HEAD":
        this._options.method = "head";
        break;
      case "DELETE":
        this._options.method = "delete";
        break;
      case "PUT":
        this._options.method = "put";
    }
    this._url = e10, this._error = null, this._response = null, this._abortController = new AbortController(), this._updateReadyState(this.OPENED);
  }
  overrideMimeType(t3) {
    throw new Error("overrideMimeType not implemented");
  }
  send(s5) {
    (this.readyState !== this.OPENED || this._sendFlag) && this._throwDOMException(), this._sendFlag = true, this._updateReadyState(this.LOADING), this._dispatchProgressEvent("loadstart");
    const r5 = this._options;
    s5 instanceof URLSearchParams ? r5.body = s5.toString() : r5.body = s5, r5.responseType = "" === this.responseType ? "text" : "arraybuffer" === this.responseType ? "array-buffer" : this.responseType, r5.signal = this._abortController?.signal, this.timeout && (r5.timeout = this.timeout), this.withCredentials && (r5.withCredentials = true), H(this._url, r5).then((t3) => {
      this._response = t3, this._updateReadyState(this.DONE), this._dispatchProgressEvent("load");
    }).catch((t3) => {
      this._sendFlag && (this._error = t3.details, this._updateReadyState(this.DONE), p(t3) ? this._dispatchProgressEvent("timeout") : "AbortError" === t3.name ? this._dispatchProgressEvent("abort") : this._dispatchProgressEvent("error"));
    }).finally(() => {
      this._sendFlag && this._dispatchProgressEvent("loadend");
    });
  }
  setRequestHeader(t3, e10) {
    (this.readyState !== this.OPENED || this._sendFlag) && this._throwDOMException(), this._options.headers ??= {}, this._options.headers[t3] = e10;
  }
  _dispatchProgressEvent(t3) {
    const e10 = new ProgressEvent(t3, { loaded: 0, total: 0 });
    this.dispatchEvent(e10), this[`on${t3}`]?.(e10);
  }
  _throwDOMException() {
    throw new DOMException("", "InvalidStateError");
  }
  _updateReadyState(t3) {
    if (this._readyState !== t3 && (this._readyState = t3, t3 !== this.UNSENT)) {
      const t4 = new Event("readystatechange");
      this.dispatchEvent(t4), this.onreadystatechange?.(t4);
    }
  }
};
_s.UNSENT = 0;
_s.OPENED = 1;
_s.HEADERS_RECEIVED = 2;
_s.LOADING = 3;
_s.DONE = 4;
var s4 = _s;

// node_modules/@arcgis/core/layers/video/VideoCameraSensorModel.js
var M = Math.PI / 180;
var V2 = class extends b {
  constructor(t3) {
    super(), this.averageElevation = 0, this.imageHeight = 0, this.imageWidth = 0, this.metadataSupportsTransforms = false, this.platformHeadingAngle = 0, this.platformPitchAngle = 0, this.platformRollAngle = 0, this.sensorHeadingAngle = 0, this.sensorAltitude = 0, this.sensorHorizontalFieldOfView = 0, this.sensorLatitude = 0, this.sensorLongitude = 0, this.sensorPitchAngle = 0, this.sensorRollAngle = 0, this.sensorVerticalFieldOfView = 0, this.vttMetadata = /* @__PURE__ */ new Map(), this._createMat3FromValues = (t4) => {
      const e11 = t4[0], o4 = t4[1], s5 = t4[2];
      return n3(e11[0], o4[0], s5[0], e11[1], o4[1], s5[1], e11[2], o4[2], s5[2]);
    }, this._multiplyMat3 = (t4, e11) => {
      const o4 = e4();
      return i3(o4, t4, e11), o4;
    }, this._transposeMat3 = (t4) => {
      const e11 = e4();
      return u3(e11, t4), e11;
    }, this._calculateCameraFovForward = () => this._createMat3FromValues([[0, 0, 1], [Math.tan(0.5 * this.sensorHorizontalFieldOfView * M), 0, 0], [0, Math.tan(0.5 * this.sensorVerticalFieldOfView * M), 0]]), this._calculateCameraFovReverse = () => this._createMat3FromValues([[0, 1 / Math.tan(0.5 * this.sensorHorizontalFieldOfView * M), 0], [0, 0, 1 / Math.tan(0.5 * this.sensorVerticalFieldOfView * M)], [1, 0, 0]]), this._calculateCameraLook = () => this._getRotationMatrixZYX(this.sensorHeadingAngle * M, this.sensorPitchAngle * M, this.sensorRollAngle * M), this._calculateImageDimensionsForward = () => this._createMat3FromValues([[2 / this.imageWidth, 0, -1], [0, -2 / this.imageHeight, -1], [0, 0, 1]]), this._calculateImageDimensionsReverse = () => this._createMat3FromValues([[this.imageWidth / 2, 0, this.imageWidth / 2], [0, -this.imageHeight / 2, -this.imageHeight / 2], [0, 0, 1]]), this._calculatePlatformPositionMatrix = () => {
      const t4 = Math.sin(this.sensorLatitude * M), e11 = Math.cos(this.sensorLatitude * M), o4 = Math.sin(this.sensorLongitude * M), s5 = Math.cos(this.sensorLongitude * M);
      return this._createMat3FromValues([[-t4 * s5, -o4, -e11 * s5], [-t4 * o4, s5, -e11 * o4], [e11, 0, -t4]]);
    }, this._calculatePlatformOrientation = () => this._getRotationMatrixZYX(this.platformHeadingAngle * M, this.platformPitchAngle * M, this.platformRollAngle * M), this._extractValues = (t4) => {
      this.imageWidth = t4.get(d.EsriVideoWidth)?.value, this.imageHeight = t4.get(d.EsriVideoHeight)?.value;
      const e11 = t4.get(d.SensorEllipsoidHeight)?.value;
      this.sensorAltitude = e11 ?? t4.get(d.SensorTrueAltitude)?.value, this.sensorLatitude = t4.get(d.SensorLatitude)?.value, this.sensorLongitude = t4.get(d.SensorLongitude)?.value, this.sensorHeadingAngle = t4.get(d.SensorAzimuthAngle)?.value, this.sensorPitchAngle = t4.get(d.SensorElevationAngle)?.value, this.sensorRollAngle = t4.get(d.SensorRollAngle)?.value, this.sensorHorizontalFieldOfView = t4.get(d.SensorHorizontalFOV)?.value, this.sensorVerticalFieldOfView = t4.get(d.SensorVerticalFOV)?.value, this.platformHeadingAngle = t4.get(d.PlatformHeadingAngle)?.value, this.platformPitchAngle = t4.get(d.PlatformPitchAngle)?.value, this.platformRollAngle = t4.get(d.PlatformRollAngle)?.value, this.averageElevation = t4.get(d.FrameCenterElevation)?.value || 0;
    }, this._getRotationMatrixZYX = (t4, e11, o4) => {
      const s5 = Math.cos(t4), i5 = Math.sin(t4), a9 = Math.cos(e11), r5 = Math.sin(e11), l7 = Math.cos(o4), n4 = Math.sin(o4);
      return this._createMat3FromValues([[s5 * a9, s5 * r5 * n4 - l7 * i5, i5 * n4 + s5 * l7 * r5], [a9 * i5, s5 * l7 + i5 * r5 * n4, l7 * i5 * r5 - s5 * n4], [-r5, a9 * n4, a9 * l7]]);
    }, this._initCameraSensor = () => {
      const t4 = this._calculateCameraFovForward(), e11 = this._calculateCameraFovReverse(), o4 = this._calculateCameraLook(), s5 = this._calculateImageDimensionsForward(), i5 = this._calculateImageDimensionsReverse(), a9 = this._calculatePlatformPositionMatrix(), r5 = this._calculatePlatformOrientation(), l7 = this._multiplyMat3(this._multiplyMat3(a9, r5), o4);
      this._imageToEarthTransform = this._multiplyMat3(this._multiplyMat3(l7, t4), s5);
      const n4 = this._multiplyMat3(i5, e11);
      this._earthToImageTransform = this._multiplyMat3(n4, this._transposeMat3(l7)), this._platformPositionEcef = this._projectPointToECEF(this.sensorLongitude, this.sensorLatitude, this.sensorAltitude || this.averageElevation);
    }, this._metadataSupportsTransforms = (t4) => {
      if (!t4?.size) return false;
      const e11 = t4.get(d.EsriVideoWidth)?.value ?? 0, o4 = t4.get(d.EsriVideoHeight)?.value ?? 0;
      if (e11 <= 0 || o4 <= 0) return false;
      const s5 = t4.get(d.SensorEllipsoidHeight)?.value, i5 = t4.get(d.SensorTrueAltitude)?.value, a9 = t4.get(d.SensorLatitude)?.value, r5 = t4.get(d.SensorLongitude)?.value;
      if (null == s5 && null == i5 || null == a9 || null == r5) return false;
      const l7 = t4.get(d.PlatformHeadingAngle)?.value, n4 = t4.get(d.PlatformPitchAngle)?.value, h3 = t4.get(d.PlatformRollAngle)?.value;
      if (null == l7 || null == n4 || null == h3) return false;
      const m7 = t4.get(d.SensorHorizontalFOV)?.value, g2 = t4.get(d.SensorVerticalFOV)?.value;
      if (null == m7 || null == g2) return false;
      const u6 = t4.get(d.SensorAzimuthAngle)?.value, c5 = t4.get(d.SensorElevationAngle)?.value, p5 = t4.get(d.SensorRollAngle)?.value;
      return null != u6 && null != c5 && null != p5;
    }, this._projectPointToECEF = (t4, e11, o4) => {
      const s5 = [];
      return o2([t4, e11, o4], f.WGS84, 0, s5, w3, 0), new _({ x: s5[0], y: s5[1], z: s5[2], spatialReference: w3 });
    }, this._projectImageVectorToEllipsoid = (t4, e11) => {
      const o4 = t.semiMajorAxis + e11, s5 = t.semiMinorAxis + e11, i5 = s5 / o4, a9 = o4 / s5, { x: n4, y: h3, z: u6 } = this._platformPositionEcef, c5 = u6 ?? this.averageElevation, p5 = r4(n4, h3, a9 * c5), d2 = P(t4, t4), f3 = P(t4, p5), v3 = P(p5, p5) - o4 * o4, A3 = (-f3 - Math.sqrt(f3 * f3 - d2 * v3)) / d2;
      if (A3 < 0) return [NaN, NaN, NaN];
      const M3 = n();
      return q(M3, p5, t4, A3), M3[2] = M3[2] * i5, M3;
    };
    const e10 = t3?.videoMetadata;
    this.updateSensorModel(e10);
  }
  updateSensorModel(t3) {
    t3?.size && (this._set("metadataSupportsTransforms", this._metadataSupportsTransforms(t3)), this.metadataSupportsTransforms && (this._extractValues(t3), this._initCameraSensor()));
  }
  transformGeoToImage(t3, e10, o4) {
    const s5 = this._platformPositionEcef;
    if (!s5) return [0, 0];
    const { x: i5, y: a9, z: n4 } = s5, h3 = r4(i5, a9, n4), m7 = this._projectPointToECEF(t3, e10, o4 || this.averageElevation), g2 = n(), p5 = r4(m7.x, m7.y, m7.z);
    c3(g2, p5, h3), N(g2, g2, this._earthToImageTransform);
    const d2 = g2[0], f3 = g2[1], v3 = g2[2];
    let _3 = r4(NaN, NaN, NaN);
    return isNaN(v3) || (_3 = r4(d2 / v3, f3 / v3, v3 / v3)), [_3[0], _3[1]];
  }
  transformImageToGeo(t3, e10) {
    const o4 = r4(t3, e10, 1), s5 = n();
    N(s5, o4, this._imageToEarthTransform);
    const i5 = this._projectImageVectorToEllipsoid(s5, this.averageElevation);
    let a9;
    if (!isNaN(i5[0])) {
      const t4 = [];
      o2([i5[0], i5[1], i5[2]], w3, 0, t4, f.WGS84, 0), a9 = new _({ x: t4[0], y: t4[1], z: t4[2], spatialReference: f.WGS84 });
    }
    return a9;
  }
};
r([m()], V2.prototype, "averageElevation", void 0), r([m()], V2.prototype, "imageHeight", void 0), r([m()], V2.prototype, "imageWidth", void 0), r([m({ readOnly: true })], V2.prototype, "metadataSupportsTransforms", void 0), r([m()], V2.prototype, "platformHeadingAngle", void 0), r([m()], V2.prototype, "platformPitchAngle", void 0), r([m()], V2.prototype, "platformRollAngle", void 0), r([m()], V2.prototype, "sensorHeadingAngle", void 0), r([m()], V2.prototype, "sensorAltitude", void 0), r([m()], V2.prototype, "sensorHorizontalFieldOfView", void 0), r([m()], V2.prototype, "sensorLatitude", void 0), r([m()], V2.prototype, "sensorLongitude", void 0), r([m()], V2.prototype, "sensorPitchAngle", void 0), r([m()], V2.prototype, "sensorRollAngle", void 0), r([m()], V2.prototype, "sensorVerticalFieldOfView", void 0), r([m()], V2.prototype, "vttMetadata", void 0), V2 = r([a2("esri.layers.video.VideoCameraSensorModel")], V2);

// node_modules/@arcgis/core/layers/video/VideoController.js
var y3;
var _2;
function v2() {
  return _2 ? y3 : (_2 = 1, e10 = "undefined" != typeof window ? window : void 0 !== e2 ? e2 : "undefined" != typeof self ? self : {}, y3 = e10);
  var e10;
}
var b3 = o3(v2());
var T;
var S3;
var E2;
var w4;
var C3;
var k;
var I2;
var x2;
var A2;
var D;
var P2;
var L2;
var O;
var N2;
var R;
var M2;
var U;
var B;
var F;
var q2;
var j3;
var $;
var H2;
var V3;
var z2;
var W;
function G() {
  if (S3) return T;
  S3 = 1;
  var e10 = Array.prototype.slice;
  function t3(t4, i5) {
    "length" in t4 || (t4 = [t4]), t4 = e10.call(t4);
    for (; t4.length; ) {
      var s5 = t4.shift(), n4 = i5(s5);
      if (n4) return n4;
      s5.childNodes && s5.childNodes.length && (t4 = e10.call(s5.childNodes).concat(t4));
    }
  }
  return T = t3;
}
function X() {
  if (w4) return E2;
  function e10(t3, i5) {
    if (!(this instanceof e10)) return new e10(t3, i5);
    this.data = t3, this.nodeValue = t3, this.length = t3.length, this.ownerDocument = i5 || null;
  }
  return w4 = 1, E2 = e10, e10.prototype.nodeType = 8, e10.prototype.nodeName = "#comment", e10.prototype.toString = function() {
    return "[object Comment]";
  }, E2;
}
function K() {
  if (k) return C3;
  function e10(t3, i5) {
    if (!(this instanceof e10)) return new e10(t3);
    this.data = t3 || "", this.length = this.data.length, this.ownerDocument = i5 || null;
  }
  return k = 1, C3 = e10, e10.prototype.type = "DOMTextNode", e10.prototype.nodeType = 3, e10.prototype.nodeName = "#text", e10.prototype.toString = function() {
    return this.data;
  }, e10.prototype.replaceData = function(e11, t3, i5) {
    var s5 = this.data, n4 = s5.substring(0, e11), r5 = s5.substring(e11 + t3, s5.length);
    this.data = n4 + i5 + r5, this.length = this.data.length;
  }, C3;
}
function Y() {
  if (x2) return I2;
  function e10(e11) {
    var t3 = this, i5 = e11.type;
    e11.target || (e11.target = t3), t3.listeners || (t3.listeners = {});
    var s5 = t3.listeners[i5];
    if (s5) return s5.forEach(function(i6) {
      e11.currentTarget = t3, "function" == typeof i6 ? i6(e11) : i6.handleEvent(e11);
    });
    t3.parentNode && t3.parentNode.dispatchEvent(e11);
  }
  return x2 = 1, I2 = e10;
}
function Q() {
  if (D) return A2;
  function e10(e11, t3) {
    var i5 = this;
    i5.listeners || (i5.listeners = {}), i5.listeners[e11] || (i5.listeners[e11] = []), -1 === i5.listeners[e11].indexOf(t3) && i5.listeners[e11].push(t3);
  }
  return D = 1, A2 = e10;
}
function J() {
  if (L2) return P2;
  function e10(e11, t3) {
    var i5 = this;
    if (i5.listeners && i5.listeners[e11]) {
      var s5 = i5.listeners[e11], n4 = s5.indexOf(t3);
      -1 !== n4 && s5.splice(n4, 1);
    }
  }
  return L2 = 1, P2 = e10;
}
function Z() {
  if (N2) return O;
  N2 = 1;
  var e10 = ["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr"];
  function t3(e11) {
    switch (e11.nodeType) {
      case 3:
        return l7(e11.data);
      case 8:
        return "<!--" + e11.data + "-->";
      default:
        return i5(e11);
    }
  }
  function i5(i6) {
    var s6 = [], n5 = i6.tagName;
    return "http://www.w3.org/1999/xhtml" === i6.namespaceURI && (n5 = n5.toLowerCase()), s6.push("<" + n5 + o4(i6) + r5(i6)), e10.indexOf(n5) > -1 ? s6.push(" />") : (s6.push(">"), i6.childNodes.length ? s6.push.apply(s6, i6.childNodes.map(t3)) : i6.textContent || i6.innerText ? s6.push(l7(i6.textContent || i6.innerText)) : i6.innerHTML && s6.push(i6.innerHTML), s6.push("</" + n5 + ">")), s6.join("");
  }
  function s5(e11, t4) {
    var i6 = typeof e11[t4];
    return "style" === t4 && Object.keys(e11.style).length > 0 || e11.hasOwnProperty(t4) && ("string" === i6 || "boolean" === i6 || "number" === i6) && "nodeName" !== t4 && "className" !== t4 && "tagName" !== t4 && "textContent" !== t4 && "innerText" !== t4 && "namespaceURI" !== t4 && "innerHTML" !== t4;
  }
  function n4(e11) {
    if ("string" == typeof e11) return e11;
    var t4 = "";
    return Object.keys(e11).forEach(function(i6) {
      var s6 = e11[i6];
      i6 = i6.replace(/[A-Z]/g, function(e12) {
        return "-" + e12.toLowerCase();
      }), t4 += i6 + ":" + s6 + ";";
    }), t4;
  }
  function r5(e11) {
    var t4 = e11.dataset, i6 = [];
    for (var s6 in t4) i6.push({ name: "data-" + s6, value: t4[s6] });
    return i6.length ? a9(i6) : "";
  }
  function a9(e11) {
    var t4 = [];
    return e11.forEach(function(e12) {
      var i6 = e12.name, s6 = e12.value;
      "style" === i6 && (s6 = n4(s6)), t4.push(i6 + '="' + h3(s6) + '"');
    }), t4.length ? " " + t4.join(" ") : "";
  }
  function o4(e11) {
    var t4 = [];
    for (var i6 in e11) s5(e11, i6) && t4.push({ name: i6, value: e11[i6] });
    for (var n5 in e11._attributes) for (var r6 in e11._attributes[n5]) {
      var o5 = e11._attributes[n5][r6], l8 = (o5.prefix ? o5.prefix + ":" : "") + r6;
      t4.push({ name: l8, value: o5.value });
    }
    return e11.className && t4.push({ name: "class", value: e11.className }), t4.length ? a9(t4) : "";
  }
  function l7(e11) {
    var t4 = "";
    return "string" == typeof e11 ? t4 = e11 : e11 && (t4 = e11.toString()), t4.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
  }
  function h3(e11) {
    return l7(e11).replace(/"/g, "&quot;");
  }
  return O = t3;
}
function ee() {
  if (M2) return R;
  M2 = 1;
  var e10 = G(), t3 = Y(), i5 = Q(), s5 = J(), n4 = Z(), r5 = "http://www.w3.org/1999/xhtml";
  function a9(e11, t4, i6) {
    if (!(this instanceof a9)) return new a9(e11);
    var s6 = void 0 === i6 ? r5 : i6 || null;
    this.tagName = s6 === r5 ? String(e11).toUpperCase() : e11, this.nodeName = this.tagName, this.className = "", this.dataset = {}, this.childNodes = [], this.parentNode = null, this.style = {}, this.ownerDocument = t4 || null, this.namespaceURI = s6, this._attributes = {}, "INPUT" === this.tagName && (this.type = "text");
  }
  return R = a9, a9.prototype.type = "DOMElement", a9.prototype.nodeType = 1, a9.prototype.appendChild = function(e11) {
    return e11.parentNode && e11.parentNode.removeChild(e11), this.childNodes.push(e11), e11.parentNode = this, e11;
  }, a9.prototype.replaceChild = function(e11, t4) {
    e11.parentNode && e11.parentNode.removeChild(e11);
    var i6 = this.childNodes.indexOf(t4);
    return t4.parentNode = null, this.childNodes[i6] = e11, e11.parentNode = this, t4;
  }, a9.prototype.removeChild = function(e11) {
    var t4 = this.childNodes.indexOf(e11);
    return this.childNodes.splice(t4, 1), e11.parentNode = null, e11;
  }, a9.prototype.insertBefore = function(e11, t4) {
    e11.parentNode && e11.parentNode.removeChild(e11);
    var i6 = null == t4 ? -1 : this.childNodes.indexOf(t4);
    return i6 > -1 ? this.childNodes.splice(i6, 0, e11) : this.childNodes.push(e11), e11.parentNode = this, e11;
  }, a9.prototype.setAttributeNS = function(e11, t4, i6) {
    var s6 = null, n5 = t4, r6 = t4.indexOf(":");
    (r6 > -1 && (s6 = t4.substr(0, r6), n5 = t4.substr(r6 + 1)), "INPUT" === this.tagName && "type" === t4) ? this.type = i6 : (this._attributes[e11] || (this._attributes[e11] = {}))[n5] = { value: i6, prefix: s6 };
  }, a9.prototype.getAttributeNS = function(e11, t4) {
    var i6 = this._attributes[e11], s6 = i6 && i6[t4] && i6[t4].value;
    return "INPUT" === this.tagName && "type" === t4 ? this.type : "string" != typeof s6 ? null : s6;
  }, a9.prototype.removeAttributeNS = function(e11, t4) {
    var i6 = this._attributes[e11];
    i6 && delete i6[t4];
  }, a9.prototype.hasAttributeNS = function(e11, t4) {
    var i6 = this._attributes[e11];
    return !!i6 && t4 in i6;
  }, a9.prototype.setAttribute = function(e11, t4) {
    return this.setAttributeNS(null, e11, t4);
  }, a9.prototype.getAttribute = function(e11) {
    return this.getAttributeNS(null, e11);
  }, a9.prototype.removeAttribute = function(e11) {
    return this.removeAttributeNS(null, e11);
  }, a9.prototype.hasAttribute = function(e11) {
    return this.hasAttributeNS(null, e11);
  }, a9.prototype.removeEventListener = s5, a9.prototype.addEventListener = i5, a9.prototype.dispatchEvent = t3, a9.prototype.focus = function() {
  }, a9.prototype.toString = function() {
    return n4(this);
  }, a9.prototype.getElementsByClassName = function(t4) {
    var i6 = t4.split(" "), s6 = [];
    return e10(this, function(e11) {
      if (1 === e11.nodeType) {
        var t5 = (e11.className || "").split(" ");
        i6.every(function(e12) {
          return -1 !== t5.indexOf(e12);
        }) && s6.push(e11);
      }
    }), s6;
  }, a9.prototype.getElementsByTagName = function(t4) {
    t4 = t4.toLowerCase();
    var i6 = [];
    return e10(this.childNodes, function(e11) {
      1 !== e11.nodeType || "*" !== t4 && e11.tagName.toLowerCase() !== t4 || i6.push(e11);
    }), i6;
  }, a9.prototype.contains = function(t4) {
    return e10(this, function(e11) {
      return t4 === e11;
    }) || false;
  }, R;
}
function te() {
  if (B) return U;
  B = 1;
  var e10 = ee();
  function t3(e11) {
    if (!(this instanceof t3)) return new t3();
    this.childNodes = [], this.parentNode = null, this.ownerDocument = e11 || null;
  }
  return U = t3, t3.prototype.type = "DocumentFragment", t3.prototype.nodeType = 11, t3.prototype.nodeName = "#document-fragment", t3.prototype.appendChild = e10.prototype.appendChild, t3.prototype.replaceChild = e10.prototype.replaceChild, t3.prototype.removeChild = e10.prototype.removeChild, t3.prototype.toString = function() {
    return this.childNodes.map(function(e11) {
      return String(e11);
    }).join("");
  }, U;
}
function ie() {
  if (q2) return F;
  function e10(e11) {
  }
  return q2 = 1, F = e10, e10.prototype.initEvent = function(e11, t3, i5) {
    this.type = e11, this.bubbles = t3, this.cancelable = i5;
  }, e10.prototype.preventDefault = function() {
  }, F;
}
function se() {
  if ($) return j3;
  $ = 1;
  var e10 = G(), t3 = X(), i5 = K(), s5 = ee(), n4 = te(), r5 = ie(), a9 = Y(), o4 = Q(), l7 = J();
  function h3() {
    if (!(this instanceof h3)) return new h3();
    this.head = this.createElement("head"), this.body = this.createElement("body"), this.documentElement = this.createElement("html"), this.documentElement.appendChild(this.head), this.documentElement.appendChild(this.body), this.childNodes = [this.documentElement], this.nodeType = 9;
  }
  j3 = h3;
  var u6 = h3.prototype;
  return u6.createTextNode = function(e11) {
    return new i5(e11, this);
  }, u6.createElementNS = function(e11, t4) {
    var i6 = null === e11 ? null : String(e11);
    return new s5(t4, this, i6);
  }, u6.createElement = function(e11) {
    return new s5(e11, this);
  }, u6.createDocumentFragment = function() {
    return new n4(this);
  }, u6.createEvent = function(e11) {
    return new r5(e11);
  }, u6.createComment = function(e11) {
    return new t3(e11, this);
  }, u6.getElementById = function(t4) {
    return t4 = String(t4), e10(this.childNodes, function(e11) {
      if (String(e11.id) === t4) return e11;
    }) || null;
  }, u6.getElementsByClassName = s5.prototype.getElementsByClassName, u6.getElementsByTagName = s5.prototype.getElementsByTagName, u6.contains = s5.prototype.contains, u6.removeEventListener = l7, u6.addEventListener = o4, u6.dispatchEvent = a9, j3;
}
function ne() {
  if (V3) return H2;
  V3 = 1;
  var e10 = se();
  return H2 = new e10();
}
function re() {
  if (W) return z2;
  W = 1;
  var e10, t3 = void 0 !== e2 ? e2 : "undefined" != typeof window ? window : {}, i5 = ne();
  return "undefined" != typeof document ? e10 = document : (e10 = t3["__GLOBAL_DOCUMENT_CACHE@4"]) || (e10 = t3["__GLOBAL_DOCUMENT_CACHE@4"] = i5), z2 = e10;
}
var ae = o3(re());
var oe;
var le;
var he;
var ue;
var de;
var ce;
var pe;
var me;
var ge;
var fe;
var ye = { exports: {} };
var _e = { exports: {} };
function ve() {
  return oe || (oe = 1, function(e10) {
    function t3() {
      return e10.exports = t3 = Object.assign ? Object.assign.bind() : function(e11) {
        for (var t4 = 1; t4 < arguments.length; t4++) {
          var i5 = arguments[t4];
          for (var s5 in i5) ({}).hasOwnProperty.call(i5, s5) && (e11[s5] = i5[s5]);
        }
        return e11;
      }, e10.exports.__esModule = true, e10.exports.default = e10.exports, t3.apply(null, arguments);
    }
    e10.exports = t3, e10.exports.__esModule = true, e10.exports.default = e10.exports;
  }(_e)), _e.exports;
}
function be() {
  if (he) return le;
  he = 1, le = t3;
  var e10 = Object.prototype.toString;
  function t3(t4) {
    if (!t4) return false;
    var i5 = e10.call(t4);
    return "[object Function]" === i5 || "function" == typeof t4 && "[object RegExp]" !== i5 || "undefined" != typeof window && (t4 === window.setTimeout || t4 === window.alert || t4 === window.confirm || t4 === window.prompt);
  }
  return le;
}
function Te() {
  if (de) return ue;
  function e10(e11, i6) {
    var s5 = "undefined" != typeof Symbol && e11[Symbol.iterator] || e11["@@iterator"];
    if (s5) return (s5 = s5.call(e11)).next.bind(s5);
    if (Array.isArray(e11) || (s5 = t3(e11)) || i6) {
      s5 && (e11 = s5);
      var n4 = 0;
      return function() {
        return n4 >= e11.length ? { done: true } : { done: false, value: e11[n4++] };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function t3(e11, t4) {
    if (e11) {
      if ("string" == typeof e11) return i5(e11, t4);
      var s5 = Object.prototype.toString.call(e11).slice(8, -1);
      return "Object" === s5 && e11.constructor && (s5 = e11.constructor.name), "Map" === s5 || "Set" === s5 ? Array.from(e11) : "Arguments" === s5 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s5) ? i5(e11, t4) : void 0;
    }
  }
  function i5(e11, t4) {
    (null == t4 || t4 > e11.length) && (t4 = e11.length);
    for (var i6 = 0, s5 = new Array(t4); i6 < t4; i6++) s5[i6] = e11[i6];
    return s5;
  }
  return de = 1, ue = function() {
    function t4() {
      this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), this.enabled_ = false;
    }
    var i6 = t4.prototype;
    return i6.getIsEnabled = function() {
      return this.enabled_;
    }, i6.enable = function() {
      this.enabled_ = true;
    }, i6.disable = function() {
      this.enabled_ = false;
    }, i6.reset = function() {
      this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), this.enabled_ = false;
    }, i6.addInterceptor = function(e11, t5) {
      this.typeToInterceptorsMap_.has(e11) || this.typeToInterceptorsMap_.set(e11, /* @__PURE__ */ new Set());
      var i7 = this.typeToInterceptorsMap_.get(e11);
      return !i7.has(t5) && (i7.add(t5), true);
    }, i6.removeInterceptor = function(e11, t5) {
      var i7 = this.typeToInterceptorsMap_.get(e11);
      return !(!i7 || !i7.has(t5)) && (i7.delete(t5), true);
    }, i6.clearInterceptorsByType = function(e11) {
      return !!this.typeToInterceptorsMap_.get(e11) && (this.typeToInterceptorsMap_.delete(e11), this.typeToInterceptorsMap_.set(e11, /* @__PURE__ */ new Set()), true);
    }, i6.clear = function() {
      return !!this.typeToInterceptorsMap_.size && (this.typeToInterceptorsMap_ = /* @__PURE__ */ new Map(), true);
    }, i6.getForType = function(e11) {
      return this.typeToInterceptorsMap_.get(e11) || /* @__PURE__ */ new Set();
    }, i6.execute = function(t5, i7) {
      for (var s5, n4 = e10(this.getForType(t5)); !(s5 = n4()).done; ) {
        var r5 = s5.value;
        try {
          i7 = r5(i7);
        } catch (a9) {
        }
      }
      return i7;
    }, t4;
  }();
}
function Se() {
  if (pe) return ce;
  pe = 1;
  var e10 = function() {
    function e11() {
      this.maxAttempts_ = 1, this.delayFactor_ = 0.1, this.fuzzFactor_ = 0.1, this.initialDelay_ = 1e3, this.enabled_ = false;
    }
    var i5 = e11.prototype;
    return i5.getIsEnabled = function() {
      return this.enabled_;
    }, i5.enable = function() {
      this.enabled_ = true;
    }, i5.disable = function() {
      this.enabled_ = false;
    }, i5.reset = function() {
      this.maxAttempts_ = 1, this.delayFactor_ = 0.1, this.fuzzFactor_ = 0.1, this.initialDelay_ = 1e3, this.enabled_ = false;
    }, i5.getMaxAttempts = function() {
      return this.maxAttempts_;
    }, i5.setMaxAttempts = function(e12) {
      this.maxAttempts_ = e12;
    }, i5.getDelayFactor = function() {
      return this.delayFactor_;
    }, i5.setDelayFactor = function(e12) {
      this.delayFactor_ = e12;
    }, i5.getFuzzFactor = function() {
      return this.fuzzFactor_;
    }, i5.setFuzzFactor = function(e12) {
      this.fuzzFactor_ = e12;
    }, i5.getInitialDelay = function() {
      return this.initialDelay_;
    }, i5.setInitialDelay = function(e12) {
      this.initialDelay_ = e12;
    }, i5.createRetry = function(e12) {
      var i6 = void 0 === e12 ? {} : e12, s5 = i6.maxAttempts, n4 = i6.delayFactor, r5 = i6.fuzzFactor, a9 = i6.initialDelay;
      return new t3({ maxAttempts: s5 || this.maxAttempts_, delayFactor: n4 || this.delayFactor_, fuzzFactor: r5 || this.fuzzFactor_, initialDelay: a9 || this.initialDelay_ });
    }, e11;
  }(), t3 = function() {
    function e11(e12) {
      this.maxAttempts_ = e12.maxAttempts, this.delayFactor_ = e12.delayFactor, this.fuzzFactor_ = e12.fuzzFactor, this.currentDelay_ = e12.initialDelay, this.currentAttempt_ = 1;
    }
    var t4 = e11.prototype;
    return t4.moveToNextAttempt = function() {
      this.currentAttempt_++;
      var e12 = this.currentDelay_ * this.delayFactor_;
      this.currentDelay_ = this.currentDelay_ + e12;
    }, t4.shouldRetry = function() {
      return this.currentAttempt_ < this.maxAttempts_;
    }, t4.getCurrentDelay = function() {
      return this.currentDelay_;
    }, t4.getCurrentMinPossibleDelay = function() {
      return (1 - this.fuzzFactor_) * this.currentDelay_;
    }, t4.getCurrentMaxPossibleDelay = function() {
      return (1 + this.fuzzFactor_) * this.currentDelay_;
    }, t4.getCurrentFuzzedDelay = function() {
      var e12 = this.getCurrentMinPossibleDelay(), t5 = this.getCurrentMaxPossibleDelay();
      return e12 + Math.random() * (t5 - e12);
    }, e11;
  }();
  return ce = e10;
}
function Ee() {
  if (ge) return me;
  ge = 1;
  var e10 = v2();
  function t3(e11) {
    return void 0 === e11 && (e11 = ""), e11.toLowerCase().split(";").reduce(function(e12, t4) {
      var i5 = t4.split("="), s5 = i5[0], n4 = i5[1];
      return "charset" === s5.trim() ? n4.trim() : e12;
    }, "utf-8");
  }
  return me = function(i5, s5) {
    return void 0 === s5 && (s5 = false), function(n4, r5, a9) {
      if (n4) i5(n4);
      else if (r5.statusCode >= 400 && r5.statusCode <= 599) {
        var o4 = a9;
        if (s5) if (e10.TextDecoder) {
          var l7 = t3(r5.headers && r5.headers["content-type"]);
          try {
            o4 = new TextDecoder(l7).decode(a9);
          } catch (h3) {
          }
        } else o4 = String.fromCharCode.apply(null, new Uint8Array(a9));
        i5({ cause: o4 });
      } else i5(null, a9);
    };
  };
}
function we() {
  if (fe) return ye.exports;
  fe = 1;
  var e10 = v2(), t3 = ve(), i5 = be(), s5 = Te(), n4 = Se();
  h3.httpHandler = Ee(), h3.requestInterceptorsStorage = new s5(), h3.responseInterceptorsStorage = new s5(), h3.retryManager = new n4();
  var r5 = function(e11) {
    var t4 = {};
    return e11 ? (e11.trim().split("\n").forEach(function(e12) {
      var i6 = e12.indexOf(":"), s6 = e12.slice(0, i6).trim().toLowerCase(), n5 = e12.slice(i6 + 1).trim();
      void 0 === t4[s6] ? t4[s6] = n5 : Array.isArray(t4[s6]) ? t4[s6].push(n5) : t4[s6] = [t4[s6], n5];
    }), t4) : t4;
  };
  function a9(e11, t4) {
    for (var i6 = 0; i6 < e11.length; i6++) t4(e11[i6]);
  }
  function o4(e11) {
    for (var t4 in e11) if (e11.hasOwnProperty(t4)) return false;
    return true;
  }
  function l7(e11, s6, n5) {
    var r6 = e11;
    return i5(s6) ? (n5 = s6, "string" == typeof e11 && (r6 = { uri: e11 })) : r6 = t3({}, s6, { uri: e11 }), r6.callback = n5, r6;
  }
  function h3(e11, t4, i6) {
    return u6(t4 = l7(e11, t4, i6));
  }
  function u6(e11) {
    if (void 0 === e11.callback) throw new Error("callback argument missing");
    if (e11.requestType && h3.requestInterceptorsStorage.getIsEnabled()) {
      var t4 = { uri: e11.uri || e11.url, headers: e11.headers || {}, body: e11.body, metadata: e11.metadata || {}, retry: e11.retry, timeout: e11.timeout }, i6 = h3.requestInterceptorsStorage.execute(e11.requestType, t4);
      e11.uri = i6.uri, e11.headers = i6.headers, e11.body = i6.body, e11.metadata = i6.metadata, e11.retry = i6.retry, e11.timeout = i6.timeout;
    }
    var s6 = false, n5 = function(t5, i7, n6) {
      s6 || (s6 = true, e11.callback(t5, i7, n6));
    };
    function a10() {
      4 !== f3.readyState || h3.responseInterceptorsStorage.getIsEnabled() || setTimeout(p5, 0);
    }
    function l8() {
      var e12 = void 0;
      if (e12 = f3.response ? f3.response : f3.responseText || d2(f3), E3) try {
        e12 = JSON.parse(e12);
      } catch (t5) {
      }
      return e12;
    }
    function c6(t5) {
      if (clearTimeout(y4), clearTimeout(e11.retryTimeout), t5 instanceof Error || (t5 = new Error("" + (t5 || "Unknown XMLHttpRequest Error"))), t5.statusCode = 0, g2 || !h3.retryManager.getIsEnabled() || !e11.retry || !e11.retry.shouldRetry()) {
        if (e11.requestType && h3.responseInterceptorsStorage.getIsEnabled()) {
          var i7 = { headers: w5.headers || {}, body: w5.body, responseUrl: f3.responseURL, responseType: f3.responseType }, s7 = h3.responseInterceptorsStorage.execute(e11.requestType, i7);
          w5.body = s7.body, w5.headers = s7.headers;
        }
        return n5(t5, w5);
      }
      e11.retryTimeout = setTimeout(function() {
        e11.retry.moveToNextAttempt(), e11.xhr = f3, u6(e11);
      }, e11.retry.getCurrentFuzzedDelay());
    }
    function p5() {
      if (!g2) {
        var t5;
        clearTimeout(y4), clearTimeout(e11.retryTimeout), t5 = e11.useXDR && void 0 === f3.status ? 200 : 1223 === f3.status ? 204 : f3.status;
        var i7 = w5, s7 = null;
        if (0 !== t5 ? (i7 = { body: l8(), statusCode: t5, method: v3, headers: {}, url: _3, rawRequest: f3 }, f3.getAllResponseHeaders && (i7.headers = r5(f3.getAllResponseHeaders()))) : s7 = new Error("Internal XMLHttpRequest Error"), e11.requestType && h3.responseInterceptorsStorage.getIsEnabled()) {
          var a11 = { headers: i7.headers || {}, body: i7.body, responseUrl: f3.responseURL, responseType: f3.responseType }, o5 = h3.responseInterceptorsStorage.execute(e11.requestType, a11);
          i7.body = o5.body, i7.headers = o5.headers;
        }
        return n5(s7, i7, i7.body);
      }
    }
    var m7, g2, f3 = e11.xhr || null;
    f3 || (f3 = e11.cors || e11.useXDR ? new h3.XDomainRequest() : new h3.XMLHttpRequest());
    var y4, _3 = f3.url = e11.uri || e11.url, v3 = f3.method = e11.method || "GET", b4 = e11.body || e11.data, T2 = f3.headers = e11.headers || {}, S4 = !!e11.sync, E3 = false, w5 = { body: void 0, headers: {}, statusCode: 0, method: v3, url: _3, rawRequest: f3 };
    if ("json" in e11 && false !== e11.json && (E3 = true, T2.accept || T2.Accept || (T2.Accept = "application/json"), "GET" !== v3 && "HEAD" !== v3 && (T2["content-type"] || T2["Content-Type"] || (T2["Content-Type"] = "application/json"), b4 = JSON.stringify(true === e11.json ? b4 : e11.json))), f3.onreadystatechange = a10, f3.onload = p5, f3.onerror = c6, f3.onprogress = function() {
    }, f3.onabort = function() {
      g2 = true, clearTimeout(e11.retryTimeout);
    }, f3.ontimeout = c6, f3.open(v3, _3, !S4, e11.username, e11.password), S4 || (f3.withCredentials = !!e11.withCredentials), !S4 && e11.timeout > 0 && (y4 = setTimeout(function() {
      if (!g2) {
        g2 = true, f3.abort("timeout");
        var e12 = new Error("XMLHttpRequest timeout");
        e12.code = "ETIMEDOUT", c6(e12);
      }
    }, e11.timeout)), f3.setRequestHeader) for (m7 in T2) T2.hasOwnProperty(m7) && f3.setRequestHeader(m7, T2[m7]);
    else if (e11.headers && !o4(e11.headers)) throw new Error("Headers cannot be set on an XDomainRequest object");
    return "responseType" in e11 && (f3.responseType = e11.responseType), "beforeSend" in e11 && "function" == typeof e11.beforeSend && e11.beforeSend(f3), f3.send(b4 || null), f3;
  }
  function d2(e11) {
    try {
      if ("document" === e11.responseType) return e11.responseXML;
      var t4 = e11.responseXML && "parsererror" === e11.responseXML.documentElement.nodeName;
      if ("" === e11.responseType && !t4) return e11.responseXML;
    } catch (i6) {
    }
    return null;
  }
  function c5() {
  }
  return ye.exports = h3, ye.exports.default = h3, h3.XMLHttpRequest = e10.XMLHttpRequest || c5, h3.XDomainRequest = "withCredentials" in new h3.XMLHttpRequest() ? h3.XMLHttpRequest : e10.XDomainRequest, a9(["get", "put", "post", "patch", "head", "delete"], function(e11) {
    h3["delete" === e11 ? "del" : e11] = function(t4, i6, s6) {
      return (i6 = l7(t4, i6, s6)).method = e11.toUpperCase(), u6(i6);
    };
  }), ye.exports;
}
var Ce = o3(we());
var ke;
var Ie;
var xe;
var Ae;
var De;
var Pe;
var Le;
var Oe = { exports: {} };
function Ne() {
  if (Ie) return ke;
  Ie = 1;
  var e10 = re(), t3 = Object.create || /* @__PURE__ */ function() {
    function e11() {
    }
    return function(t4) {
      if (1 !== arguments.length) throw new Error("Object.create shim only accepts one parameter.");
      return e11.prototype = t4, new e11();
    };
  }();
  function i5(e11, t4) {
    this.name = "ParsingError", this.code = e11.code, this.message = t4 || e11.message;
  }
  function s5(e11) {
    function t4(e12, t5, i7, s6) {
      return 3600 * (0 | e12) + 60 * (0 | t5) + (0 | i7) + (0 | s6) / 1e3;
    }
    var i6 = e11.match(/^(\d+):(\d{1,2})(:\d{1,2})?\.(\d{3})/);
    return i6 ? i6[3] ? t4(i6[1], i6[2], i6[3].replace(":", ""), i6[4]) : i6[1] > 59 ? t4(i6[1], i6[2], 0, i6[4]) : t4(0, i6[1], i6[2], i6[4]) : null;
  }
  function n4() {
    this.values = t3(null);
  }
  function r5(e11, t4, i6, s6) {
    var n5 = s6 ? e11.split(s6) : [e11];
    for (var r6 in n5) if ("string" == typeof n5[r6]) {
      var a10 = n5[r6].split(i6);
      if (2 === a10.length) t4(a10[0].trim(), a10[1].trim());
    }
  }
  function a9(e11, t4, a10) {
    var o5 = e11;
    function l8() {
      var t5 = s5(e11);
      if (null === t5) throw new i5(i5.Errors.BadTimeStamp, "Malformed timestamp: " + o5);
      return e11 = e11.replace(/^[^\sa-zA-Z-]+/, ""), t5;
    }
    function h4(e12, t5) {
      var i6 = new n4();
      r5(e12, function(e13, t6) {
        switch (e13) {
          case "region":
            for (var s6 = a10.length - 1; s6 >= 0; s6--) if (a10[s6].id === t6) {
              i6.set(e13, a10[s6].region);
              break;
            }
            break;
          case "vertical":
            i6.alt(e13, t6, ["rl", "lr"]);
            break;
          case "line":
            var n5 = t6.split(","), r6 = n5[0];
            i6.integer(e13, r6), i6.percent(e13, r6) && i6.set("snapToLines", false), i6.alt(e13, r6, ["auto"]), 2 === n5.length && i6.alt("lineAlign", n5[1], ["start", "center", "end"]);
            break;
          case "position":
            n5 = t6.split(","), i6.percent(e13, n5[0]), 2 === n5.length && i6.alt("positionAlign", n5[1], ["start", "center", "end"]);
            break;
          case "size":
            i6.percent(e13, t6);
            break;
          case "align":
            i6.alt(e13, t6, ["start", "center", "end", "left", "right"]);
        }
      }, /:/, /\s/), t5.region = i6.get("region", null), t5.vertical = i6.get("vertical", "");
      try {
        t5.line = i6.get("line", "auto");
      } catch (s6) {
      }
      t5.lineAlign = i6.get("lineAlign", "start"), t5.snapToLines = i6.get("snapToLines", true), t5.size = i6.get("size", 100);
      try {
        t5.align = i6.get("align", "center");
      } catch (s6) {
        t5.align = i6.get("align", "middle");
      }
      try {
        t5.position = i6.get("position", "auto");
      } catch (s6) {
        t5.position = i6.get("position", { start: 0, left: 0, center: 50, middle: 50, end: 100, right: 100 }, t5.align);
      }
      t5.positionAlign = i6.get("positionAlign", { start: "start", left: "start", center: "center", middle: "center", end: "end", right: "end" }, t5.align);
    }
    function u7() {
      e11 = e11.replace(/^\s+/, "");
    }
    if (u7(), t4.startTime = l8(), u7(), "-->" !== e11.substr(0, 3)) throw new i5(i5.Errors.BadTimeStamp, "Malformed time stamp (time stamps must be separated by '-->'): " + o5);
    e11 = e11.substr(3), u7(), t4.endTime = l8(), u7(), h4(e11, t4);
  }
  i5.prototype = t3(Error.prototype), i5.prototype.constructor = i5, i5.Errors = { BadSignature: { code: 0, message: "Malformed WebVTT signature." }, BadTimeStamp: { code: 1, message: "Malformed time stamp." } }, n4.prototype = { set: function(e11, t4) {
    this.get(e11) || "" === t4 || (this.values[e11] = t4);
  }, get: function(e11, t4, i6) {
    return i6 ? this.has(e11) ? this.values[e11] : t4[i6] : this.has(e11) ? this.values[e11] : t4;
  }, has: function(e11) {
    return e11 in this.values;
  }, alt: function(e11, t4, i6) {
    for (var s6 = 0; s6 < i6.length; ++s6) if (t4 === i6[s6]) {
      this.set(e11, t4);
      break;
    }
  }, integer: function(e11, t4) {
    /^-?\d+$/.test(t4) && this.set(e11, parseInt(t4, 10));
  }, percent: function(e11, t4) {
    return !!(t4.match(/^([\d]{1,3})(\.[\d]*)?%$/) && (t4 = parseFloat(t4)) >= 0 && t4 <= 100) && (this.set(e11, t4), true);
  } };
  var o4 = e10.createElement && e10.createElement("textarea"), l7 = { c: "span", i: "i", b: "b", u: "u", ruby: "ruby", rt: "rt", v: "span", lang: "span" }, h3 = { white: "rgba(255,255,255,1)", lime: "rgba(0,255,0,1)", cyan: "rgba(0,255,255,1)", red: "rgba(255,0,0,1)", yellow: "rgba(255,255,0,1)", magenta: "rgba(255,0,255,1)", blue: "rgba(0,0,255,1)", black: "rgba(0,0,0,1)" }, u6 = { v: "title", lang: "lang" }, d2 = { rt: "ruby" };
  function c5(e11, t4) {
    function i6() {
      if (!t4) return null;
      function e12(e13) {
        return t4 = t4.substr(e13.length), e13;
      }
      var i7 = t4.match(/^([^<]*)(<[^>]*>?)?/);
      return e12(i7[1] ? i7[1] : i7[2]);
    }
    function n5(e12) {
      return o4.innerHTML = e12, e12 = o4.textContent, o4.textContent = "", e12;
    }
    function r6(e12, t5) {
      return !d2[t5.localName] || d2[t5.localName] === e12.localName;
    }
    function a10(t5, i7) {
      var s6 = l7[t5];
      if (!s6) return null;
      var n6 = e11.document.createElement(s6), r7 = u6[t5];
      return r7 && i7 && (n6[r7] = i7.trim()), n6;
    }
    for (var c6, p6 = e11.document.createElement("div"), m8 = p6, g3 = []; null !== (c6 = i6()); ) if ("<" !== c6[0]) m8.appendChild(e11.document.createTextNode(n5(c6)));
    else {
      if ("/" === c6[1]) {
        g3.length && g3[g3.length - 1] === c6.substr(2).replace(">", "") && (g3.pop(), m8 = m8.parentNode);
        continue;
      }
      var f4, y5 = s5(c6.substr(1, c6.length - 2));
      if (y5) {
        f4 = e11.document.createProcessingInstruction("timestamp", y5), m8.appendChild(f4);
        continue;
      }
      var _4 = c6.match(/^<([^.\s/0-9>]+)(\.[^\s\\>]+)?([^>\\]+)?(\\?)>?$/);
      if (!_4) continue;
      if (!(f4 = a10(_4[1], _4[3]))) continue;
      if (!r6(m8, f4)) continue;
      if (_4[2]) {
        var v4 = _4[2].split(".");
        v4.forEach(function(e12) {
          var t5 = /^bg_/.test(e12), i7 = t5 ? e12.slice(3) : e12;
          if (h3.hasOwnProperty(i7)) {
            var s6 = t5 ? "background-color" : "color", n6 = h3[i7];
            f4.style[s6] = n6;
          }
        }), f4.className = v4.join(" ");
      }
      g3.push(_4[1]), m8.appendChild(f4), m8 = f4;
    }
    return p6;
  }
  var p5 = [[1470, 1470], [1472, 1472], [1475, 1475], [1478, 1478], [1488, 1514], [1520, 1524], [1544, 1544], [1547, 1547], [1549, 1549], [1563, 1563], [1566, 1610], [1645, 1647], [1649, 1749], [1765, 1766], [1774, 1775], [1786, 1805], [1807, 1808], [1810, 1839], [1869, 1957], [1969, 1969], [1984, 2026], [2036, 2037], [2042, 2042], [2048, 2069], [2074, 2074], [2084, 2084], [2088, 2088], [2096, 2110], [2112, 2136], [2142, 2142], [2208, 2208], [2210, 2220], [8207, 8207], [64285, 64285], [64287, 64296], [64298, 64310], [64312, 64316], [64318, 64318], [64320, 64321], [64323, 64324], [64326, 64449], [64467, 64829], [64848, 64911], [64914, 64967], [65008, 65020], [65136, 65140], [65142, 65276], [67584, 67589], [67592, 67592], [67594, 67637], [67639, 67640], [67644, 67644], [67647, 67669], [67671, 67679], [67840, 67867], [67872, 67897], [67903, 67903], [67968, 68023], [68030, 68031], [68096, 68096], [68112, 68115], [68117, 68119], [68121, 68147], [68160, 68167], [68176, 68184], [68192, 68223], [68352, 68405], [68416, 68437], [68440, 68466], [68472, 68479], [68608, 68680], [126464, 126467], [126469, 126495], [126497, 126498], [126500, 126500], [126503, 126503], [126505, 126514], [126516, 126519], [126521, 126521], [126523, 126523], [126530, 126530], [126535, 126535], [126537, 126537], [126539, 126539], [126541, 126543], [126545, 126546], [126548, 126548], [126551, 126551], [126553, 126553], [126555, 126555], [126557, 126557], [126559, 126559], [126561, 126562], [126564, 126564], [126567, 126570], [126572, 126578], [126580, 126583], [126585, 126588], [126590, 126590], [126592, 126601], [126603, 126619], [126625, 126627], [126629, 126633], [126635, 126651], [1114109, 1114109]];
  function m7(e11) {
    for (var t4 = 0; t4 < p5.length; t4++) {
      var i6 = p5[t4];
      if (e11 >= i6[0] && e11 <= i6[1]) return true;
    }
    return false;
  }
  function g2(e11) {
    var t4 = [], i6 = "";
    if (!e11 || !e11.childNodes) return "ltr";
    function s6(e12, t5) {
      for (var i7 = t5.childNodes.length - 1; i7 >= 0; i7--) e12.push(t5.childNodes[i7]);
    }
    function n5(e12) {
      if (!e12 || !e12.length) return null;
      var t5 = e12.pop(), i7 = t5.textContent || t5.innerText;
      if (i7) {
        var r7 = i7.match(/^.*(\n|\r)/);
        return r7 ? (e12.length = 0, r7[0]) : i7;
      }
      return "ruby" === t5.tagName ? n5(e12) : t5.childNodes ? (s6(e12, t5), n5(e12)) : void 0;
    }
    for (s6(t4, e11); i6 = n5(t4); ) for (var r6 = 0; r6 < i6.length; r6++) if (m7(i6.charCodeAt(r6))) return "rtl";
    return "ltr";
  }
  function f3(e11) {
    if ("number" == typeof e11.line && (e11.snapToLines || e11.line >= 0 && e11.line <= 100)) return e11.line;
    if (!e11.track || !e11.track.textTrackList || !e11.track.textTrackList.mediaElement) return -1;
    for (var t4 = e11.track, i6 = t4.textTrackList, s6 = 0, n5 = 0; n5 < i6.length && i6[n5] !== t4; n5++) "showing" === i6[n5].mode && s6++;
    return -1 * ++s6;
  }
  function y4() {
  }
  function _3(e11, t4, i6) {
    y4.call(this), this.cue = t4, this.cueDiv = c5(e11, t4.text);
    var s6 = { color: "rgba(255, 255, 255, 1)", backgroundColor: "rgba(0, 0, 0, 0.8)", position: "relative", left: 0, right: 0, top: 0, bottom: 0, display: "inline", writingMode: "" === t4.vertical ? "horizontal-tb" : "lr" === t4.vertical ? "vertical-lr" : "vertical-rl", unicodeBidi: "plaintext" };
    this.applyStyles(s6, this.cueDiv), this.div = e11.document.createElement("div"), s6 = { direction: g2(this.cueDiv), writingMode: "" === t4.vertical ? "horizontal-tb" : "lr" === t4.vertical ? "vertical-lr" : "vertical-rl", unicodeBidi: "plaintext", textAlign: "middle" === t4.align ? "center" : t4.align, font: i6.font, whiteSpace: "pre-line", position: "absolute" }, this.applyStyles(s6), this.div.appendChild(this.cueDiv);
    var n5 = 0;
    switch (t4.positionAlign) {
      case "start":
      case "line-left":
        n5 = t4.position;
        break;
      case "center":
        n5 = t4.position - t4.size / 2;
        break;
      case "end":
      case "line-right":
        n5 = t4.position - t4.size;
    }
    "" === t4.vertical ? this.applyStyles({ left: this.formatStyle(n5, "%"), width: this.formatStyle(t4.size, "%") }) : this.applyStyles({ top: this.formatStyle(n5, "%"), height: this.formatStyle(t4.size, "%") }), this.move = function(e12) {
      this.applyStyles({ top: this.formatStyle(e12.top, "px"), bottom: this.formatStyle(e12.bottom, "px"), left: this.formatStyle(e12.left, "px"), right: this.formatStyle(e12.right, "px"), height: this.formatStyle(e12.height, "px"), width: this.formatStyle(e12.width, "px") });
    };
  }
  function v3(e11) {
    var t4, i6, s6, n5;
    if (e11.div) {
      i6 = e11.div.offsetHeight, s6 = e11.div.offsetWidth, n5 = e11.div.offsetTop;
      var r6 = (r6 = e11.div.childNodes) && (r6 = r6[0]) && r6.getClientRects && r6.getClientRects();
      e11 = e11.div.getBoundingClientRect(), t4 = r6 ? Math.max(r6[0] && r6[0].height || 0, e11.height / r6.length) : 0;
    }
    this.left = e11.left, this.right = e11.right, this.top = e11.top || n5, this.height = e11.height || i6, this.bottom = e11.bottom || n5 + (e11.height || i6), this.width = e11.width || s6, this.lineHeight = void 0 !== t4 ? t4 : e11.lineHeight;
  }
  function b4(e11, t4, i6, s6) {
    function n5(e12, t5) {
      for (var n6, r7 = new v3(e12), a11 = 1, o6 = 0; o6 < t5.length; o6++) {
        for (; e12.overlapsOppositeAxis(i6, t5[o6]) || e12.within(i6) && e12.overlapsAny(s6); ) e12.move(t5[o6]);
        if (e12.within(i6)) return e12;
        var l9 = e12.intersectPercentage(i6);
        a11 > l9 && (n6 = new v3(e12), a11 = l9), e12 = new v3(r7);
      }
      return n6 || r7;
    }
    var r6 = new v3(t4), a10 = t4.cue, o5 = f3(a10), l8 = [];
    if (a10.snapToLines) {
      var h4;
      switch (a10.vertical) {
        case "":
          l8 = ["+y", "-y"], h4 = "height";
          break;
        case "rl":
          l8 = ["+x", "-x"], h4 = "width";
          break;
        case "lr":
          l8 = ["-x", "+x"], h4 = "width";
      }
      var u7 = r6.lineHeight, d3 = u7 * Math.round(o5), c6 = i6[h4] + u7, p6 = l8[0];
      Math.abs(d3) > c6 && (d3 = d3 < 0 ? -1 : 1, d3 *= Math.ceil(c6 / u7) * u7), o5 < 0 && (d3 += "" === a10.vertical ? i6.height : i6.width, l8 = l8.reverse()), r6.move(p6, d3);
    } else {
      var m8 = r6.lineHeight / i6.height * 100;
      switch (a10.lineAlign) {
        case "center":
          o5 -= m8 / 2;
          break;
        case "end":
          o5 -= m8;
      }
      switch (a10.vertical) {
        case "":
          t4.applyStyles({ top: t4.formatStyle(o5, "%") });
          break;
        case "rl":
          t4.applyStyles({ left: t4.formatStyle(o5, "%") });
          break;
        case "lr":
          t4.applyStyles({ right: t4.formatStyle(o5, "%") });
      }
      l8 = ["+y", "-x", "+x", "-y"], r6 = new v3(t4);
    }
    var g3 = n5(r6, l8);
    t4.move(g3.toCSSCompatValues(i6));
  }
  function T2() {
  }
  y4.prototype.applyStyles = function(e11, t4) {
    for (var i6 in t4 = t4 || this.div, e11) e11.hasOwnProperty(i6) && (t4.style[i6] = e11[i6]);
  }, y4.prototype.formatStyle = function(e11, t4) {
    return 0 === e11 ? 0 : e11 + t4;
  }, _3.prototype = t3(y4.prototype), _3.prototype.constructor = _3, v3.prototype.move = function(e11, t4) {
    switch (t4 = void 0 !== t4 ? t4 : this.lineHeight, e11) {
      case "+x":
        this.left += t4, this.right += t4;
        break;
      case "-x":
        this.left -= t4, this.right -= t4;
        break;
      case "+y":
        this.top += t4, this.bottom += t4;
        break;
      case "-y":
        this.top -= t4, this.bottom -= t4;
    }
  }, v3.prototype.overlaps = function(e11) {
    return this.left < e11.right && this.right > e11.left && this.top < e11.bottom && this.bottom > e11.top;
  }, v3.prototype.overlapsAny = function(e11) {
    for (var t4 = 0; t4 < e11.length; t4++) if (this.overlaps(e11[t4])) return true;
    return false;
  }, v3.prototype.within = function(e11) {
    return this.top >= e11.top && this.bottom <= e11.bottom && this.left >= e11.left && this.right <= e11.right;
  }, v3.prototype.overlapsOppositeAxis = function(e11, t4) {
    switch (t4) {
      case "+x":
        return this.left < e11.left;
      case "-x":
        return this.right > e11.right;
      case "+y":
        return this.top < e11.top;
      case "-y":
        return this.bottom > e11.bottom;
    }
  }, v3.prototype.intersectPercentage = function(e11) {
    return Math.max(0, Math.min(this.right, e11.right) - Math.max(this.left, e11.left)) * Math.max(0, Math.min(this.bottom, e11.bottom) - Math.max(this.top, e11.top)) / (this.height * this.width);
  }, v3.prototype.toCSSCompatValues = function(e11) {
    return { top: this.top - e11.top, bottom: e11.bottom - this.bottom, left: this.left - e11.left, right: e11.right - this.right, height: this.height, width: this.width };
  }, v3.getSimpleBoxPosition = function(e11) {
    var t4 = e11.div ? e11.div.offsetHeight : e11.tagName ? e11.offsetHeight : 0, i6 = e11.div ? e11.div.offsetWidth : e11.tagName ? e11.offsetWidth : 0, s6 = e11.div ? e11.div.offsetTop : e11.tagName ? e11.offsetTop : 0;
    return { left: (e11 = e11.div ? e11.div.getBoundingClientRect() : e11.tagName ? e11.getBoundingClientRect() : e11).left, right: e11.right, top: e11.top || s6, height: e11.height || t4, bottom: e11.bottom || s6 + (e11.height || t4), width: e11.width || i6 };
  }, T2.StringDecoder = function() {
    return { decode: function(e11) {
      if (!e11) return "";
      if ("string" != typeof e11) throw new Error("Error - expected string data.");
      return decodeURIComponent(encodeURIComponent(e11));
    } };
  }, T2.convertCueToDOMTree = function(e11, t4) {
    return e11 && t4 ? c5(e11, t4) : null;
  };
  var S4 = 0.05, E3 = "sans-serif", w5 = "1.5%";
  return T2.processCues = function(e11, t4, i6) {
    if (!e11 || !t4 || !i6) return null;
    for (; i6.firstChild; ) i6.removeChild(i6.firstChild);
    var s6 = e11.document.createElement("div");
    function n5(e12) {
      for (var t5 = 0; t5 < e12.length; t5++) if (e12[t5].hasBeenReset || !e12[t5].displayState) return true;
      return false;
    }
    if (s6.style.position = "absolute", s6.style.left = "0", s6.style.right = "0", s6.style.top = "0", s6.style.bottom = "0", s6.style.margin = w5, i6.appendChild(s6), n5(t4)) {
      var r6 = [], a10 = v3.getSimpleBoxPosition(s6), o5 = { font: Math.round(a10.height * S4 * 100) / 100 + "px " + E3 };
      !function() {
        for (var i7, n6, l9 = 0; l9 < t4.length; l9++) n6 = t4[l9], i7 = new _3(e11, n6, o5), s6.appendChild(i7.div), b4(e11, i7, a10, r6), n6.displayState = i7.div, r6.push(v3.getSimpleBoxPosition(i7));
      }();
    } else for (var l8 = 0; l8 < t4.length; l8++) s6.appendChild(t4[l8].displayState);
  }, T2.Parser = function(e11, t4, i6) {
    i6 || (i6 = t4, t4 = {}), t4 || (t4 = {}), this.window = e11, this.vttjs = t4, this.state = "INITIAL", this.buffer = "", this.decoder = i6 || new TextDecoder("utf8"), this.regionList = [];
  }, T2.Parser.prototype = { reportOrThrowError: function(e11) {
    if (!(e11 instanceof i5)) throw e11;
    this.onparsingerror && this.onparsingerror(e11);
  }, parse: function(e11) {
    var t4 = this;
    function o5() {
      for (var e12 = t4.buffer, i6 = 0; i6 < e12.length && "\r" !== e12[i6] && "\n" !== e12[i6]; ) ++i6;
      var s6 = e12.substr(0, i6);
      return "\r" === e12[i6] && ++i6, "\n" === e12[i6] && ++i6, t4.buffer = e12.substr(i6), s6;
    }
    function l8(e12) {
      var i6 = new n4();
      if (r5(e12, function(e13, t5) {
        switch (e13) {
          case "id":
            i6.set(e13, t5);
            break;
          case "width":
            i6.percent(e13, t5);
            break;
          case "lines":
            i6.integer(e13, t5);
            break;
          case "regionanchor":
          case "viewportanchor":
            var s7 = t5.split(",");
            if (2 !== s7.length) break;
            var r6 = new n4();
            if (r6.percent("x", s7[0]), r6.percent("y", s7[1]), !r6.has("x") || !r6.has("y")) break;
            i6.set(e13 + "X", r6.get("x")), i6.set(e13 + "Y", r6.get("y"));
            break;
          case "scroll":
            i6.alt(e13, t5, ["up"]);
        }
      }, /=/, /\s/), i6.has("id")) {
        var s6 = new (t4.vttjs.VTTRegion || t4.window.VTTRegion)();
        s6.width = i6.get("width", 100), s6.lines = i6.get("lines", 3), s6.regionAnchorX = i6.get("regionanchorX", 0), s6.regionAnchorY = i6.get("regionanchorY", 100), s6.viewportAnchorX = i6.get("viewportanchorX", 0), s6.viewportAnchorY = i6.get("viewportanchorY", 100), s6.scroll = i6.get("scroll", ""), t4.onregion && t4.onregion(s6), t4.regionList.push({ id: i6.get("id"), region: s6 });
      }
    }
    function h4(e12) {
      var i6 = new n4();
      r5(e12, function(e13, t5) {
        switch (e13) {
          case "MPEGT":
            i6.integer(e13 + "S", t5);
            break;
          case "LOCA":
            i6.set(e13 + "L", s5(t5));
        }
      }, /[^\d]:/, /,/), t4.ontimestampmap && t4.ontimestampmap({ MPEGTS: i6.get("MPEGTS"), LOCAL: i6.get("LOCAL") });
    }
    function u7(e12) {
      e12.match(/X-TIMESTAMP-MAP/) ? r5(e12, function(e13, t5) {
        if ("X-TIMESTAMP-MAP" === e13) h4(t5);
      }, /=/) : r5(e12, function(e13, t5) {
        if ("Region" === e13) l8(t5);
      }, /:/);
    }
    e11 && (t4.buffer += t4.decoder.decode(e11, { stream: true }));
    try {
      var d3;
      if ("INITIAL" === t4.state) {
        if (!/\r\n|\n/.test(t4.buffer)) return this;
        var c6 = (d3 = o5()).match(/^WEBVTT([ \t].*)?$/);
        if (!c6 || !c6[0]) throw new i5(i5.Errors.BadSignature);
        t4.state = "HEADER";
      }
      for (var p6 = false; t4.buffer; ) {
        if (!/\r\n|\n/.test(t4.buffer)) return this;
        switch (p6 ? p6 = false : d3 = o5(), t4.state) {
          case "HEADER":
            /:/.test(d3) ? u7(d3) : d3 || (t4.state = "ID");
            continue;
          case "NOTE":
            d3 || (t4.state = "ID");
            continue;
          case "ID":
            if (/^NOTE($|[ \t])/.test(d3)) {
              t4.state = "NOTE";
              break;
            }
            if (!d3) continue;
            t4.cue = new (t4.vttjs.VTTCue || t4.window.VTTCue)(0, 0, "");
            try {
              t4.cue.align = "center";
            } catch (g3) {
              t4.cue.align = "middle";
            }
            if (t4.state = "CUE", -1 === d3.indexOf("-->")) {
              t4.cue.id = d3;
              continue;
            }
          case "CUE":
            try {
              a9(d3, t4.cue, t4.regionList);
            } catch (g3) {
              t4.reportOrThrowError(g3), t4.cue = null, t4.state = "BADCUE";
              continue;
            }
            t4.state = "CUETEXT";
            continue;
          case "CUETEXT":
            var m8 = -1 !== d3.indexOf("-->");
            if (!d3 || m8 && (p6 = true)) {
              t4.oncue && t4.oncue(t4.cue), t4.cue = null, t4.state = "ID";
              continue;
            }
            t4.cue.text && (t4.cue.text += "\n"), t4.cue.text += d3.replace(/\u2028/g, "\n").replace(/u2029/g, "\n");
            continue;
          case "BADCUE":
            d3 || (t4.state = "ID");
            continue;
        }
      }
    } catch (g3) {
      t4.reportOrThrowError(g3), "CUETEXT" === t4.state && t4.cue && t4.oncue && t4.oncue(t4.cue), t4.cue = null, t4.state = "INITIAL" === t4.state ? "BADWEBVTT" : "BADCUE";
    }
    return this;
  }, flush: function() {
    var e11 = this;
    try {
      if (e11.buffer += e11.decoder.decode(), (e11.cue || "HEADER" === e11.state) && (e11.buffer += "\n\n", e11.parse()), "INITIAL" === e11.state) throw new i5(i5.Errors.BadSignature);
    } catch (t4) {
      e11.reportOrThrowError(t4);
    }
    return e11.onflush && e11.onflush(), this;
  } }, ke = T2;
}
function Re() {
  if (Ae) return xe;
  Ae = 1;
  var e10 = "auto", t3 = { "": 1, lr: 1, rl: 1 }, i5 = { start: 1, center: 1, end: 1, left: 1, right: 1, auto: 1, "line-left": 1, "line-right": 1 };
  function s5(e11) {
    return "string" == typeof e11 && (!!t3[e11.toLowerCase()] && e11.toLowerCase());
  }
  function n4(e11) {
    return "string" == typeof e11 && (!!i5[e11.toLowerCase()] && e11.toLowerCase());
  }
  function r5(t4, i6, r6) {
    this.hasBeenReset = false;
    var a9 = "", o4 = false, l7 = t4, h3 = i6, u6 = r6, d2 = null, c5 = "", p5 = true, m7 = "auto", g2 = "start", f3 = "auto", y4 = "auto", _3 = 100, v3 = "center";
    Object.defineProperties(this, { id: { enumerable: true, get: function() {
      return a9;
    }, set: function(e11) {
      a9 = "" + e11;
    } }, pauseOnExit: { enumerable: true, get: function() {
      return o4;
    }, set: function(e11) {
      o4 = !!e11;
    } }, startTime: { enumerable: true, get: function() {
      return l7;
    }, set: function(e11) {
      if ("number" != typeof e11) throw new TypeError("Start time must be set to a number.");
      l7 = e11, this.hasBeenReset = true;
    } }, endTime: { enumerable: true, get: function() {
      return h3;
    }, set: function(e11) {
      if ("number" != typeof e11) throw new TypeError("End time must be set to a number.");
      h3 = e11, this.hasBeenReset = true;
    } }, text: { enumerable: true, get: function() {
      return u6;
    }, set: function(e11) {
      u6 = "" + e11, this.hasBeenReset = true;
    } }, region: { enumerable: true, get: function() {
      return d2;
    }, set: function(e11) {
      d2 = e11, this.hasBeenReset = true;
    } }, vertical: { enumerable: true, get: function() {
      return c5;
    }, set: function(e11) {
      var t5 = s5(e11);
      if (false === t5) throw new SyntaxError("Vertical: an invalid or illegal direction string was specified.");
      c5 = t5, this.hasBeenReset = true;
    } }, snapToLines: { enumerable: true, get: function() {
      return p5;
    }, set: function(e11) {
      p5 = !!e11, this.hasBeenReset = true;
    } }, line: { enumerable: true, get: function() {
      return m7;
    }, set: function(t5) {
      if ("number" != typeof t5 && t5 !== e10) throw new SyntaxError("Line: an invalid number or illegal string was specified.");
      m7 = t5, this.hasBeenReset = true;
    } }, lineAlign: { enumerable: true, get: function() {
      return g2;
    }, set: function(e11) {
      var t5 = n4(e11);
      t5 ? (g2 = t5, this.hasBeenReset = true) : console.warn("lineAlign: an invalid or illegal string was specified.");
    } }, position: { enumerable: true, get: function() {
      return f3;
    }, set: function(e11) {
      if (e11 < 0 || e11 > 100) throw new Error("Position must be between 0 and 100.");
      f3 = e11, this.hasBeenReset = true;
    } }, positionAlign: { enumerable: true, get: function() {
      return y4;
    }, set: function(e11) {
      var t5 = n4(e11);
      t5 ? (y4 = t5, this.hasBeenReset = true) : console.warn("positionAlign: an invalid or illegal string was specified.");
    } }, size: { enumerable: true, get: function() {
      return _3;
    }, set: function(e11) {
      if (e11 < 0 || e11 > 100) throw new Error("Size must be between 0 and 100.");
      _3 = e11, this.hasBeenReset = true;
    } }, align: { enumerable: true, get: function() {
      return v3;
    }, set: function(e11) {
      var t5 = n4(e11);
      if (!t5) throw new SyntaxError("align: an invalid or illegal alignment string was specified.");
      v3 = t5, this.hasBeenReset = true;
    } } }), this.displayState = void 0;
  }
  return r5.prototype.getCueAsHTML = function() {
    return WebVTT.convertCueToDOMTree(window, this.text);
  }, xe = r5;
}
function Me() {
  if (Pe) return De;
  Pe = 1;
  var e10 = { "": true, up: true };
  function t3(t4) {
    return "string" == typeof t4 && (!!e10[t4.toLowerCase()] && t4.toLowerCase());
  }
  function i5(e11) {
    return "number" == typeof e11 && e11 >= 0 && e11 <= 100;
  }
  function s5() {
    var e11 = 100, s6 = 3, n4 = 0, r5 = 100, a9 = 0, o4 = 100, l7 = "";
    Object.defineProperties(this, { width: { enumerable: true, get: function() {
      return e11;
    }, set: function(t4) {
      if (!i5(t4)) throw new Error("Width must be between 0 and 100.");
      e11 = t4;
    } }, lines: { enumerable: true, get: function() {
      return s6;
    }, set: function(e12) {
      if ("number" != typeof e12) throw new TypeError("Lines must be set to a number.");
      s6 = e12;
    } }, regionAnchorY: { enumerable: true, get: function() {
      return r5;
    }, set: function(e12) {
      if (!i5(e12)) throw new Error("RegionAnchorX must be between 0 and 100.");
      r5 = e12;
    } }, regionAnchorX: { enumerable: true, get: function() {
      return n4;
    }, set: function(e12) {
      if (!i5(e12)) throw new Error("RegionAnchorY must be between 0 and 100.");
      n4 = e12;
    } }, viewportAnchorY: { enumerable: true, get: function() {
      return o4;
    }, set: function(e12) {
      if (!i5(e12)) throw new Error("ViewportAnchorY must be between 0 and 100.");
      o4 = e12;
    } }, viewportAnchorX: { enumerable: true, get: function() {
      return a9;
    }, set: function(e12) {
      if (!i5(e12)) throw new Error("ViewportAnchorX must be between 0 and 100.");
      a9 = e12;
    } }, scroll: { enumerable: true, get: function() {
      return l7;
    }, set: function(e12) {
      var i6 = t3(e12);
      false === i6 ? console.warn("Scroll: an invalid or illegal string was specified.") : l7 = i6;
    } } });
  }
  return De = s5;
}
function Ue() {
  if (Le) return Oe.exports;
  Le = 1;
  var e10 = v2(), t3 = Oe.exports = { WebVTT: Ne(), VTTCue: Re(), VTTRegion: Me() };
  e10.vttjs = t3, e10.WebVTT = t3.WebVTT;
  var i5 = t3.VTTCue, s5 = t3.VTTRegion, n4 = e10.VTTCue, r5 = e10.VTTRegion;
  return t3.shim = function() {
    e10.VTTCue = i5, e10.VTTRegion = s5;
  }, t3.restore = function() {
    e10.VTTCue = n4, e10.VTTRegion = r5;
  }, e10.VTTCue || t3.shim(), Oe.exports;
}
var Be = o3(Ue());
function Fe() {
  return Fe = Object.assign ? Object.assign.bind() : function(e10) {
    for (var t3 = 1; t3 < arguments.length; t3++) {
      var i5 = arguments[t3];
      for (var s5 in i5) ({}).hasOwnProperty.call(i5, s5) && (e10[s5] = i5[s5]);
    }
    return e10;
  }, Fe.apply(null, arguments);
}
var qe = "https://example.com";
var je = function(e10, t3) {
  if (/^[a-z]+:/i.test(t3)) return t3;
  /^data:/.test(e10) && (e10 = b3.location && b3.location.href || "");
  var i5 = /^\/\//.test(e10), s5 = !b3.location && !/\/\//i.test(e10);
  e10 = new b3.URL(e10, b3.location || qe);
  var n4 = new URL(t3, e10);
  return s5 ? n4.href.slice(qe.length) : i5 ? n4.href.slice(n4.protocol.length) : n4.href;
};
var $e = function() {
  function e10() {
    this.listeners = {};
  }
  var t3 = e10.prototype;
  return t3.on = function(e11, t4) {
    this.listeners[e11] || (this.listeners[e11] = []), this.listeners[e11].push(t4);
  }, t3.off = function(e11, t4) {
    if (!this.listeners[e11]) return false;
    var i5 = this.listeners[e11].indexOf(t4);
    return this.listeners[e11] = this.listeners[e11].slice(0), this.listeners[e11].splice(i5, 1), i5 > -1;
  }, t3.trigger = function(e11) {
    var t4 = this.listeners[e11];
    if (t4) if (2 === arguments.length) for (var i5 = t4.length, s5 = 0; s5 < i5; ++s5) t4[s5].call(this, arguments[1]);
    else for (var n4 = Array.prototype.slice.call(arguments, 1), r5 = t4.length, a9 = 0; a9 < r5; ++a9) t4[a9].apply(this, n4);
  }, t3.dispose = function() {
    this.listeners = {};
  }, t3.pipe = function(e11) {
    this.on("data", function(t4) {
      e11.push(t4);
    });
  }, e10;
}();
var He = function(e10) {
  return b3.atob ? b3.atob(e10) : Buffer.from(e10, "base64").toString("binary");
};
function Ve(e10) {
  for (var t3 = He(e10), i5 = new Uint8Array(t3.length), s5 = 0; s5 < t3.length; s5++) i5[s5] = t3.charCodeAt(s5);
  return i5;
}
var ze = class extends $e {
  constructor() {
    super(), this.buffer = "";
  }
  push(e10) {
    let t3;
    for (this.buffer += e10, t3 = this.buffer.indexOf("\n"); t3 > -1; t3 = this.buffer.indexOf("\n")) this.trigger("data", this.buffer.substring(0, t3)), this.buffer = this.buffer.substring(t3 + 1);
  }
};
var We = String.fromCharCode(9);
var Ge = function(e10) {
  const t3 = /([0-9.]*)?@?([0-9.]*)?/.exec(e10 || ""), i5 = {};
  return t3[1] && (i5.length = parseInt(t3[1], 10)), t3[2] && (i5.offset = parseInt(t3[2], 10)), i5;
};
var Xe = function() {
  return new RegExp('(?:^|,)((?:[^=]*)=(?:"[^"]*"|[^,]*))');
};
var Ke = function(e10) {
  const t3 = {};
  if (!e10) return t3;
  const i5 = e10.split(Xe());
  let s5, n4 = i5.length;
  for (; n4--; ) "" !== i5[n4] && (s5 = /([^=]*)=(.*)/.exec(i5[n4]).slice(1), s5[0] = s5[0].replace(/^\s+|\s+$/g, ""), s5[1] = s5[1].replace(/^\s+|\s+$/g, ""), s5[1] = s5[1].replace(/^['"](.*)['"]$/g, "$1"), t3[s5[0]] = s5[1]);
  return t3;
};
var Ye = (e10) => {
  const t3 = e10.split("x"), i5 = {};
  return t3[0] && (i5.width = parseInt(t3[0], 10)), t3[1] && (i5.height = parseInt(t3[1], 10)), i5;
};
var Qe = class extends $e {
  constructor() {
    super(), this.customParsers = [], this.tagMappers = [];
  }
  push(e10) {
    let t3, i5;
    if (0 === (e10 = e10.trim()).length) return;
    if ("#" !== e10[0]) return void this.trigger("data", { type: "uri", uri: e10 });
    this.tagMappers.reduce((t4, i6) => {
      const s5 = i6(e10);
      return s5 === e10 ? t4 : t4.concat([s5]);
    }, [e10]).forEach((e11) => {
      for (let t4 = 0; t4 < this.customParsers.length; t4++) if (this.customParsers[t4].call(this, e11)) return;
      if (0 === e11.indexOf("#EXT")) if (e11 = e11.replace("\r", ""), t3 = /^#EXTM3U/.exec(e11), t3) this.trigger("data", { type: "tag", tagType: "m3u" });
      else {
        if (t3 = /^#EXTINF:([0-9\.]*)?,?(.*)?$/.exec(e11), t3) return i5 = { type: "tag", tagType: "inf" }, t3[1] && (i5.duration = parseFloat(t3[1])), t3[2] && (i5.title = t3[2]), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(e11), t3) return i5 = { type: "tag", tagType: "targetduration" }, t3[1] && (i5.duration = parseInt(t3[1], 10)), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-VERSION:([0-9.]*)?/.exec(e11), t3) return i5 = { type: "tag", tagType: "version" }, t3[1] && (i5.version = parseInt(t3[1], 10)), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-MEDIA-SEQUENCE:(\-?[0-9.]*)?/.exec(e11), t3) return i5 = { type: "tag", tagType: "media-sequence" }, t3[1] && (i5.number = parseInt(t3[1], 10)), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\-?[0-9.]*)?/.exec(e11), t3) return i5 = { type: "tag", tagType: "discontinuity-sequence" }, t3[1] && (i5.number = parseInt(t3[1], 10)), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(e11), t3) return i5 = { type: "tag", tagType: "playlist-type" }, t3[1] && (i5.playlistType = t3[1]), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-BYTERANGE:(.*)?$/.exec(e11), t3) return i5 = Fe(Ge(t3[1]), { type: "tag", tagType: "byterange" }), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(e11), t3) return i5 = { type: "tag", tagType: "allow-cache" }, t3[1] && (i5.allowed = !/NO/.test(t3[1])), void this.trigger("data", i5);
        if (t3 = /^#EXT-X-MAP:(.*)$/.exec(e11), t3) {
          if (i5 = { type: "tag", tagType: "map" }, t3[1]) {
            const e12 = Ke(t3[1]);
            e12.URI && (i5.uri = e12.URI), e12.BYTERANGE && (i5.byterange = Ge(e12.BYTERANGE));
          }
          this.trigger("data", i5);
        } else {
          if (t3 = /^#EXT-X-STREAM-INF:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "stream-inf" }, t3[1] && (i5.attributes = Ke(t3[1]), i5.attributes.RESOLUTION && (i5.attributes.RESOLUTION = Ye(i5.attributes.RESOLUTION)), i5.attributes.BANDWIDTH && (i5.attributes.BANDWIDTH = parseInt(i5.attributes.BANDWIDTH, 10)), i5.attributes["FRAME-RATE"] && (i5.attributes["FRAME-RATE"] = parseFloat(i5.attributes["FRAME-RATE"])), i5.attributes["PROGRAM-ID"] && (i5.attributes["PROGRAM-ID"] = parseInt(i5.attributes["PROGRAM-ID"], 10))), void this.trigger("data", i5);
          if (t3 = /^#EXT-X-MEDIA:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "media" }, t3[1] && (i5.attributes = Ke(t3[1])), void this.trigger("data", i5);
          if (t3 = /^#EXT-X-ENDLIST/.exec(e11), t3) this.trigger("data", { type: "tag", tagType: "endlist" });
          else if (t3 = /^#EXT-X-DISCONTINUITY/.exec(e11), t3) this.trigger("data", { type: "tag", tagType: "discontinuity" });
          else {
            if (t3 = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "program-date-time" }, t3[1] && (i5.dateTimeString = t3[1], i5.dateTimeObject = new Date(t3[1])), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-KEY:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "key" }, t3[1] && (i5.attributes = Ke(t3[1]), i5.attributes.IV && ("0x" === i5.attributes.IV.substring(0, 2).toLowerCase() && (i5.attributes.IV = i5.attributes.IV.substring(2)), i5.attributes.IV = i5.attributes.IV.match(/.{8}/g), i5.attributes.IV[0] = parseInt(i5.attributes.IV[0], 16), i5.attributes.IV[1] = parseInt(i5.attributes.IV[1], 16), i5.attributes.IV[2] = parseInt(i5.attributes.IV[2], 16), i5.attributes.IV[3] = parseInt(i5.attributes.IV[3], 16), i5.attributes.IV = new Uint32Array(i5.attributes.IV))), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-START:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "start" }, t3[1] && (i5.attributes = Ke(t3[1]), i5.attributes["TIME-OFFSET"] = parseFloat(i5.attributes["TIME-OFFSET"]), i5.attributes.PRECISE = /YES/.test(i5.attributes.PRECISE)), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(e11), t3) return i5 = { type: "tag", tagType: "cue-out-cont" }, t3[1] ? i5.data = t3[1] : i5.data = "", void this.trigger("data", i5);
            if (t3 = /^#EXT-X-CUE-OUT:(.*)?$/.exec(e11), t3) return i5 = { type: "tag", tagType: "cue-out" }, t3[1] ? i5.data = t3[1] : i5.data = "", void this.trigger("data", i5);
            if (t3 = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e11), t3) return i5 = { type: "tag", tagType: "cue-in" }, t3[1] ? i5.data = t3[1] : i5.data = "", void this.trigger("data", i5);
            if (t3 = /^#EXT-X-SKIP:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "skip" }, i5.attributes = Ke(t3[1]), i5.attributes.hasOwnProperty("SKIPPED-SEGMENTS") && (i5.attributes["SKIPPED-SEGMENTS"] = parseInt(i5.attributes["SKIPPED-SEGMENTS"], 10)), i5.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES") && (i5.attributes["RECENTLY-REMOVED-DATERANGES"] = i5.attributes["RECENTLY-REMOVED-DATERANGES"].split(We)), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-PART:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "part" }, i5.attributes = Ke(t3[1]), ["DURATION"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = parseFloat(i5.attributes[e12]));
            }), ["INDEPENDENT", "GAP"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = /YES/.test(i5.attributes[e12]));
            }), i5.attributes.hasOwnProperty("BYTERANGE") && (i5.attributes.byterange = Ge(i5.attributes.BYTERANGE)), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "server-control" }, i5.attributes = Ke(t3[1]), ["CAN-SKIP-UNTIL", "PART-HOLD-BACK", "HOLD-BACK"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = parseFloat(i5.attributes[e12]));
            }), ["CAN-SKIP-DATERANGES", "CAN-BLOCK-RELOAD"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = /YES/.test(i5.attributes[e12]));
            }), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-PART-INF:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "part-inf" }, i5.attributes = Ke(t3[1]), ["PART-TARGET"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = parseFloat(i5.attributes[e12]));
            }), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "preload-hint" }, i5.attributes = Ke(t3[1]), ["BYTERANGE-START", "BYTERANGE-LENGTH"].forEach(function(e12) {
              if (i5.attributes.hasOwnProperty(e12)) {
                i5.attributes[e12] = parseInt(i5.attributes[e12], 10);
                const t4 = "BYTERANGE-LENGTH" === e12 ? "length" : "offset";
                i5.attributes.byterange = i5.attributes.byterange || {}, i5.attributes.byterange[t4] = i5.attributes[e12], delete i5.attributes[e12];
              }
            }), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(e11), t3 && t3[1]) return i5 = { type: "tag", tagType: "rendition-report" }, i5.attributes = Ke(t3[1]), ["LAST-MSN", "LAST-PART"].forEach(function(e12) {
              i5.attributes.hasOwnProperty(e12) && (i5.attributes[e12] = parseInt(i5.attributes[e12], 10));
            }), void this.trigger("data", i5);
            if (t3 = /^#EXT-X-DATERANGE:(.*)$/.exec(e11), t3 && t3[1]) {
              i5 = { type: "tag", tagType: "daterange" }, i5.attributes = Ke(t3[1]), ["ID", "CLASS"].forEach(function(e13) {
                i5.attributes.hasOwnProperty(e13) && (i5.attributes[e13] = String(i5.attributes[e13]));
              }), ["START-DATE", "END-DATE"].forEach(function(e13) {
                i5.attributes.hasOwnProperty(e13) && (i5.attributes[e13] = new Date(i5.attributes[e13]));
              }), ["DURATION", "PLANNED-DURATION"].forEach(function(e13) {
                i5.attributes.hasOwnProperty(e13) && (i5.attributes[e13] = parseFloat(i5.attributes[e13]));
              }), ["END-ON-NEXT"].forEach(function(e13) {
                i5.attributes.hasOwnProperty(e13) && (i5.attributes[e13] = /YES/i.test(i5.attributes[e13]));
              }), ["SCTE35-CMD", " SCTE35-OUT", "SCTE35-IN"].forEach(function(e13) {
                i5.attributes.hasOwnProperty(e13) && (i5.attributes[e13] = i5.attributes[e13].toString(16));
              });
              const e12 = /^X-([A-Z]+-)+[A-Z]+$/;
              for (const t4 in i5.attributes) {
                if (!e12.test(t4)) continue;
                const s5 = /[0-9A-Fa-f]{6}/g.test(i5.attributes[t4]), n4 = /^\d+(\.\d+)?$/.test(i5.attributes[t4]);
                i5.attributes[t4] = s5 ? i5.attributes[t4].toString(16) : n4 ? parseFloat(i5.attributes[t4]) : String(i5.attributes[t4]);
              }
              this.trigger("data", i5);
            } else if (t3 = /^#EXT-X-INDEPENDENT-SEGMENTS/.exec(e11), t3) this.trigger("data", { type: "tag", tagType: "independent-segments" });
            else if (t3 = /^#EXT-X-I-FRAMES-ONLY/.exec(e11), t3) this.trigger("data", { type: "tag", tagType: "i-frames-only" });
            else {
              if (t3 = /^#EXT-X-CONTENT-STEERING:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "content-steering" }, i5.attributes = Ke(t3[1]), void this.trigger("data", i5);
              if (t3 = /^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "i-frame-playlist" }, i5.attributes = Ke(t3[1]), i5.attributes.URI && (i5.uri = i5.attributes.URI), i5.attributes.BANDWIDTH && (i5.attributes.BANDWIDTH = parseInt(i5.attributes.BANDWIDTH, 10)), i5.attributes.RESOLUTION && (i5.attributes.RESOLUTION = Ye(i5.attributes.RESOLUTION)), i5.attributes["AVERAGE-BANDWIDTH"] && (i5.attributes["AVERAGE-BANDWIDTH"] = parseInt(i5.attributes["AVERAGE-BANDWIDTH"], 10)), i5.attributes["FRAME-RATE"] && (i5.attributes["FRAME-RATE"] = parseFloat(i5.attributes["FRAME-RATE"])), void this.trigger("data", i5);
              if (t3 = /^#EXT-X-DEFINE:(.*)$/.exec(e11), t3) return i5 = { type: "tag", tagType: "define" }, i5.attributes = Ke(t3[1]), void this.trigger("data", i5);
              this.trigger("data", { type: "tag", data: e11.slice(4) });
            }
          }
        }
      }
      else this.trigger("data", { type: "comment", text: e11.slice(1) });
    });
  }
  addParser({ expression: e10, customType: t3, dataParser: i5, segment: s5 }) {
    "function" != typeof i5 && (i5 = (e11) => e11), this.customParsers.push((n4) => {
      if (e10.exec(n4)) return this.trigger("data", { type: "custom", data: i5(n4), customType: t3, segment: s5 }), true;
    });
  }
  addTagMapper({ expression: e10, map: t3 }) {
    const i5 = (i6) => e10.test(i6) ? t3(i6) : i6;
    this.tagMappers.push(i5);
  }
};
var Je = (e10) => e10.toLowerCase().replace(/-(\w)/g, (e11) => e11[1].toUpperCase());
var Ze = function(e10) {
  const t3 = {};
  return Object.keys(e10).forEach(function(i5) {
    t3[Je(i5)] = e10[i5];
  }), t3;
};
var et = function(e10) {
  const { serverControl: t3, targetDuration: i5, partTargetDuration: s5 } = e10;
  if (!t3) return;
  const n4 = "#EXT-X-SERVER-CONTROL", r5 = "holdBack", a9 = "partHoldBack", o4 = i5 && 3 * i5, l7 = s5 && 2 * s5;
  i5 && !t3.hasOwnProperty(r5) && (t3[r5] = o4, this.trigger("info", { message: `${n4} defaulting HOLD-BACK to targetDuration * 3 (${o4}).` })), o4 && t3[r5] < o4 && (this.trigger("warn", { message: `${n4} clamping HOLD-BACK (${t3[r5]}) to targetDuration * 3 (${o4})` }), t3[r5] = o4), s5 && !t3.hasOwnProperty(a9) && (t3[a9] = 3 * s5, this.trigger("info", { message: `${n4} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${t3[a9]}).` })), s5 && t3[a9] < l7 && (this.trigger("warn", { message: `${n4} clamping PART-HOLD-BACK (${t3[a9]}) to partTargetDuration * 2 (${l7}).` }), t3[a9] = l7);
};
var tt = class extends $e {
  constructor(e10 = {}) {
    super(), this.lineStream = new ze(), this.parseStream = new Qe(), this.lineStream.pipe(this.parseStream), this.mainDefinitions = e10.mainDefinitions || {}, this.params = new URL(e10.uri, "https://a.com").searchParams, this.lastProgramDateTime = null;
    const t3 = this, i5 = [];
    let s5, n4, r5 = {}, a9 = false;
    const o4 = function() {
    }, l7 = { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, h3 = "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";
    let u6 = 0;
    this.manifest = { allowCache: true, discontinuityStarts: [], dateRanges: [], iFramePlaylists: [], segments: [] };
    let d2 = 0, c5 = 0;
    const p5 = {};
    this.on("end", () => {
      r5.uri || !r5.parts && !r5.preloadHints || (!r5.map && s5 && (r5.map = s5), !r5.key && n4 && (r5.key = n4), r5.timeline || "number" != typeof u6 || (r5.timeline = u6), this.manifest.preloadSegment = r5);
    }), this.parseStream.on("data", function(e11) {
      let m7, g2;
      if (t3.manifest.definitions) {
        for (const i6 in t3.manifest.definitions) if (e11.uri && (e11.uri = e11.uri.replace(`{$${i6}}`, t3.manifest.definitions[i6])), e11.attributes) for (const s6 in e11.attributes) "string" == typeof e11.attributes[s6] && (e11.attributes[s6] = e11.attributes[s6].replace(`{$${i6}}`, t3.manifest.definitions[i6]));
      }
      ({ tag() {
        ({ version() {
          e11.version && (this.manifest.version = e11.version);
        }, "allow-cache"() {
          this.manifest.allowCache = e11.allowed, "allowed" in e11 || (this.trigger("info", { message: "defaulting allowCache to YES" }), this.manifest.allowCache = true);
        }, byterange() {
          const t4 = {};
          "length" in e11 && (r5.byterange = t4, t4.length = e11.length, "offset" in e11 || (e11.offset = d2)), "offset" in e11 && (r5.byterange = t4, t4.offset = e11.offset), d2 = t4.offset + t4.length;
        }, endlist() {
          this.manifest.endList = true;
        }, inf() {
          "mediaSequence" in this.manifest || (this.manifest.mediaSequence = 0, this.trigger("info", { message: "defaulting media sequence to zero" })), "discontinuitySequence" in this.manifest || (this.manifest.discontinuitySequence = 0, this.trigger("info", { message: "defaulting discontinuity sequence to zero" })), e11.title && (r5.title = e11.title), e11.duration > 0 && (r5.duration = e11.duration), 0 === e11.duration && (r5.duration = 0.01, this.trigger("info", { message: "updating zero segment duration to a small value" })), this.manifest.segments = i5;
        }, key() {
          if (e11.attributes) if ("NONE" !== e11.attributes.METHOD) if (e11.attributes.URI) {
            if ("com.apple.streamingkeydelivery" === e11.attributes.KEYFORMAT) return this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.apple.fps.1_0"] = { attributes: e11.attributes });
            if ("com.microsoft.playready" === e11.attributes.KEYFORMAT) return this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.microsoft.playready"] = { uri: e11.attributes.URI });
            if (e11.attributes.KEYFORMAT === h3) {
              return -1 === ["SAMPLE-AES", "SAMPLE-AES-CTR", "SAMPLE-AES-CENC"].indexOf(e11.attributes.METHOD) ? void this.trigger("warn", { message: "invalid key method provided for Widevine" }) : ("SAMPLE-AES-CENC" === e11.attributes.METHOD && this.trigger("warn", { message: "SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead" }), "data:text/plain;base64," !== e11.attributes.URI.substring(0, 23) ? void this.trigger("warn", { message: "invalid key URI provided for Widevine" }) : e11.attributes.KEYID && "0x" === e11.attributes.KEYID.substring(0, 2) ? (this.manifest.contentProtection = this.manifest.contentProtection || {}, void (this.manifest.contentProtection["com.widevine.alpha"] = { attributes: { schemeIdUri: e11.attributes.KEYFORMAT, keyId: e11.attributes.KEYID.substring(2) }, pssh: Ve(e11.attributes.URI.split(",")[1]) })) : void this.trigger("warn", { message: "invalid key ID provided for Widevine" }));
            }
            e11.attributes.METHOD || this.trigger("warn", { message: "defaulting key method to AES-128" }), n4 = { method: e11.attributes.METHOD || "AES-128", uri: e11.attributes.URI }, void 0 !== e11.attributes.IV && (n4.iv = e11.attributes.IV);
          } else this.trigger("warn", { message: "ignoring key declaration without URI" });
          else n4 = null;
          else this.trigger("warn", { message: "ignoring key declaration without attribute list" });
        }, "media-sequence"() {
          isFinite(e11.number) ? this.manifest.mediaSequence = e11.number : this.trigger("warn", { message: "ignoring invalid media sequence: " + e11.number });
        }, "discontinuity-sequence"() {
          isFinite(e11.number) ? (this.manifest.discontinuitySequence = e11.number, u6 = e11.number) : this.trigger("warn", { message: "ignoring invalid discontinuity sequence: " + e11.number });
        }, "playlist-type"() {
          /VOD|EVENT/.test(e11.playlistType) ? this.manifest.playlistType = e11.playlistType : this.trigger("warn", { message: "ignoring unknown playlist type: " + e11.playlist });
        }, map() {
          s5 = {}, e11.uri && (s5.uri = e11.uri), e11.byterange && (s5.byterange = e11.byterange), n4 && (s5.key = n4);
        }, "stream-inf"() {
          this.manifest.playlists = i5, this.manifest.mediaGroups = this.manifest.mediaGroups || l7, e11.attributes ? (r5.attributes || (r5.attributes = {}), Fe(r5.attributes, e11.attributes)) : this.trigger("warn", { message: "ignoring empty stream-inf attributes" });
        }, media() {
          if (this.manifest.mediaGroups = this.manifest.mediaGroups || l7, !(e11.attributes && e11.attributes.TYPE && e11.attributes["GROUP-ID"] && e11.attributes.NAME)) return void this.trigger("warn", { message: "ignoring incomplete or missing media group" });
          const t4 = this.manifest.mediaGroups[e11.attributes.TYPE];
          t4[e11.attributes["GROUP-ID"]] = t4[e11.attributes["GROUP-ID"]] || {}, m7 = t4[e11.attributes["GROUP-ID"]], g2 = { default: /yes/i.test(e11.attributes.DEFAULT) }, g2.default ? g2.autoselect = true : g2.autoselect = /yes/i.test(e11.attributes.AUTOSELECT), e11.attributes.LANGUAGE && (g2.language = e11.attributes.LANGUAGE), e11.attributes.URI && (g2.uri = e11.attributes.URI), e11.attributes["INSTREAM-ID"] && (g2.instreamId = e11.attributes["INSTREAM-ID"]), e11.attributes.CHARACTERISTICS && (g2.characteristics = e11.attributes.CHARACTERISTICS), e11.attributes.FORCED && (g2.forced = /yes/i.test(e11.attributes.FORCED)), m7[e11.attributes.NAME] = g2;
        }, discontinuity() {
          u6 += 1, r5.discontinuity = true, this.manifest.discontinuityStarts.push(i5.length);
        }, "program-date-time"() {
          void 0 === this.manifest.dateTimeString && (this.manifest.dateTimeString = e11.dateTimeString, this.manifest.dateTimeObject = e11.dateTimeObject), r5.dateTimeString = e11.dateTimeString, r5.dateTimeObject = e11.dateTimeObject;
          const { lastProgramDateTime: t4 } = this;
          this.lastProgramDateTime = new Date(e11.dateTimeString).getTime(), null === t4 && this.manifest.segments.reduceRight((e12, t5) => (t5.programDateTime = e12 - 1e3 * t5.duration, t5.programDateTime), this.lastProgramDateTime);
        }, targetduration() {
          !isFinite(e11.duration) || e11.duration < 0 ? this.trigger("warn", { message: "ignoring invalid target duration: " + e11.duration }) : (this.manifest.targetDuration = e11.duration, et.call(this, this.manifest));
        }, start() {
          e11.attributes && !isNaN(e11.attributes["TIME-OFFSET"]) ? this.manifest.start = { timeOffset: e11.attributes["TIME-OFFSET"], precise: e11.attributes.PRECISE } : this.trigger("warn", { message: "ignoring start declaration without appropriate attribute list" });
        }, "cue-out"() {
          r5.cueOut = e11.data;
        }, "cue-out-cont"() {
          r5.cueOutCont = e11.data;
        }, "cue-in"() {
          r5.cueIn = e11.data;
        }, skip() {
          this.manifest.skip = Ze(e11.attributes), this.warnOnMissingAttributes_("#EXT-X-SKIP", e11.attributes, ["SKIPPED-SEGMENTS"]);
        }, part() {
          a9 = true;
          const t4 = this.manifest.segments.length, i6 = Ze(e11.attributes);
          r5.parts = r5.parts || [], r5.parts.push(i6), i6.byterange && (i6.byterange.hasOwnProperty("offset") || (i6.byterange.offset = c5), c5 = i6.byterange.offset + i6.byterange.length);
          const s6 = r5.parts.length - 1;
          this.warnOnMissingAttributes_(`#EXT-X-PART #${s6} for segment #${t4}`, e11.attributes, ["URI", "DURATION"]), this.manifest.renditionReports && this.manifest.renditionReports.forEach((e12, t5) => {
            e12.hasOwnProperty("lastPart") || this.trigger("warn", { message: `#EXT-X-RENDITION-REPORT #${t5} lacks required attribute(s): LAST-PART` });
          });
        }, "server-control"() {
          const t4 = this.manifest.serverControl = Ze(e11.attributes);
          t4.hasOwnProperty("canBlockReload") || (t4.canBlockReload = false, this.trigger("info", { message: "#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false" })), et.call(this, this.manifest), t4.canSkipDateranges && !t4.hasOwnProperty("canSkipUntil") && this.trigger("warn", { message: "#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set" });
        }, "preload-hint"() {
          const t4 = this.manifest.segments.length, i6 = Ze(e11.attributes), s6 = i6.type && "PART" === i6.type;
          r5.preloadHints = r5.preloadHints || [], r5.preloadHints.push(i6), i6.byterange && (i6.byterange.hasOwnProperty("offset") || (i6.byterange.offset = s6 ? c5 : 0, s6 && (c5 = i6.byterange.offset + i6.byterange.length)));
          const n5 = r5.preloadHints.length - 1;
          if (this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${n5} for segment #${t4}`, e11.attributes, ["TYPE", "URI"]), i6.type) for (let e12 = 0; e12 < r5.preloadHints.length - 1; e12++) {
            const s7 = r5.preloadHints[e12];
            s7.type && (s7.type === i6.type && this.trigger("warn", { message: `#EXT-X-PRELOAD-HINT #${n5} for segment #${t4} has the same TYPE ${i6.type} as preload hint #${e12}` }));
          }
        }, "rendition-report"() {
          const t4 = Ze(e11.attributes);
          this.manifest.renditionReports = this.manifest.renditionReports || [], this.manifest.renditionReports.push(t4);
          const i6 = this.manifest.renditionReports.length - 1, s6 = ["LAST-MSN", "URI"];
          a9 && s6.push("LAST-PART"), this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${i6}`, e11.attributes, s6);
        }, "part-inf"() {
          this.manifest.partInf = Ze(e11.attributes), this.warnOnMissingAttributes_("#EXT-X-PART-INF", e11.attributes, ["PART-TARGET"]), this.manifest.partInf.partTarget && (this.manifest.partTargetDuration = this.manifest.partInf.partTarget), et.call(this, this.manifest);
        }, daterange() {
          this.manifest.dateRanges.push(Ze(e11.attributes));
          const t4 = this.manifest.dateRanges.length - 1;
          this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${t4}`, e11.attributes, ["ID", "START-DATE"]);
          const i6 = this.manifest.dateRanges[t4];
          i6.endDate && i6.startDate && new Date(i6.endDate) < new Date(i6.startDate) && this.trigger("warn", { message: "EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE" }), i6.duration && i6.duration < 0 && this.trigger("warn", { message: "EXT-X-DATERANGE DURATION must not be negative" }), i6.plannedDuration && i6.plannedDuration < 0 && this.trigger("warn", { message: "EXT-X-DATERANGE PLANNED-DURATION must not be negative" });
          const s6 = !!i6.endOnNext;
          if (s6 && !i6.class && this.trigger("warn", { message: "EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute" }), s6 && (i6.duration || i6.endDate) && this.trigger("warn", { message: "EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes" }), i6.duration && i6.endDate) {
            const e12 = i6.startDate.getTime() + 1e3 * i6.duration;
            this.manifest.dateRanges[t4].endDate = new Date(e12);
          }
          if (p5[i6.id]) {
            for (const t5 in p5[i6.id]) if (i6[t5] && JSON.stringify(p5[i6.id][t5]) !== JSON.stringify(i6[t5])) {
              this.trigger("warn", { message: "EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values" });
              break;
            }
            const e12 = this.manifest.dateRanges.findIndex((e13) => e13.id === i6.id);
            this.manifest.dateRanges[e12] = Fe(this.manifest.dateRanges[e12], i6), p5[i6.id] = Fe(p5[i6.id], i6), this.manifest.dateRanges.pop();
          } else p5[i6.id] = i6;
        }, "independent-segments"() {
          this.manifest.independentSegments = true;
        }, "i-frames-only"() {
          this.manifest.iFramesOnly = true, this.requiredCompatibilityversion(this.manifest.version, 4);
        }, "content-steering"() {
          this.manifest.contentSteering = Ze(e11.attributes), this.warnOnMissingAttributes_("#EXT-X-CONTENT-STEERING", e11.attributes, ["SERVER-URI"]);
        }, define() {
          this.manifest.definitions = this.manifest.definitions || {};
          const t4 = (e12, t5) => {
            e12 in this.manifest.definitions ? this.trigger("error", { message: `EXT-X-DEFINE: Duplicate name ${e12}` }) : this.manifest.definitions[e12] = t5;
          };
          if ("QUERYPARAM" in e11.attributes) {
            if ("NAME" in e11.attributes || "IMPORT" in e11.attributes) return void this.trigger("error", { message: "EXT-X-DEFINE: Invalid attributes" });
            const i6 = this.params.get(e11.attributes.QUERYPARAM);
            return i6 ? void t4(e11.attributes.QUERYPARAM, decodeURIComponent(i6)) : void this.trigger("error", { message: `EXT-X-DEFINE: No query param ${e11.attributes.QUERYPARAM}` });
          }
          return "NAME" in e11.attributes ? "IMPORT" in e11.attributes ? void this.trigger("error", { message: "EXT-X-DEFINE: Invalid attributes" }) : "VALUE" in e11.attributes && "string" == typeof e11.attributes.VALUE ? void t4(e11.attributes.NAME, e11.attributes.VALUE) : void this.trigger("error", { message: `EXT-X-DEFINE: No value for ${e11.attributes.NAME}` }) : "IMPORT" in e11.attributes ? this.mainDefinitions[e11.attributes.IMPORT] ? void t4(e11.attributes.IMPORT, this.mainDefinitions[e11.attributes.IMPORT]) : void this.trigger("error", { message: `EXT-X-DEFINE: No value ${e11.attributes.IMPORT} to import, or IMPORT used on main playlist` }) : void this.trigger("error", { message: "EXT-X-DEFINE: No attribute" });
        }, "i-frame-playlist"() {
          this.manifest.iFramePlaylists.push({ attributes: e11.attributes, uri: e11.uri, timeline: u6 }), this.warnOnMissingAttributes_("#EXT-X-I-FRAME-STREAM-INF", e11.attributes, ["BANDWIDTH", "URI"]);
        } }[e11.tagType] || o4).call(t3);
      }, uri() {
        r5.uri = e11.uri, i5.push(r5), this.manifest.targetDuration && !("duration" in r5) && (this.trigger("warn", { message: "defaulting segment duration to the target duration" }), r5.duration = this.manifest.targetDuration), n4 && (r5.key = n4), r5.timeline = u6, s5 && (r5.map = s5), c5 = 0, null !== this.lastProgramDateTime && (r5.programDateTime = this.lastProgramDateTime, this.lastProgramDateTime += 1e3 * r5.duration), r5 = {};
      }, comment() {
      }, custom() {
        e11.segment ? (r5.custom = r5.custom || {}, r5.custom[e11.customType] = e11.data) : (this.manifest.custom = this.manifest.custom || {}, this.manifest.custom[e11.customType] = e11.data);
      } })[e11.type].call(t3);
    });
  }
  requiredCompatibilityversion(e10, t3) {
    (e10 < t3 || !e10) && this.trigger("warn", { message: `manifest must be at least version ${t3}` });
  }
  warnOnMissingAttributes_(e10, t3, i5) {
    const s5 = [];
    i5.forEach(function(e11) {
      t3.hasOwnProperty(e11) || s5.push(e11);
    }), s5.length && this.trigger("warn", { message: `${e10} lacks required attribute(s): ${s5.join(", ")}` });
  }
  push(e10) {
    this.lineStream.push(e10);
  }
  end() {
    this.lineStream.push("\n"), this.manifest.dateRanges.length && null === this.lastProgramDateTime && this.trigger("warn", { message: "A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag" }), this.lastProgramDateTime = null, this.trigger("end");
  }
  addParser(e10) {
    this.parseStream.addParser(e10);
  }
  addTagMapper(e10) {
    this.parseStream.addTagMapper(e10);
  }
};
var it;
var st;
var nt = { mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/, webm: /^(vp0?[89]|av0?1|opus|vorbis)/, ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/, video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/, audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/, text: /^(stpp.ttml.im1t)/, muxerVideo: /^(avc0?1)/, muxerAudio: /^(mp4a)/, muxerText: /a^/ };
var rt = ["video", "audio", "text"];
var at = ["Video", "Audio", "Text"];
var ot = function(e10) {
  return e10 ? e10.replace(/avc1\.(\d+)\.(\d+)/i, function(e11, t3, i5) {
    return "avc1." + ("00" + Number(t3).toString(16)).slice(-2) + "00" + ("00" + Number(i5).toString(16)).slice(-2);
  }) : e10;
};
var lt = function(e10) {
  void 0 === e10 && (e10 = "");
  var t3 = e10.split(","), i5 = [];
  return t3.forEach(function(e11) {
    var t4;
    e11 = e11.trim(), rt.forEach(function(s5) {
      var n4 = nt[s5].exec(e11.toLowerCase());
      if (n4 && !(n4.length <= 1)) {
        t4 = s5;
        var r5 = e11.substring(0, n4[1].length), a9 = e11.replace(r5, "");
        i5.push({ type: r5, details: a9, mediaType: s5 });
      }
    }), t4 || i5.push({ type: e11, details: "", mediaType: "unknown" });
  }), i5;
};
var ht = function(e10, t3) {
  if (!e10.mediaGroups.AUDIO || !t3) return null;
  var i5 = e10.mediaGroups.AUDIO[t3];
  if (!i5) return null;
  for (var s5 in i5) {
    var n4 = i5[s5];
    if (n4.default && n4.playlists) return lt(n4.playlists[0].attributes.CODECS);
  }
  return null;
};
var ut = function(e10) {
  return void 0 === e10 && (e10 = ""), nt.audio.test(e10.trim().toLowerCase());
};
var dt = function(e10) {
  return void 0 === e10 && (e10 = ""), nt.text.test(e10.trim().toLowerCase());
};
var ct = function(e10) {
  if (e10 && "string" == typeof e10) {
    var t3 = e10.toLowerCase().split(",").map(function(e11) {
      return ot(e11.trim());
    }), i5 = "video";
    1 === t3.length && ut(t3[0]) ? i5 = "audio" : 1 === t3.length && dt(t3[0]) && (i5 = "application");
    var s5 = "mp4";
    return t3.every(function(e11) {
      return nt.mp4.test(e11);
    }) ? s5 = "mp4" : t3.every(function(e11) {
      return nt.webm.test(e11);
    }) ? s5 = "webm" : t3.every(function(e11) {
      return nt.ogg.test(e11);
    }) && (s5 = "ogg"), i5 + "/" + s5 + ';codecs="' + e10 + '"';
  }
};
var pt = function(e10, t3) {
  return void 0 === e10 && (e10 = ""), void 0 === t3 && (t3 = false), b3.MediaSource && b3.MediaSource.isTypeSupported && b3.MediaSource.isTypeSupported(ct(e10)) || t3 && b3.ManagedMediaSource && b3.ManagedMediaSource.isTypeSupported && b3.ManagedMediaSource.isTypeSupported(ct(e10)) || false;
};
var mt = function(e10) {
  return void 0 === e10 && (e10 = ""), e10.toLowerCase().split(",").every(function(e11) {
    e11 = e11.trim();
    for (var t3 = 0; t3 < at.length; t3++) {
      var i5 = at[t3];
      if (nt["muxer" + i5].test(e11)) return true;
    }
    return false;
  });
};
var gt = "mp4a.40.2";
var ft = "avc1.4d400d";
var yt = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
var _t = /^application\/dash\+xml/i;
var vt = function(e10) {
  return yt.test(e10) ? "hls" : _t.test(e10) ? "dash" : "application/vnd.videojs.vhs+json" === e10 ? "vhs-json" : null;
};
var bt = function(e10) {
  return e10.toString(2).length;
};
var Tt = function(e10) {
  return Math.ceil(bt(e10) / 8);
};
var St = function(e10) {
  return "function" === ArrayBuffer.isView ? ArrayBuffer.isView(e10) : e10 && e10.buffer instanceof ArrayBuffer;
};
var Et = function(e10) {
  return St(e10);
};
var wt = function(e10) {
  return e10 instanceof Uint8Array ? e10 : (Array.isArray(e10) || Et(e10) || e10 instanceof ArrayBuffer || (e10 = "number" != typeof e10 || "number" == typeof e10 && e10 != e10 ? 0 : [e10]), new Uint8Array(e10 && e10.buffer || e10, e10 && e10.byteOffset || 0, e10 && e10.byteLength || 0));
};
var Ct = b3.BigInt || Number;
var kt = [Ct("0x1"), Ct("0x100"), Ct("0x10000"), Ct("0x1000000"), Ct("0x100000000"), Ct("0x10000000000"), Ct("0x1000000000000"), Ct("0x100000000000000"), Ct("0x10000000000000000")];
it = new Uint16Array([65484]), 255 === (st = new Uint8Array(it.buffer, it.byteOffset, it.byteLength))[0] || st[0];
var It;
var xt;
var At = function(e10, t3) {
  var i5 = void 0 === t3 ? {} : t3, s5 = i5.signed, n4 = void 0 !== s5 && s5, r5 = i5.le, a9 = void 0 !== r5 && r5;
  e10 = wt(e10);
  var o4 = a9 ? "reduce" : "reduceRight", l7 = (e10[o4] ? e10[o4] : Array.prototype[o4]).call(e10, function(t4, i6, s6) {
    var n5 = a9 ? s6 : Math.abs(s6 + 1 - e10.length);
    return t4 + Ct(i6) * kt[n5];
  }, Ct(0));
  if (n4) {
    var h3 = kt[e10.length] / Ct(2) - Ct(1);
    (l7 = Ct(l7)) > h3 && (l7 -= h3, l7 -= h3, l7 -= Ct(2));
  }
  return Number(l7);
};
var Dt = function(e10, t3) {
  var i5 = {}.le, s5 = void 0 !== i5 && i5;
  ("bigint" != typeof e10 && "number" != typeof e10 || "number" == typeof e10 && e10 != e10) && (e10 = 0), e10 = Ct(e10);
  for (var n4 = Tt(e10), r5 = new Uint8Array(new ArrayBuffer(n4)), a9 = 0; a9 < n4; a9++) {
    var o4 = s5 ? a9 : Math.abs(a9 + 1 - r5.length);
    r5[o4] = Number(e10 / kt[a9] & Ct(255)), e10 < 0 && (r5[o4] = Math.abs(~r5[o4]), r5[o4] -= 0 === a9 ? 1 : 2);
  }
  return r5;
};
var Pt = function(e10, t3) {
  if ("string" != typeof e10 && e10 && "function" == typeof e10.toString && (e10 = e10.toString()), "string" != typeof e10) return new Uint8Array();
  t3 || (e10 = unescape(encodeURIComponent(e10)));
  for (var i5 = new Uint8Array(e10.length), s5 = 0; s5 < e10.length; s5++) i5[s5] = e10.charCodeAt(s5);
  return i5;
};
var Lt = function() {
  for (var e10 = arguments.length, t3 = new Array(e10), i5 = 0; i5 < e10; i5++) t3[i5] = arguments[i5];
  if (t3 = t3.filter(function(e11) {
    return e11 && (e11.byteLength || e11.length) && "string" != typeof e11;
  }), t3.length <= 1) return wt(t3[0]);
  var s5 = t3.reduce(function(e11, t4, i6) {
    return e11 + (t4.byteLength || t4.length);
  }, 0), n4 = new Uint8Array(s5), r5 = 0;
  return t3.forEach(function(e11) {
    e11 = wt(e11), n4.set(e11, r5), r5 += e11.byteLength;
  }), n4;
};
var Ot = function(e10, t3, i5) {
  var s5 = void 0 === i5 ? {} : i5, n4 = s5.offset, r5 = void 0 === n4 ? 0 : n4, a9 = s5.mask, o4 = void 0 === a9 ? [] : a9;
  e10 = wt(e10);
  var l7 = (t3 = wt(t3)).every ? t3.every : Array.prototype.every;
  return t3.length && e10.length - r5 >= t3.length && l7.call(t3, function(t4, i6) {
    return t4 === (o4[i6] ? o4[i6] & e10[r5 + i6] : e10[r5 + i6]);
  });
};
var Nt = function(e10, t3, i5) {
  t3.forEach(function(t4) {
    for (var s5 in e10.mediaGroups[t4]) for (var n4 in e10.mediaGroups[t4][s5]) {
      var r5 = e10.mediaGroups[t4][s5][n4];
      i5(r5, t4, s5, n4);
    }
  });
};
var Rt = {};
var Mt = {};
var Ut = {};
function Bt() {
  if (It) return Ut;
  function e10(e11, t4, i6) {
    if (void 0 === i6 && (i6 = Array.prototype), e11 && "function" == typeof i6.find) return i6.find.call(e11, t4);
    for (var s6 = 0; s6 < e11.length; s6++) if (Object.prototype.hasOwnProperty.call(e11, s6)) {
      var n5 = e11[s6];
      if (t4.call(void 0, n5, s6, e11)) return n5;
    }
  }
  function t3(e11, t4) {
    return void 0 === t4 && (t4 = Object), t4 && "function" == typeof t4.freeze ? t4.freeze(e11) : e11;
  }
  function i5(e11, t4) {
    if (null === e11 || "object" != typeof e11) throw new TypeError("target is not an object");
    for (var i6 in t4) Object.prototype.hasOwnProperty.call(t4, i6) && (e11[i6] = t4[i6]);
    return e11;
  }
  It = 1;
  var s5 = t3({ HTML: "text/html", isHTML: function(e11) {
    return e11 === s5.HTML;
  }, XML_APPLICATION: "application/xml", XML_TEXT: "text/xml", XML_XHTML_APPLICATION: "application/xhtml+xml", XML_SVG_IMAGE: "image/svg+xml" }), n4 = t3({ HTML: "http://www.w3.org/1999/xhtml", isHTML: function(e11) {
    return e11 === n4.HTML;
  }, SVG: "http://www.w3.org/2000/svg", XML: "http://www.w3.org/XML/1998/namespace", XMLNS: "http://www.w3.org/2000/xmlns/" });
  return Ut.assign = i5, Ut.find = e10, Ut.freeze = t3, Ut.MIME_TYPE = s5, Ut.NAMESPACE = n4, Ut;
}
function Ft() {
  if (xt) return Mt;
  xt = 1;
  var e10 = Bt(), t3 = e10.find, i5 = e10.NAMESPACE;
  function s5(e11) {
    return "" !== e11;
  }
  function n4(e11) {
    return e11 ? e11.split(/[\t\n\f\r ]+/).filter(s5) : [];
  }
  function r5(e11, t4) {
    return e11.hasOwnProperty(t4) || (e11[t4] = true), e11;
  }
  function a9(e11) {
    if (!e11) return [];
    var t4 = n4(e11);
    return Object.keys(t4.reduce(r5, {}));
  }
  function o4(e11) {
    return function(t4) {
      return e11 && -1 !== e11.indexOf(t4);
    };
  }
  function l7(e11, t4) {
    for (var i6 in e11) Object.prototype.hasOwnProperty.call(e11, i6) && (t4[i6] = e11[i6]);
  }
  function h3(e11, t4) {
    var i6 = e11.prototype;
    if (!(i6 instanceof t4)) {
      let s6 = function() {
      };
      s6.prototype = t4.prototype, l7(i6, s6 = new s6()), e11.prototype = i6 = s6;
    }
    i6.constructor != e11 && ("function" != typeof e11 && console.error("unknown Class:" + e11), i6.constructor = e11);
  }
  var u6 = {}, d2 = u6.ELEMENT_NODE = 1, c5 = u6.ATTRIBUTE_NODE = 2, p5 = u6.TEXT_NODE = 3, m7 = u6.CDATA_SECTION_NODE = 4, g2 = u6.ENTITY_REFERENCE_NODE = 5, f3 = u6.ENTITY_NODE = 6, y4 = u6.PROCESSING_INSTRUCTION_NODE = 7, _3 = u6.COMMENT_NODE = 8, v3 = u6.DOCUMENT_NODE = 9, b4 = u6.DOCUMENT_TYPE_NODE = 10, T2 = u6.DOCUMENT_FRAGMENT_NODE = 11, S4 = u6.NOTATION_NODE = 12, E3 = {}, w5 = {};
  E3.INDEX_SIZE_ERR = (w5[1] = "Index size error", 1), E3.DOMSTRING_SIZE_ERR = (w5[2] = "DOMString size error", 2);
  var C4 = E3.HIERARCHY_REQUEST_ERR = (w5[3] = "Hierarchy request error", 3);
  E3.WRONG_DOCUMENT_ERR = (w5[4] = "Wrong document", 4), E3.INVALID_CHARACTER_ERR = (w5[5] = "Invalid character", 5), E3.NO_DATA_ALLOWED_ERR = (w5[6] = "No data allowed", 6), E3.NO_MODIFICATION_ALLOWED_ERR = (w5[7] = "No modification allowed", 7);
  var k2 = E3.NOT_FOUND_ERR = (w5[8] = "Not found", 8);
  E3.NOT_SUPPORTED_ERR = (w5[9] = "Not supported", 9);
  var I3 = E3.INUSE_ATTRIBUTE_ERR = (w5[10] = "Attribute in use", 10);
  function x3(e11, t4) {
    if (t4 instanceof Error) var i6 = t4;
    else i6 = this, Error.call(this, w5[e11]), this.message = w5[e11], Error.captureStackTrace && Error.captureStackTrace(this, x3);
    return i6.code = e11, t4 && (this.message = this.message + ": " + t4), i6;
  }
  function A3() {
  }
  function D2(e11, t4) {
    this._node = e11, this._refresh = t4, P3(this);
  }
  function P3(e11) {
    var t4 = e11._node._inc || e11._node.ownerDocument._inc;
    if (e11._inc !== t4) {
      var i6 = e11._refresh(e11._node);
      if (Se2(e11, "length", i6.length), !e11.$$length || i6.length < e11.$$length) for (var s6 = i6.length; s6 in e11; s6++) Object.prototype.hasOwnProperty.call(e11, s6) && delete e11[s6];
      l7(i6, e11), e11._inc = t4;
    }
  }
  function L3() {
  }
  function O2(e11, t4) {
    for (var i6 = e11.length; i6--; ) if (e11[i6] === t4) return i6;
  }
  function N3(e11, t4, i6, s6) {
    if (s6 ? t4[O2(t4, s6)] = i6 : t4[t4.length++] = i6, e11) {
      i6.ownerElement = e11;
      var n5 = e11.ownerDocument;
      n5 && (s6 && $2(n5, e11, s6), j4(n5, e11, i6));
    }
  }
  function R2(e11, t4, i6) {
    var s6 = O2(t4, i6);
    if (!(s6 >= 0)) throw new x3(k2, new Error(e11.tagName + "@" + i6));
    for (var n5 = t4.length - 1; s6 < n5; ) t4[s6] = t4[++s6];
    if (t4.length = n5, e11) {
      var r6 = e11.ownerDocument;
      r6 && ($2(r6, e11, i6), i6.ownerElement = null);
    }
  }
  function M3() {
  }
  function U2() {
  }
  function B2(e11) {
    return ("<" == e11 ? "&lt;" : ">" == e11 && "&gt;") || "&" == e11 && "&amp;" || '"' == e11 && "&quot;" || "&#" + e11.charCodeAt() + ";";
  }
  function F2(e11, t4) {
    if (t4(e11)) return true;
    if (e11 = e11.firstChild) do {
      if (F2(e11, t4)) return true;
    } while (e11 = e11.nextSibling);
  }
  function q3() {
    this.ownerDocument = this;
  }
  function j4(e11, t4, s6) {
    e11 && e11._inc++, s6.namespaceURI === i5.XMLNS && (t4._nsMap[s6.prefix ? s6.localName : ""] = s6.value);
  }
  function $2(e11, t4, s6, n5) {
    e11 && e11._inc++, s6.namespaceURI === i5.XMLNS && delete t4._nsMap[s6.prefix ? s6.localName : ""];
  }
  function H3(e11, t4, i6) {
    if (e11 && e11._inc) {
      e11._inc++;
      var s6 = t4.childNodes;
      if (i6) s6[s6.length++] = i6;
      else {
        for (var n5 = t4.firstChild, r6 = 0; n5; ) s6[r6++] = n5, n5 = n5.nextSibling;
        s6.length = r6, delete s6[s6.length];
      }
    }
  }
  function V4(e11, t4) {
    var i6 = t4.previousSibling, s6 = t4.nextSibling;
    return i6 ? i6.nextSibling = s6 : e11.firstChild = s6, s6 ? s6.previousSibling = i6 : e11.lastChild = i6, t4.parentNode = null, t4.previousSibling = null, t4.nextSibling = null, H3(e11.ownerDocument, e11), t4;
  }
  function z3(e11) {
    return e11 && (e11.nodeType === U2.DOCUMENT_NODE || e11.nodeType === U2.DOCUMENT_FRAGMENT_NODE || e11.nodeType === U2.ELEMENT_NODE);
  }
  function W2(e11) {
    return e11 && (X2(e11) || K2(e11) || G2(e11) || e11.nodeType === U2.DOCUMENT_FRAGMENT_NODE || e11.nodeType === U2.COMMENT_NODE || e11.nodeType === U2.PROCESSING_INSTRUCTION_NODE);
  }
  function G2(e11) {
    return e11 && e11.nodeType === U2.DOCUMENT_TYPE_NODE;
  }
  function X2(e11) {
    return e11 && e11.nodeType === U2.ELEMENT_NODE;
  }
  function K2(e11) {
    return e11 && e11.nodeType === U2.TEXT_NODE;
  }
  function Y2(e11, i6) {
    var s6 = e11.childNodes || [];
    if (t3(s6, X2) || G2(i6)) return false;
    var n5 = t3(s6, G2);
    return !(i6 && n5 && s6.indexOf(n5) > s6.indexOf(i6));
  }
  function Q2(e11, i6) {
    var s6 = e11.childNodes || [];
    function n5(e12) {
      return X2(e12) && e12 !== i6;
    }
    if (t3(s6, n5)) return false;
    var r6 = t3(s6, G2);
    return !(i6 && r6 && s6.indexOf(r6) > s6.indexOf(i6));
  }
  function J2(e11, t4, i6) {
    if (!z3(e11)) throw new x3(C4, "Unexpected parent node type " + e11.nodeType);
    if (i6 && i6.parentNode !== e11) throw new x3(k2, "child not in parent");
    if (!W2(t4) || G2(t4) && e11.nodeType !== U2.DOCUMENT_NODE) throw new x3(C4, "Unexpected node type " + t4.nodeType + " for parent node type " + e11.nodeType);
  }
  function Z2(e11, i6, s6) {
    var n5 = e11.childNodes || [], r6 = i6.childNodes || [];
    if (i6.nodeType === U2.DOCUMENT_FRAGMENT_NODE) {
      var a10 = r6.filter(X2);
      if (a10.length > 1 || t3(r6, K2)) throw new x3(C4, "More than one element or text in fragment");
      if (1 === a10.length && !Y2(e11, s6)) throw new x3(C4, "Element in fragment can not be inserted before doctype");
    }
    if (X2(i6) && !Y2(e11, s6)) throw new x3(C4, "Only one element can be added and only after doctype");
    if (G2(i6)) {
      if (t3(n5, G2)) throw new x3(C4, "Only one doctype is allowed");
      var o5 = t3(n5, X2);
      if (s6 && n5.indexOf(o5) < n5.indexOf(s6)) throw new x3(C4, "Doctype can only be inserted before an element");
      if (!s6 && o5) throw new x3(C4, "Doctype can not be appended since element is present");
    }
  }
  function ee3(e11, i6, s6) {
    var n5 = e11.childNodes || [], r6 = i6.childNodes || [];
    if (i6.nodeType === U2.DOCUMENT_FRAGMENT_NODE) {
      var a10 = r6.filter(X2);
      if (a10.length > 1 || t3(r6, K2)) throw new x3(C4, "More than one element or text in fragment");
      if (1 === a10.length && !Q2(e11, s6)) throw new x3(C4, "Element in fragment can not be inserted before doctype");
    }
    if (X2(i6) && !Q2(e11, s6)) throw new x3(C4, "Only one element can be added and only after doctype");
    if (G2(i6)) {
      let l8 = function(e12) {
        return G2(e12) && e12 !== s6;
      };
      if (t3(n5, l8)) throw new x3(C4, "Only one doctype is allowed");
      var o5 = t3(n5, X2);
      if (s6 && n5.indexOf(o5) < n5.indexOf(s6)) throw new x3(C4, "Doctype can only be inserted before an element");
    }
  }
  function te3(e11, t4, i6, s6) {
    J2(e11, t4, i6), e11.nodeType === U2.DOCUMENT_NODE && (s6 || Z2)(e11, t4, i6);
    var n5 = t4.parentNode;
    if (n5 && n5.removeChild(t4), t4.nodeType === T2) {
      var r6 = t4.firstChild;
      if (null == r6) return t4;
      var a10 = t4.lastChild;
    } else r6 = a10 = t4;
    var o5 = i6 ? i6.previousSibling : e11.lastChild;
    r6.previousSibling = o5, a10.nextSibling = i6, o5 ? o5.nextSibling = r6 : e11.firstChild = r6, null == i6 ? e11.lastChild = a10 : i6.previousSibling = a10;
    do {
      r6.parentNode = e11;
    } while (r6 !== a10 && (r6 = r6.nextSibling));
    return H3(e11.ownerDocument || e11, e11), t4.nodeType == T2 && (t4.firstChild = t4.lastChild = null), t4;
  }
  function ie3(e11, t4) {
    return t4.parentNode && t4.parentNode.removeChild(t4), t4.parentNode = e11, t4.previousSibling = e11.lastChild, t4.nextSibling = null, t4.previousSibling ? t4.previousSibling.nextSibling = t4 : e11.firstChild = t4, e11.lastChild = t4, H3(e11.ownerDocument, e11, t4), t4;
  }
  function se3() {
    this._nsMap = {};
  }
  function ne3() {
  }
  function re3() {
  }
  function ae3() {
  }
  function oe3() {
  }
  function le3() {
  }
  function he2() {
  }
  function ue3() {
  }
  function de2() {
  }
  function ce2() {
  }
  function pe3() {
  }
  function me3() {
  }
  function ge2() {
  }
  function fe2(e11, t4) {
    var i6 = [], s6 = 9 == this.nodeType && this.documentElement || this, n5 = s6.prefix, r6 = s6.namespaceURI;
    if (r6 && null == n5 && null == (n5 = s6.lookupPrefix(r6))) var a10 = [{ namespace: r6, prefix: null }];
    return ve2(this, i6, e11, t4, a10), i6.join("");
  }
  function ye3(e11, t4, s6) {
    var n5 = e11.prefix || "", r6 = e11.namespaceURI;
    if (!r6) return false;
    if ("xml" === n5 && r6 === i5.XML || r6 === i5.XMLNS) return false;
    for (var a10 = s6.length; a10--; ) {
      var o5 = s6[a10];
      if (o5.prefix === n5) return o5.namespace !== r6;
    }
    return true;
  }
  function _e2(e11, t4, i6) {
    e11.push(" ", t4, '="', i6.replace(/[<>&"\t\n\r]/g, B2), '"');
  }
  function ve2(e11, t4, s6, n5, r6) {
    if (r6 || (r6 = []), n5) {
      if (!(e11 = n5(e11))) return;
      if ("string" == typeof e11) return void t4.push(e11);
    }
    switch (e11.nodeType) {
      case d2:
        var a10 = e11.attributes, o5 = a10.length, l8 = e11.firstChild, h4 = e11.tagName, u7 = h4;
        if (!(s6 = i5.isHTML(e11.namespaceURI) || s6) && !e11.prefix && e11.namespaceURI) {
          for (var f4, S5 = 0; S5 < a10.length; S5++) if ("xmlns" === a10.item(S5).name) {
            f4 = a10.item(S5).value;
            break;
          }
          if (!f4) for (var E4 = r6.length - 1; E4 >= 0; E4--) {
            if ("" === (w6 = r6[E4]).prefix && w6.namespace === e11.namespaceURI) {
              f4 = w6.namespace;
              break;
            }
          }
          if (f4 !== e11.namespaceURI) for (E4 = r6.length - 1; E4 >= 0; E4--) {
            var w6;
            if ((w6 = r6[E4]).namespace === e11.namespaceURI) {
              w6.prefix && (u7 = w6.prefix + ":" + h4);
              break;
            }
          }
        }
        t4.push("<", u7);
        for (var C5 = 0; C5 < o5; C5++) {
          "xmlns" == (k3 = a10.item(C5)).prefix ? r6.push({ prefix: k3.localName, namespace: k3.value }) : "xmlns" == k3.nodeName && r6.push({ prefix: "", namespace: k3.value });
        }
        for (C5 = 0; C5 < o5; C5++) {
          var k3, I4, x4;
          if (ye3(k3 = a10.item(C5), s6, r6)) _e2(t4, (I4 = k3.prefix || "") ? "xmlns:" + I4 : "xmlns", x4 = k3.namespaceURI), r6.push({ prefix: I4, namespace: x4 });
          ve2(k3, t4, s6, n5, r6);
        }
        if (h4 === u7 && ye3(e11, s6, r6)) _e2(t4, (I4 = e11.prefix || "") ? "xmlns:" + I4 : "xmlns", x4 = e11.namespaceURI), r6.push({ prefix: I4, namespace: x4 });
        if (l8 || s6 && !/^(?:meta|link|img|br|hr|input)$/i.test(h4)) {
          if (t4.push(">"), s6 && /^script$/i.test(h4)) for (; l8; ) l8.data ? t4.push(l8.data) : ve2(l8, t4, s6, n5, r6.slice()), l8 = l8.nextSibling;
          else for (; l8; ) ve2(l8, t4, s6, n5, r6.slice()), l8 = l8.nextSibling;
          t4.push("</", u7, ">");
        } else t4.push("/>");
        return;
      case v3:
      case T2:
        for (l8 = e11.firstChild; l8; ) ve2(l8, t4, s6, n5, r6.slice()), l8 = l8.nextSibling;
        return;
      case c5:
        return _e2(t4, e11.name, e11.value);
      case p5:
        return t4.push(e11.data.replace(/[<&>]/g, B2));
      case m7:
        return t4.push("<![CDATA[", e11.data, "]]>");
      case _3:
        return t4.push("<!--", e11.data, "-->");
      case b4:
        var A4 = e11.publicId, D3 = e11.systemId;
        if (t4.push("<!DOCTYPE ", e11.name), A4) t4.push(" PUBLIC ", A4), D3 && "." != D3 && t4.push(" ", D3), t4.push(">");
        else if (D3 && "." != D3) t4.push(" SYSTEM ", D3, ">");
        else {
          var P4 = e11.internalSubset;
          P4 && t4.push(" [", P4, "]"), t4.push(">");
        }
        return;
      case y4:
        return t4.push("<?", e11.target, " ", e11.data, "?>");
      case g2:
        return t4.push("&", e11.nodeName, ";");
      default:
        t4.push("??", e11.nodeName);
    }
  }
  function be2(e11, t4, i6) {
    var s6;
    switch (t4.nodeType) {
      case d2:
        (s6 = t4.cloneNode(false)).ownerDocument = e11;
      case T2:
        break;
      case c5:
        i6 = true;
    }
    if (s6 || (s6 = t4.cloneNode(false)), s6.ownerDocument = e11, s6.parentNode = null, i6) for (var n5 = t4.firstChild; n5; ) s6.appendChild(be2(e11, n5, i6)), n5 = n5.nextSibling;
    return s6;
  }
  function Te2(e11, t4, i6) {
    var s6 = new t4.constructor();
    for (var n5 in t4) if (Object.prototype.hasOwnProperty.call(t4, n5)) {
      var r6 = t4[n5];
      "object" != typeof r6 && r6 != s6[n5] && (s6[n5] = r6);
    }
    switch (t4.childNodes && (s6.childNodes = new A3()), s6.ownerDocument = e11, s6.nodeType) {
      case d2:
        var a10 = t4.attributes, o5 = s6.attributes = new L3(), l8 = a10.length;
        o5._ownerElement = s6;
        for (var h4 = 0; h4 < l8; h4++) s6.setAttributeNode(Te2(e11, a10.item(h4), true));
        break;
      case c5:
        i6 = true;
    }
    if (i6) for (var u7 = t4.firstChild; u7; ) s6.appendChild(Te2(e11, u7, i6)), u7 = u7.nextSibling;
    return s6;
  }
  function Se2(e11, t4, i6) {
    e11[t4] = i6;
  }
  E3.INVALID_STATE_ERR = (w5[11] = "Invalid state", 11), E3.SYNTAX_ERR = (w5[12] = "Syntax error", 12), E3.INVALID_MODIFICATION_ERR = (w5[13] = "Invalid modification", 13), E3.NAMESPACE_ERR = (w5[14] = "Invalid namespace", 14), E3.INVALID_ACCESS_ERR = (w5[15] = "Invalid access", 15), x3.prototype = Error.prototype, l7(E3, x3), A3.prototype = { length: 0, item: function(e11) {
    return e11 >= 0 && e11 < this.length ? this[e11] : null;
  }, toString: function(e11, t4) {
    for (var i6 = [], s6 = 0; s6 < this.length; s6++) ve2(this[s6], i6, e11, t4);
    return i6.join("");
  }, filter: function(e11) {
    return Array.prototype.filter.call(this, e11);
  }, indexOf: function(e11) {
    return Array.prototype.indexOf.call(this, e11);
  } }, D2.prototype.item = function(e11) {
    return P3(this), this[e11] || null;
  }, h3(D2, A3), L3.prototype = { length: 0, item: A3.prototype.item, getNamedItem: function(e11) {
    for (var t4 = this.length; t4--; ) {
      var i6 = this[t4];
      if (i6.nodeName == e11) return i6;
    }
  }, setNamedItem: function(e11) {
    var t4 = e11.ownerElement;
    if (t4 && t4 != this._ownerElement) throw new x3(I3);
    var i6 = this.getNamedItem(e11.nodeName);
    return N3(this._ownerElement, this, e11, i6), i6;
  }, setNamedItemNS: function(e11) {
    var t4, i6 = e11.ownerElement;
    if (i6 && i6 != this._ownerElement) throw new x3(I3);
    return t4 = this.getNamedItemNS(e11.namespaceURI, e11.localName), N3(this._ownerElement, this, e11, t4), t4;
  }, removeNamedItem: function(e11) {
    var t4 = this.getNamedItem(e11);
    return R2(this._ownerElement, this, t4), t4;
  }, removeNamedItemNS: function(e11, t4) {
    var i6 = this.getNamedItemNS(e11, t4);
    return R2(this._ownerElement, this, i6), i6;
  }, getNamedItemNS: function(e11, t4) {
    for (var i6 = this.length; i6--; ) {
      var s6 = this[i6];
      if (s6.localName == t4 && s6.namespaceURI == e11) return s6;
    }
    return null;
  } }, M3.prototype = { hasFeature: function(e11, t4) {
    return true;
  }, createDocument: function(e11, t4, i6) {
    var s6 = new q3();
    if (s6.implementation = this, s6.childNodes = new A3(), s6.doctype = i6 || null, i6 && s6.appendChild(i6), t4) {
      var n5 = s6.createElementNS(e11, t4);
      s6.appendChild(n5);
    }
    return s6;
  }, createDocumentType: function(e11, t4, i6) {
    var s6 = new he2();
    return s6.name = e11, s6.nodeName = e11, s6.publicId = t4 || "", s6.systemId = i6 || "", s6;
  } }, U2.prototype = { firstChild: null, lastChild: null, previousSibling: null, nextSibling: null, attributes: null, parentNode: null, childNodes: null, ownerDocument: null, nodeValue: null, namespaceURI: null, prefix: null, localName: null, insertBefore: function(e11, t4) {
    return te3(this, e11, t4);
  }, replaceChild: function(e11, t4) {
    te3(this, e11, t4, ee3), t4 && this.removeChild(t4);
  }, removeChild: function(e11) {
    return V4(this, e11);
  }, appendChild: function(e11) {
    return this.insertBefore(e11, null);
  }, hasChildNodes: function() {
    return null != this.firstChild;
  }, cloneNode: function(e11) {
    return Te2(this.ownerDocument || this, this, e11);
  }, normalize: function() {
    for (var e11 = this.firstChild; e11; ) {
      var t4 = e11.nextSibling;
      t4 && t4.nodeType == p5 && e11.nodeType == p5 ? (this.removeChild(t4), e11.appendData(t4.data)) : (e11.normalize(), e11 = t4);
    }
  }, isSupported: function(e11, t4) {
    return this.ownerDocument.implementation.hasFeature(e11, t4);
  }, hasAttributes: function() {
    return this.attributes.length > 0;
  }, lookupPrefix: function(e11) {
    for (var t4 = this; t4; ) {
      var i6 = t4._nsMap;
      if (i6) {
        for (var s6 in i6) if (Object.prototype.hasOwnProperty.call(i6, s6) && i6[s6] === e11) return s6;
      }
      t4 = t4.nodeType == c5 ? t4.ownerDocument : t4.parentNode;
    }
    return null;
  }, lookupNamespaceURI: function(e11) {
    for (var t4 = this; t4; ) {
      var i6 = t4._nsMap;
      if (i6 && Object.prototype.hasOwnProperty.call(i6, e11)) return i6[e11];
      t4 = t4.nodeType == c5 ? t4.ownerDocument : t4.parentNode;
    }
    return null;
  }, isDefaultNamespace: function(e11) {
    return null == this.lookupPrefix(e11);
  } }, l7(u6, U2), l7(u6, U2.prototype), q3.prototype = { nodeName: "#document", nodeType: v3, doctype: null, documentElement: null, _inc: 1, insertBefore: function(e11, t4) {
    if (e11.nodeType == T2) {
      for (var i6 = e11.firstChild; i6; ) {
        var s6 = i6.nextSibling;
        this.insertBefore(i6, t4), i6 = s6;
      }
      return e11;
    }
    return te3(this, e11, t4), e11.ownerDocument = this, null === this.documentElement && e11.nodeType === d2 && (this.documentElement = e11), e11;
  }, removeChild: function(e11) {
    return this.documentElement == e11 && (this.documentElement = null), V4(this, e11);
  }, replaceChild: function(e11, t4) {
    te3(this, e11, t4, ee3), e11.ownerDocument = this, t4 && this.removeChild(t4), X2(e11) && (this.documentElement = e11);
  }, importNode: function(e11, t4) {
    return be2(this, e11, t4);
  }, getElementById: function(e11) {
    var t4 = null;
    return F2(this.documentElement, function(i6) {
      if (i6.nodeType == d2 && i6.getAttribute("id") == e11) return t4 = i6, true;
    }), t4;
  }, getElementsByClassName: function(e11) {
    var t4 = a9(e11);
    return new D2(this, function(i6) {
      var s6 = [];
      return t4.length > 0 && F2(i6.documentElement, function(n5) {
        if (n5 !== i6 && n5.nodeType === d2) {
          var r6 = n5.getAttribute("class");
          if (r6) {
            var l8 = e11 === r6;
            if (!l8) {
              var h4 = a9(r6);
              l8 = t4.every(o4(h4));
            }
            l8 && s6.push(n5);
          }
        }
      }), s6;
    });
  }, createElement: function(e11) {
    var t4 = new se3();
    return t4.ownerDocument = this, t4.nodeName = e11, t4.tagName = e11, t4.localName = e11, t4.childNodes = new A3(), (t4.attributes = new L3())._ownerElement = t4, t4;
  }, createDocumentFragment: function() {
    var e11 = new pe3();
    return e11.ownerDocument = this, e11.childNodes = new A3(), e11;
  }, createTextNode: function(e11) {
    var t4 = new ae3();
    return t4.ownerDocument = this, t4.appendData(e11), t4;
  }, createComment: function(e11) {
    var t4 = new oe3();
    return t4.ownerDocument = this, t4.appendData(e11), t4;
  }, createCDATASection: function(e11) {
    var t4 = new le3();
    return t4.ownerDocument = this, t4.appendData(e11), t4;
  }, createProcessingInstruction: function(e11, t4) {
    var i6 = new me3();
    return i6.ownerDocument = this, i6.tagName = i6.nodeName = i6.target = e11, i6.nodeValue = i6.data = t4, i6;
  }, createAttribute: function(e11) {
    var t4 = new ne3();
    return t4.ownerDocument = this, t4.name = e11, t4.nodeName = e11, t4.localName = e11, t4.specified = true, t4;
  }, createEntityReference: function(e11) {
    var t4 = new ce2();
    return t4.ownerDocument = this, t4.nodeName = e11, t4;
  }, createElementNS: function(e11, t4) {
    var i6 = new se3(), s6 = t4.split(":"), n5 = i6.attributes = new L3();
    return i6.childNodes = new A3(), i6.ownerDocument = this, i6.nodeName = t4, i6.tagName = t4, i6.namespaceURI = e11, 2 == s6.length ? (i6.prefix = s6[0], i6.localName = s6[1]) : i6.localName = t4, n5._ownerElement = i6, i6;
  }, createAttributeNS: function(e11, t4) {
    var i6 = new ne3(), s6 = t4.split(":");
    return i6.ownerDocument = this, i6.nodeName = t4, i6.name = t4, i6.namespaceURI = e11, i6.specified = true, 2 == s6.length ? (i6.prefix = s6[0], i6.localName = s6[1]) : i6.localName = t4, i6;
  } }, h3(q3, U2), se3.prototype = { nodeType: d2, hasAttribute: function(e11) {
    return null != this.getAttributeNode(e11);
  }, getAttribute: function(e11) {
    var t4 = this.getAttributeNode(e11);
    return t4 && t4.value || "";
  }, getAttributeNode: function(e11) {
    return this.attributes.getNamedItem(e11);
  }, setAttribute: function(e11, t4) {
    var i6 = this.ownerDocument.createAttribute(e11);
    i6.value = i6.nodeValue = "" + t4, this.setAttributeNode(i6);
  }, removeAttribute: function(e11) {
    var t4 = this.getAttributeNode(e11);
    t4 && this.removeAttributeNode(t4);
  }, appendChild: function(e11) {
    return e11.nodeType === T2 ? this.insertBefore(e11, null) : ie3(this, e11);
  }, setAttributeNode: function(e11) {
    return this.attributes.setNamedItem(e11);
  }, setAttributeNodeNS: function(e11) {
    return this.attributes.setNamedItemNS(e11);
  }, removeAttributeNode: function(e11) {
    return this.attributes.removeNamedItem(e11.nodeName);
  }, removeAttributeNS: function(e11, t4) {
    var i6 = this.getAttributeNodeNS(e11, t4);
    i6 && this.removeAttributeNode(i6);
  }, hasAttributeNS: function(e11, t4) {
    return null != this.getAttributeNodeNS(e11, t4);
  }, getAttributeNS: function(e11, t4) {
    var i6 = this.getAttributeNodeNS(e11, t4);
    return i6 && i6.value || "";
  }, setAttributeNS: function(e11, t4, i6) {
    var s6 = this.ownerDocument.createAttributeNS(e11, t4);
    s6.value = s6.nodeValue = "" + i6, this.setAttributeNode(s6);
  }, getAttributeNodeNS: function(e11, t4) {
    return this.attributes.getNamedItemNS(e11, t4);
  }, getElementsByTagName: function(e11) {
    return new D2(this, function(t4) {
      var i6 = [];
      return F2(t4, function(s6) {
        s6 === t4 || s6.nodeType != d2 || "*" !== e11 && s6.tagName != e11 || i6.push(s6);
      }), i6;
    });
  }, getElementsByTagNameNS: function(e11, t4) {
    return new D2(this, function(i6) {
      var s6 = [];
      return F2(i6, function(n5) {
        n5 === i6 || n5.nodeType !== d2 || "*" !== e11 && n5.namespaceURI !== e11 || "*" !== t4 && n5.localName != t4 || s6.push(n5);
      }), s6;
    });
  } }, q3.prototype.getElementsByTagName = se3.prototype.getElementsByTagName, q3.prototype.getElementsByTagNameNS = se3.prototype.getElementsByTagNameNS, h3(se3, U2), ne3.prototype.nodeType = c5, h3(ne3, U2), re3.prototype = { data: "", substringData: function(e11, t4) {
    return this.data.substring(e11, e11 + t4);
  }, appendData: function(e11) {
    e11 = this.data + e11, this.nodeValue = this.data = e11, this.length = e11.length;
  }, insertData: function(e11, t4) {
    this.replaceData(e11, 0, t4);
  }, appendChild: function(e11) {
    throw new Error(w5[C4]);
  }, deleteData: function(e11, t4) {
    this.replaceData(e11, t4, "");
  }, replaceData: function(e11, t4, i6) {
    i6 = this.data.substring(0, e11) + i6 + this.data.substring(e11 + t4), this.nodeValue = this.data = i6, this.length = i6.length;
  } }, h3(re3, U2), ae3.prototype = { nodeName: "#text", nodeType: p5, splitText: function(e11) {
    var t4 = this.data, i6 = t4.substring(e11);
    t4 = t4.substring(0, e11), this.data = this.nodeValue = t4, this.length = t4.length;
    var s6 = this.ownerDocument.createTextNode(i6);
    return this.parentNode && this.parentNode.insertBefore(s6, this.nextSibling), s6;
  } }, h3(ae3, re3), oe3.prototype = { nodeName: "#comment", nodeType: _3 }, h3(oe3, re3), le3.prototype = { nodeName: "#cdata-section", nodeType: m7 }, h3(le3, re3), he2.prototype.nodeType = b4, h3(he2, U2), ue3.prototype.nodeType = S4, h3(ue3, U2), de2.prototype.nodeType = f3, h3(de2, U2), ce2.prototype.nodeType = g2, h3(ce2, U2), pe3.prototype.nodeName = "#document-fragment", pe3.prototype.nodeType = T2, h3(pe3, U2), me3.prototype.nodeType = y4, h3(me3, U2), ge2.prototype.serializeToString = function(e11, t4, i6) {
    return fe2.call(e11, t4, i6);
  }, U2.prototype.toString = fe2;
  try {
    if (Object.defineProperty) {
      let we2 = function(e11) {
        switch (e11.nodeType) {
          case d2:
          case T2:
            var t4 = [];
            for (e11 = e11.firstChild; e11; ) 7 !== e11.nodeType && 8 !== e11.nodeType && t4.push(we2(e11)), e11 = e11.nextSibling;
            return t4.join("");
          default:
            return e11.nodeValue;
        }
      };
      Object.defineProperty(D2.prototype, "length", { get: function() {
        return P3(this), this.$$length;
      } }), Object.defineProperty(U2.prototype, "textContent", { get: function() {
        return we2(this);
      }, set: function(e11) {
        switch (this.nodeType) {
          case d2:
          case T2:
            for (; this.firstChild; ) this.removeChild(this.firstChild);
            (e11 || String(e11)) && this.appendChild(this.ownerDocument.createTextNode(e11));
            break;
          default:
            this.data = e11, this.value = e11, this.nodeValue = e11;
        }
      } }), Se2 = function(e11, t4, i6) {
        e11["$$" + t4] = i6;
      };
    }
  } catch (Ee2) {
  }
  return Mt.DocumentType = he2, Mt.DOMException = x3, Mt.DOMImplementation = M3, Mt.Element = se3, Mt.Node = U2, Mt.NodeList = A3, Mt.XMLSerializer = ge2, Mt;
}
var qt;
var jt = {};
var $t = {};
function Ht() {
  return qt || (qt = 1, e10 = $t, t3 = Bt().freeze, e10.XML_ENTITIES = t3({ amp: "&", apos: "'", gt: ">", lt: "<", quot: '"' }), e10.HTML_ENTITIES = t3({ Aacute: "Á", aacute: "á", Abreve: "Ă", abreve: "ă", ac: "∾", acd: "∿", acE: "∾̳", Acirc: "Â", acirc: "â", acute: "´", Acy: "А", acy: "а", AElig: "Æ", aelig: "æ", af: "⁡", Afr: "𝔄", afr: "𝔞", Agrave: "À", agrave: "à", alefsym: "ℵ", aleph: "ℵ", Alpha: "Α", alpha: "α", Amacr: "Ā", amacr: "ā", amalg: "⨿", AMP: "&", amp: "&", And: "⩓", and: "∧", andand: "⩕", andd: "⩜", andslope: "⩘", andv: "⩚", ang: "∠", ange: "⦤", angle: "∠", angmsd: "∡", angmsdaa: "⦨", angmsdab: "⦩", angmsdac: "⦪", angmsdad: "⦫", angmsdae: "⦬", angmsdaf: "⦭", angmsdag: "⦮", angmsdah: "⦯", angrt: "∟", angrtvb: "⊾", angrtvbd: "⦝", angsph: "∢", angst: "Å", angzarr: "⍼", Aogon: "Ą", aogon: "ą", Aopf: "𝔸", aopf: "𝕒", ap: "≈", apacir: "⩯", apE: "⩰", ape: "≊", apid: "≋", apos: "'", ApplyFunction: "⁡", approx: "≈", approxeq: "≊", Aring: "Å", aring: "å", Ascr: "𝒜", ascr: "𝒶", Assign: "≔", ast: "*", asymp: "≈", asympeq: "≍", Atilde: "Ã", atilde: "ã", Auml: "Ä", auml: "ä", awconint: "∳", awint: "⨑", backcong: "≌", backepsilon: "϶", backprime: "‵", backsim: "∽", backsimeq: "⋍", Backslash: "∖", Barv: "⫧", barvee: "⊽", Barwed: "⌆", barwed: "⌅", barwedge: "⌅", bbrk: "⎵", bbrktbrk: "⎶", bcong: "≌", Bcy: "Б", bcy: "б", bdquo: "„", becaus: "∵", Because: "∵", because: "∵", bemptyv: "⦰", bepsi: "϶", bernou: "ℬ", Bernoullis: "ℬ", Beta: "Β", beta: "β", beth: "ℶ", between: "≬", Bfr: "𝔅", bfr: "𝔟", bigcap: "⋂", bigcirc: "◯", bigcup: "⋃", bigodot: "⨀", bigoplus: "⨁", bigotimes: "⨂", bigsqcup: "⨆", bigstar: "★", bigtriangledown: "▽", bigtriangleup: "△", biguplus: "⨄", bigvee: "⋁", bigwedge: "⋀", bkarow: "⤍", blacklozenge: "⧫", blacksquare: "▪", blacktriangle: "▴", blacktriangledown: "▾", blacktriangleleft: "◂", blacktriangleright: "▸", blank: "␣", blk12: "▒", blk14: "░", blk34: "▓", block: "█", bne: "=⃥", bnequiv: "≡⃥", bNot: "⫭", bnot: "⌐", Bopf: "𝔹", bopf: "𝕓", bot: "⊥", bottom: "⊥", bowtie: "⋈", boxbox: "⧉", boxDL: "╗", boxDl: "╖", boxdL: "╕", boxdl: "┐", boxDR: "╔", boxDr: "╓", boxdR: "╒", boxdr: "┌", boxH: "═", boxh: "─", boxHD: "╦", boxHd: "╤", boxhD: "╥", boxhd: "┬", boxHU: "╩", boxHu: "╧", boxhU: "╨", boxhu: "┴", boxminus: "⊟", boxplus: "⊞", boxtimes: "⊠", boxUL: "╝", boxUl: "╜", boxuL: "╛", boxul: "┘", boxUR: "╚", boxUr: "╙", boxuR: "╘", boxur: "└", boxV: "║", boxv: "│", boxVH: "╬", boxVh: "╫", boxvH: "╪", boxvh: "┼", boxVL: "╣", boxVl: "╢", boxvL: "╡", boxvl: "┤", boxVR: "╠", boxVr: "╟", boxvR: "╞", boxvr: "├", bprime: "‵", Breve: "˘", breve: "˘", brvbar: "¦", Bscr: "ℬ", bscr: "𝒷", bsemi: "⁏", bsim: "∽", bsime: "⋍", bsol: "\\", bsolb: "⧅", bsolhsub: "⟈", bull: "•", bullet: "•", bump: "≎", bumpE: "⪮", bumpe: "≏", Bumpeq: "≎", bumpeq: "≏", Cacute: "Ć", cacute: "ć", Cap: "⋒", cap: "∩", capand: "⩄", capbrcup: "⩉", capcap: "⩋", capcup: "⩇", capdot: "⩀", CapitalDifferentialD: "ⅅ", caps: "∩︀", caret: "⁁", caron: "ˇ", Cayleys: "ℭ", ccaps: "⩍", Ccaron: "Č", ccaron: "č", Ccedil: "Ç", ccedil: "ç", Ccirc: "Ĉ", ccirc: "ĉ", Cconint: "∰", ccups: "⩌", ccupssm: "⩐", Cdot: "Ċ", cdot: "ċ", cedil: "¸", Cedilla: "¸", cemptyv: "⦲", cent: "¢", CenterDot: "·", centerdot: "·", Cfr: "ℭ", cfr: "𝔠", CHcy: "Ч", chcy: "ч", check: "✓", checkmark: "✓", Chi: "Χ", chi: "χ", cir: "○", circ: "ˆ", circeq: "≗", circlearrowleft: "↺", circlearrowright: "↻", circledast: "⊛", circledcirc: "⊚", circleddash: "⊝", CircleDot: "⊙", circledR: "®", circledS: "Ⓢ", CircleMinus: "⊖", CirclePlus: "⊕", CircleTimes: "⊗", cirE: "⧃", cire: "≗", cirfnint: "⨐", cirmid: "⫯", cirscir: "⧂", ClockwiseContourIntegral: "∲", CloseCurlyDoubleQuote: "”", CloseCurlyQuote: "’", clubs: "♣", clubsuit: "♣", Colon: "∷", colon: ":", Colone: "⩴", colone: "≔", coloneq: "≔", comma: ",", commat: "@", comp: "∁", compfn: "∘", complement: "∁", complexes: "ℂ", cong: "≅", congdot: "⩭", Congruent: "≡", Conint: "∯", conint: "∮", ContourIntegral: "∮", Copf: "ℂ", copf: "𝕔", coprod: "∐", Coproduct: "∐", COPY: "©", copy: "©", copysr: "℗", CounterClockwiseContourIntegral: "∳", crarr: "↵", Cross: "⨯", cross: "✗", Cscr: "𝒞", cscr: "𝒸", csub: "⫏", csube: "⫑", csup: "⫐", csupe: "⫒", ctdot: "⋯", cudarrl: "⤸", cudarrr: "⤵", cuepr: "⋞", cuesc: "⋟", cularr: "↶", cularrp: "⤽", Cup: "⋓", cup: "∪", cupbrcap: "⩈", CupCap: "≍", cupcap: "⩆", cupcup: "⩊", cupdot: "⊍", cupor: "⩅", cups: "∪︀", curarr: "↷", curarrm: "⤼", curlyeqprec: "⋞", curlyeqsucc: "⋟", curlyvee: "⋎", curlywedge: "⋏", curren: "¤", curvearrowleft: "↶", curvearrowright: "↷", cuvee: "⋎", cuwed: "⋏", cwconint: "∲", cwint: "∱", cylcty: "⌭", Dagger: "‡", dagger: "†", daleth: "ℸ", Darr: "↡", dArr: "⇓", darr: "↓", dash: "‐", Dashv: "⫤", dashv: "⊣", dbkarow: "⤏", dblac: "˝", Dcaron: "Ď", dcaron: "ď", Dcy: "Д", dcy: "д", DD: "ⅅ", dd: "ⅆ", ddagger: "‡", ddarr: "⇊", DDotrahd: "⤑", ddotseq: "⩷", deg: "°", Del: "∇", Delta: "Δ", delta: "δ", demptyv: "⦱", dfisht: "⥿", Dfr: "𝔇", dfr: "𝔡", dHar: "⥥", dharl: "⇃", dharr: "⇂", DiacriticalAcute: "´", DiacriticalDot: "˙", DiacriticalDoubleAcute: "˝", DiacriticalGrave: "`", DiacriticalTilde: "˜", diam: "⋄", Diamond: "⋄", diamond: "⋄", diamondsuit: "♦", diams: "♦", die: "¨", DifferentialD: "ⅆ", digamma: "ϝ", disin: "⋲", div: "÷", divide: "÷", divideontimes: "⋇", divonx: "⋇", DJcy: "Ђ", djcy: "ђ", dlcorn: "⌞", dlcrop: "⌍", dollar: "$", Dopf: "𝔻", dopf: "𝕕", Dot: "¨", dot: "˙", DotDot: "⃜", doteq: "≐", doteqdot: "≑", DotEqual: "≐", dotminus: "∸", dotplus: "∔", dotsquare: "⊡", doublebarwedge: "⌆", DoubleContourIntegral: "∯", DoubleDot: "¨", DoubleDownArrow: "⇓", DoubleLeftArrow: "⇐", DoubleLeftRightArrow: "⇔", DoubleLeftTee: "⫤", DoubleLongLeftArrow: "⟸", DoubleLongLeftRightArrow: "⟺", DoubleLongRightArrow: "⟹", DoubleRightArrow: "⇒", DoubleRightTee: "⊨", DoubleUpArrow: "⇑", DoubleUpDownArrow: "⇕", DoubleVerticalBar: "∥", DownArrow: "↓", Downarrow: "⇓", downarrow: "↓", DownArrowBar: "⤓", DownArrowUpArrow: "⇵", DownBreve: "̑", downdownarrows: "⇊", downharpoonleft: "⇃", downharpoonright: "⇂", DownLeftRightVector: "⥐", DownLeftTeeVector: "⥞", DownLeftVector: "↽", DownLeftVectorBar: "⥖", DownRightTeeVector: "⥟", DownRightVector: "⇁", DownRightVectorBar: "⥗", DownTee: "⊤", DownTeeArrow: "↧", drbkarow: "⤐", drcorn: "⌟", drcrop: "⌌", Dscr: "𝒟", dscr: "𝒹", DScy: "Ѕ", dscy: "ѕ", dsol: "⧶", Dstrok: "Đ", dstrok: "đ", dtdot: "⋱", dtri: "▿", dtrif: "▾", duarr: "⇵", duhar: "⥯", dwangle: "⦦", DZcy: "Џ", dzcy: "џ", dzigrarr: "⟿", Eacute: "É", eacute: "é", easter: "⩮", Ecaron: "Ě", ecaron: "ě", ecir: "≖", Ecirc: "Ê", ecirc: "ê", ecolon: "≕", Ecy: "Э", ecy: "э", eDDot: "⩷", Edot: "Ė", eDot: "≑", edot: "ė", ee: "ⅇ", efDot: "≒", Efr: "𝔈", efr: "𝔢", eg: "⪚", Egrave: "È", egrave: "è", egs: "⪖", egsdot: "⪘", el: "⪙", Element: "∈", elinters: "⏧", ell: "ℓ", els: "⪕", elsdot: "⪗", Emacr: "Ē", emacr: "ē", empty: "∅", emptyset: "∅", EmptySmallSquare: "◻", emptyv: "∅", EmptyVerySmallSquare: "▫", emsp: " ", emsp13: " ", emsp14: " ", ENG: "Ŋ", eng: "ŋ", ensp: " ", Eogon: "Ę", eogon: "ę", Eopf: "𝔼", eopf: "𝕖", epar: "⋕", eparsl: "⧣", eplus: "⩱", epsi: "ε", Epsilon: "Ε", epsilon: "ε", epsiv: "ϵ", eqcirc: "≖", eqcolon: "≕", eqsim: "≂", eqslantgtr: "⪖", eqslantless: "⪕", Equal: "⩵", equals: "=", EqualTilde: "≂", equest: "≟", Equilibrium: "⇌", equiv: "≡", equivDD: "⩸", eqvparsl: "⧥", erarr: "⥱", erDot: "≓", Escr: "ℰ", escr: "ℯ", esdot: "≐", Esim: "⩳", esim: "≂", Eta: "Η", eta: "η", ETH: "Ð", eth: "ð", Euml: "Ë", euml: "ë", euro: "€", excl: "!", exist: "∃", Exists: "∃", expectation: "ℰ", ExponentialE: "ⅇ", exponentiale: "ⅇ", fallingdotseq: "≒", Fcy: "Ф", fcy: "ф", female: "♀", ffilig: "ﬃ", fflig: "ﬀ", ffllig: "ﬄ", Ffr: "𝔉", ffr: "𝔣", filig: "ﬁ", FilledSmallSquare: "◼", FilledVerySmallSquare: "▪", fjlig: "fj", flat: "♭", fllig: "ﬂ", fltns: "▱", fnof: "ƒ", Fopf: "𝔽", fopf: "𝕗", ForAll: "∀", forall: "∀", fork: "⋔", forkv: "⫙", Fouriertrf: "ℱ", fpartint: "⨍", frac12: "½", frac13: "⅓", frac14: "¼", frac15: "⅕", frac16: "⅙", frac18: "⅛", frac23: "⅔", frac25: "⅖", frac34: "¾", frac35: "⅗", frac38: "⅜", frac45: "⅘", frac56: "⅚", frac58: "⅝", frac78: "⅞", frasl: "⁄", frown: "⌢", Fscr: "ℱ", fscr: "𝒻", gacute: "ǵ", Gamma: "Γ", gamma: "γ", Gammad: "Ϝ", gammad: "ϝ", gap: "⪆", Gbreve: "Ğ", gbreve: "ğ", Gcedil: "Ģ", Gcirc: "Ĝ", gcirc: "ĝ", Gcy: "Г", gcy: "г", Gdot: "Ġ", gdot: "ġ", gE: "≧", ge: "≥", gEl: "⪌", gel: "⋛", geq: "≥", geqq: "≧", geqslant: "⩾", ges: "⩾", gescc: "⪩", gesdot: "⪀", gesdoto: "⪂", gesdotol: "⪄", gesl: "⋛︀", gesles: "⪔", Gfr: "𝔊", gfr: "𝔤", Gg: "⋙", gg: "≫", ggg: "⋙", gimel: "ℷ", GJcy: "Ѓ", gjcy: "ѓ", gl: "≷", gla: "⪥", glE: "⪒", glj: "⪤", gnap: "⪊", gnapprox: "⪊", gnE: "≩", gne: "⪈", gneq: "⪈", gneqq: "≩", gnsim: "⋧", Gopf: "𝔾", gopf: "𝕘", grave: "`", GreaterEqual: "≥", GreaterEqualLess: "⋛", GreaterFullEqual: "≧", GreaterGreater: "⪢", GreaterLess: "≷", GreaterSlantEqual: "⩾", GreaterTilde: "≳", Gscr: "𝒢", gscr: "ℊ", gsim: "≳", gsime: "⪎", gsiml: "⪐", Gt: "≫", GT: ">", gt: ">", gtcc: "⪧", gtcir: "⩺", gtdot: "⋗", gtlPar: "⦕", gtquest: "⩼", gtrapprox: "⪆", gtrarr: "⥸", gtrdot: "⋗", gtreqless: "⋛", gtreqqless: "⪌", gtrless: "≷", gtrsim: "≳", gvertneqq: "≩︀", gvnE: "≩︀", Hacek: "ˇ", hairsp: " ", half: "½", hamilt: "ℋ", HARDcy: "Ъ", hardcy: "ъ", hArr: "⇔", harr: "↔", harrcir: "⥈", harrw: "↭", Hat: "^", hbar: "ℏ", Hcirc: "Ĥ", hcirc: "ĥ", hearts: "♥", heartsuit: "♥", hellip: "…", hercon: "⊹", Hfr: "ℌ", hfr: "𝔥", HilbertSpace: "ℋ", hksearow: "⤥", hkswarow: "⤦", hoarr: "⇿", homtht: "∻", hookleftarrow: "↩", hookrightarrow: "↪", Hopf: "ℍ", hopf: "𝕙", horbar: "―", HorizontalLine: "─", Hscr: "ℋ", hscr: "𝒽", hslash: "ℏ", Hstrok: "Ħ", hstrok: "ħ", HumpDownHump: "≎", HumpEqual: "≏", hybull: "⁃", hyphen: "‐", Iacute: "Í", iacute: "í", ic: "⁣", Icirc: "Î", icirc: "î", Icy: "И", icy: "и", Idot: "İ", IEcy: "Е", iecy: "е", iexcl: "¡", iff: "⇔", Ifr: "ℑ", ifr: "𝔦", Igrave: "Ì", igrave: "ì", ii: "ⅈ", iiiint: "⨌", iiint: "∭", iinfin: "⧜", iiota: "℩", IJlig: "Ĳ", ijlig: "ĳ", Im: "ℑ", Imacr: "Ī", imacr: "ī", image: "ℑ", ImaginaryI: "ⅈ", imagline: "ℐ", imagpart: "ℑ", imath: "ı", imof: "⊷", imped: "Ƶ", Implies: "⇒", in: "∈", incare: "℅", infin: "∞", infintie: "⧝", inodot: "ı", Int: "∬", int: "∫", intcal: "⊺", integers: "ℤ", Integral: "∫", intercal: "⊺", Intersection: "⋂", intlarhk: "⨗", intprod: "⨼", InvisibleComma: "⁣", InvisibleTimes: "⁢", IOcy: "Ё", iocy: "ё", Iogon: "Į", iogon: "į", Iopf: "𝕀", iopf: "𝕚", Iota: "Ι", iota: "ι", iprod: "⨼", iquest: "¿", Iscr: "ℐ", iscr: "𝒾", isin: "∈", isindot: "⋵", isinE: "⋹", isins: "⋴", isinsv: "⋳", isinv: "∈", it: "⁢", Itilde: "Ĩ", itilde: "ĩ", Iukcy: "І", iukcy: "і", Iuml: "Ï", iuml: "ï", Jcirc: "Ĵ", jcirc: "ĵ", Jcy: "Й", jcy: "й", Jfr: "𝔍", jfr: "𝔧", jmath: "ȷ", Jopf: "𝕁", jopf: "𝕛", Jscr: "𝒥", jscr: "𝒿", Jsercy: "Ј", jsercy: "ј", Jukcy: "Є", jukcy: "є", Kappa: "Κ", kappa: "κ", kappav: "ϰ", Kcedil: "Ķ", kcedil: "ķ", Kcy: "К", kcy: "к", Kfr: "𝔎", kfr: "𝔨", kgreen: "ĸ", KHcy: "Х", khcy: "х", KJcy: "Ќ", kjcy: "ќ", Kopf: "𝕂", kopf: "𝕜", Kscr: "𝒦", kscr: "𝓀", lAarr: "⇚", Lacute: "Ĺ", lacute: "ĺ", laemptyv: "⦴", lagran: "ℒ", Lambda: "Λ", lambda: "λ", Lang: "⟪", lang: "⟨", langd: "⦑", langle: "⟨", lap: "⪅", Laplacetrf: "ℒ", laquo: "«", Larr: "↞", lArr: "⇐", larr: "←", larrb: "⇤", larrbfs: "⤟", larrfs: "⤝", larrhk: "↩", larrlp: "↫", larrpl: "⤹", larrsim: "⥳", larrtl: "↢", lat: "⪫", lAtail: "⤛", latail: "⤙", late: "⪭", lates: "⪭︀", lBarr: "⤎", lbarr: "⤌", lbbrk: "❲", lbrace: "{", lbrack: "[", lbrke: "⦋", lbrksld: "⦏", lbrkslu: "⦍", Lcaron: "Ľ", lcaron: "ľ", Lcedil: "Ļ", lcedil: "ļ", lceil: "⌈", lcub: "{", Lcy: "Л", lcy: "л", ldca: "⤶", ldquo: "“", ldquor: "„", ldrdhar: "⥧", ldrushar: "⥋", ldsh: "↲", lE: "≦", le: "≤", LeftAngleBracket: "⟨", LeftArrow: "←", Leftarrow: "⇐", leftarrow: "←", LeftArrowBar: "⇤", LeftArrowRightArrow: "⇆", leftarrowtail: "↢", LeftCeiling: "⌈", LeftDoubleBracket: "⟦", LeftDownTeeVector: "⥡", LeftDownVector: "⇃", LeftDownVectorBar: "⥙", LeftFloor: "⌊", leftharpoondown: "↽", leftharpoonup: "↼", leftleftarrows: "⇇", LeftRightArrow: "↔", Leftrightarrow: "⇔", leftrightarrow: "↔", leftrightarrows: "⇆", leftrightharpoons: "⇋", leftrightsquigarrow: "↭", LeftRightVector: "⥎", LeftTee: "⊣", LeftTeeArrow: "↤", LeftTeeVector: "⥚", leftthreetimes: "⋋", LeftTriangle: "⊲", LeftTriangleBar: "⧏", LeftTriangleEqual: "⊴", LeftUpDownVector: "⥑", LeftUpTeeVector: "⥠", LeftUpVector: "↿", LeftUpVectorBar: "⥘", LeftVector: "↼", LeftVectorBar: "⥒", lEg: "⪋", leg: "⋚", leq: "≤", leqq: "≦", leqslant: "⩽", les: "⩽", lescc: "⪨", lesdot: "⩿", lesdoto: "⪁", lesdotor: "⪃", lesg: "⋚︀", lesges: "⪓", lessapprox: "⪅", lessdot: "⋖", lesseqgtr: "⋚", lesseqqgtr: "⪋", LessEqualGreater: "⋚", LessFullEqual: "≦", LessGreater: "≶", lessgtr: "≶", LessLess: "⪡", lesssim: "≲", LessSlantEqual: "⩽", LessTilde: "≲", lfisht: "⥼", lfloor: "⌊", Lfr: "𝔏", lfr: "𝔩", lg: "≶", lgE: "⪑", lHar: "⥢", lhard: "↽", lharu: "↼", lharul: "⥪", lhblk: "▄", LJcy: "Љ", ljcy: "љ", Ll: "⋘", ll: "≪", llarr: "⇇", llcorner: "⌞", Lleftarrow: "⇚", llhard: "⥫", lltri: "◺", Lmidot: "Ŀ", lmidot: "ŀ", lmoust: "⎰", lmoustache: "⎰", lnap: "⪉", lnapprox: "⪉", lnE: "≨", lne: "⪇", lneq: "⪇", lneqq: "≨", lnsim: "⋦", loang: "⟬", loarr: "⇽", lobrk: "⟦", LongLeftArrow: "⟵", Longleftarrow: "⟸", longleftarrow: "⟵", LongLeftRightArrow: "⟷", Longleftrightarrow: "⟺", longleftrightarrow: "⟷", longmapsto: "⟼", LongRightArrow: "⟶", Longrightarrow: "⟹", longrightarrow: "⟶", looparrowleft: "↫", looparrowright: "↬", lopar: "⦅", Lopf: "𝕃", lopf: "𝕝", loplus: "⨭", lotimes: "⨴", lowast: "∗", lowbar: "_", LowerLeftArrow: "↙", LowerRightArrow: "↘", loz: "◊", lozenge: "◊", lozf: "⧫", lpar: "(", lparlt: "⦓", lrarr: "⇆", lrcorner: "⌟", lrhar: "⇋", lrhard: "⥭", lrm: "‎", lrtri: "⊿", lsaquo: "‹", Lscr: "ℒ", lscr: "𝓁", Lsh: "↰", lsh: "↰", lsim: "≲", lsime: "⪍", lsimg: "⪏", lsqb: "[", lsquo: "‘", lsquor: "‚", Lstrok: "Ł", lstrok: "ł", Lt: "≪", LT: "<", lt: "<", ltcc: "⪦", ltcir: "⩹", ltdot: "⋖", lthree: "⋋", ltimes: "⋉", ltlarr: "⥶", ltquest: "⩻", ltri: "◃", ltrie: "⊴", ltrif: "◂", ltrPar: "⦖", lurdshar: "⥊", luruhar: "⥦", lvertneqq: "≨︀", lvnE: "≨︀", macr: "¯", male: "♂", malt: "✠", maltese: "✠", Map: "⤅", map: "↦", mapsto: "↦", mapstodown: "↧", mapstoleft: "↤", mapstoup: "↥", marker: "▮", mcomma: "⨩", Mcy: "М", mcy: "м", mdash: "—", mDDot: "∺", measuredangle: "∡", MediumSpace: " ", Mellintrf: "ℳ", Mfr: "𝔐", mfr: "𝔪", mho: "℧", micro: "µ", mid: "∣", midast: "*", midcir: "⫰", middot: "·", minus: "−", minusb: "⊟", minusd: "∸", minusdu: "⨪", MinusPlus: "∓", mlcp: "⫛", mldr: "…", mnplus: "∓", models: "⊧", Mopf: "𝕄", mopf: "𝕞", mp: "∓", Mscr: "ℳ", mscr: "𝓂", mstpos: "∾", Mu: "Μ", mu: "μ", multimap: "⊸", mumap: "⊸", nabla: "∇", Nacute: "Ń", nacute: "ń", nang: "∠⃒", nap: "≉", napE: "⩰̸", napid: "≋̸", napos: "ŉ", napprox: "≉", natur: "♮", natural: "♮", naturals: "ℕ", nbsp: " ", nbump: "≎̸", nbumpe: "≏̸", ncap: "⩃", Ncaron: "Ň", ncaron: "ň", Ncedil: "Ņ", ncedil: "ņ", ncong: "≇", ncongdot: "⩭̸", ncup: "⩂", Ncy: "Н", ncy: "н", ndash: "–", ne: "≠", nearhk: "⤤", neArr: "⇗", nearr: "↗", nearrow: "↗", nedot: "≐̸", NegativeMediumSpace: "​", NegativeThickSpace: "​", NegativeThinSpace: "​", NegativeVeryThinSpace: "​", nequiv: "≢", nesear: "⤨", nesim: "≂̸", NestedGreaterGreater: "≫", NestedLessLess: "≪", NewLine: "\n", nexist: "∄", nexists: "∄", Nfr: "𝔑", nfr: "𝔫", ngE: "≧̸", nge: "≱", ngeq: "≱", ngeqq: "≧̸", ngeqslant: "⩾̸", nges: "⩾̸", nGg: "⋙̸", ngsim: "≵", nGt: "≫⃒", ngt: "≯", ngtr: "≯", nGtv: "≫̸", nhArr: "⇎", nharr: "↮", nhpar: "⫲", ni: "∋", nis: "⋼", nisd: "⋺", niv: "∋", NJcy: "Њ", njcy: "њ", nlArr: "⇍", nlarr: "↚", nldr: "‥", nlE: "≦̸", nle: "≰", nLeftarrow: "⇍", nleftarrow: "↚", nLeftrightarrow: "⇎", nleftrightarrow: "↮", nleq: "≰", nleqq: "≦̸", nleqslant: "⩽̸", nles: "⩽̸", nless: "≮", nLl: "⋘̸", nlsim: "≴", nLt: "≪⃒", nlt: "≮", nltri: "⋪", nltrie: "⋬", nLtv: "≪̸", nmid: "∤", NoBreak: "⁠", NonBreakingSpace: " ", Nopf: "ℕ", nopf: "𝕟", Not: "⫬", not: "¬", NotCongruent: "≢", NotCupCap: "≭", NotDoubleVerticalBar: "∦", NotElement: "∉", NotEqual: "≠", NotEqualTilde: "≂̸", NotExists: "∄", NotGreater: "≯", NotGreaterEqual: "≱", NotGreaterFullEqual: "≧̸", NotGreaterGreater: "≫̸", NotGreaterLess: "≹", NotGreaterSlantEqual: "⩾̸", NotGreaterTilde: "≵", NotHumpDownHump: "≎̸", NotHumpEqual: "≏̸", notin: "∉", notindot: "⋵̸", notinE: "⋹̸", notinva: "∉", notinvb: "⋷", notinvc: "⋶", NotLeftTriangle: "⋪", NotLeftTriangleBar: "⧏̸", NotLeftTriangleEqual: "⋬", NotLess: "≮", NotLessEqual: "≰", NotLessGreater: "≸", NotLessLess: "≪̸", NotLessSlantEqual: "⩽̸", NotLessTilde: "≴", NotNestedGreaterGreater: "⪢̸", NotNestedLessLess: "⪡̸", notni: "∌", notniva: "∌", notnivb: "⋾", notnivc: "⋽", NotPrecedes: "⊀", NotPrecedesEqual: "⪯̸", NotPrecedesSlantEqual: "⋠", NotReverseElement: "∌", NotRightTriangle: "⋫", NotRightTriangleBar: "⧐̸", NotRightTriangleEqual: "⋭", NotSquareSubset: "⊏̸", NotSquareSubsetEqual: "⋢", NotSquareSuperset: "⊐̸", NotSquareSupersetEqual: "⋣", NotSubset: "⊂⃒", NotSubsetEqual: "⊈", NotSucceeds: "⊁", NotSucceedsEqual: "⪰̸", NotSucceedsSlantEqual: "⋡", NotSucceedsTilde: "≿̸", NotSuperset: "⊃⃒", NotSupersetEqual: "⊉", NotTilde: "≁", NotTildeEqual: "≄", NotTildeFullEqual: "≇", NotTildeTilde: "≉", NotVerticalBar: "∤", npar: "∦", nparallel: "∦", nparsl: "⫽⃥", npart: "∂̸", npolint: "⨔", npr: "⊀", nprcue: "⋠", npre: "⪯̸", nprec: "⊀", npreceq: "⪯̸", nrArr: "⇏", nrarr: "↛", nrarrc: "⤳̸", nrarrw: "↝̸", nRightarrow: "⇏", nrightarrow: "↛", nrtri: "⋫", nrtrie: "⋭", nsc: "⊁", nsccue: "⋡", nsce: "⪰̸", Nscr: "𝒩", nscr: "𝓃", nshortmid: "∤", nshortparallel: "∦", nsim: "≁", nsime: "≄", nsimeq: "≄", nsmid: "∤", nspar: "∦", nsqsube: "⋢", nsqsupe: "⋣", nsub: "⊄", nsubE: "⫅̸", nsube: "⊈", nsubset: "⊂⃒", nsubseteq: "⊈", nsubseteqq: "⫅̸", nsucc: "⊁", nsucceq: "⪰̸", nsup: "⊅", nsupE: "⫆̸", nsupe: "⊉", nsupset: "⊃⃒", nsupseteq: "⊉", nsupseteqq: "⫆̸", ntgl: "≹", Ntilde: "Ñ", ntilde: "ñ", ntlg: "≸", ntriangleleft: "⋪", ntrianglelefteq: "⋬", ntriangleright: "⋫", ntrianglerighteq: "⋭", Nu: "Ν", nu: "ν", num: "#", numero: "№", numsp: " ", nvap: "≍⃒", nVDash: "⊯", nVdash: "⊮", nvDash: "⊭", nvdash: "⊬", nvge: "≥⃒", nvgt: ">⃒", nvHarr: "⤄", nvinfin: "⧞", nvlArr: "⤂", nvle: "≤⃒", nvlt: "<⃒", nvltrie: "⊴⃒", nvrArr: "⤃", nvrtrie: "⊵⃒", nvsim: "∼⃒", nwarhk: "⤣", nwArr: "⇖", nwarr: "↖", nwarrow: "↖", nwnear: "⤧", Oacute: "Ó", oacute: "ó", oast: "⊛", ocir: "⊚", Ocirc: "Ô", ocirc: "ô", Ocy: "О", ocy: "о", odash: "⊝", Odblac: "Ő", odblac: "ő", odiv: "⨸", odot: "⊙", odsold: "⦼", OElig: "Œ", oelig: "œ", ofcir: "⦿", Ofr: "𝔒", ofr: "𝔬", ogon: "˛", Ograve: "Ò", ograve: "ò", ogt: "⧁", ohbar: "⦵", ohm: "Ω", oint: "∮", olarr: "↺", olcir: "⦾", olcross: "⦻", oline: "‾", olt: "⧀", Omacr: "Ō", omacr: "ō", Omega: "Ω", omega: "ω", Omicron: "Ο", omicron: "ο", omid: "⦶", ominus: "⊖", Oopf: "𝕆", oopf: "𝕠", opar: "⦷", OpenCurlyDoubleQuote: "“", OpenCurlyQuote: "‘", operp: "⦹", oplus: "⊕", Or: "⩔", or: "∨", orarr: "↻", ord: "⩝", order: "ℴ", orderof: "ℴ", ordf: "ª", ordm: "º", origof: "⊶", oror: "⩖", orslope: "⩗", orv: "⩛", oS: "Ⓢ", Oscr: "𝒪", oscr: "ℴ", Oslash: "Ø", oslash: "ø", osol: "⊘", Otilde: "Õ", otilde: "õ", Otimes: "⨷", otimes: "⊗", otimesas: "⨶", Ouml: "Ö", ouml: "ö", ovbar: "⌽", OverBar: "‾", OverBrace: "⏞", OverBracket: "⎴", OverParenthesis: "⏜", par: "∥", para: "¶", parallel: "∥", parsim: "⫳", parsl: "⫽", part: "∂", PartialD: "∂", Pcy: "П", pcy: "п", percnt: "%", period: ".", permil: "‰", perp: "⊥", pertenk: "‱", Pfr: "𝔓", pfr: "𝔭", Phi: "Φ", phi: "φ", phiv: "ϕ", phmmat: "ℳ", phone: "☎", Pi: "Π", pi: "π", pitchfork: "⋔", piv: "ϖ", planck: "ℏ", planckh: "ℎ", plankv: "ℏ", plus: "+", plusacir: "⨣", plusb: "⊞", pluscir: "⨢", plusdo: "∔", plusdu: "⨥", pluse: "⩲", PlusMinus: "±", plusmn: "±", plussim: "⨦", plustwo: "⨧", pm: "±", Poincareplane: "ℌ", pointint: "⨕", Popf: "ℙ", popf: "𝕡", pound: "£", Pr: "⪻", pr: "≺", prap: "⪷", prcue: "≼", prE: "⪳", pre: "⪯", prec: "≺", precapprox: "⪷", preccurlyeq: "≼", Precedes: "≺", PrecedesEqual: "⪯", PrecedesSlantEqual: "≼", PrecedesTilde: "≾", preceq: "⪯", precnapprox: "⪹", precneqq: "⪵", precnsim: "⋨", precsim: "≾", Prime: "″", prime: "′", primes: "ℙ", prnap: "⪹", prnE: "⪵", prnsim: "⋨", prod: "∏", Product: "∏", profalar: "⌮", profline: "⌒", profsurf: "⌓", prop: "∝", Proportion: "∷", Proportional: "∝", propto: "∝", prsim: "≾", prurel: "⊰", Pscr: "𝒫", pscr: "𝓅", Psi: "Ψ", psi: "ψ", puncsp: " ", Qfr: "𝔔", qfr: "𝔮", qint: "⨌", Qopf: "ℚ", qopf: "𝕢", qprime: "⁗", Qscr: "𝒬", qscr: "𝓆", quaternions: "ℍ", quatint: "⨖", quest: "?", questeq: "≟", QUOT: '"', quot: '"', rAarr: "⇛", race: "∽̱", Racute: "Ŕ", racute: "ŕ", radic: "√", raemptyv: "⦳", Rang: "⟫", rang: "⟩", rangd: "⦒", range: "⦥", rangle: "⟩", raquo: "»", Rarr: "↠", rArr: "⇒", rarr: "→", rarrap: "⥵", rarrb: "⇥", rarrbfs: "⤠", rarrc: "⤳", rarrfs: "⤞", rarrhk: "↪", rarrlp: "↬", rarrpl: "⥅", rarrsim: "⥴", Rarrtl: "⤖", rarrtl: "↣", rarrw: "↝", rAtail: "⤜", ratail: "⤚", ratio: "∶", rationals: "ℚ", RBarr: "⤐", rBarr: "⤏", rbarr: "⤍", rbbrk: "❳", rbrace: "}", rbrack: "]", rbrke: "⦌", rbrksld: "⦎", rbrkslu: "⦐", Rcaron: "Ř", rcaron: "ř", Rcedil: "Ŗ", rcedil: "ŗ", rceil: "⌉", rcub: "}", Rcy: "Р", rcy: "р", rdca: "⤷", rdldhar: "⥩", rdquo: "”", rdquor: "”", rdsh: "↳", Re: "ℜ", real: "ℜ", realine: "ℛ", realpart: "ℜ", reals: "ℝ", rect: "▭", REG: "®", reg: "®", ReverseElement: "∋", ReverseEquilibrium: "⇋", ReverseUpEquilibrium: "⥯", rfisht: "⥽", rfloor: "⌋", Rfr: "ℜ", rfr: "𝔯", rHar: "⥤", rhard: "⇁", rharu: "⇀", rharul: "⥬", Rho: "Ρ", rho: "ρ", rhov: "ϱ", RightAngleBracket: "⟩", RightArrow: "→", Rightarrow: "⇒", rightarrow: "→", RightArrowBar: "⇥", RightArrowLeftArrow: "⇄", rightarrowtail: "↣", RightCeiling: "⌉", RightDoubleBracket: "⟧", RightDownTeeVector: "⥝", RightDownVector: "⇂", RightDownVectorBar: "⥕", RightFloor: "⌋", rightharpoondown: "⇁", rightharpoonup: "⇀", rightleftarrows: "⇄", rightleftharpoons: "⇌", rightrightarrows: "⇉", rightsquigarrow: "↝", RightTee: "⊢", RightTeeArrow: "↦", RightTeeVector: "⥛", rightthreetimes: "⋌", RightTriangle: "⊳", RightTriangleBar: "⧐", RightTriangleEqual: "⊵", RightUpDownVector: "⥏", RightUpTeeVector: "⥜", RightUpVector: "↾", RightUpVectorBar: "⥔", RightVector: "⇀", RightVectorBar: "⥓", ring: "˚", risingdotseq: "≓", rlarr: "⇄", rlhar: "⇌", rlm: "‏", rmoust: "⎱", rmoustache: "⎱", rnmid: "⫮", roang: "⟭", roarr: "⇾", robrk: "⟧", ropar: "⦆", Ropf: "ℝ", ropf: "𝕣", roplus: "⨮", rotimes: "⨵", RoundImplies: "⥰", rpar: ")", rpargt: "⦔", rppolint: "⨒", rrarr: "⇉", Rrightarrow: "⇛", rsaquo: "›", Rscr: "ℛ", rscr: "𝓇", Rsh: "↱", rsh: "↱", rsqb: "]", rsquo: "’", rsquor: "’", rthree: "⋌", rtimes: "⋊", rtri: "▹", rtrie: "⊵", rtrif: "▸", rtriltri: "⧎", RuleDelayed: "⧴", ruluhar: "⥨", rx: "℞", Sacute: "Ś", sacute: "ś", sbquo: "‚", Sc: "⪼", sc: "≻", scap: "⪸", Scaron: "Š", scaron: "š", sccue: "≽", scE: "⪴", sce: "⪰", Scedil: "Ş", scedil: "ş", Scirc: "Ŝ", scirc: "ŝ", scnap: "⪺", scnE: "⪶", scnsim: "⋩", scpolint: "⨓", scsim: "≿", Scy: "С", scy: "с", sdot: "⋅", sdotb: "⊡", sdote: "⩦", searhk: "⤥", seArr: "⇘", searr: "↘", searrow: "↘", sect: "§", semi: ";", seswar: "⤩", setminus: "∖", setmn: "∖", sext: "✶", Sfr: "𝔖", sfr: "𝔰", sfrown: "⌢", sharp: "♯", SHCHcy: "Щ", shchcy: "щ", SHcy: "Ш", shcy: "ш", ShortDownArrow: "↓", ShortLeftArrow: "←", shortmid: "∣", shortparallel: "∥", ShortRightArrow: "→", ShortUpArrow: "↑", shy: "­", Sigma: "Σ", sigma: "σ", sigmaf: "ς", sigmav: "ς", sim: "∼", simdot: "⩪", sime: "≃", simeq: "≃", simg: "⪞", simgE: "⪠", siml: "⪝", simlE: "⪟", simne: "≆", simplus: "⨤", simrarr: "⥲", slarr: "←", SmallCircle: "∘", smallsetminus: "∖", smashp: "⨳", smeparsl: "⧤", smid: "∣", smile: "⌣", smt: "⪪", smte: "⪬", smtes: "⪬︀", SOFTcy: "Ь", softcy: "ь", sol: "/", solb: "⧄", solbar: "⌿", Sopf: "𝕊", sopf: "𝕤", spades: "♠", spadesuit: "♠", spar: "∥", sqcap: "⊓", sqcaps: "⊓︀", sqcup: "⊔", sqcups: "⊔︀", Sqrt: "√", sqsub: "⊏", sqsube: "⊑", sqsubset: "⊏", sqsubseteq: "⊑", sqsup: "⊐", sqsupe: "⊒", sqsupset: "⊐", sqsupseteq: "⊒", squ: "□", Square: "□", square: "□", SquareIntersection: "⊓", SquareSubset: "⊏", SquareSubsetEqual: "⊑", SquareSuperset: "⊐", SquareSupersetEqual: "⊒", SquareUnion: "⊔", squarf: "▪", squf: "▪", srarr: "→", Sscr: "𝒮", sscr: "𝓈", ssetmn: "∖", ssmile: "⌣", sstarf: "⋆", Star: "⋆", star: "☆", starf: "★", straightepsilon: "ϵ", straightphi: "ϕ", strns: "¯", Sub: "⋐", sub: "⊂", subdot: "⪽", subE: "⫅", sube: "⊆", subedot: "⫃", submult: "⫁", subnE: "⫋", subne: "⊊", subplus: "⪿", subrarr: "⥹", Subset: "⋐", subset: "⊂", subseteq: "⊆", subseteqq: "⫅", SubsetEqual: "⊆", subsetneq: "⊊", subsetneqq: "⫋", subsim: "⫇", subsub: "⫕", subsup: "⫓", succ: "≻", succapprox: "⪸", succcurlyeq: "≽", Succeeds: "≻", SucceedsEqual: "⪰", SucceedsSlantEqual: "≽", SucceedsTilde: "≿", succeq: "⪰", succnapprox: "⪺", succneqq: "⪶", succnsim: "⋩", succsim: "≿", SuchThat: "∋", Sum: "∑", sum: "∑", sung: "♪", Sup: "⋑", sup: "⊃", sup1: "¹", sup2: "²", sup3: "³", supdot: "⪾", supdsub: "⫘", supE: "⫆", supe: "⊇", supedot: "⫄", Superset: "⊃", SupersetEqual: "⊇", suphsol: "⟉", suphsub: "⫗", suplarr: "⥻", supmult: "⫂", supnE: "⫌", supne: "⊋", supplus: "⫀", Supset: "⋑", supset: "⊃", supseteq: "⊇", supseteqq: "⫆", supsetneq: "⊋", supsetneqq: "⫌", supsim: "⫈", supsub: "⫔", supsup: "⫖", swarhk: "⤦", swArr: "⇙", swarr: "↙", swarrow: "↙", swnwar: "⤪", szlig: "ß", Tab: "	", target: "⌖", Tau: "Τ", tau: "τ", tbrk: "⎴", Tcaron: "Ť", tcaron: "ť", Tcedil: "Ţ", tcedil: "ţ", Tcy: "Т", tcy: "т", tdot: "⃛", telrec: "⌕", Tfr: "𝔗", tfr: "𝔱", there4: "∴", Therefore: "∴", therefore: "∴", Theta: "Θ", theta: "θ", thetasym: "ϑ", thetav: "ϑ", thickapprox: "≈", thicksim: "∼", ThickSpace: "  ", thinsp: " ", ThinSpace: " ", thkap: "≈", thksim: "∼", THORN: "Þ", thorn: "þ", Tilde: "∼", tilde: "˜", TildeEqual: "≃", TildeFullEqual: "≅", TildeTilde: "≈", times: "×", timesb: "⊠", timesbar: "⨱", timesd: "⨰", tint: "∭", toea: "⤨", top: "⊤", topbot: "⌶", topcir: "⫱", Topf: "𝕋", topf: "𝕥", topfork: "⫚", tosa: "⤩", tprime: "‴", TRADE: "™", trade: "™", triangle: "▵", triangledown: "▿", triangleleft: "◃", trianglelefteq: "⊴", triangleq: "≜", triangleright: "▹", trianglerighteq: "⊵", tridot: "◬", trie: "≜", triminus: "⨺", TripleDot: "⃛", triplus: "⨹", trisb: "⧍", tritime: "⨻", trpezium: "⏢", Tscr: "𝒯", tscr: "𝓉", TScy: "Ц", tscy: "ц", TSHcy: "Ћ", tshcy: "ћ", Tstrok: "Ŧ", tstrok: "ŧ", twixt: "≬", twoheadleftarrow: "↞", twoheadrightarrow: "↠", Uacute: "Ú", uacute: "ú", Uarr: "↟", uArr: "⇑", uarr: "↑", Uarrocir: "⥉", Ubrcy: "Ў", ubrcy: "ў", Ubreve: "Ŭ", ubreve: "ŭ", Ucirc: "Û", ucirc: "û", Ucy: "У", ucy: "у", udarr: "⇅", Udblac: "Ű", udblac: "ű", udhar: "⥮", ufisht: "⥾", Ufr: "𝔘", ufr: "𝔲", Ugrave: "Ù", ugrave: "ù", uHar: "⥣", uharl: "↿", uharr: "↾", uhblk: "▀", ulcorn: "⌜", ulcorner: "⌜", ulcrop: "⌏", ultri: "◸", Umacr: "Ū", umacr: "ū", uml: "¨", UnderBar: "_", UnderBrace: "⏟", UnderBracket: "⎵", UnderParenthesis: "⏝", Union: "⋃", UnionPlus: "⊎", Uogon: "Ų", uogon: "ų", Uopf: "𝕌", uopf: "𝕦", UpArrow: "↑", Uparrow: "⇑", uparrow: "↑", UpArrowBar: "⤒", UpArrowDownArrow: "⇅", UpDownArrow: "↕", Updownarrow: "⇕", updownarrow: "↕", UpEquilibrium: "⥮", upharpoonleft: "↿", upharpoonright: "↾", uplus: "⊎", UpperLeftArrow: "↖", UpperRightArrow: "↗", Upsi: "ϒ", upsi: "υ", upsih: "ϒ", Upsilon: "Υ", upsilon: "υ", UpTee: "⊥", UpTeeArrow: "↥", upuparrows: "⇈", urcorn: "⌝", urcorner: "⌝", urcrop: "⌎", Uring: "Ů", uring: "ů", urtri: "◹", Uscr: "𝒰", uscr: "𝓊", utdot: "⋰", Utilde: "Ũ", utilde: "ũ", utri: "▵", utrif: "▴", uuarr: "⇈", Uuml: "Ü", uuml: "ü", uwangle: "⦧", vangrt: "⦜", varepsilon: "ϵ", varkappa: "ϰ", varnothing: "∅", varphi: "ϕ", varpi: "ϖ", varpropto: "∝", vArr: "⇕", varr: "↕", varrho: "ϱ", varsigma: "ς", varsubsetneq: "⊊︀", varsubsetneqq: "⫋︀", varsupsetneq: "⊋︀", varsupsetneqq: "⫌︀", vartheta: "ϑ", vartriangleleft: "⊲", vartriangleright: "⊳", Vbar: "⫫", vBar: "⫨", vBarv: "⫩", Vcy: "В", vcy: "в", VDash: "⊫", Vdash: "⊩", vDash: "⊨", vdash: "⊢", Vdashl: "⫦", Vee: "⋁", vee: "∨", veebar: "⊻", veeeq: "≚", vellip: "⋮", Verbar: "‖", verbar: "|", Vert: "‖", vert: "|", VerticalBar: "∣", VerticalLine: "|", VerticalSeparator: "❘", VerticalTilde: "≀", VeryThinSpace: " ", Vfr: "𝔙", vfr: "𝔳", vltri: "⊲", vnsub: "⊂⃒", vnsup: "⊃⃒", Vopf: "𝕍", vopf: "𝕧", vprop: "∝", vrtri: "⊳", Vscr: "𝒱", vscr: "𝓋", vsubnE: "⫋︀", vsubne: "⊊︀", vsupnE: "⫌︀", vsupne: "⊋︀", Vvdash: "⊪", vzigzag: "⦚", Wcirc: "Ŵ", wcirc: "ŵ", wedbar: "⩟", Wedge: "⋀", wedge: "∧", wedgeq: "≙", weierp: "℘", Wfr: "𝔚", wfr: "𝔴", Wopf: "𝕎", wopf: "𝕨", wp: "℘", wr: "≀", wreath: "≀", Wscr: "𝒲", wscr: "𝓌", xcap: "⋂", xcirc: "◯", xcup: "⋃", xdtri: "▽", Xfr: "𝔛", xfr: "𝔵", xhArr: "⟺", xharr: "⟷", Xi: "Ξ", xi: "ξ", xlArr: "⟸", xlarr: "⟵", xmap: "⟼", xnis: "⋻", xodot: "⨀", Xopf: "𝕏", xopf: "𝕩", xoplus: "⨁", xotime: "⨂", xrArr: "⟹", xrarr: "⟶", Xscr: "𝒳", xscr: "𝓍", xsqcup: "⨆", xuplus: "⨄", xutri: "△", xvee: "⋁", xwedge: "⋀", Yacute: "Ý", yacute: "ý", YAcy: "Я", yacy: "я", Ycirc: "Ŷ", ycirc: "ŷ", Ycy: "Ы", ycy: "ы", yen: "¥", Yfr: "𝔜", yfr: "𝔶", YIcy: "Ї", yicy: "ї", Yopf: "𝕐", yopf: "𝕪", Yscr: "𝒴", yscr: "𝓎", YUcy: "Ю", yucy: "ю", Yuml: "Ÿ", yuml: "ÿ", Zacute: "Ź", zacute: "ź", Zcaron: "Ž", zcaron: "ž", Zcy: "З", zcy: "з", Zdot: "Ż", zdot: "ż", zeetrf: "ℨ", ZeroWidthSpace: "​", Zeta: "Ζ", zeta: "ζ", Zfr: "ℨ", zfr: "𝔷", ZHcy: "Ж", zhcy: "ж", zigrarr: "⇝", Zopf: "ℤ", zopf: "𝕫", Zscr: "𝒵", zscr: "𝓏", zwj: "‍", zwnj: "‌" }), e10.entityMap = e10.HTML_ENTITIES), $t;
  var e10, t3;
}
var Vt;
var zt;
var Wt;
var Gt = {};
function Xt() {
  if (Vt) return Gt;
  Vt = 1;
  var e10 = Bt().NAMESPACE, t3 = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, i5 = new RegExp("[\\-\\.0-9" + t3.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"), s5 = new RegExp("^" + t3.source + i5.source + "*(?::" + t3.source + i5.source + "*)?$"), n4 = 0, r5 = 1, a9 = 2, o4 = 3, l7 = 4, h3 = 5, u6 = 6, d2 = 7;
  function c5(e11, t4) {
    this.message = e11, this.locator = t4, Error.captureStackTrace && Error.captureStackTrace(this, c5);
  }
  function p5() {
  }
  function m7(t4, i6, s6, n5, r6) {
    function a10(e11) {
      if (e11 > 65535) {
        var t5 = 55296 + ((e11 -= 65536) >> 10), i7 = 56320 + (1023 & e11);
        return String.fromCharCode(t5, i7);
      }
      return String.fromCharCode(e11);
    }
    function o5(e11) {
      var t5 = e11.slice(1, -1);
      return Object.hasOwnProperty.call(s6, t5) ? s6[t5] : "#" === t5.charAt(0) ? a10(parseInt(t5.substr(1).replace("x", "0x"))) : (r6.error("entity not found:" + e11), e11);
    }
    function l8(e11) {
      if (e11 > C4) {
        var i7 = t4.substring(C4, e11).replace(/&#?\w+;/g, o5);
        m8 && h4(C4), n5.characters(i7, 0, e11 - C4), C4 = e11;
      }
    }
    function h4(e11, i7) {
      for (; e11 >= d3 && (i7 = p6.exec(t4)); ) u7 = i7.index, d3 = u7 + i7[0].length, m8.lineNumber++;
      m8.columnNumber = e11 - u7 + 1;
    }
    for (var u7 = 0, d3 = 0, p6 = /.*(?:\r\n?|\n)|.*$/g, m8 = n5.locator, b5 = [{ currentNSMap: i6 }], w6 = {}, C4 = 0; ; ) {
      try {
        var k2 = t4.indexOf("<", C4);
        if (k2 < 0) {
          if (!t4.substr(C4).match(/^\s*$/)) {
            var I3 = n5.doc, x3 = I3.createTextNode(t4.substr(C4));
            I3.appendChild(x3), n5.currentElement = x3;
          }
          return;
        }
        switch (k2 > C4 && l8(k2), t4.charAt(k2 + 1)) {
          case "/":
            var A3 = t4.indexOf(">", k2 + 3), D2 = t4.substring(k2 + 2, A3).replace(/[ \t\n\r]+$/g, ""), P3 = b5.pop();
            A3 < 0 ? (D2 = t4.substring(k2 + 2).replace(/[\s<].*/, ""), r6.error("end tag name: " + D2 + " is not complete:" + P3.tagName), A3 = k2 + 1 + D2.length) : D2.match(/\s</) && (D2 = D2.replace(/[\s<].*/, ""), r6.error("end tag name: " + D2 + " maybe not complete"), A3 = k2 + 1 + D2.length);
            var L3 = P3.localNSMap, O2 = P3.tagName == D2;
            if (O2 || P3.tagName && P3.tagName.toLowerCase() == D2.toLowerCase()) {
              if (n5.endElement(P3.uri, P3.localName, D2), L3) for (var N3 in L3) Object.prototype.hasOwnProperty.call(L3, N3) && n5.endPrefixMapping(N3);
              O2 || r6.fatalError("end tag name: " + D2 + " is not match the current start tagName:" + P3.tagName);
            } else b5.push(P3);
            A3++;
            break;
          case "?":
            m8 && h4(k2), A3 = S4(t4, k2, n5);
            break;
          case "!":
            m8 && h4(k2), A3 = T2(t4, k2, n5, r6);
            break;
          default:
            m8 && h4(k2);
            var R2 = new E3(), M3 = b5[b5.length - 1].currentNSMap, U2 = (A3 = f3(t4, k2, R2, M3, o5, r6), R2.length);
            if (!R2.closed && v3(t4, A3, R2.tagName, w6) && (R2.closed = true, s6.nbsp || r6.warning("unclosed xml attribute")), m8 && U2) {
              for (var B2 = g2(m8, {}), F2 = 0; F2 < U2; F2++) {
                var q3 = R2[F2];
                h4(q3.offset), q3.locator = g2(m8, {});
              }
              n5.locator = B2, y4(R2, n5, M3) && b5.push(R2), n5.locator = m8;
            } else y4(R2, n5, M3) && b5.push(R2);
            e10.isHTML(R2.uri) && !R2.closed ? A3 = _3(t4, A3, R2.tagName, o5, n5) : A3++;
        }
      } catch (j4) {
        if (j4 instanceof c5) throw j4;
        r6.error("element parse error: " + j4), A3 = -1;
      }
      A3 > C4 ? C4 = A3 : l8(Math.max(k2, C4) + 1);
    }
  }
  function g2(e11, t4) {
    return t4.lineNumber = e11.lineNumber, t4.columnNumber = e11.columnNumber, t4;
  }
  function f3(t4, i6, s6, c6, p6, m8) {
    function g3(e11, t5, i7) {
      s6.attributeNames.hasOwnProperty(e11) && m8.fatalError("Attribute " + e11 + " redefined"), s6.addValue(e11, t5.replace(/[\t\n\r]/g, " ").replace(/&#?\w+;/g, p6), i7);
    }
    for (var f4, y5 = ++i6, _4 = n4; ; ) {
      var v4 = t4.charAt(y5);
      switch (v4) {
        case "=":
          if (_4 === r5) f4 = t4.slice(i6, y5), _4 = o4;
          else {
            if (_4 !== a9) throw new Error("attribute equal must after attrName");
            _4 = o4;
          }
          break;
        case "'":
        case '"':
          if (_4 === o4 || _4 === r5) {
            if (_4 === r5 && (m8.warning('attribute value must after "="'), f4 = t4.slice(i6, y5)), i6 = y5 + 1, !((y5 = t4.indexOf(v4, i6)) > 0)) throw new Error("attribute value no end '" + v4 + "' match");
            g3(f4, b5 = t4.slice(i6, y5), i6 - 1), _4 = h3;
          } else {
            if (_4 != l7) throw new Error('attribute value must after "="');
            g3(f4, b5 = t4.slice(i6, y5), i6), m8.warning('attribute "' + f4 + '" missed start quot(' + v4 + ")!!"), i6 = y5 + 1, _4 = h3;
          }
          break;
        case "/":
          switch (_4) {
            case n4:
              s6.setTagName(t4.slice(i6, y5));
            case h3:
            case u6:
            case d2:
              _4 = d2, s6.closed = true;
            case l7:
            case r5:
              break;
            case a9:
              s6.closed = true;
              break;
            default:
              throw new Error("attribute invalid close char('/')");
          }
          break;
        case "":
          return m8.error("unexpected end of input"), _4 == n4 && s6.setTagName(t4.slice(i6, y5)), y5;
        case ">":
          switch (_4) {
            case n4:
              s6.setTagName(t4.slice(i6, y5));
            case h3:
            case u6:
            case d2:
              break;
            case l7:
            case r5:
              "/" === (b5 = t4.slice(i6, y5)).slice(-1) && (s6.closed = true, b5 = b5.slice(0, -1));
            case a9:
              _4 === a9 && (b5 = f4), _4 == l7 ? (m8.warning('attribute "' + b5 + '" missed quot(")!'), g3(f4, b5, i6)) : (e10.isHTML(c6[""]) && b5.match(/^(?:disabled|checked|selected)$/i) || m8.warning('attribute "' + b5 + '" missed value!! "' + b5 + '" instead!!'), g3(b5, b5, i6));
              break;
            case o4:
              throw new Error("attribute value missed!!");
          }
          return y5;
        case "":
          v4 = " ";
        default:
          if (v4 <= " ") switch (_4) {
            case n4:
              s6.setTagName(t4.slice(i6, y5)), _4 = u6;
              break;
            case r5:
              f4 = t4.slice(i6, y5), _4 = a9;
              break;
            case l7:
              var b5 = t4.slice(i6, y5);
              m8.warning('attribute "' + b5 + '" missed quot(")!!'), g3(f4, b5, i6);
            case h3:
              _4 = u6;
          }
          else switch (_4) {
            case a9:
              s6.tagName, e10.isHTML(c6[""]) && f4.match(/^(?:disabled|checked|selected)$/i) || m8.warning('attribute "' + f4 + '" missed value!! "' + f4 + '" instead2!!'), g3(f4, f4, i6), i6 = y5, _4 = r5;
              break;
            case h3:
              m8.warning('attribute space is required"' + f4 + '"!!');
            case u6:
              _4 = r5, i6 = y5;
              break;
            case o4:
              _4 = l7, i6 = y5;
              break;
            case d2:
              throw new Error("elements closed character '/' and '>' must be connected to");
          }
      }
      y5++;
    }
  }
  function y4(t4, i6, s6) {
    for (var n5 = t4.tagName, r6 = null, a10 = t4.length; a10--; ) {
      var o5 = t4[a10], l8 = o5.qName, h4 = o5.value;
      if ((p6 = l8.indexOf(":")) > 0) var u7 = o5.prefix = l8.slice(0, p6), d3 = l8.slice(p6 + 1), c6 = "xmlns" === u7 && d3;
      else d3 = l8, u7 = null, c6 = "xmlns" === l8 && "";
      o5.localName = d3, false !== c6 && (null == r6 && (r6 = {}, b4(s6, s6 = {})), s6[c6] = r6[c6] = h4, o5.uri = e10.XMLNS, i6.startPrefixMapping(c6, h4));
    }
    for (a10 = t4.length; a10--; ) {
      (u7 = (o5 = t4[a10]).prefix) && ("xml" === u7 && (o5.uri = e10.XML), "xmlns" !== u7 && (o5.uri = s6[u7 || ""]));
    }
    var p6;
    (p6 = n5.indexOf(":")) > 0 ? (u7 = t4.prefix = n5.slice(0, p6), d3 = t4.localName = n5.slice(p6 + 1)) : (u7 = null, d3 = t4.localName = n5);
    var m8 = t4.uri = s6[u7 || ""];
    if (i6.startElement(m8, d3, n5, t4), !t4.closed) return t4.currentNSMap = s6, t4.localNSMap = r6, true;
    if (i6.endElement(m8, d3, n5), r6) for (u7 in r6) Object.prototype.hasOwnProperty.call(r6, u7) && i6.endPrefixMapping(u7);
  }
  function _3(e11, t4, i6, s6, n5) {
    if (/^(?:script|textarea)$/i.test(i6)) {
      var r6 = e11.indexOf("</" + i6 + ">", t4), a10 = e11.substring(t4 + 1, r6);
      if (/[&<]/.test(a10)) return /^script$/i.test(i6) ? (n5.characters(a10, 0, a10.length), r6) : (a10 = a10.replace(/&#?\w+;/g, s6), n5.characters(a10, 0, a10.length), r6);
    }
    return t4 + 1;
  }
  function v3(e11, t4, i6, s6) {
    var n5 = s6[i6];
    return null == n5 && ((n5 = e11.lastIndexOf("</" + i6 + ">")) < t4 && (n5 = e11.lastIndexOf("</" + i6)), s6[i6] = n5), n5 < t4;
  }
  function b4(e11, t4) {
    for (var i6 in e11) Object.prototype.hasOwnProperty.call(e11, i6) && (t4[i6] = e11[i6]);
  }
  function T2(e11, t4, i6, s6) {
    if ("-" === e11.charAt(t4 + 2)) return "-" === e11.charAt(t4 + 3) ? (n5 = e11.indexOf("-->", t4 + 4)) > t4 ? (i6.comment(e11, t4 + 4, n5 - t4 - 4), n5 + 3) : (s6.error("Unclosed comment"), -1) : -1;
    if ("CDATA[" == e11.substr(t4 + 3, 6)) {
      var n5 = e11.indexOf("]]>", t4 + 9);
      return i6.startCDATA(), i6.characters(e11, t4 + 9, n5 - t4 - 9), i6.endCDATA(), n5 + 3;
    }
    var r6 = w5(e11, t4), a10 = r6.length;
    if (a10 > 1 && /!doctype/i.test(r6[0][0])) {
      var o5 = r6[1][0], l8 = false, h4 = false;
      a10 > 3 && (/^public$/i.test(r6[2][0]) ? (l8 = r6[3][0], h4 = a10 > 4 && r6[4][0]) : /^system$/i.test(r6[2][0]) && (h4 = r6[3][0]));
      var u7 = r6[a10 - 1];
      return i6.startDTD(o5, l8, h4), i6.endDTD(), u7.index + u7[0].length;
    }
    return -1;
  }
  function S4(e11, t4, i6) {
    var s6 = e11.indexOf("?>", t4);
    if (s6) {
      var n5 = e11.substring(t4, s6).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
      return n5 ? (n5[0].length, i6.processingInstruction(n5[1], n5[2]), s6 + 2) : -1;
    }
    return -1;
  }
  function E3() {
    this.attributeNames = {};
  }
  function w5(e11, t4) {
    var i6, s6 = [], n5 = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
    for (n5.lastIndex = t4, n5.exec(e11); i6 = n5.exec(e11); ) if (s6.push(i6), i6[1]) return s6;
  }
  return c5.prototype = new Error(), c5.prototype.name = c5.name, p5.prototype = { parse: function(e11, t4, i6) {
    var s6 = this.domBuilder;
    s6.startDocument(), b4(t4, t4 = {}), m7(e11, t4, i6, s6, this.errorHandler), s6.endDocument();
  } }, E3.prototype = { setTagName: function(e11) {
    if (!s5.test(e11)) throw new Error("invalid tagName:" + e11);
    this.tagName = e11;
  }, addValue: function(e11, t4, i6) {
    if (!s5.test(e11)) throw new Error("invalid attribute:" + e11);
    this.attributeNames[e11] = this.length, this[this.length++] = { qName: e11, value: t4, offset: i6 };
  }, length: 0, getLocalName: function(e11) {
    return this[e11].localName;
  }, getLocator: function(e11) {
    return this[e11].locator;
  }, getQName: function(e11) {
    return this[e11].qName;
  }, getURI: function(e11) {
    return this[e11].uri;
  }, getValue: function(e11) {
    return this[e11].value;
  } }, Gt.XMLReader = p5, Gt.ParseError = c5, Gt;
}
function Kt() {
  if (zt) return jt;
  zt = 1;
  var e10 = Bt(), t3 = Ft(), i5 = Ht(), s5 = Xt(), n4 = t3.DOMImplementation, r5 = e10.NAMESPACE, a9 = s5.ParseError, o4 = s5.XMLReader;
  function l7(e11) {
    return e11.replace(/\r[\n\u0085]/g, "\n").replace(/[\r\u0085\u2028]/g, "\n");
  }
  function h3(e11) {
    this.options = e11 || { locator: {} };
  }
  function u6(e11, t4, i6) {
    if (!e11) {
      if (t4 instanceof d2) return t4;
      e11 = t4;
    }
    var s6 = {}, n5 = e11 instanceof Function;
    function r6(t5) {
      var r7 = e11[t5];
      !r7 && n5 && (r7 = 2 == e11.length ? function(i7) {
        e11(t5, i7);
      } : e11), s6[t5] = r7 && function(e12) {
        r7("[xmldom " + t5 + "]	" + e12 + p5(i6));
      } || function() {
      };
    }
    return i6 = i6 || {}, r6("warning"), r6("error"), r6("fatalError"), s6;
  }
  function d2() {
    this.cdata = false;
  }
  function c5(e11, t4) {
    t4.lineNumber = e11.lineNumber, t4.columnNumber = e11.columnNumber;
  }
  function p5(e11) {
    if (e11) return "\n@" + (e11.systemId || "") + "#[line:" + e11.lineNumber + ",col:" + e11.columnNumber + "]";
  }
  function m7(e11, t4, i6) {
    return "string" == typeof e11 ? e11.substr(t4, i6) : e11.length >= t4 + i6 || t4 ? new java.lang.String(e11, t4, i6) + "" : e11;
  }
  function g2(e11, t4) {
    e11.currentElement ? e11.currentElement.appendChild(t4) : e11.doc.appendChild(t4);
  }
  return h3.prototype.parseFromString = function(e11, t4) {
    var s6 = this.options, n5 = new o4(), a10 = s6.domBuilder || new d2(), h4 = s6.errorHandler, c6 = s6.locator, p6 = s6.xmlns || {}, m8 = /\/x?html?$/.test(t4), g3 = m8 ? i5.HTML_ENTITIES : i5.XML_ENTITIES;
    c6 && a10.setDocumentLocator(c6), n5.errorHandler = u6(h4, a10, c6), n5.domBuilder = s6.domBuilder || a10, m8 && (p6[""] = r5.HTML), p6.xml = p6.xml || r5.XML;
    var f3 = s6.normalizeLineEndings || l7;
    return e11 && "string" == typeof e11 ? n5.parse(f3(e11), p6, g3) : n5.errorHandler.error("invalid doc source"), a10.doc;
  }, d2.prototype = { startDocument: function() {
    this.doc = new n4().createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId);
  }, startElement: function(e11, t4, i6, s6) {
    var n5 = this.doc, r6 = n5.createElementNS(e11, i6 || t4), a10 = s6.length;
    g2(this, r6), this.currentElement = r6, this.locator && c5(this.locator, r6);
    for (var o5 = 0; o5 < a10; o5++) {
      e11 = s6.getURI(o5);
      var l8 = s6.getValue(o5), h4 = (i6 = s6.getQName(o5), n5.createAttributeNS(e11, i6));
      this.locator && c5(s6.getLocator(o5), h4), h4.value = h4.nodeValue = l8, r6.setAttributeNode(h4);
    }
  }, endElement: function(e11, t4, i6) {
    var s6 = this.currentElement;
    s6.tagName, this.currentElement = s6.parentNode;
  }, startPrefixMapping: function(e11, t4) {
  }, endPrefixMapping: function(e11) {
  }, processingInstruction: function(e11, t4) {
    var i6 = this.doc.createProcessingInstruction(e11, t4);
    this.locator && c5(this.locator, i6), g2(this, i6);
  }, ignorableWhitespace: function(e11, t4, i6) {
  }, characters: function(e11, t4, i6) {
    if (e11 = m7.apply(this, arguments)) {
      if (this.cdata) var s6 = this.doc.createCDATASection(e11);
      else s6 = this.doc.createTextNode(e11);
      this.currentElement ? this.currentElement.appendChild(s6) : /^\s*$/.test(e11) && this.doc.appendChild(s6), this.locator && c5(this.locator, s6);
    }
  }, skippedEntity: function(e11) {
  }, endDocument: function() {
    this.doc.normalize();
  }, setDocumentLocator: function(e11) {
    (this.locator = e11) && (e11.lineNumber = 0);
  }, comment: function(e11, t4, i6) {
    e11 = m7.apply(this, arguments);
    var s6 = this.doc.createComment(e11);
    this.locator && c5(this.locator, s6), g2(this, s6);
  }, startCDATA: function() {
    this.cdata = true;
  }, endCDATA: function() {
    this.cdata = false;
  }, startDTD: function(e11, t4, i6) {
    var s6 = this.doc.implementation;
    if (s6 && s6.createDocumentType) {
      var n5 = s6.createDocumentType(e11, t4, i6);
      this.locator && c5(this.locator, n5), g2(this, n5), this.doc.doctype = n5;
    }
  }, warning: function(e11) {
    console.warn("[xmldom warning]	" + e11, p5(this.locator));
  }, error: function(e11) {
    console.error("[xmldom error]	" + e11, p5(this.locator));
  }, fatalError: function(e11) {
    throw new a9(e11, this.locator);
  } }, "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, function(e11) {
    d2.prototype[e11] = function() {
      return null;
    };
  }), jt.__DOMHandler = d2, jt.normalizeLineEndings = l7, jt.DOMParser = h3, jt;
}
function Yt() {
  if (Wt) return Rt;
  Wt = 1;
  var e10 = Ft();
  return Rt.DOMImplementation = e10.DOMImplementation, Rt.XMLSerializer = e10.XMLSerializer, Rt.DOMParser = Kt().DOMParser, Rt;
}
var Qt = Yt();
var Jt = (e10) => !!e10 && "object" == typeof e10;
var Zt = (...e10) => e10.reduce((e11, t3) => ("object" != typeof t3 || Object.keys(t3).forEach((i5) => {
  Array.isArray(e11[i5]) && Array.isArray(t3[i5]) ? e11[i5] = e11[i5].concat(t3[i5]) : Jt(e11[i5]) && Jt(t3[i5]) ? e11[i5] = Zt(e11[i5], t3[i5]) : e11[i5] = t3[i5];
}), e11), {});
var ei = (e10) => Object.keys(e10).map((t3) => e10[t3]);
var ti = (e10, t3) => {
  const i5 = [];
  for (let s5 = e10; s5 < t3; s5++) i5.push(s5);
  return i5;
};
var ii = (e10) => e10.reduce((e11, t3) => e11.concat(t3), []);
var si = (e10) => {
  if (!e10.length) return [];
  const t3 = [];
  for (let i5 = 0; i5 < e10.length; i5++) t3.push(e10[i5]);
  return t3;
};
var ni = (e10, t3) => e10.reduce((e11, i5, s5) => (i5[t3] && e11.push(s5), e11), []);
var ri = (e10, t3) => ei(e10.reduce((e11, i5) => (i5.forEach((i6) => {
  e11[t3(i6)] = i6;
}), e11), {}));
var ai = { INVALID_NUMBER_OF_PERIOD: "INVALID_NUMBER_OF_PERIOD", DASH_EMPTY_MANIFEST: "DASH_EMPTY_MANIFEST", DASH_INVALID_XML: "DASH_INVALID_XML", NO_BASE_URL: "NO_BASE_URL", SEGMENT_TIME_UNSPECIFIED: "SEGMENT_TIME_UNSPECIFIED", UNSUPPORTED_UTC_TIMING_SCHEME: "UNSUPPORTED_UTC_TIMING_SCHEME" };
var oi = ({ baseUrl: e10 = "", source: t3 = "", range: i5 = "", indexRange: s5 = "" }) => {
  const n4 = { uri: t3, resolvedUri: je(e10 || "", t3) };
  if (i5 || s5) {
    const e11 = (i5 || s5).split("-");
    let t4, r5 = b3.BigInt ? b3.BigInt(e11[0]) : parseInt(e11[0], 10), a9 = b3.BigInt ? b3.BigInt(e11[1]) : parseInt(e11[1], 10);
    r5 < Number.MAX_SAFE_INTEGER && "bigint" == typeof r5 && (r5 = Number(r5)), a9 < Number.MAX_SAFE_INTEGER && "bigint" == typeof a9 && (a9 = Number(a9)), t4 = "bigint" == typeof a9 || "bigint" == typeof r5 ? b3.BigInt(a9) - b3.BigInt(r5) + b3.BigInt(1) : a9 - r5 + 1, "bigint" == typeof t4 && t4 < Number.MAX_SAFE_INTEGER && (t4 = Number(t4)), n4.byterange = { length: t4, offset: r5 };
  }
  return n4;
};
var li = (e10) => {
  let t3;
  return t3 = "bigint" == typeof e10.offset || "bigint" == typeof e10.length ? b3.BigInt(e10.offset) + b3.BigInt(e10.length) - b3.BigInt(1) : e10.offset + e10.length - 1, `${e10.offset}-${t3}`;
};
var hi = (e10) => (e10 && "number" != typeof e10 && (e10 = parseInt(e10, 10)), isNaN(e10) ? null : e10);
var ui = { static(e10) {
  const { duration: t3, timescale: i5 = 1, sourceDuration: s5, periodDuration: n4 } = e10, r5 = hi(e10.endNumber), a9 = t3 / i5;
  return "number" == typeof r5 ? { start: 0, end: r5 } : "number" == typeof n4 ? { start: 0, end: n4 / a9 } : { start: 0, end: s5 / a9 };
}, dynamic(e10) {
  const { NOW: t3, clientOffset: i5, availabilityStartTime: s5, timescale: n4 = 1, duration: r5, periodStart: a9 = 0, minimumUpdatePeriod: o4 = 0, timeShiftBufferDepth: l7 = 1 / 0 } = e10, h3 = hi(e10.endNumber), u6 = (t3 + i5) / 1e3, d2 = s5 + a9, c5 = u6 + o4 - d2, p5 = Math.ceil(c5 * n4 / r5), m7 = Math.floor((u6 - d2 - l7) * n4 / r5), g2 = Math.floor((u6 - d2) * n4 / r5);
  return { start: Math.max(0, m7), end: "number" == typeof h3 ? h3 : Math.min(p5, g2) };
} };
var di = (e10) => (t3) => {
  const { duration: i5, timescale: s5 = 1, periodStart: n4, startNumber: r5 = 1 } = e10;
  return { number: r5 + t3, duration: i5 / s5, timeline: n4, time: t3 * i5 };
};
var ci = (e10) => {
  const { type: t3, duration: i5, timescale: s5 = 1, periodDuration: n4, sourceDuration: r5 } = e10, { start: a9, end: o4 } = ui[t3](e10), l7 = ti(a9, o4).map(di(e10));
  if ("static" === t3) {
    const e11 = l7.length - 1, t4 = "number" == typeof n4 ? n4 : r5;
    l7[e11].duration = t4 - i5 / s5 * e11;
  }
  return l7;
};
var pi = (e10) => {
  const { baseUrl: t3, initialization: i5 = {}, sourceDuration: s5, indexRange: n4 = "", periodStart: r5, presentationTime: a9, number: o4 = 0, duration: l7 } = e10;
  if (!t3) throw new Error(ai.NO_BASE_URL);
  const h3 = oi({ baseUrl: t3, source: i5.sourceURL, range: i5.range }), u6 = oi({ baseUrl: t3, source: t3, indexRange: n4 });
  if (u6.map = h3, l7) {
    const t4 = ci(e10);
    t4.length && (u6.duration = t4[0].duration, u6.timeline = t4[0].timeline);
  } else s5 && (u6.duration = s5, u6.timeline = r5);
  return u6.presentationTime = a9 || r5, u6.number = o4, [u6];
};
var mi = (e10, t3, i5) => {
  const s5 = e10.sidx.map ? e10.sidx.map : null, n4 = e10.sidx.duration, r5 = e10.timeline || 0, a9 = e10.sidx.byterange, o4 = a9.offset + a9.length, l7 = t3.timescale, h3 = t3.references.filter((e11) => 1 !== e11.referenceType), u6 = [], d2 = e10.endList ? "static" : "dynamic", c5 = e10.sidx.timeline;
  let p5, m7 = c5, g2 = e10.mediaSequence || 0;
  p5 = "bigint" == typeof t3.firstOffset ? b3.BigInt(o4) + t3.firstOffset : o4 + t3.firstOffset;
  for (let f3 = 0; f3 < h3.length; f3++) {
    const e11 = t3.references[f3], a10 = e11.referencedSize, o5 = e11.subsegmentDuration;
    let h4;
    h4 = "bigint" == typeof p5 ? p5 + b3.BigInt(a10) - b3.BigInt(1) : p5 + a10 - 1;
    const y4 = pi({ baseUrl: i5, timescale: l7, timeline: r5, periodStart: c5, presentationTime: m7, number: g2, duration: o5, sourceDuration: n4, indexRange: `${p5}-${h4}`, type: d2 })[0];
    s5 && (y4.map = s5), u6.push(y4), p5 += "bigint" == typeof p5 ? b3.BigInt(a10) : a10, m7 += o5 / l7, g2++;
  }
  return e10.segments = u6, e10;
};
var gi = ["AUDIO", "SUBTITLES"];
var fi = 1 / 60;
var yi = (e10) => ri(e10, ({ timeline: e11 }) => e11).sort((e11, t3) => e11.timeline > t3.timeline ? 1 : -1);
var _i = (e10, t3) => {
  for (let i5 = 0; i5 < e10.length; i5++) if (e10[i5].attributes.NAME === t3) return e10[i5];
  return null;
};
var vi = (e10) => {
  let t3 = [];
  return Nt(e10, gi, (e11, i5, s5, n4) => {
    t3 = t3.concat(e11.playlists || []);
  }), t3;
};
var bi = ({ playlist: e10, mediaSequence: t3 }) => {
  e10.mediaSequence = t3, e10.segments.forEach((t4, i5) => {
    t4.number = e10.mediaSequence + i5;
  });
};
var Ti = ({ oldPlaylists: e10, newPlaylists: t3, timelineStarts: i5 }) => {
  t3.forEach((t4) => {
    t4.discontinuitySequence = i5.findIndex(function({ timeline: e11 }) {
      return e11 === t4.timeline;
    });
    const s5 = _i(e10, t4.attributes.NAME);
    if (!s5) return;
    if (t4.sidx) return;
    const n4 = t4.segments[0], r5 = s5.segments.findIndex(function(e11) {
      return Math.abs(e11.presentationTime - n4.presentationTime) < fi;
    });
    if (-1 === r5) return bi({ playlist: t4, mediaSequence: s5.mediaSequence + s5.segments.length }), t4.segments[0].discontinuity = true, t4.discontinuityStarts.unshift(0), void ((!s5.segments.length && t4.timeline > s5.timeline || s5.segments.length && t4.timeline > s5.segments[s5.segments.length - 1].timeline) && t4.discontinuitySequence--);
    s5.segments[r5].discontinuity && !n4.discontinuity && (n4.discontinuity = true, t4.discontinuityStarts.unshift(0), t4.discontinuitySequence--), bi({ playlist: t4, mediaSequence: s5.segments[r5].number });
  });
};
var Si = ({ oldManifest: e10, newManifest: t3 }) => {
  const i5 = e10.playlists.concat(vi(e10)), s5 = t3.playlists.concat(vi(t3));
  return t3.timelineStarts = yi([e10.timelineStarts, t3.timelineStarts]), Ti({ oldPlaylists: i5, newPlaylists: s5, timelineStarts: t3.timelineStarts }), t3;
};
var Ei = (e10) => e10 && e10.uri + "-" + li(e10.byterange);
var wi = (e10) => {
  const t3 = e10.reduce(function(e11, t4) {
    return e11[t4.attributes.baseUrl] || (e11[t4.attributes.baseUrl] = []), e11[t4.attributes.baseUrl].push(t4), e11;
  }, {});
  let i5 = [];
  return Object.values(t3).forEach((e11) => {
    const t4 = ei(e11.reduce((e12, t5) => {
      const i6 = t5.attributes.id + (t5.attributes.lang || "");
      return e12[i6] ? (t5.segments && (t5.segments[0] && (t5.segments[0].discontinuity = true), e12[i6].segments.push(...t5.segments)), t5.attributes.contentProtection && (e12[i6].attributes.contentProtection = t5.attributes.contentProtection)) : (e12[i6] = t5, e12[i6].attributes.timelineStarts = []), e12[i6].attributes.timelineStarts.push({ start: t5.attributes.periodStart, timeline: t5.attributes.periodStart }), e12;
    }, {}));
    i5 = i5.concat(t4);
  }), i5.map((e11) => (e11.discontinuityStarts = ni(e11.segments || [], "discontinuity"), e11));
};
var Ci = (e10, t3) => {
  const i5 = Ei(e10.sidx), s5 = i5 && t3[i5] && t3[i5].sidx;
  return s5 && mi(e10, s5, e10.sidx.resolvedUri), e10;
};
var ki = (e10, t3 = {}) => {
  if (!Object.keys(t3).length) return e10;
  for (const i5 in e10) e10[i5] = Ci(e10[i5], t3);
  return e10;
};
var Ii = ({ attributes: e10, segments: t3, sidx: i5, mediaSequence: s5, discontinuitySequence: n4, discontinuityStarts: r5 }, a9) => {
  const o4 = { attributes: { NAME: e10.id, BANDWIDTH: e10.bandwidth, CODECS: e10.codecs, "PROGRAM-ID": 1 }, uri: "", endList: "static" === e10.type, timeline: e10.periodStart, resolvedUri: e10.baseUrl || "", targetDuration: e10.duration, discontinuitySequence: n4, discontinuityStarts: r5, timelineStarts: e10.timelineStarts, mediaSequence: s5, segments: t3 };
  return e10.contentProtection && (o4.contentProtection = e10.contentProtection), e10.serviceLocation && (o4.attributes.serviceLocation = e10.serviceLocation), i5 && (o4.sidx = i5), a9 && (o4.attributes.AUDIO = "audio", o4.attributes.SUBTITLES = "subs"), o4;
};
var xi = ({ attributes: e10, segments: t3, mediaSequence: i5, discontinuityStarts: s5, discontinuitySequence: n4 }) => {
  void 0 === t3 && (t3 = [{ uri: e10.baseUrl, timeline: e10.periodStart, resolvedUri: e10.baseUrl || "", duration: e10.sourceDuration, number: 0 }], e10.duration = e10.sourceDuration);
  const r5 = { NAME: e10.id, BANDWIDTH: e10.bandwidth, "PROGRAM-ID": 1 };
  e10.codecs && (r5.CODECS = e10.codecs);
  const a9 = { attributes: r5, uri: "", endList: "static" === e10.type, timeline: e10.periodStart, resolvedUri: e10.baseUrl || "", targetDuration: e10.duration, timelineStarts: e10.timelineStarts, discontinuityStarts: s5, discontinuitySequence: n4, mediaSequence: i5, segments: t3 };
  return e10.serviceLocation && (a9.attributes.serviceLocation = e10.serviceLocation), a9;
};
var Ai = (e10, t3 = {}, i5 = false) => {
  let s5;
  const n4 = e10.reduce((e11, n5) => {
    const r5 = n5.attributes.role && n5.attributes.role.value || "", a9 = n5.attributes.lang || "";
    let o4 = n5.attributes.label || "main";
    if (a9 && !n5.attributes.label) {
      const e12 = r5 ? ` (${r5})` : "";
      o4 = `${n5.attributes.lang}${e12}`;
    }
    e11[o4] || (e11[o4] = { language: a9, autoselect: true, default: "main" === r5, playlists: [], uri: "" });
    const l7 = Ci(Ii(n5, i5), t3);
    return e11[o4].playlists.push(l7), void 0 === s5 && "main" === r5 && (s5 = n5, s5.default = true), e11;
  }, {});
  if (!s5) {
    n4[Object.keys(n4)[0]].default = true;
  }
  return n4;
};
var Di = (e10, t3 = {}) => e10.reduce((e11, i5) => {
  const s5 = i5.attributes.label || i5.attributes.lang || "text", n4 = i5.attributes.lang || "und";
  return e11[s5] || (e11[s5] = { language: n4, default: false, autoselect: false, playlists: [], uri: "" }), e11[s5].playlists.push(Ci(xi(i5), t3)), e11;
}, {});
var Pi = (e10) => e10.reduce((e11, t3) => t3 ? (t3.forEach((t4) => {
  const { channel: i5, language: s5 } = t4;
  e11[s5] = { autoselect: false, default: false, instreamId: i5, language: s5 }, t4.hasOwnProperty("aspectRatio") && (e11[s5].aspectRatio = t4.aspectRatio), t4.hasOwnProperty("easyReader") && (e11[s5].easyReader = t4.easyReader), t4.hasOwnProperty("3D") && (e11[s5]["3D"] = t4["3D"]);
}), e11) : e11, {});
var Li = ({ attributes: e10, segments: t3, sidx: i5, discontinuityStarts: s5 }) => {
  const n4 = { attributes: { NAME: e10.id, AUDIO: "audio", SUBTITLES: "subs", RESOLUTION: { width: e10.width, height: e10.height }, CODECS: e10.codecs, BANDWIDTH: e10.bandwidth, "PROGRAM-ID": 1 }, uri: "", endList: "static" === e10.type, timeline: e10.periodStart, resolvedUri: e10.baseUrl || "", targetDuration: e10.duration, discontinuityStarts: s5, timelineStarts: e10.timelineStarts, segments: t3 };
  return e10.frameRate && (n4.attributes["FRAME-RATE"] = e10.frameRate), e10.contentProtection && (n4.contentProtection = e10.contentProtection), e10.serviceLocation && (n4.attributes.serviceLocation = e10.serviceLocation), i5 && (n4.sidx = i5), n4;
};
var Oi = ({ attributes: e10 }) => "video/mp4" === e10.mimeType || "video/webm" === e10.mimeType || "video" === e10.contentType;
var Ni = ({ attributes: e10 }) => "audio/mp4" === e10.mimeType || "audio/webm" === e10.mimeType || "audio" === e10.contentType;
var Ri = ({ attributes: e10 }) => "text/vtt" === e10.mimeType || "text" === e10.contentType;
var Mi = (e10, t3) => {
  e10.forEach((e11) => {
    e11.mediaSequence = 0, e11.discontinuitySequence = t3.findIndex(function({ timeline: t4 }) {
      return t4 === e11.timeline;
    }), e11.segments && e11.segments.forEach((e12, t4) => {
      e12.number = t4;
    });
  });
};
var Ui = (e10) => e10 ? Object.keys(e10).reduce((t3, i5) => {
  const s5 = e10[i5];
  return t3.concat(s5.playlists);
}, []) : [];
var Bi = ({ dashPlaylists: e10, locations: t3, contentSteering: i5, sidxMapping: s5 = {}, previousManifest: n4, eventStream: r5 }) => {
  if (!e10.length) return {};
  const { sourceDuration: a9, type: o4, suggestedPresentationDelay: l7, minimumUpdatePeriod: h3 } = e10[0].attributes, u6 = wi(e10.filter(Oi)).map(Li), d2 = wi(e10.filter(Ni)), c5 = wi(e10.filter(Ri)), p5 = e10.map((e11) => e11.attributes.captionServices).filter(Boolean), m7 = { allowCache: true, discontinuityStarts: [], segments: [], endList: true, mediaGroups: { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, uri: "", duration: a9, playlists: ki(u6, s5) };
  h3 >= 0 && (m7.minimumUpdatePeriod = 1e3 * h3), t3 && (m7.locations = t3), i5 && (m7.contentSteering = i5), "dynamic" === o4 && (m7.suggestedPresentationDelay = l7), r5 && r5.length > 0 && (m7.eventStream = r5);
  const g2 = 0 === m7.playlists.length, f3 = d2.length ? Ai(d2, s5, g2) : null, y4 = c5.length ? Di(c5, s5) : null, _3 = u6.concat(Ui(f3), Ui(y4)), v3 = _3.map(({ timelineStarts: e11 }) => e11);
  return m7.timelineStarts = yi(v3), Mi(_3, m7.timelineStarts), f3 && (m7.mediaGroups.AUDIO.audio = f3), y4 && (m7.mediaGroups.SUBTITLES.subs = y4), p5.length && (m7.mediaGroups["CLOSED-CAPTIONS"].cc = Pi(p5)), n4 ? Si({ oldManifest: n4, newManifest: m7 }) : m7;
};
var Fi = (e10, t3, i5) => {
  const { NOW: s5, clientOffset: n4, availabilityStartTime: r5, timescale: a9 = 1, periodStart: o4 = 0, minimumUpdatePeriod: l7 = 0 } = e10, h3 = (s5 + n4) / 1e3 + l7 - (r5 + o4);
  return Math.ceil((h3 * a9 - t3) / i5);
};
var qi = (e10, t3) => {
  const { type: i5, minimumUpdatePeriod: s5 = 0, media: n4 = "", sourceDuration: r5, timescale: a9 = 1, startNumber: o4 = 1, periodStart: l7 } = e10, h3 = [];
  let u6 = -1;
  for (let d2 = 0; d2 < t3.length; d2++) {
    const c5 = t3[d2], p5 = c5.d, m7 = c5.r || 0, g2 = c5.t || 0;
    let f3;
    if (u6 < 0 && (u6 = g2), g2 && g2 > u6 && (u6 = g2), m7 < 0) {
      const o5 = d2 + 1;
      f3 = o5 === t3.length ? "dynamic" === i5 && s5 > 0 && n4.indexOf("$Number$") > 0 ? Fi(e10, u6, p5) : (r5 * a9 - u6) / p5 : (t3[o5].t - u6) / p5;
    } else f3 = m7 + 1;
    const y4 = o4 + h3.length + f3;
    let _3 = o4 + h3.length;
    for (; _3 < y4; ) h3.push({ number: _3, duration: p5 / a9, time: u6, timeline: l7 }), u6 += p5, _3++;
  }
  return h3;
};
var ji = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;
var $i = (e10) => (t3, i5, s5, n4) => {
  if ("$$" === t3) return "$";
  if (void 0 === e10[i5]) return t3;
  const r5 = "" + e10[i5];
  return "RepresentationID" === i5 ? r5 : (n4 = s5 ? parseInt(n4, 10) : 1, r5.length >= n4 ? r5 : `${new Array(n4 - r5.length + 1).join("0")}${r5}`);
};
var Hi = (e10, t3) => e10.replace(ji, $i(t3));
var Vi = (e10, t3) => e10.duration || t3 ? e10.duration ? ci(e10) : qi(e10, t3) : [{ number: e10.startNumber || 1, duration: e10.sourceDuration, time: 0, timeline: e10.periodStart }];
var zi = (e10, t3) => {
  const i5 = { RepresentationID: e10.id, Bandwidth: e10.bandwidth || 0 }, { initialization: s5 = { sourceURL: "", range: "" } } = e10, n4 = oi({ baseUrl: e10.baseUrl, source: Hi(s5.sourceURL, i5), range: s5.range });
  return Vi(e10, t3).map((t4) => {
    i5.Number = t4.number, i5.Time = t4.time;
    const s6 = Hi(e10.media || "", i5), r5 = e10.timescale || 1, a9 = e10.presentationTimeOffset || 0, o4 = e10.periodStart + (t4.time - a9) / r5;
    return { uri: s6, timeline: t4.timeline, duration: t4.duration, resolvedUri: je(e10.baseUrl || "", s6), map: n4, number: t4.number, presentationTime: o4 };
  });
};
var Wi = (e10, t3) => {
  const { baseUrl: i5, initialization: s5 = {} } = e10, n4 = oi({ baseUrl: i5, source: s5.sourceURL, range: s5.range }), r5 = oi({ baseUrl: i5, source: t3.media, range: t3.mediaRange });
  return r5.map = n4, r5;
};
var Gi = (e10, t3) => {
  const { duration: i5, segmentUrls: s5 = [], periodStart: n4 } = e10;
  if (!i5 && !t3 || i5 && t3) throw new Error(ai.SEGMENT_TIME_UNSPECIFIED);
  const r5 = s5.map((t4) => Wi(e10, t4));
  let a9;
  i5 && (a9 = ci(e10)), t3 && (a9 = qi(e10, t3));
  return a9.map((t4, i6) => {
    if (r5[i6]) {
      const s6 = r5[i6], a10 = e10.timescale || 1, o4 = e10.presentationTimeOffset || 0;
      return s6.timeline = t4.timeline, s6.duration = t4.duration, s6.number = t4.number, s6.presentationTime = n4 + (t4.time - o4) / a10, s6;
    }
  }).filter((e11) => e11);
};
var Xi = ({ attributes: e10, segmentInfo: t3 }) => {
  let i5, s5;
  t3.template ? (s5 = zi, i5 = Zt(e10, t3.template)) : t3.base ? (s5 = pi, i5 = Zt(e10, t3.base)) : t3.list && (s5 = Gi, i5 = Zt(e10, t3.list));
  const n4 = { attributes: e10 };
  if (!s5) return n4;
  const r5 = s5(i5, t3.segmentTimeline);
  if (i5.duration) {
    const { duration: e11, timescale: t4 = 1 } = i5;
    i5.duration = e11 / t4;
  } else r5.length ? i5.duration = r5.reduce((e11, t4) => Math.max(e11, Math.ceil(t4.duration)), 0) : i5.duration = 0;
  return n4.attributes = i5, n4.segments = r5, t3.base && i5.indexRange && (n4.sidx = r5[0], n4.segments = []), n4;
};
var Ki = (e10) => e10.map(Xi);
var Yi = (e10, t3) => si(e10.childNodes).filter(({ tagName: e11 }) => e11 === t3);
var Qi = (e10) => e10.textContent.trim();
var Ji = (e10) => parseFloat(e10.split("/").reduce((e11, t3) => e11 / t3));
var Zi = (e10) => {
  const t3 = 31536e3, i5 = 2592e3, s5 = 86400, n4 = 3600, r5 = 60, a9 = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/.exec(e10);
  if (!a9) return 0;
  const [o4, l7, h3, u6, d2, c5] = a9.slice(1);
  return parseFloat(o4 || 0) * t3 + parseFloat(l7 || 0) * i5 + parseFloat(h3 || 0) * s5 + parseFloat(u6 || 0) * n4 + parseFloat(d2 || 0) * r5 + parseFloat(c5 || 0);
};
var es = (e10) => (/^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(e10) && (e10 += "Z"), Date.parse(e10));
var ts = { mediaPresentationDuration: (e10) => Zi(e10), availabilityStartTime: (e10) => es(e10) / 1e3, minimumUpdatePeriod: (e10) => Zi(e10), suggestedPresentationDelay: (e10) => Zi(e10), type: (e10) => e10, timeShiftBufferDepth: (e10) => Zi(e10), start: (e10) => Zi(e10), width: (e10) => parseInt(e10, 10), height: (e10) => parseInt(e10, 10), bandwidth: (e10) => parseInt(e10, 10), frameRate: (e10) => Ji(e10), startNumber: (e10) => parseInt(e10, 10), timescale: (e10) => parseInt(e10, 10), presentationTimeOffset: (e10) => parseInt(e10, 10), duration(e10) {
  const t3 = parseInt(e10, 10);
  return isNaN(t3) ? Zi(e10) : t3;
}, d: (e10) => parseInt(e10, 10), t: (e10) => parseInt(e10, 10), r: (e10) => parseInt(e10, 10), presentationTime: (e10) => parseInt(e10, 10), DEFAULT: (e10) => e10 };
var is = (e10) => e10 && e10.attributes ? si(e10.attributes).reduce((e11, t3) => {
  const i5 = ts[t3.name] || ts.DEFAULT;
  return e11[t3.name] = i5(t3.value), e11;
}, {}) : {};
var ss = { "urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b": "org.w3.clearkey", "urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed": "com.widevine.alpha", "urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95": "com.microsoft.playready", "urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb": "com.adobe.primetime", "urn:mpeg:dash:mp4protection:2011": "mp4protection" };
var ns = (e10, t3) => t3.length ? ii(e10.map(function(e11) {
  return t3.map(function(t4) {
    const i5 = Qi(t4), s5 = je(e11.baseUrl, i5), n4 = Zt(is(t4), { baseUrl: s5 });
    return s5 !== i5 && !n4.serviceLocation && e11.serviceLocation && (n4.serviceLocation = e11.serviceLocation), n4;
  });
})) : e10;
var rs = (e10) => {
  const t3 = Yi(e10, "SegmentTemplate")[0], i5 = Yi(e10, "SegmentList")[0], s5 = i5 && Yi(i5, "SegmentURL").map((e11) => Zt({ tag: "SegmentURL" }, is(e11))), n4 = Yi(e10, "SegmentBase")[0], r5 = i5 || t3, a9 = r5 && Yi(r5, "SegmentTimeline")[0], o4 = i5 || n4 || t3, l7 = o4 && Yi(o4, "Initialization")[0], h3 = t3 && is(t3);
  h3 && l7 ? h3.initialization = l7 && is(l7) : h3 && h3.initialization && (h3.initialization = { sourceURL: h3.initialization });
  const u6 = { template: h3, segmentTimeline: a9 && Yi(a9, "S").map((e11) => is(e11)), list: i5 && Zt(is(i5), { segmentUrls: s5, initialization: is(l7) }), base: n4 && Zt(is(n4), { initialization: is(l7) }) };
  return Object.keys(u6).forEach((e11) => {
    u6[e11] || delete u6[e11];
  }), u6;
};
var as = (e10, t3, i5) => (s5) => {
  const n4 = Yi(s5, "BaseURL"), r5 = ns(t3, n4), a9 = Zt(e10, is(s5)), o4 = rs(s5);
  return r5.map((e11) => ({ segmentInfo: Zt(i5, o4), attributes: Zt(a9, e11) }));
};
var os = (e10) => e10.reduce((e11, t3) => {
  const i5 = is(t3);
  i5.schemeIdUri && (i5.schemeIdUri = i5.schemeIdUri.toLowerCase());
  const s5 = ss[i5.schemeIdUri];
  if (s5) {
    e11[s5] = { attributes: i5 };
    const n4 = Yi(t3, "cenc:pssh")[0];
    if (n4) {
      const t4 = Qi(n4);
      e11[s5].pssh = t4 && Ve(t4);
    }
  }
  return e11;
}, {});
var ls = (e10) => {
  if ("urn:scte:dash:cc:cea-608:2015" === e10.schemeIdUri) {
    return ("string" != typeof e10.value ? [] : e10.value.split(";")).map((e11) => {
      let t3, i5;
      return i5 = e11, /^CC\d=/.test(e11) ? [t3, i5] = e11.split("=") : /^CC\d$/.test(e11) && (t3 = e11), { channel: t3, language: i5 };
    });
  }
  if ("urn:scte:dash:cc:cea-708:2015" === e10.schemeIdUri) {
    return ("string" != typeof e10.value ? [] : e10.value.split(";")).map((e11) => {
      const t3 = { channel: void 0, language: void 0, aspectRatio: 1, easyReader: 0, "3D": 0 };
      if (/=/.test(e11)) {
        const [i5, s5 = ""] = e11.split("=");
        t3.channel = i5, t3.language = e11, s5.split(",").forEach((e12) => {
          const [i6, s6] = e12.split(":");
          "lang" === i6 ? t3.language = s6 : "er" === i6 ? t3.easyReader = Number(s6) : "war" === i6 ? t3.aspectRatio = Number(s6) : "3D" === i6 && (t3["3D"] = Number(s6));
        });
      } else t3.language = e11;
      return t3.channel && (t3.channel = "SERVICE" + t3.channel), t3;
    });
  }
};
var hs = (e10) => ii(Yi(e10.node, "EventStream").map((t3) => {
  const i5 = is(t3), s5 = i5.schemeIdUri;
  return Yi(t3, "Event").map((t4) => {
    const n4 = is(t4), r5 = n4.presentationTime || 0, a9 = i5.timescale || 1, o4 = n4.duration || 0, l7 = r5 / a9 + e10.attributes.start;
    return { schemeIdUri: s5, value: i5.value, id: n4.id, start: l7, end: l7 + o4 / a9, messageData: Qi(t4) || n4.messageData, contentEncoding: i5.contentEncoding, presentationTimeOffset: i5.presentationTimeOffset || 0 };
  });
}));
var us = (e10, t3, i5) => (s5) => {
  const n4 = is(s5), r5 = ns(t3, Yi(s5, "BaseURL")), a9 = Yi(s5, "Role")[0], o4 = { role: is(a9) };
  let l7 = Zt(e10, n4, o4);
  const h3 = Yi(s5, "Accessibility")[0], u6 = ls(is(h3));
  u6 && (l7 = Zt(l7, { captionServices: u6 }));
  const d2 = Yi(s5, "Label")[0];
  if (d2 && d2.childNodes.length) {
    const e11 = d2.childNodes[0].nodeValue.trim();
    l7 = Zt(l7, { label: e11 });
  }
  const c5 = os(Yi(s5, "ContentProtection"));
  Object.keys(c5).length && (l7 = Zt(l7, { contentProtection: c5 }));
  const p5 = rs(s5), m7 = Yi(s5, "Representation"), g2 = Zt(i5, p5);
  return ii(m7.map(as(l7, r5, g2)));
};
var ds = (e10, t3) => (i5, s5) => {
  const n4 = ns(t3, Yi(i5.node, "BaseURL")), r5 = Zt(e10, { periodStart: i5.attributes.start });
  "number" == typeof i5.attributes.duration && (r5.periodDuration = i5.attributes.duration);
  const a9 = Yi(i5.node, "AdaptationSet"), o4 = rs(i5.node);
  return ii(a9.map(us(r5, n4, o4)));
};
var cs = (e10, t3) => {
  if (e10.length > 1 && t3({ type: "warn", message: "The MPD manifest should contain no more than one ContentSteering tag" }), !e10.length) return null;
  const i5 = Zt({ serverURL: Qi(e10[0]) }, is(e10[0]));
  return i5.queryBeforeStart = "true" === i5.queryBeforeStart, i5;
};
var ps = ({ attributes: e10, priorPeriodAttributes: t3, mpdType: i5 }) => "number" == typeof e10.start ? e10.start : t3 && "number" == typeof t3.start && "number" == typeof t3.duration ? t3.start + t3.duration : t3 || "static" !== i5 ? null : 0;
var ms = (e10, t3 = {}) => {
  const { manifestUri: i5 = "", NOW: s5 = Date.now(), clientOffset: n4 = 0, eventHandler: r5 = function() {
  } } = t3, a9 = Yi(e10, "Period");
  if (!a9.length) throw new Error(ai.INVALID_NUMBER_OF_PERIOD);
  const o4 = Yi(e10, "Location"), l7 = is(e10), h3 = ns([{ baseUrl: i5 }], Yi(e10, "BaseURL")), u6 = Yi(e10, "ContentSteering");
  l7.type = l7.type || "static", l7.sourceDuration = l7.mediaPresentationDuration || 0, l7.NOW = s5, l7.clientOffset = n4, o4.length && (l7.locations = o4.map(Qi));
  const d2 = [];
  return a9.forEach((e11, t4) => {
    const i6 = is(e11), s6 = d2[t4 - 1];
    i6.start = ps({ attributes: i6, priorPeriodAttributes: s6 ? s6.attributes : null, mpdType: l7.type }), d2.push({ node: e11, attributes: i6 });
  }), { locations: l7.locations, contentSteeringInfo: cs(u6, r5), representationInfo: ii(d2.map(ds(l7, h3))), eventStream: ii(d2.map(hs)) };
};
var gs = (e10) => {
  if ("" === e10) throw new Error(ai.DASH_EMPTY_MANIFEST);
  const t3 = new Qt.DOMParser();
  let i5, s5;
  try {
    i5 = t3.parseFromString(e10, "application/xml"), s5 = i5 && "MPD" === i5.documentElement.tagName ? i5.documentElement : null;
  } catch (n4) {
  }
  if (!s5 || s5 && s5.getElementsByTagName("parsererror").length > 0) throw new Error(ai.DASH_INVALID_XML);
  return s5;
};
var fs = (e10) => {
  const t3 = Yi(e10, "UTCTiming")[0];
  if (!t3) return null;
  const i5 = is(t3);
  switch (i5.schemeIdUri) {
    case "urn:mpeg:dash:utc:http-head:2014":
    case "urn:mpeg:dash:utc:http-head:2012":
      i5.method = "HEAD";
      break;
    case "urn:mpeg:dash:utc:http-xsdate:2014":
    case "urn:mpeg:dash:utc:http-iso:2014":
    case "urn:mpeg:dash:utc:http-xsdate:2012":
    case "urn:mpeg:dash:utc:http-iso:2012":
      i5.method = "GET";
      break;
    case "urn:mpeg:dash:utc:direct:2014":
    case "urn:mpeg:dash:utc:direct:2012":
      i5.method = "DIRECT", i5.value = Date.parse(i5.value);
      break;
    default:
      throw new Error(ai.UNSUPPORTED_UTC_TIMING_SCHEME);
  }
  return i5;
};
var ys = (e10, t3 = {}) => {
  const i5 = ms(gs(e10), t3), s5 = Ki(i5.representationInfo);
  return Bi({ dashPlaylists: s5, locations: i5.locations, contentSteering: i5.contentSteeringInfo, sidxMapping: t3.sidxMapping, previousManifest: t3.previousManifest, eventStream: i5.eventStream });
};
var _s2 = (e10) => fs(gs(e10));
var vs;
var bs;
var Ts;
var Ss;
function Es() {
  if (bs) return vs;
  bs = 1;
  var e10 = Math.pow(2, 32);
  return vs = { getUint64: function(t3) {
    var i5, s5 = new DataView(t3.buffer, t3.byteOffset, t3.byteLength);
    return s5.getBigUint64 ? (i5 = s5.getBigUint64(0)) < Number.MAX_SAFE_INTEGER ? Number(i5) : i5 : s5.getUint32(0) * e10 + s5.getUint32(4);
  }, MAX_UINT32: e10 };
}
function ws() {
  if (Ss) return Ts;
  Ss = 1;
  var e10 = Es().getUint64;
  return Ts = function(t3) {
    var i5 = new DataView(t3.buffer, t3.byteOffset, t3.byteLength), s5 = { version: t3[0], flags: new Uint8Array(t3.subarray(1, 4)), references: [], referenceId: i5.getUint32(4), timescale: i5.getUint32(8) }, n4 = 12;
    0 === s5.version ? (s5.earliestPresentationTime = i5.getUint32(n4), s5.firstOffset = i5.getUint32(n4 + 4), n4 += 8) : (s5.earliestPresentationTime = e10(t3.subarray(n4)), s5.firstOffset = e10(t3.subarray(n4 + 8)), n4 += 16), n4 += 2;
    var r5 = i5.getUint16(n4);
    for (n4 += 2; r5 > 0; n4 += 12, r5--) s5.references.push({ referenceType: (128 & t3[n4]) >>> 7, referencedSize: 2147483647 & i5.getUint32(n4), subsegmentDuration: i5.getUint32(n4 + 4), startsWithSap: !!(128 & t3[n4 + 8]), sapType: (112 & t3[n4 + 8]) >>> 4, sapDeltaTime: 268435455 & i5.getUint32(n4 + 8) });
    return s5;
  };
}
var Cs = o3(ws());
var ks = wt([73, 68, 51]);
var Is = function(e10, t3) {
  void 0 === t3 && (t3 = 0);
  var i5 = (e10 = wt(e10))[t3 + 5], s5 = e10[t3 + 6] << 21 | e10[t3 + 7] << 14 | e10[t3 + 8] << 7 | e10[t3 + 9];
  return (16 & i5) >> 4 ? s5 + 20 : s5 + 10;
};
var xs = function e5(t3, i5) {
  return void 0 === i5 && (i5 = 0), (t3 = wt(t3)).length - i5 < 10 || !Ot(t3, ks, { offset: i5 }) ? i5 : e5(t3, i5 += Is(t3, i5));
};
var As = function(e10) {
  return "string" == typeof e10 ? Pt(e10) : e10;
};
var Ds = function(e10) {
  return Array.isArray(e10) ? e10.map(function(e11) {
    return As(e11);
  }) : [As(e10)];
};
var Ps = function e6(t3, i5, s5) {
  void 0 === s5 && (s5 = false), i5 = Ds(i5), t3 = wt(t3);
  var n4 = [];
  if (!i5.length) return n4;
  for (var r5 = 0; r5 < t3.length; ) {
    var a9 = (t3[r5] << 24 | t3[r5 + 1] << 16 | t3[r5 + 2] << 8 | t3[r5 + 3]) >>> 0, o4 = t3.subarray(r5 + 4, r5 + 8);
    if (0 === a9) break;
    var l7 = r5 + a9;
    if (l7 > t3.length) {
      if (s5) break;
      l7 = t3.length;
    }
    var h3 = t3.subarray(r5 + 8, l7);
    Ot(o4, i5[0]) && (1 === i5.length ? n4.push(h3) : n4.push.apply(n4, e6(h3, i5.slice(1), s5))), r5 = l7;
  }
  return n4;
};
var Ls = { EBML: wt([26, 69, 223, 163]), DocType: wt([66, 130]), Segment: wt([24, 83, 128, 103]), SegmentInfo: wt([21, 73, 169, 102]), Tracks: wt([22, 84, 174, 107]), Track: wt([174]), TrackNumber: wt([215]), DefaultDuration: wt([35, 227, 131]), TrackEntry: wt([174]), TrackType: wt([131]), FlagDefault: wt([136]), CodecID: wt([134]), CodecPrivate: wt([99, 162]), VideoTrack: wt([224]), AudioTrack: wt([225]), Cluster: wt([31, 67, 182, 117]), Timestamp: wt([231]), TimestampScale: wt([42, 215, 177]), BlockGroup: wt([160]), BlockDuration: wt([155]), Block: wt([161]), SimpleBlock: wt([163]) };
var Os = [128, 64, 32, 16, 8, 4, 2, 1];
var Ns = function(e10) {
  for (var t3 = 1, i5 = 0; i5 < Os.length && !(e10 & Os[i5]); i5++) t3++;
  return t3;
};
var Rs = function(e10, t3, i5, s5) {
  void 0 === i5 && (i5 = true), void 0 === s5 && (s5 = false);
  var n4 = Ns(e10[t3]), r5 = e10.subarray(t3, t3 + n4);
  return i5 && ((r5 = Array.prototype.slice.call(e10, t3, t3 + n4))[0] ^= Os[n4 - 1]), { length: n4, value: At(r5, { signed: s5 }), bytes: r5 };
};
var Ms = function e7(t3) {
  return "string" == typeof t3 ? t3.match(/.{1,2}/g).map(function(t4) {
    return e7(t4);
  }) : "number" == typeof t3 ? Dt(t3) : t3;
};
var Us = function(e10) {
  return Array.isArray(e10) ? e10.map(function(e11) {
    return Ms(e11);
  }) : [Ms(e10)];
};
var Bs = function e8(t3, i5, s5) {
  if (s5 >= i5.length) return i5.length;
  var n4 = Rs(i5, s5, false);
  if (Ot(t3.bytes, n4.bytes)) return s5;
  var r5 = Rs(i5, s5 + n4.length);
  return e8(t3, i5, s5 + r5.length + r5.value + n4.length);
};
var Fs = function e9(t3, i5) {
  i5 = Us(i5), t3 = wt(t3);
  var s5 = [];
  if (!i5.length) return s5;
  for (var n4 = 0; n4 < t3.length; ) {
    var r5 = Rs(t3, n4, false), a9 = Rs(t3, n4 + r5.length), o4 = n4 + r5.length + a9.length;
    127 === a9.value && (a9.value = Bs(r5, t3, o4), a9.value !== t3.length && (a9.value -= o4));
    var l7 = o4 + a9.value > t3.length ? t3.length : o4 + a9.value, h3 = t3.subarray(o4, l7);
    Ot(i5[0], r5.bytes) && (1 === i5.length ? s5.push(h3) : s5 = s5.concat(e9(h3, i5.slice(1)))), n4 += r5.length + a9.length + h3.length;
  }
  return s5;
};
var qs = wt([0, 0, 0, 1]);
var js = wt([0, 0, 1]);
var $s = wt([0, 0, 3]);
var Hs = function(e10) {
  for (var t3 = [], i5 = 1; i5 < e10.length - 2; ) Ot(e10.subarray(i5, i5 + 3), $s) && (t3.push(i5 + 2), i5++), i5++;
  if (0 === t3.length) return e10;
  var s5 = e10.length - t3.length, n4 = new Uint8Array(s5), r5 = 0;
  for (i5 = 0; i5 < s5; r5++, i5++) r5 === t3[0] && (r5++, t3.shift()), n4[i5] = e10[r5];
  return n4;
};
var Vs = function(e10, t3, i5, s5) {
  e10 = wt(e10), i5 = [].concat(i5);
  for (var n4, r5 = 0, a9 = 0; r5 < e10.length && (a9 < s5 || n4); ) {
    var o4 = void 0;
    if (Ot(e10.subarray(r5), qs) ? o4 = 4 : Ot(e10.subarray(r5), js) && (o4 = 3), o4) {
      if (a9++, n4) return Hs(e10.subarray(n4, r5));
      var l7 = void 0;
      "h264" === t3 ? l7 = 31 & e10[r5 + o4] : "h265" === t3 && (l7 = e10[r5 + o4] >> 1 & 63), -1 !== i5.indexOf(l7) && (n4 = r5 + o4), r5 += o4 + ("h264" === t3 ? 1 : 2);
    } else r5++;
  }
  return e10.subarray(0, 0);
};
var zs = function(e10, t3, i5) {
  return Vs(e10, "h264", t3, i5);
};
var Ws = function(e10, t3, i5) {
  return Vs(e10, "h265", t3, i5);
};
var Gs = { webm: wt([119, 101, 98, 109]), matroska: wt([109, 97, 116, 114, 111, 115, 107, 97]), flac: wt([102, 76, 97, 67]), ogg: wt([79, 103, 103, 83]), ac3: wt([11, 119]), riff: wt([82, 73, 70, 70]), avi: wt([65, 86, 73]), wav: wt([87, 65, 86, 69]), "3gp": wt([102, 116, 121, 112, 51, 103]), mp4: wt([102, 116, 121, 112]), fmp4: wt([115, 116, 121, 112]), mov: wt([102, 116, 121, 112, 113, 116]), moov: wt([109, 111, 111, 118]), moof: wt([109, 111, 111, 102]) };
var Xs = { aac: function(e10) {
  var t3 = xs(e10);
  return Ot(e10, [255, 16], { offset: t3, mask: [255, 22] });
}, mp3: function(e10) {
  var t3 = xs(e10);
  return Ot(e10, [255, 2], { offset: t3, mask: [255, 6] });
}, webm: function(e10) {
  var t3 = Fs(e10, [Ls.EBML, Ls.DocType])[0];
  return Ot(t3, Gs.webm);
}, mkv: function(e10) {
  var t3 = Fs(e10, [Ls.EBML, Ls.DocType])[0];
  return Ot(t3, Gs.matroska);
}, mp4: function(e10) {
  return !Xs["3gp"](e10) && !Xs.mov(e10) && (!(!Ot(e10, Gs.mp4, { offset: 4 }) && !Ot(e10, Gs.fmp4, { offset: 4 })) || (!(!Ot(e10, Gs.moof, { offset: 4 }) && !Ot(e10, Gs.moov, { offset: 4 })) || void 0));
}, mov: function(e10) {
  return Ot(e10, Gs.mov, { offset: 4 });
}, "3gp": function(e10) {
  return Ot(e10, Gs["3gp"], { offset: 4 });
}, ac3: function(e10) {
  var t3 = xs(e10);
  return Ot(e10, Gs.ac3, { offset: t3 });
}, ts: function(e10) {
  if (e10.length < 189 && e10.length >= 1) return 71 === e10[0];
  for (var t3 = 0; t3 + 188 < e10.length && t3 < 188; ) {
    if (71 === e10[t3] && 71 === e10[t3 + 188]) return true;
    t3 += 1;
  }
  return false;
}, flac: function(e10) {
  var t3 = xs(e10);
  return Ot(e10, Gs.flac, { offset: t3 });
}, ogg: function(e10) {
  return Ot(e10, Gs.ogg);
}, avi: function(e10) {
  return Ot(e10, Gs.riff) && Ot(e10, Gs.avi, { offset: 8 });
}, wav: function(e10) {
  return Ot(e10, Gs.riff) && Ot(e10, Gs.wav, { offset: 8 });
}, h264: function(e10) {
  return zs(e10, 7, 3).length;
}, h265: function(e10) {
  return Ws(e10, [32, 33], 3).length;
} };
var Ks = Object.keys(Xs).filter(function(e10) {
  return "ts" !== e10 && "h264" !== e10 && "h265" !== e10;
}).concat(["ts", "h264", "h265"]);
Ks.forEach(function(e10) {
  var t3 = Xs[e10];
  Xs[e10] = function(e11) {
    return t3(wt(e11));
  };
});
var Ys;
var Qs;
var Js = Xs;
var Zs = function(e10) {
  e10 = wt(e10);
  for (var t3 = 0; t3 < Ks.length; t3++) {
    var i5 = Ks[t3];
    if (Js[i5](e10)) return i5;
  }
  return "";
};
var en = function(e10) {
  return Ps(e10, ["moof"]).length > 0;
};
function tn() {
  if (Qs) return Ys;
  Qs = 1;
  var e10, t3, i5, s5, n4, r5, a9, o4 = 9e4;
  return n4 = function(t4, i6) {
    return e10(s5(t4, i6));
  }, r5 = function(e11, s6) {
    return t3(i5(e11), s6);
  }, a9 = function(e11, t4, s6) {
    return i5(s6 ? e11 : e11 - t4);
  }, Ys = { ONE_SECOND_IN_TS: o4, secondsToVideoTs: e10 = function(e11) {
    return e11 * o4;
  }, secondsToAudioTs: t3 = function(e11, t4) {
    return e11 * t4;
  }, videoTsToSeconds: i5 = function(e11) {
    return e11 / o4;
  }, audioTsToSeconds: s5 = function(e11, t4) {
    return e11 / t4;
  }, audioTsToVideoTs: n4, videoTsToAudioTs: r5, metadataTsToSeconds: a9 };
}
var sn = tn();
var nn = "8.22.0";
var rn = {};
var an = function(e10, t3) {
  return rn[e10] = rn[e10] || [], t3 && (rn[e10] = rn[e10].concat(t3)), rn[e10];
};
var on = function(e10, t3) {
  an(e10, t3);
};
var ln = function(e10, t3) {
  const i5 = an(e10).indexOf(t3);
  return !(i5 <= -1) && (rn[e10] = rn[e10].slice(), rn[e10].splice(i5, 1), true);
};
var hn = function(e10, t3) {
  an(e10, [].concat(t3).map((t4) => {
    const i5 = (...s5) => (ln(e10, i5), t4(...s5));
    return i5;
  }));
};
var un = { prefixed: true };
var dn = [["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror", "fullscreen"], ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror", "-webkit-full-screen"]];
var cn = dn[0];
var pn;
for (let Cg = 0; Cg < dn.length; Cg++) if (dn[Cg][1] in ae) {
  pn = dn[Cg];
  break;
}
if (pn) {
  for (let e10 = 0; e10 < pn.length; e10++) un[cn[e10]] = pn[e10];
  un.prefixed = pn[0] !== cn[0];
}
var mn = [];
var gn = (e10, t3, i5) => (s5, n4, r5) => {
  const a9 = t3.levels[n4], o4 = new RegExp(`^(${a9})$`);
  let l7 = e10;
  if ("log" !== s5 && r5.unshift(s5.toUpperCase() + ":"), i5 && (l7 = `%c${e10}`, r5.unshift(i5)), r5.unshift(l7 + ":"), mn) {
    mn.push([].concat(r5));
    const e11 = mn.length - 1e3;
    mn.splice(0, e11 > 0 ? e11 : 0);
  }
  if (!b3.console) return;
  let h3 = b3.console[s5];
  h3 || "debug" !== s5 || (h3 = b3.console.info || b3.console.log), h3 && a9 && o4.test(s5) && h3[Array.isArray(r5) ? "apply" : "call"](b3.console, r5);
};
function fn(e10, t3 = ":", i5 = "") {
  let s5, n4 = "info";
  function r5(...e11) {
    s5("log", n4, e11);
  }
  return s5 = gn(e10, r5, i5), r5.createLogger = (s6, n5, r6) => {
    const a9 = void 0 !== n5 ? n5 : t3;
    return fn(`${e10} ${a9} ${s6}`, a9, void 0 !== r6 ? r6 : i5);
  }, r5.createNewLogger = (e11, t4, i6) => fn(e11, t4, i6), r5.levels = { all: "debug|log|warn|error", off: "", debug: "debug|log|warn|error", info: "log|warn|error", warn: "warn|error", error: "error", DEFAULT: n4 }, r5.level = (e11) => {
    if ("string" == typeof e11) {
      if (!r5.levels.hasOwnProperty(e11)) throw new Error(`"${e11}" in not a valid log level`);
      n4 = e11;
    }
    return n4;
  }, r5.history = () => mn ? [].concat(mn) : [], r5.history.filter = (e11) => (mn || []).filter((t4) => new RegExp(`.*${e11}.*`).test(t4[0])), r5.history.clear = () => {
    mn && (mn.length = 0);
  }, r5.history.disable = () => {
    null !== mn && (mn.length = 0, mn = null);
  }, r5.history.enable = () => {
    null === mn && (mn = []);
  }, r5.error = (...e11) => s5("error", n4, e11), r5.warn = (...e11) => s5("warn", n4, e11), r5.debug = (...e11) => s5("debug", n4, e11), r5;
}
var yn = fn("VIDEOJS");
var _n = yn.createLogger;
var vn = Object.prototype.toString;
var bn = function(e10) {
  return En(e10) ? Object.keys(e10) : [];
};
function Tn(e10, t3) {
  bn(e10).forEach((i5) => t3(e10[i5], i5));
}
function Sn(e10, t3, i5 = 0) {
  return bn(e10).reduce((i6, s5) => t3(i6, e10[s5], s5), i5);
}
function En(e10) {
  return !!e10 && "object" == typeof e10;
}
function wn(e10) {
  return En(e10) && "[object Object]" === vn.call(e10) && e10.constructor === Object;
}
function Cn(...e10) {
  const t3 = {};
  return e10.forEach((e11) => {
    e11 && Tn(e11, (e12, i5) => {
      wn(e12) ? (wn(t3[i5]) || (t3[i5] = {}), t3[i5] = Cn(t3[i5], e12)) : t3[i5] = e12;
    });
  }), t3;
}
function kn(e10 = {}) {
  const t3 = [];
  for (const i5 in e10) if (e10.hasOwnProperty(i5)) {
    const s5 = e10[i5];
    t3.push(s5);
  }
  return t3;
}
function In(e10, t3, i5, s5 = true) {
  const n4 = (i6) => Object.defineProperty(e10, t3, { value: i6, enumerable: true, writable: true }), r5 = { configurable: true, enumerable: true, get() {
    const e11 = i5();
    return n4(e11), e11;
  } };
  return s5 && (r5.set = n4), Object.defineProperty(e10, t3, r5);
}
var xn = Object.freeze({ __proto__: null, each: Tn, reduce: Sn, isObject: En, isPlain: wn, merge: Cn, values: kn, defineLazyProperty: In });
var An;
var Dn = false;
var Pn = null;
var Ln = false;
var On = false;
var Nn = false;
var Rn = false;
var Mn = false;
var Un = null;
var Bn = null;
var Fn = Boolean(b3.cast && b3.cast.framework && b3.cast.framework.CastReceiverContext);
var qn = null;
var jn = false;
var $n = false;
var Hn = false;
var Vn = false;
var zn = false;
var Wn = false;
var Gn = false;
var Xn = Boolean(tr() && ("ontouchstart" in b3 || b3.navigator.maxTouchPoints || b3.DocumentTouch && b3.document instanceof b3.DocumentTouch));
var Kn = b3.navigator && b3.navigator.userAgentData;
if (Kn && Kn.platform && Kn.brands && (Ln = "Android" === Kn.platform, Nn = Boolean(Kn.brands.find((e10) => "Microsoft Edge" === e10.brand)), Rn = Boolean(Kn.brands.find((e10) => "Chromium" === e10.brand)), Mn = !Nn && Rn, Un = Bn = (Kn.brands.find((e10) => "Chromium" === e10.brand) || {}).version || null, $n = "Windows" === Kn.platform), !Rn) {
  const e10 = b3.navigator && b3.navigator.userAgent || "";
  Dn = /iPod/i.test(e10), Pn = function() {
    const t3 = e10.match(/OS (\d+)_/i);
    return t3 && t3[1] ? t3[1] : null;
  }(), Ln = /Android/i.test(e10), An = function() {
    const t3 = e10.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
    if (!t3) return null;
    const i5 = t3[1] && parseFloat(t3[1]), s5 = t3[2] && parseFloat(t3[2]);
    return i5 && s5 ? parseFloat(t3[1] + "." + t3[2]) : i5 || null;
  }(), On = /Firefox/i.test(e10), Nn = /Edg/i.test(e10), Rn = /Chrome/i.test(e10) || /CriOS/i.test(e10), Mn = !Nn && Rn, Un = Bn = function() {
    const t3 = e10.match(/(Chrome|CriOS)\/(\d+)/);
    return t3 && t3[2] ? parseFloat(t3[2]) : null;
  }(), qn = function() {
    const t3 = /MSIE\s(\d+)\.\d/.exec(e10);
    let i5 = t3 && parseFloat(t3[1]);
    return !i5 && /Trident\/7.0/i.test(e10) && /rv:11.0/.test(e10) && (i5 = 11), i5;
  }(), zn = /Tizen/i.test(e10), Wn = /Web0S/i.test(e10), Gn = zn || Wn, jn = /Safari/i.test(e10) && !Mn && !Ln && !Nn && !Gn, $n = /Windows/i.test(e10), Hn = /iPad/i.test(e10) || jn && Xn && !/iPhone/i.test(e10), Vn = /iPhone/i.test(e10) && !Hn;
}
var Yn = Vn || Hn || Dn;
var Qn = (jn || Yn) && !Mn;
var Jn = Object.freeze({ __proto__: null, get IS_IPOD() {
  return Dn;
}, get IOS_VERSION() {
  return Pn;
}, get IS_ANDROID() {
  return Ln;
}, get ANDROID_VERSION() {
  return An;
}, get IS_FIREFOX() {
  return On;
}, get IS_EDGE() {
  return Nn;
}, get IS_CHROMIUM() {
  return Rn;
}, get IS_CHROME() {
  return Mn;
}, get CHROMIUM_VERSION() {
  return Un;
}, get CHROME_VERSION() {
  return Bn;
}, IS_CHROMECAST_RECEIVER: Fn, get IE_VERSION() {
  return qn;
}, get IS_SAFARI() {
  return jn;
}, get IS_WINDOWS() {
  return $n;
}, get IS_IPAD() {
  return Hn;
}, get IS_IPHONE() {
  return Vn;
}, get IS_TIZEN() {
  return zn;
}, get IS_WEBOS() {
  return Wn;
}, get IS_SMART_TV() {
  return Gn;
}, TOUCH_ENABLED: Xn, IS_IOS: Yn, IS_ANY_SAFARI: Qn });
function Zn(e10) {
  return "string" == typeof e10 && Boolean(e10.trim());
}
function er(e10) {
  if (e10.indexOf(" ") >= 0) throw new Error("class has illegal whitespace characters");
}
function tr() {
  return ae === b3.document;
}
function ir(e10) {
  return En(e10) && 1 === e10.nodeType;
}
function sr() {
  try {
    return b3.parent !== b3.self;
  } catch (e10) {
    return true;
  }
}
function nr(e10) {
  return function(t3, i5) {
    if (!Zn(t3)) return ae[e10](null);
    Zn(i5) && (i5 = ae.querySelector(i5));
    const s5 = ir(i5) ? i5 : ae;
    return s5[e10] && s5[e10](t3);
  };
}
function rr(e10 = "div", t3 = {}, i5 = {}, s5) {
  const n4 = ae.createElement(e10);
  return Object.getOwnPropertyNames(t3).forEach(function(e11) {
    const i6 = t3[e11];
    "textContent" === e11 ? ar(n4, i6) : n4[e11] === i6 && "tabIndex" !== e11 || (n4[e11] = i6);
  }), Object.getOwnPropertyNames(i5).forEach(function(e11) {
    n4.setAttribute(e11, i5[e11]);
  }), s5 && Cr(n4, s5), n4;
}
function ar(e10, t3) {
  return void 0 === e10.textContent ? e10.innerText = t3 : e10.textContent = t3, e10;
}
function or(e10, t3) {
  t3.firstChild ? t3.insertBefore(e10, t3.firstChild) : t3.appendChild(e10);
}
function lr(e10, t3) {
  return er(t3), e10.classList.contains(t3);
}
function hr(e10, ...t3) {
  return e10.classList.add(...t3.reduce((e11, t4) => e11.concat(t4.split(/\s+/)), [])), e10;
}
function ur(e10, ...t3) {
  return e10 ? (e10.classList.remove(...t3.reduce((e11, t4) => e11.concat(t4.split(/\s+/)), [])), e10) : (yn.warn("removeClass was called with an element that doesn't exist"), null);
}
function dr(e10, t3, i5) {
  return "function" == typeof i5 && (i5 = i5(e10, t3)), "boolean" != typeof i5 && (i5 = void 0), t3.split(/\s+/).forEach((t4) => e10.classList.toggle(t4, i5)), e10;
}
function cr(e10, t3) {
  Object.getOwnPropertyNames(t3).forEach(function(i5) {
    const s5 = t3[i5];
    null == s5 || false === s5 ? e10.removeAttribute(i5) : e10.setAttribute(i5, true === s5 ? "" : s5);
  });
}
function pr(e10) {
  const t3 = {}, i5 = ["autoplay", "controls", "playsinline", "loop", "muted", "default", "defaultMuted"];
  if (e10 && e10.attributes && e10.attributes.length > 0) {
    const s5 = e10.attributes;
    for (let e11 = s5.length - 1; e11 >= 0; e11--) {
      const n4 = s5[e11].name;
      let r5 = s5[e11].value;
      i5.includes(n4) && (r5 = null !== r5), t3[n4] = r5;
    }
  }
  return t3;
}
function mr(e10, t3) {
  return e10.getAttribute(t3);
}
function gr(e10, t3, i5) {
  e10.setAttribute(t3, i5);
}
function fr(e10, t3) {
  e10.removeAttribute(t3);
}
function yr() {
  ae.body.focus(), ae.onselectstart = function() {
    return false;
  };
}
function _r() {
  ae.onselectstart = function() {
    return true;
  };
}
function vr(e10) {
  if (e10 && e10.getBoundingClientRect && e10.parentNode) {
    const t3 = e10.getBoundingClientRect(), i5 = {};
    return ["bottom", "height", "left", "right", "top", "width"].forEach((e11) => {
      void 0 !== t3[e11] && (i5[e11] = t3[e11]);
    }), i5.height || (i5.height = parseFloat(Dr(e10, "height"))), i5.width || (i5.width = parseFloat(Dr(e10, "width"))), i5;
  }
}
function br(e10) {
  if (!e10 || e10 && !e10.offsetParent) return { left: 0, top: 0, width: 0, height: 0 };
  const t3 = e10.offsetWidth, i5 = e10.offsetHeight;
  let s5 = 0, n4 = 0;
  for (; e10.offsetParent && e10 !== ae[un.fullscreenElement]; ) s5 += e10.offsetLeft, n4 += e10.offsetTop, e10 = e10.offsetParent;
  return { left: s5, top: n4, width: t3, height: i5 };
}
function Tr(e10, t3) {
  const i5 = { x: 0, y: 0 };
  if (Yn) {
    let t4 = e10;
    for (; t4 && "html" !== t4.nodeName.toLowerCase(); ) {
      const e11 = Dr(t4, "transform");
      if (/^matrix/.test(e11)) {
        const t5 = e11.slice(7, -1).split(/,\s/).map(Number);
        i5.x += t5[4], i5.y += t5[5];
      } else if (/^matrix3d/.test(e11)) {
        const t5 = e11.slice(9, -1).split(/,\s/).map(Number);
        i5.x += t5[12], i5.y += t5[13];
      }
      if (t4.assignedSlot && t4.assignedSlot.parentElement && b3.WebKitCSSMatrix) {
        const e12 = b3.getComputedStyle(t4.assignedSlot.parentElement).transform, s6 = new b3.WebKitCSSMatrix(e12);
        i5.x += s6.m41, i5.y += s6.m42;
      }
      t4 = t4.parentNode || t4.host;
    }
  }
  const s5 = {}, n4 = br(t3.target), r5 = br(e10), a9 = r5.width, o4 = r5.height;
  let l7 = t3.offsetY - (r5.top - n4.top), h3 = t3.offsetX - (r5.left - n4.left);
  return t3.changedTouches && (h3 = t3.changedTouches[0].pageX - r5.left, l7 = t3.changedTouches[0].pageY + r5.top, Yn && (h3 -= i5.x, l7 -= i5.y)), s5.y = 1 - Math.max(0, Math.min(1, l7 / o4)), s5.x = Math.max(0, Math.min(1, h3 / a9)), s5;
}
function Sr(e10) {
  return En(e10) && 3 === e10.nodeType;
}
function Er(e10) {
  for (; e10.firstChild; ) e10.removeChild(e10.firstChild);
  return e10;
}
function wr(e10) {
  return "function" == typeof e10 && (e10 = e10()), (Array.isArray(e10) ? e10 : [e10]).map((e11) => ("function" == typeof e11 && (e11 = e11()), ir(e11) || Sr(e11) ? e11 : "string" == typeof e11 && /\S/.test(e11) ? ae.createTextNode(e11) : void 0)).filter((e11) => e11);
}
function Cr(e10, t3) {
  return wr(t3).forEach((t4) => e10.appendChild(t4)), e10;
}
function kr(e10, t3) {
  return Cr(Er(e10), t3);
}
function Ir(e10) {
  return void 0 === e10.button && void 0 === e10.buttons || (0 === e10.button && void 0 === e10.buttons || ("mouseup" === e10.type && 0 === e10.button && 0 === e10.buttons || ("mousedown" === e10.type && 0 === e10.button && 0 === e10.buttons || 0 === e10.button && 1 === e10.buttons)));
}
var xr = nr("querySelector");
var Ar = nr("querySelectorAll");
function Dr(e10, t3) {
  if (!e10 || !t3) return "";
  if ("function" == typeof b3.getComputedStyle) {
    let s5;
    try {
      s5 = b3.getComputedStyle(e10);
    } catch (i5) {
      return "";
    }
    return s5 ? s5.getPropertyValue(t3) || s5[t3] : "";
  }
  return "";
}
function Pr(e10) {
  [...ae.styleSheets].forEach((t3) => {
    try {
      const i5 = [...t3.cssRules].map((e11) => e11.cssText).join(""), s5 = ae.createElement("style");
      s5.textContent = i5, e10.document.head.appendChild(s5);
    } catch (i5) {
      const s5 = ae.createElement("link");
      s5.rel = "stylesheet", s5.type = t3.type, s5.media = t3.media.mediaText, s5.href = t3.href, e10.document.head.appendChild(s5);
    }
  });
}
var Lr = Object.freeze({ __proto__: null, isReal: tr, isEl: ir, isInFrame: sr, createEl: rr, textContent: ar, prependTo: or, hasClass: lr, addClass: hr, removeClass: ur, toggleClass: dr, setAttributes: cr, getAttributes: pr, getAttribute: mr, setAttribute: gr, removeAttribute: fr, blockTextSelection: yr, unblockTextSelection: _r, getBoundingClientRect: vr, findPosition: br, getPointerPosition: Tr, isTextNode: Sr, emptyEl: Er, normalizeContent: wr, appendContent: Cr, insertContent: kr, isSingleLeftClick: Ir, $: xr, $$: Ar, computedStyle: Dr, copyStyleSheetsToWindow: Pr });
var Or;
var Nr = false;
var Rr = function() {
  if (false === Or.options.autoSetup) return;
  const e10 = Array.prototype.slice.call(ae.getElementsByTagName("video")), t3 = Array.prototype.slice.call(ae.getElementsByTagName("audio")), i5 = Array.prototype.slice.call(ae.getElementsByTagName("video-js")), s5 = e10.concat(t3, i5);
  if (s5 && s5.length > 0) for (let n4 = 0, r5 = s5.length; n4 < r5; n4++) {
    const e11 = s5[n4];
    if (!e11 || !e11.getAttribute) {
      Mr(1);
      break;
    }
    if (void 0 === e11.player) {
      null !== e11.getAttribute("data-setup") && Or(e11);
    }
  }
  else Nr || Mr(1);
};
function Mr(e10, t3) {
  tr() && (t3 && (Or = t3), b3.setTimeout(Rr, e10));
}
function Ur() {
  Nr = true, b3.removeEventListener("load", Ur);
}
tr() && ("complete" === ae.readyState ? Ur() : b3.addEventListener("load", Ur));
var Br = function(e10) {
  const t3 = ae.createElement("style");
  return t3.className = e10, t3;
};
var Fr = function(e10, t3) {
  e10.styleSheet ? e10.styleSheet.cssText = t3 : e10.textContent = t3;
};
var qr = /* @__PURE__ */ new WeakMap();
var jr;
var $r = 3;
function Hr() {
  return $r++;
}
function Vr(e10, t3) {
  if (!qr.has(e10)) return;
  const i5 = qr.get(e10);
  0 === i5.handlers[t3].length && (delete i5.handlers[t3], e10.removeEventListener ? e10.removeEventListener(t3, i5.dispatcher, false) : e10.detachEvent && e10.detachEvent("on" + t3, i5.dispatcher)), Object.getOwnPropertyNames(i5.handlers).length <= 0 && (delete i5.handlers, delete i5.dispatcher, delete i5.disabled), 0 === Object.getOwnPropertyNames(i5).length && qr.delete(e10);
}
function zr(e10, t3, i5, s5) {
  i5.forEach(function(i6) {
    e10(t3, i6, s5);
  });
}
function Wr(e10) {
  if (e10.fixed_) return e10;
  function t3() {
    return true;
  }
  function i5() {
    return false;
  }
  if (!e10 || !e10.isPropagationStopped || !e10.isImmediatePropagationStopped) {
    const s5 = e10 || b3.event;
    e10 = {};
    const n4 = ["layerX", "layerY", "keyLocation", "path", "webkitMovementX", "webkitMovementY", "mozPressure", "mozInputSource"];
    for (const t4 in s5) n4.includes(t4) || "returnValue" === t4 && s5.preventDefault || (e10[t4] = s5[t4]);
    if (e10.target || (e10.target = e10.srcElement || ae), e10.relatedTarget || (e10.relatedTarget = e10.fromElement === e10.target ? e10.toElement : e10.fromElement), e10.preventDefault = function() {
      s5.preventDefault && s5.preventDefault(), e10.returnValue = false, s5.returnValue = false, e10.defaultPrevented = true;
    }, e10.defaultPrevented = false, e10.stopPropagation = function() {
      s5.stopPropagation && s5.stopPropagation(), e10.cancelBubble = true, s5.cancelBubble = true, e10.isPropagationStopped = t3;
    }, e10.isPropagationStopped = i5, e10.stopImmediatePropagation = function() {
      s5.stopImmediatePropagation && s5.stopImmediatePropagation(), e10.isImmediatePropagationStopped = t3, e10.stopPropagation();
    }, e10.isImmediatePropagationStopped = i5, null !== e10.clientX && void 0 !== e10.clientX) {
      const t4 = ae.documentElement, i6 = ae.body;
      e10.pageX = e10.clientX + (t4 && t4.scrollLeft || i6 && i6.scrollLeft || 0) - (t4 && t4.clientLeft || i6 && i6.clientLeft || 0), e10.pageY = e10.clientY + (t4 && t4.scrollTop || i6 && i6.scrollTop || 0) - (t4 && t4.clientTop || i6 && i6.clientTop || 0);
    }
    e10.which = e10.charCode || e10.keyCode, null !== e10.button && void 0 !== e10.button && (e10.button = 1 & e10.button ? 0 : 4 & e10.button ? 1 : 2 & e10.button ? 2 : 0);
  }
  return e10.fixed_ = true, e10;
}
var Gr = function() {
  if ("boolean" != typeof jr) {
    jr = false;
    try {
      const e10 = Object.defineProperty({}, "passive", { get() {
        jr = true;
      } });
      b3.addEventListener("test", null, e10), b3.removeEventListener("test", null, e10);
    } catch (e10) {
    }
  }
  return jr;
};
var Xr = ["touchstart", "touchmove"];
function Kr(e10, t3, i5) {
  if (Array.isArray(t3)) return zr(Kr, e10, t3, i5);
  qr.has(e10) || qr.set(e10, {});
  const s5 = qr.get(e10);
  if (s5.handlers || (s5.handlers = {}), s5.handlers[t3] || (s5.handlers[t3] = []), i5.guid || (i5.guid = Hr()), s5.handlers[t3].push(i5), s5.dispatcher || (s5.disabled = false, s5.dispatcher = function(t4, i6) {
    if (s5.disabled) return;
    t4 = Wr(t4);
    const n4 = s5.handlers[t4.type];
    if (n4) {
      const s6 = n4.slice(0);
      for (let n5 = 0, a9 = s6.length; n5 < a9 && !t4.isImmediatePropagationStopped(); n5++) try {
        s6[n5].call(e10, t4, i6);
      } catch (r5) {
        yn.error(r5);
      }
    }
  }), 1 === s5.handlers[t3].length) if (e10.addEventListener) {
    let i6 = false;
    Gr() && Xr.indexOf(t3) > -1 && (i6 = { passive: true }), e10.addEventListener(t3, s5.dispatcher, i6);
  } else e10.attachEvent && e10.attachEvent("on" + t3, s5.dispatcher);
}
function Yr(e10, t3, i5) {
  if (!qr.has(e10)) return;
  const s5 = qr.get(e10);
  if (!s5.handlers) return;
  if (Array.isArray(t3)) return zr(Yr, e10, t3, i5);
  const n4 = function(e11, t4) {
    s5.handlers[t4] = [], Vr(e11, t4);
  };
  if (void 0 === t3) {
    for (const t4 in s5.handlers) Object.prototype.hasOwnProperty.call(s5.handlers || {}, t4) && n4(e10, t4);
    return;
  }
  const r5 = s5.handlers[t3];
  if (r5) if (i5) {
    if (i5.guid) for (let e11 = 0; e11 < r5.length; e11++) r5[e11].guid === i5.guid && r5.splice(e11--, 1);
    Vr(e10, t3);
  } else n4(e10, t3);
}
function Qr(e10, t3, i5) {
  const s5 = qr.has(e10) ? qr.get(e10) : {}, n4 = e10.parentNode || e10.ownerDocument;
  if ("string" == typeof t3 ? t3 = { type: t3, target: e10 } : t3.target || (t3.target = e10), t3 = Wr(t3), s5.dispatcher && s5.dispatcher.call(e10, t3, i5), n4 && !t3.isPropagationStopped() && true === t3.bubbles) Qr.call(null, n4, t3, i5);
  else if (!n4 && !t3.defaultPrevented && t3.target && t3.target[t3.type]) {
    qr.has(t3.target) || qr.set(t3.target, {});
    const e11 = qr.get(t3.target);
    t3.target[t3.type] && (e11.disabled = true, "function" == typeof t3.target[t3.type] && t3.target[t3.type](), e11.disabled = false);
  }
  return !t3.defaultPrevented;
}
function Jr(e10, t3, i5) {
  if (Array.isArray(t3)) return zr(Jr, e10, t3, i5);
  const s5 = function() {
    Yr(e10, t3, s5), i5.apply(this, arguments);
  };
  s5.guid = i5.guid = i5.guid || Hr(), Kr(e10, t3, s5);
}
function Zr(e10, t3, i5) {
  const s5 = function() {
    Yr(e10, t3, s5), i5.apply(this, arguments);
  };
  s5.guid = i5.guid = i5.guid || Hr(), Kr(e10, t3, s5);
}
var ea = Object.freeze({ __proto__: null, fixEvent: Wr, on: Kr, off: Yr, trigger: Qr, one: Jr, any: Zr });
var ta = 30;
var ia = function(e10, t3, i5) {
  t3.guid || (t3.guid = Hr());
  const s5 = t3.bind(e10);
  return s5.guid = i5 ? i5 + "_" + t3.guid : t3.guid, s5;
};
var sa = function(e10, t3) {
  let i5 = b3.performance.now();
  return function(...s5) {
    const n4 = b3.performance.now();
    n4 - i5 >= t3 && (e10(...s5), i5 = n4);
  };
};
var na = function(e10, t3, i5, s5 = b3) {
  let n4;
  const r5 = () => {
    s5.clearTimeout(n4), n4 = null;
  }, a9 = function() {
    const r6 = this, a10 = arguments;
    let o4 = function() {
      n4 = null, o4 = null, i5 || e10.apply(r6, a10);
    };
    !n4 && i5 && e10.apply(r6, a10), s5.clearTimeout(n4), n4 = s5.setTimeout(o4, t3);
  };
  return a9.cancel = r5, a9;
};
var ra = Object.freeze({ __proto__: null, UPDATE_REFRESH_INTERVAL: ta, bind_: ia, throttle: sa, debounce: na });
var aa;
var oa = class {
  on(e10, t3) {
    const i5 = this.addEventListener;
    this.addEventListener = () => {
    }, Kr(this, e10, t3), this.addEventListener = i5;
  }
  off(e10, t3) {
    Yr(this, e10, t3);
  }
  one(e10, t3) {
    const i5 = this.addEventListener;
    this.addEventListener = () => {
    }, Jr(this, e10, t3), this.addEventListener = i5;
  }
  any(e10, t3) {
    const i5 = this.addEventListener;
    this.addEventListener = () => {
    }, Zr(this, e10, t3), this.addEventListener = i5;
  }
  trigger(e10) {
    const t3 = e10.type || e10;
    "string" == typeof e10 && (e10 = { type: t3 }), e10 = Wr(e10), this.allowedEvents_[t3] && this["on" + t3] && this["on" + t3](e10), Qr(this, e10);
  }
  queueTrigger(e10) {
    aa || (aa = /* @__PURE__ */ new Map());
    const t3 = e10.type || e10;
    let i5 = aa.get(this);
    i5 || (i5 = /* @__PURE__ */ new Map(), aa.set(this, i5));
    const s5 = i5.get(t3);
    i5.delete(t3), b3.clearTimeout(s5);
    const n4 = b3.setTimeout(() => {
      i5.delete(t3), 0 === i5.size && (i5 = null, aa.delete(this)), this.trigger(e10);
    }, 0);
    i5.set(t3, n4);
  }
};
oa.prototype.allowedEvents_ = {}, oa.prototype.addEventListener = oa.prototype.on, oa.prototype.removeEventListener = oa.prototype.off, oa.prototype.dispatchEvent = oa.prototype.trigger;
var la = (e10) => "function" == typeof e10.name ? e10.name() : "string" == typeof e10.name ? e10.name : e10.name_ ? e10.name_ : e10.constructor && e10.constructor.name ? e10.constructor.name : typeof e10;
var ha = (e10) => e10 instanceof oa || !!e10.eventBusEl_ && ["on", "one", "off", "trigger"].every((t3) => "function" == typeof e10[t3]);
var ua = (e10, t3) => {
  ha(e10) ? t3() : (e10.eventedCallbacks || (e10.eventedCallbacks = []), e10.eventedCallbacks.push(t3));
};
var da = (e10) => "string" == typeof e10 && /\S/.test(e10) || Array.isArray(e10) && !!e10.length;
var ca = (e10, t3, i5) => {
  if (!e10 || !e10.nodeName && !ha(e10)) throw new Error(`Invalid target for ${la(t3)}#${i5}; must be a DOM node or evented object.`);
};
var pa = (e10, t3, i5) => {
  if (!da(e10)) throw new Error(`Invalid event type for ${la(t3)}#${i5}; must be a non-empty string or array.`);
};
var ma = (e10, t3, i5) => {
  if ("function" != typeof e10) throw new Error(`Invalid listener for ${la(t3)}#${i5}; must be a function.`);
};
var ga = (e10, t3, i5) => {
  const s5 = t3.length < 3 || t3[0] === e10 || t3[0] === e10.eventBusEl_;
  let n4, r5, a9;
  return s5 ? (n4 = e10.eventBusEl_, t3.length >= 3 && t3.shift(), [r5, a9] = t3) : (n4 = t3[0], r5 = t3[1], a9 = t3[2]), ca(n4, e10, i5), pa(r5, e10, i5), ma(a9, e10, i5), a9 = ia(e10, a9), { isTargetingSelf: s5, target: n4, type: r5, listener: a9 };
};
var fa = (e10, t3, i5, s5) => {
  ca(e10, e10, t3), e10.nodeName ? ea[t3](e10, i5, s5) : e10[t3](i5, s5);
};
var ya = { on(...e10) {
  const { isTargetingSelf: t3, target: i5, type: s5, listener: n4 } = ga(this, e10, "on");
  if (fa(i5, "on", s5, n4), !t3) {
    const e11 = () => this.off(i5, s5, n4);
    e11.guid = n4.guid;
    const t4 = () => this.off("dispose", e11);
    t4.guid = n4.guid, fa(this, "on", "dispose", e11), fa(i5, "on", "dispose", t4);
  }
}, one(...e10) {
  const { isTargetingSelf: t3, target: i5, type: s5, listener: n4 } = ga(this, e10, "one");
  if (t3) fa(i5, "one", s5, n4);
  else {
    const e11 = (...t4) => {
      this.off(i5, s5, e11), n4.apply(null, t4);
    };
    e11.guid = n4.guid, fa(i5, "one", s5, e11);
  }
}, any(...e10) {
  const { isTargetingSelf: t3, target: i5, type: s5, listener: n4 } = ga(this, e10, "any");
  if (t3) fa(i5, "any", s5, n4);
  else {
    const e11 = (...t4) => {
      this.off(i5, s5, e11), n4.apply(null, t4);
    };
    e11.guid = n4.guid, fa(i5, "any", s5, e11);
  }
}, off(e10, t3, i5) {
  if (!e10 || da(e10)) Yr(this.eventBusEl_, e10, t3);
  else {
    const s5 = e10, n4 = t3;
    ca(s5, this, "off"), pa(n4, this, "off"), ma(i5, this, "off"), i5 = ia(this, i5), this.off("dispose", i5), s5.nodeName ? (Yr(s5, n4, i5), Yr(s5, "dispose", i5)) : ha(s5) && (s5.off(n4, i5), s5.off("dispose", i5));
  }
}, trigger(e10, t3) {
  ca(this.eventBusEl_, this, "trigger");
  const i5 = e10 && "string" != typeof e10 ? e10.type : e10;
  if (!da(i5)) throw new Error(`Invalid event type for ${la(this)}#trigger; must be a non-empty string or object with a type key that has a non-empty value.`);
  return Qr(this.eventBusEl_, e10, t3);
} };
function _a(e10, t3 = {}) {
  const { eventBusKey: i5 } = t3;
  if (i5) {
    if (!e10[i5].nodeName) throw new Error(`The eventBusKey "${i5}" does not refer to an element.`);
    e10.eventBusEl_ = e10[i5];
  } else e10.eventBusEl_ = rr("span", { className: "vjs-event-bus" });
  return Object.assign(e10, ya), e10.eventedCallbacks && e10.eventedCallbacks.forEach((e11) => {
    e11();
  }), e10.on("dispose", () => {
    e10.off(), [e10, e10.el_, e10.eventBusEl_].forEach(function(e11) {
      e11 && qr.has(e11) && qr.delete(e11);
    }), b3.setTimeout(() => {
      e10.eventBusEl_ = null;
    }, 0);
  }), e10;
}
var va = { state: {}, setState(e10) {
  let t3;
  return "function" == typeof e10 && (e10 = e10()), Tn(e10, (e11, i5) => {
    this.state[i5] !== e11 && (t3 = t3 || {}, t3[i5] = { from: this.state[i5], to: e11 }), this.state[i5] = e11;
  }), t3 && ha(this) && this.trigger({ changes: t3, type: "statechanged" }), t3;
} };
function ba(e10, t3) {
  return Object.assign(e10, va), e10.state = Object.assign({}, e10.state, t3), "function" == typeof e10.handleStateChanged && ha(e10) && e10.on("statechanged", e10.handleStateChanged), e10;
}
var Ta = function(e10) {
  return "string" != typeof e10 ? e10 : e10.replace(/./, (e11) => e11.toLowerCase());
};
var Sa = function(e10) {
  return "string" != typeof e10 ? e10 : e10.replace(/./, (e11) => e11.toUpperCase());
};
var Ea = function(e10, t3) {
  return Sa(e10) === Sa(t3);
};
var wa = Object.freeze({ __proto__: null, toLowerCase: Ta, toTitleCase: Sa, titleCaseEquals: Ea });
var Ca = class _Ca {
  constructor(e10, t3, i5) {
    if (!e10 && this.play ? this.player_ = e10 = this : this.player_ = e10, this.isDisposed_ = false, this.parentComponent_ = null, this.options_ = Cn({}, this.options_), t3 = this.options_ = Cn(this.options_, t3), this.id_ = t3.id || t3.el && t3.el.id, !this.id_) {
      const t4 = e10 && e10.id && e10.id() || "no_player";
      this.id_ = `${t4}_component_${Hr()}`;
    }
    this.name_ = t3.name || null, t3.el ? this.el_ = t3.el : false !== t3.createEl && (this.el_ = this.createEl()), t3.className && this.el_ && t3.className.split(" ").forEach((e11) => this.addClass(e11)), ["on", "off", "one", "any", "trigger"].forEach((e11) => {
      this[e11] = void 0;
    }), false !== t3.evented && (_a(this, { eventBusKey: this.el_ ? "el_" : null }), this.handleLanguagechange = this.handleLanguagechange.bind(this), this.on(this.player_, "languagechange", this.handleLanguagechange)), ba(this, this.constructor.defaultState), this.children_ = [], this.childIndex_ = {}, this.childNameIndex_ = {}, this.setTimeoutIds_ = /* @__PURE__ */ new Set(), this.setIntervalIds_ = /* @__PURE__ */ new Set(), this.rafIds_ = /* @__PURE__ */ new Set(), this.namedRafs_ = /* @__PURE__ */ new Map(), this.clearingTimersOnDispose_ = false, false !== t3.initChildren && this.initChildren(), this.ready(i5), false !== t3.reportTouchActivity && this.enableTouchActivity();
  }
  dispose(e10 = {}) {
    if (!this.isDisposed_) {
      if (this.readyQueue_ && (this.readyQueue_.length = 0), this.trigger({ type: "dispose", bubbles: false }), this.isDisposed_ = true, this.children_) for (let e11 = this.children_.length - 1; e11 >= 0; e11--) this.children_[e11].dispose && this.children_[e11].dispose();
      this.children_ = null, this.childIndex_ = null, this.childNameIndex_ = null, this.parentComponent_ = null, this.el_ && (this.el_.parentNode && (e10.restoreEl ? this.el_.parentNode.replaceChild(e10.restoreEl, this.el_) : this.el_.parentNode.removeChild(this.el_)), this.el_ = null), this.player_ = null;
    }
  }
  isDisposed() {
    return Boolean(this.isDisposed_);
  }
  player() {
    return this.player_;
  }
  options(e10) {
    return e10 ? (this.options_ = Cn(this.options_, e10), this.options_) : this.options_;
  }
  el() {
    return this.el_;
  }
  createEl(e10, t3, i5) {
    return rr(e10, t3, i5);
  }
  localize(e10, t3, i5 = e10) {
    const s5 = this.player_.language && this.player_.language(), n4 = this.player_.languages && this.player_.languages(), r5 = n4 && n4[s5], a9 = s5 && s5.split("-")[0], o4 = n4 && n4[a9];
    let l7 = i5;
    return r5 && r5[e10] ? l7 = r5[e10] : o4 && o4[e10] && (l7 = o4[e10]), t3 && (l7 = l7.replace(/\{(\d+)\}/g, function(e11, i6) {
      const s6 = t3[i6 - 1];
      let n5 = s6;
      return void 0 === s6 && (n5 = e11), n5;
    })), l7;
  }
  handleLanguagechange() {
  }
  contentEl() {
    return this.contentEl_ || this.el_;
  }
  id() {
    return this.id_;
  }
  name() {
    return this.name_;
  }
  children() {
    return this.children_;
  }
  getChildById(e10) {
    return this.childIndex_[e10];
  }
  getChild(e10) {
    if (e10) return this.childNameIndex_[e10];
  }
  getDescendant(...e10) {
    e10 = e10.reduce((e11, t4) => e11.concat(t4), []);
    let t3 = this;
    for (let i5 = 0; i5 < e10.length; i5++) if (t3 = t3.getChild(e10[i5]), !t3 || !t3.getChild) return;
    return t3;
  }
  setIcon(e10, t3 = this.el()) {
    if (!this.player_.options_.experimentalSvgIcons) return;
    const i5 = "http://www.w3.org/2000/svg", s5 = rr("span", { className: "vjs-icon-placeholder vjs-svg-icon" }, { "aria-hidden": "true" }), n4 = ae.createElementNS(i5, "svg");
    n4.setAttributeNS(null, "viewBox", "0 0 512 512");
    const r5 = ae.createElementNS(i5, "use");
    return n4.appendChild(r5), r5.setAttributeNS(null, "href", `#vjs-icon-${e10}`), s5.appendChild(n4), this.iconIsSet_ ? t3.replaceChild(s5, t3.querySelector(".vjs-icon-placeholder")) : t3.appendChild(s5), this.iconIsSet_ = true, s5;
  }
  addChild(e10, t3 = {}, i5 = this.children_.length) {
    let s5, n4;
    if ("string" == typeof e10) {
      n4 = Sa(e10);
      const i6 = t3.componentClass || n4;
      t3.name = n4;
      const r5 = _Ca.getComponent(i6);
      if (!r5) throw new Error(`Component ${i6} does not exist`);
      if ("function" != typeof r5) return null;
      s5 = new r5(this.player_ || this, t3);
    } else s5 = e10;
    if (s5.parentComponent_ && s5.parentComponent_.removeChild(s5), this.children_.splice(i5, 0, s5), s5.parentComponent_ = this, "function" == typeof s5.id && (this.childIndex_[s5.id()] = s5), n4 = n4 || s5.name && Sa(s5.name()), n4 && (this.childNameIndex_[n4] = s5, this.childNameIndex_[Ta(n4)] = s5), "function" == typeof s5.el && s5.el()) {
      let e11 = null;
      this.children_[i5 + 1] && (this.children_[i5 + 1].el_ ? e11 = this.children_[i5 + 1].el_ : ir(this.children_[i5 + 1]) && (e11 = this.children_[i5 + 1])), this.contentEl().insertBefore(s5.el(), e11);
    }
    return s5;
  }
  removeChild(e10) {
    if ("string" == typeof e10 && (e10 = this.getChild(e10)), !e10 || !this.children_) return;
    let t3 = false;
    for (let s5 = this.children_.length - 1; s5 >= 0; s5--) if (this.children_[s5] === e10) {
      t3 = true, this.children_.splice(s5, 1);
      break;
    }
    if (!t3) return;
    e10.parentComponent_ = null, this.childIndex_[e10.id()] = null, this.childNameIndex_[Sa(e10.name())] = null, this.childNameIndex_[Ta(e10.name())] = null;
    const i5 = e10.el();
    i5 && i5.parentNode === this.contentEl() && this.contentEl().removeChild(e10.el());
  }
  initChildren() {
    const e10 = this.options_.children;
    if (e10) {
      const t3 = this.options_, i5 = (e11) => {
        const i6 = e11.name;
        let s6 = e11.opts;
        if (void 0 !== t3[i6] && (s6 = t3[i6]), false === s6) return;
        true === s6 && (s6 = {}), s6.playerOptions = this.options_.playerOptions;
        const n5 = this.addChild(i6, s6);
        n5 && (this[i6] = n5);
      };
      let s5;
      const n4 = _Ca.getComponent("Tech");
      s5 = Array.isArray(e10) ? e10 : Object.keys(e10), s5.concat(Object.keys(this.options_).filter(function(e11) {
        return !s5.some(function(t4) {
          return "string" == typeof t4 ? e11 === t4 : e11 === t4.name;
        });
      })).map((t4) => {
        let i6, s6;
        return "string" == typeof t4 ? (i6 = t4, s6 = e10[i6] || this.options_[i6] || {}) : (i6 = t4.name, s6 = t4), { name: i6, opts: s6 };
      }).filter((e11) => {
        const t4 = _Ca.getComponent(e11.opts.componentClass || Sa(e11.name));
        return t4 && !n4.isTech(t4);
      }).forEach(i5);
    }
  }
  buildCSSClass() {
    return "";
  }
  ready(e10, t3 = false) {
    if (e10) return this.isReady_ ? void (t3 ? e10.call(this) : this.setTimeout(e10, 1)) : (this.readyQueue_ = this.readyQueue_ || [], void this.readyQueue_.push(e10));
  }
  triggerReady() {
    this.isReady_ = true, this.setTimeout(function() {
      const e10 = this.readyQueue_;
      this.readyQueue_ = [], e10 && e10.length > 0 && e10.forEach(function(e11) {
        e11.call(this);
      }, this), this.trigger("ready");
    }, 1);
  }
  $(e10, t3) {
    return xr(e10, t3 || this.contentEl());
  }
  $$(e10, t3) {
    return Ar(e10, t3 || this.contentEl());
  }
  hasClass(e10) {
    return lr(this.el_, e10);
  }
  addClass(...e10) {
    hr(this.el_, ...e10);
  }
  removeClass(...e10) {
    ur(this.el_, ...e10);
  }
  toggleClass(e10, t3) {
    dr(this.el_, e10, t3);
  }
  show() {
    this.removeClass("vjs-hidden");
  }
  hide() {
    this.addClass("vjs-hidden");
  }
  lockShowing() {
    this.addClass("vjs-lock-showing");
  }
  unlockShowing() {
    this.removeClass("vjs-lock-showing");
  }
  getAttribute(e10) {
    return mr(this.el_, e10);
  }
  setAttribute(e10, t3) {
    gr(this.el_, e10, t3);
  }
  removeAttribute(e10) {
    fr(this.el_, e10);
  }
  width(e10, t3) {
    return this.dimension("width", e10, t3);
  }
  height(e10, t3) {
    return this.dimension("height", e10, t3);
  }
  dimensions(e10, t3) {
    this.width(e10, true), this.height(t3);
  }
  dimension(e10, t3, i5) {
    if (void 0 !== t3) return null !== t3 && t3 == t3 || (t3 = 0), -1 !== ("" + t3).indexOf("%") || -1 !== ("" + t3).indexOf("px") ? this.el_.style[e10] = t3 : this.el_.style[e10] = "auto" === t3 ? "" : t3 + "px", void (i5 || this.trigger("componentresize"));
    if (!this.el_) return 0;
    const s5 = this.el_.style[e10], n4 = s5.indexOf("px");
    return -1 !== n4 ? parseInt(s5.slice(0, n4), 10) : parseInt(this.el_["offset" + Sa(e10)], 10);
  }
  currentDimension(e10) {
    let t3 = 0;
    if ("width" !== e10 && "height" !== e10) throw new Error("currentDimension only accepts width or height value");
    if (t3 = Dr(this.el_, e10), t3 = parseFloat(t3), 0 === t3 || isNaN(t3)) {
      const i5 = `offset${Sa(e10)}`;
      t3 = this.el_[i5];
    }
    return t3;
  }
  currentDimensions() {
    return { width: this.currentDimension("width"), height: this.currentDimension("height") };
  }
  currentWidth() {
    return this.currentDimension("width");
  }
  currentHeight() {
    return this.currentDimension("height");
  }
  getPositions() {
    const e10 = this.el_.getBoundingClientRect();
    return { boundingClientRect: { x: e10.x, y: e10.y, width: e10.width, height: e10.height, top: e10.top, right: e10.right, bottom: e10.bottom, left: e10.left }, center: { x: e10.left + e10.width / 2, y: e10.top + e10.height / 2, width: 0, height: 0, top: e10.top + e10.height / 2, right: e10.left + e10.width / 2, bottom: e10.top + e10.height / 2, left: e10.left + e10.width / 2 } };
  }
  focus() {
    this.el_.focus();
  }
  blur() {
    this.el_.blur();
  }
  handleKeyDown(e10) {
    this.player_ && ("Tab" === e10.key || this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled || e10.stopPropagation(), this.player_.handleKeyDown(e10));
  }
  handleKeyPress(e10) {
    this.handleKeyDown(e10);
  }
  emitTapEvents() {
    let e10 = 0, t3 = null;
    const i5 = 10, s5 = 200;
    let n4;
    this.on("touchstart", function(i6) {
      1 === i6.touches.length && (t3 = { pageX: i6.touches[0].pageX, pageY: i6.touches[0].pageY }, e10 = b3.performance.now(), n4 = true);
    }), this.on("touchmove", function(e11) {
      if (e11.touches.length > 1) n4 = false;
      else if (t3) {
        const s6 = e11.touches[0].pageX - t3.pageX, r6 = e11.touches[0].pageY - t3.pageY;
        Math.sqrt(s6 * s6 + r6 * r6) > i5 && (n4 = false);
      }
    });
    const r5 = function() {
      n4 = false;
    };
    this.on("touchleave", r5), this.on("touchcancel", r5), this.on("touchend", function(i6) {
      if (t3 = null, true === n4) {
        b3.performance.now() - e10 < s5 && (i6.preventDefault(), this.trigger("tap"));
      }
    });
  }
  enableTouchActivity() {
    if (!this.player() || !this.player().reportUserActivity) return;
    const e10 = ia(this.player(), this.player().reportUserActivity);
    let t3;
    this.on("touchstart", function() {
      e10(), this.clearInterval(t3), t3 = this.setInterval(e10, 250);
    });
    const i5 = function(i6) {
      e10(), this.clearInterval(t3);
    };
    this.on("touchmove", e10), this.on("touchend", i5), this.on("touchcancel", i5);
  }
  setTimeout(e10, t3) {
    var i5;
    return e10 = ia(this, e10), this.clearTimersOnDispose_(), i5 = b3.setTimeout(() => {
      this.setTimeoutIds_.has(i5) && this.setTimeoutIds_.delete(i5), e10();
    }, t3), this.setTimeoutIds_.add(i5), i5;
  }
  clearTimeout(e10) {
    return this.setTimeoutIds_.has(e10) && (this.setTimeoutIds_.delete(e10), b3.clearTimeout(e10)), e10;
  }
  setInterval(e10, t3) {
    e10 = ia(this, e10), this.clearTimersOnDispose_();
    const i5 = b3.setInterval(e10, t3);
    return this.setIntervalIds_.add(i5), i5;
  }
  clearInterval(e10) {
    return this.setIntervalIds_.has(e10) && (this.setIntervalIds_.delete(e10), b3.clearInterval(e10)), e10;
  }
  requestAnimationFrame(e10) {
    var t3;
    return this.clearTimersOnDispose_(), e10 = ia(this, e10), t3 = b3.requestAnimationFrame(() => {
      this.rafIds_.has(t3) && this.rafIds_.delete(t3), e10();
    }), this.rafIds_.add(t3), t3;
  }
  requestNamedAnimationFrame(e10, t3) {
    this.namedRafs_.has(e10) && this.cancelNamedAnimationFrame(e10), this.clearTimersOnDispose_(), t3 = ia(this, t3);
    const i5 = this.requestAnimationFrame(() => {
      t3(), this.namedRafs_.has(e10) && this.namedRafs_.delete(e10);
    });
    return this.namedRafs_.set(e10, i5), e10;
  }
  cancelNamedAnimationFrame(e10) {
    this.namedRafs_.has(e10) && (this.cancelAnimationFrame(this.namedRafs_.get(e10)), this.namedRafs_.delete(e10));
  }
  cancelAnimationFrame(e10) {
    return this.rafIds_.has(e10) && (this.rafIds_.delete(e10), b3.cancelAnimationFrame(e10)), e10;
  }
  clearTimersOnDispose_() {
    this.clearingTimersOnDispose_ || (this.clearingTimersOnDispose_ = true, this.one("dispose", () => {
      [["namedRafs_", "cancelNamedAnimationFrame"], ["rafIds_", "cancelAnimationFrame"], ["setTimeoutIds_", "clearTimeout"], ["setIntervalIds_", "clearInterval"]].forEach(([e10, t3]) => {
        this[e10].forEach((e11, i5) => this[t3](i5));
      }), this.clearingTimersOnDispose_ = false;
    }));
  }
  getIsDisabled() {
    return Boolean(this.el_.disabled);
  }
  getIsExpresslyInert() {
    return this.el_.inert && !this.el_.ownerDocument.documentElement.inert;
  }
  getIsFocusable(e10) {
    return (e10 || this.el_).tabIndex >= 0 && !(this.getIsDisabled() || this.getIsExpresslyInert());
  }
  getIsAvailableToBeFocused(e10) {
    function t3(e11) {
      const t4 = b3.getComputedStyle(e11, null), i6 = t4.getPropertyValue("visibility");
      return "none" !== t4.getPropertyValue("display") && !["hidden", "collapse"].includes(i6);
    }
    function i5(e11) {
      return !!t3(e11.parentElement) && !(!t3(e11) || "0" === e11.style.opacity || "0px" === b3.getComputedStyle(e11).height || "0px" === b3.getComputedStyle(e11).width);
    }
    function s5(e11) {
      if (e11.offsetWidth + e11.offsetHeight + e11.getBoundingClientRect().height + e11.getBoundingClientRect().width === 0) return false;
      const t4 = { x: e11.getBoundingClientRect().left + e11.offsetWidth / 2, y: e11.getBoundingClientRect().top + e11.offsetHeight / 2 };
      if (t4.x < 0) return false;
      if (t4.x > (ae.documentElement.clientWidth || b3.innerWidth)) return false;
      if (t4.y < 0) return false;
      if (t4.y > (ae.documentElement.clientHeight || b3.innerHeight)) return false;
      let i6 = ae.elementFromPoint(t4.x, t4.y);
      for (; i6; ) {
        if (i6 === e11) return true;
        if (!i6.parentNode) return false;
        i6 = i6.parentNode;
      }
    }
    return e10 || (e10 = this.el()), !(!s5(e10) || !i5(e10) || e10.parentElement && !(e10.tabIndex >= 0));
  }
  static registerComponent(e10, t3) {
    if ("string" != typeof e10 || !e10) throw new Error(`Illegal component name, "${e10}"; must be a non-empty string.`);
    const i5 = _Ca.getComponent("Tech"), s5 = i5 && i5.isTech(t3), n4 = _Ca === t3 || _Ca.prototype.isPrototypeOf(t3.prototype);
    if (s5 || !n4) {
      let t4;
      throw t4 = s5 ? "techs must be registered using Tech.registerTech()" : "must be a Component subclass", new Error(`Illegal component, "${e10}"; ${t4}.`);
    }
    e10 = Sa(e10), _Ca.components_ || (_Ca.components_ = {});
    const r5 = _Ca.getComponent("Player");
    if ("Player" === e10 && r5 && r5.players) {
      const e11 = r5.players, t4 = Object.keys(e11);
      if (e11 && t4.length > 0) {
        for (let i6 = 0; i6 < t4.length; i6++) if (null !== e11[t4[i6]]) throw new Error("Can not register Player component after player has been created.");
      }
    }
    return _Ca.components_[e10] = t3, _Ca.components_[Ta(e10)] = t3, t3;
  }
  static getComponent(e10) {
    if (e10 && _Ca.components_) return _Ca.components_[e10];
  }
};
function ka(e10, t3, i5) {
  if ("number" != typeof t3 || t3 < 0 || t3 > i5) throw new Error(`Failed to execute '${e10}' on 'TimeRanges': The index provided (${t3}) is non-numeric or out of bounds (0-${i5}).`);
}
function Ia(e10, t3, i5, s5) {
  return ka(e10, s5, i5.length - 1), i5[s5][t3];
}
function xa(e10) {
  let t3;
  return t3 = void 0 === e10 || 0 === e10.length ? { length: 0, start() {
    throw new Error("This TimeRanges object is empty");
  }, end() {
    throw new Error("This TimeRanges object is empty");
  } } : { length: e10.length, start: Ia.bind(null, "start", 0, e10), end: Ia.bind(null, "end", 1, e10) }, b3.Symbol && b3.Symbol.iterator && (t3[b3.Symbol.iterator] = () => (e10 || []).values()), t3;
}
function Aa(e10, t3) {
  return Array.isArray(e10) ? xa(e10) : void 0 === e10 || void 0 === t3 ? xa() : xa([[e10, t3]]);
}
Ca.registerComponent("Component", Ca);
var Da = function(e10, t3) {
  e10 = e10 < 0 ? 0 : e10;
  let i5 = Math.floor(e10 % 60), s5 = Math.floor(e10 / 60 % 60), n4 = Math.floor(e10 / 3600);
  const r5 = Math.floor(t3 / 60 % 60), a9 = Math.floor(t3 / 3600);
  return (isNaN(e10) || e10 === 1 / 0) && (n4 = s5 = i5 = "-"), n4 = n4 > 0 || a9 > 0 ? n4 + ":" : "", s5 = ((n4 || r5 >= 10) && s5 < 10 ? "0" + s5 : s5) + ":", i5 = i5 < 10 ? "0" + i5 : i5, n4 + s5 + i5;
};
var Pa = Da;
function La(e10) {
  Pa = e10;
}
function Oa() {
  Pa = Da;
}
function Na(e10, t3 = e10) {
  return Pa(e10, t3);
}
var Ra = Object.freeze({ __proto__: null, createTimeRanges: Aa, createTimeRange: Aa, setFormatTime: La, resetFormatTime: Oa, formatTime: Na });
function Ma(e10, t3) {
  let i5, s5, n4 = 0;
  if (!t3) return 0;
  e10 && e10.length || (e10 = Aa(0, 0));
  for (let r5 = 0; r5 < e10.length; r5++) i5 = e10.start(r5), s5 = e10.end(r5), s5 > t3 && (s5 = t3), n4 += s5 - i5;
  return n4 / t3;
}
function Ua(e10) {
  if (e10 instanceof Ua) return e10;
  "number" == typeof e10 ? this.code = e10 : "string" == typeof e10 ? this.message = e10 : En(e10) && ("number" == typeof e10.code && (this.code = e10.code), Object.assign(this, e10)), this.message || (this.message = Ua.defaultMessages[this.code] || "");
}
function Ba(e10) {
  return null != e10 && "function" == typeof e10.then;
}
function Fa(e10) {
  Ba(e10) && e10.then(null, (e11) => {
  });
}
Ua.prototype.code = 0, Ua.prototype.message = "", Ua.prototype.status = null, Ua.prototype.metadata = null, Ua.errorTypes = ["MEDIA_ERR_CUSTOM", "MEDIA_ERR_ABORTED", "MEDIA_ERR_NETWORK", "MEDIA_ERR_DECODE", "MEDIA_ERR_SRC_NOT_SUPPORTED", "MEDIA_ERR_ENCRYPTED"], Ua.defaultMessages = { 1: "You aborted the media playback", 2: "A network error caused the media download to fail part-way.", 3: "The media playback was aborted due to a corruption problem or because the media used features your browser did not support.", 4: "The media could not be loaded, either because the server or network failed or because the format is not supported.", 5: "The media is encrypted and we do not have the keys to decrypt it." }, Ua.MEDIA_ERR_CUSTOM = 0, Ua.prototype.MEDIA_ERR_CUSTOM = 0, Ua.MEDIA_ERR_ABORTED = 1, Ua.prototype.MEDIA_ERR_ABORTED = 1, Ua.MEDIA_ERR_NETWORK = 2, Ua.prototype.MEDIA_ERR_NETWORK = 2, Ua.MEDIA_ERR_DECODE = 3, Ua.prototype.MEDIA_ERR_DECODE = 3, Ua.MEDIA_ERR_SRC_NOT_SUPPORTED = 4, Ua.prototype.MEDIA_ERR_SRC_NOT_SUPPORTED = 4, Ua.MEDIA_ERR_ENCRYPTED = 5, Ua.prototype.MEDIA_ERR_ENCRYPTED = 5;
var qa = function(e10) {
  return ["kind", "label", "language", "id", "inBandMetadataTrackDispatchType", "mode", "src"].reduce((t3, i5, s5) => (e10[i5] && (t3[i5] = e10[i5]), t3), { cues: e10.cues && Array.prototype.map.call(e10.cues, function(e11) {
    return { startTime: e11.startTime, endTime: e11.endTime, text: e11.text, id: e11.id };
  }) });
};
var ja = { textTracksToJson: function(e10) {
  const t3 = e10.$$("track"), i5 = Array.prototype.map.call(t3, (e11) => e11.track);
  return Array.prototype.map.call(t3, function(e11) {
    const t4 = qa(e11.track);
    return e11.src && (t4.src = e11.src), t4;
  }).concat(Array.prototype.filter.call(e10.textTracks(), function(e11) {
    return -1 === i5.indexOf(e11);
  }).map(qa));
}, jsonToTextTracks: function(e10, t3) {
  return e10.forEach(function(e11) {
    const i5 = t3.addRemoteTextTrack(e11).track;
    !e11.src && e11.cues && e11.cues.forEach((e12) => i5.addCue(e12));
  }), t3.textTracks();
}, trackToJson_: qa };
var $a = "vjs-modal-dialog";
var Ha = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.handleKeyDown_ = (e11) => this.handleKeyDown(e11), this.close_ = (e11) => this.close(e11), this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false, this.closeable(!this.options_.uncloseable), this.content(this.options_.content), this.contentEl_ = rr("div", { className: `${$a}-content` }, { role: "document" }), this.descEl_ = rr("p", { className: `${$a}-description vjs-control-text`, id: this.el().getAttribute("aria-describedby") }), ar(this.descEl_, this.description()), this.el_.appendChild(this.descEl_), this.el_.appendChild(this.contentEl_);
  }
  createEl() {
    return super.createEl("div", { className: this.buildCSSClass(), tabIndex: -1 }, { "aria-describedby": `${this.id()}_description`, "aria-hidden": "true", "aria-label": this.label(), role: "dialog", "aria-live": "polite" });
  }
  dispose() {
    this.contentEl_ = null, this.descEl_ = null, this.previouslyActiveEl_ = null, super.dispose();
  }
  buildCSSClass() {
    return `${$a} vjs-hidden ${super.buildCSSClass()}`;
  }
  label() {
    return this.localize(this.options_.label || "Modal Window");
  }
  description() {
    let e10 = this.options_.description || this.localize("This is a modal window.");
    return this.closeable() && (e10 += " " + this.localize("This modal can be closed by pressing the Escape key or activating the close button.")), e10;
  }
  open() {
    if (this.opened_) return void (this.options_.fillAlways && this.fill());
    const e10 = this.player();
    this.trigger("beforemodalopen"), this.opened_ = true, (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) && this.fill(), this.wasPlaying_ = !e10.paused(), this.options_.pauseOnOpen && this.wasPlaying_ && e10.pause(), this.on("keydown", this.handleKeyDown_), this.hadControls_ = e10.controls(), e10.controls(false), this.show(), this.conditionalFocus_(), this.el().setAttribute("aria-hidden", "false"), this.trigger("modalopen"), this.hasBeenOpened_ = true;
  }
  opened(e10) {
    return "boolean" == typeof e10 && this[e10 ? "open" : "close"](), this.opened_;
  }
  close() {
    if (!this.opened_) return;
    const e10 = this.player();
    this.trigger("beforemodalclose"), this.opened_ = false, this.wasPlaying_ && this.options_.pauseOnOpen && e10.play(), this.off("keydown", this.handleKeyDown_), this.hadControls_ && e10.controls(true), this.hide(), this.el().setAttribute("aria-hidden", "true"), this.trigger({ type: "modalclose", bubbles: true }), this.conditionalBlur_(), this.options_.temporary && this.dispose();
  }
  closeable(e10) {
    if ("boolean" == typeof e10) {
      const t3 = this.closeable_ = !!e10;
      let i5 = this.getChild("closeButton");
      if (t3 && !i5) {
        const e11 = this.contentEl_;
        this.contentEl_ = this.el_, i5 = this.addChild("closeButton", { controlText: "Close Modal Dialog" }), this.contentEl_ = e11, this.on(i5, "close", this.close_);
      }
      !t3 && i5 && (this.off(i5, "close", this.close_), this.removeChild(i5), i5.dispose());
    }
    return this.closeable_;
  }
  fill() {
    this.fillWith(this.content());
  }
  fillWith(e10) {
    const t3 = this.contentEl(), i5 = t3.parentNode, s5 = t3.nextSibling;
    this.trigger("beforemodalfill"), this.hasBeenFilled_ = true, i5.removeChild(t3), this.empty(), kr(t3, e10), this.trigger("modalfill"), s5 ? i5.insertBefore(t3, s5) : i5.appendChild(t3);
    const n4 = this.getChild("closeButton");
    n4 && i5.appendChild(n4.el_), this.trigger("aftermodalfill");
  }
  empty() {
    this.trigger("beforemodalempty"), Er(this.contentEl()), this.trigger("modalempty");
  }
  content(e10) {
    return void 0 !== e10 && (this.content_ = e10), this.content_;
  }
  conditionalFocus_() {
    const e10 = ae.activeElement, t3 = this.player_.el_;
    this.previouslyActiveEl_ = null, (t3.contains(e10) || t3 === e10) && (this.previouslyActiveEl_ = e10, this.focus());
  }
  conditionalBlur_() {
    this.previouslyActiveEl_ && (this.previouslyActiveEl_.focus(), this.previouslyActiveEl_ = null);
  }
  handleKeyDown(e10) {
    if (this.trigger({ type: "modalKeydown", originalEvent: e10, target: this, bubbles: true }), e10.stopPropagation(), "Escape" === e10.key && this.closeable()) return e10.preventDefault(), void this.close();
    if ("Tab" !== e10.key) return;
    const t3 = this.focusableEls_(), i5 = this.el_.querySelector(":focus");
    let s5;
    for (let n4 = 0; n4 < t3.length; n4++) if (i5 === t3[n4]) {
      s5 = n4;
      break;
    }
    ae.activeElement === this.el_ && (s5 = 0), e10.shiftKey && 0 === s5 ? (t3[t3.length - 1].focus(), e10.preventDefault()) : e10.shiftKey || s5 !== t3.length - 1 || (t3[0].focus(), e10.preventDefault());
  }
  focusableEls_() {
    const e10 = this.el_.querySelectorAll("*");
    return Array.prototype.filter.call(e10, (e11) => (e11 instanceof b3.HTMLAnchorElement || e11 instanceof b3.HTMLAreaElement) && e11.hasAttribute("href") || (e11 instanceof b3.HTMLInputElement || e11 instanceof b3.HTMLSelectElement || e11 instanceof b3.HTMLTextAreaElement || e11 instanceof b3.HTMLButtonElement) && !e11.hasAttribute("disabled") || e11 instanceof b3.HTMLIFrameElement || e11 instanceof b3.HTMLObjectElement || e11 instanceof b3.HTMLEmbedElement || e11.hasAttribute("tabindex") && -1 !== e11.getAttribute("tabindex") || e11.hasAttribute("contenteditable"));
  }
};
Ha.prototype.options_ = { pauseOnOpen: true, temporary: true }, Ca.registerComponent("ModalDialog", Ha);
var Va = class extends oa {
  constructor(e10 = []) {
    super(), this.tracks_ = [], Object.defineProperty(this, "length", { get() {
      return this.tracks_.length;
    } });
    for (let t3 = 0; t3 < e10.length; t3++) this.addTrack(e10[t3]);
  }
  addTrack(e10) {
    const t3 = this.tracks_.length;
    "" + t3 in this || Object.defineProperty(this, t3, { get() {
      return this.tracks_[t3];
    } }), -1 === this.tracks_.indexOf(e10) && (this.tracks_.push(e10), this.trigger({ track: e10, type: "addtrack", target: this })), e10.labelchange_ = () => {
      this.trigger({ track: e10, type: "labelchange", target: this });
    }, ha(e10) && e10.addEventListener("labelchange", e10.labelchange_);
  }
  removeTrack(e10) {
    let t3;
    for (let i5 = 0, s5 = this.length; i5 < s5; i5++) if (this[i5] === e10) {
      t3 = this[i5], t3.off && t3.off(), this.tracks_.splice(i5, 1);
      break;
    }
    t3 && this.trigger({ track: t3, type: "removetrack", target: this });
  }
  getTrackById(e10) {
    let t3 = null;
    for (let i5 = 0, s5 = this.length; i5 < s5; i5++) {
      const s6 = this[i5];
      if (s6.id === e10) {
        t3 = s6;
        break;
      }
    }
    return t3;
  }
};
Va.prototype.allowedEvents_ = { change: "change", addtrack: "addtrack", removetrack: "removetrack", labelchange: "labelchange" };
for (const Cg in Va.prototype.allowedEvents_) Va.prototype["on" + Cg] = null;
var za = function(e10, t3) {
  for (let i5 = 0; i5 < e10.length; i5++) Object.keys(e10[i5]).length && t3.id !== e10[i5].id && (e10[i5].enabled = false);
};
var Wa = class extends Va {
  constructor(e10 = []) {
    for (let t3 = e10.length - 1; t3 >= 0; t3--) if (e10[t3].enabled) {
      za(e10, e10[t3]);
      break;
    }
    super(e10), this.changing_ = false;
  }
  addTrack(e10) {
    e10.enabled && za(this, e10), super.addTrack(e10), e10.addEventListener && (e10.enabledChange_ = () => {
      this.changing_ || (this.changing_ = true, za(this, e10), this.changing_ = false, this.trigger("change"));
    }, e10.addEventListener("enabledchange", e10.enabledChange_));
  }
  removeTrack(e10) {
    super.removeTrack(e10), e10.removeEventListener && e10.enabledChange_ && (e10.removeEventListener("enabledchange", e10.enabledChange_), e10.enabledChange_ = null);
  }
};
var Ga = function(e10, t3) {
  for (let i5 = 0; i5 < e10.length; i5++) Object.keys(e10[i5]).length && t3.id !== e10[i5].id && (e10[i5].selected = false);
};
var Xa = class extends Va {
  constructor(e10 = []) {
    for (let t3 = e10.length - 1; t3 >= 0; t3--) if (e10[t3].selected) {
      Ga(e10, e10[t3]);
      break;
    }
    super(e10), this.changing_ = false, Object.defineProperty(this, "selectedIndex", { get() {
      for (let e11 = 0; e11 < this.length; e11++) if (this[e11].selected) return e11;
      return -1;
    }, set() {
    } });
  }
  addTrack(e10) {
    e10.selected && Ga(this, e10), super.addTrack(e10), e10.addEventListener && (e10.selectedChange_ = () => {
      this.changing_ || (this.changing_ = true, Ga(this, e10), this.changing_ = false, this.trigger("change"));
    }, e10.addEventListener("selectedchange", e10.selectedChange_));
  }
  removeTrack(e10) {
    super.removeTrack(e10), e10.removeEventListener && e10.selectedChange_ && (e10.removeEventListener("selectedchange", e10.selectedChange_), e10.selectedChange_ = null);
  }
};
var Ka = class extends Va {
  addTrack(e10) {
    super.addTrack(e10), this.queueChange_ || (this.queueChange_ = () => this.queueTrigger("change")), this.triggerSelectedlanguagechange || (this.triggerSelectedlanguagechange_ = () => this.trigger("selectedlanguagechange")), e10.addEventListener("modechange", this.queueChange_);
    -1 === ["metadata", "chapters"].indexOf(e10.kind) && e10.addEventListener("modechange", this.triggerSelectedlanguagechange_);
  }
  removeTrack(e10) {
    super.removeTrack(e10), e10.removeEventListener && (this.queueChange_ && e10.removeEventListener("modechange", this.queueChange_), this.selectedlanguagechange_ && e10.removeEventListener("modechange", this.triggerSelectedlanguagechange_));
  }
};
var Ya = class {
  constructor(e10 = []) {
    this.trackElements_ = [], Object.defineProperty(this, "length", { get() {
      return this.trackElements_.length;
    } });
    for (let t3 = 0, i5 = e10.length; t3 < i5; t3++) this.addTrackElement_(e10[t3]);
  }
  addTrackElement_(e10) {
    const t3 = this.trackElements_.length;
    "" + t3 in this || Object.defineProperty(this, t3, { get() {
      return this.trackElements_[t3];
    } }), -1 === this.trackElements_.indexOf(e10) && this.trackElements_.push(e10);
  }
  getTrackElementByTrack_(e10) {
    let t3;
    for (let i5 = 0, s5 = this.trackElements_.length; i5 < s5; i5++) if (e10 === this.trackElements_[i5].track) {
      t3 = this.trackElements_[i5];
      break;
    }
    return t3;
  }
  removeTrackElement_(e10) {
    for (let t3 = 0, i5 = this.trackElements_.length; t3 < i5; t3++) if (e10 === this.trackElements_[t3]) {
      this.trackElements_[t3].track && "function" == typeof this.trackElements_[t3].track.off && this.trackElements_[t3].track.off(), "function" == typeof this.trackElements_[t3].off && this.trackElements_[t3].off(), this.trackElements_.splice(t3, 1);
      break;
    }
  }
};
var Qa = class _Qa {
  constructor(e10) {
    _Qa.prototype.setCues_.call(this, e10), Object.defineProperty(this, "length", { get() {
      return this.length_;
    } });
  }
  setCues_(e10) {
    const t3 = this.length || 0;
    let i5 = 0;
    const s5 = e10.length;
    this.cues_ = e10, this.length_ = e10.length;
    const n4 = function(e11) {
      "" + e11 in this || Object.defineProperty(this, "" + e11, { get() {
        return this.cues_[e11];
      } });
    };
    if (t3 < s5) for (i5 = t3; i5 < s5; i5++) n4.call(this, i5);
  }
  getCueById(e10) {
    let t3 = null;
    for (let i5 = 0, s5 = this.length; i5 < s5; i5++) {
      const s6 = this[i5];
      if (s6.id === e10) {
        t3 = s6;
        break;
      }
    }
    return t3;
  }
};
var Ja = { alternative: "alternative", captions: "captions", main: "main", sign: "sign", subtitles: "subtitles", commentary: "commentary" };
var Za = { alternative: "alternative", descriptions: "descriptions", main: "main", "main-desc": "main-desc", translation: "translation", commentary: "commentary" };
var eo = { subtitles: "subtitles", captions: "captions", descriptions: "descriptions", chapters: "chapters", metadata: "metadata" };
var to = { disabled: "disabled", hidden: "hidden", showing: "showing" };
var io = class extends oa {
  constructor(e10 = {}) {
    super();
    const t3 = { id: e10.id || "vjs_track_" + Hr(), kind: e10.kind || "", language: e10.language || "" };
    let i5 = e10.label || "";
    for (const s5 in t3) Object.defineProperty(this, s5, { get: () => t3[s5], set() {
    } });
    Object.defineProperty(this, "label", { get: () => i5, set(e11) {
      e11 !== i5 && (i5 = e11, this.trigger("labelchange"));
    } });
  }
};
var so = function(e10) {
  return new URL(e10, ae.baseURI);
};
var no = function(e10) {
  return new URL(e10, ae.baseURI).href;
};
var ro = function(e10) {
  if ("string" == typeof e10) {
    const t3 = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/.exec(e10);
    if (t3) return t3.pop().toLowerCase();
  }
  return "";
};
var ao = function(e10, t3 = b3.location) {
  return so(e10).origin !== t3.origin;
};
var oo = Object.freeze({ __proto__: null, parseUrl: so, getAbsoluteURL: no, getFileExtension: ro, isCrossOrigin: ao });
var lo = function(e10, t3) {
  const i5 = new b3.WebVTT.Parser(b3, b3.vttjs, b3.WebVTT.StringDecoder()), s5 = [];
  i5.oncue = function(e11) {
    t3.addCue(e11);
  }, i5.onparsingerror = function(e11) {
    s5.push(e11);
  }, i5.onflush = function() {
    t3.trigger({ type: "loadeddata", target: t3 });
  }, i5.parse(e10), s5.length > 0 && (b3.console && b3.console.groupCollapsed && b3.console.groupCollapsed(`Text Track parsing errors for ${t3.src}`), s5.forEach((e11) => yn.error(e11)), b3.console && b3.console.groupEnd && b3.console.groupEnd()), i5.flush();
};
var ho = function(e10, t3) {
  const i5 = { uri: e10 }, s5 = ao(e10);
  s5 && (i5.cors = s5);
  const n4 = "use-credentials" === t3.tech_.crossOrigin();
  n4 && (i5.withCredentials = n4), Ce(i5, ia(this, function(e11, i6, s6) {
    if (e11) return yn.error(e11, i6);
    t3.loaded_ = true, "function" != typeof b3.WebVTT ? t3.tech_ && t3.tech_.any(["vttjsloaded", "vttjserror"], (e12) => {
      if ("vttjserror" !== e12.type) return lo(s6, t3);
      yn.error(`vttjs failed to load, stopping trying to process ${t3.src}`);
    }) : lo(s6, t3);
  }));
};
var uo = class extends io {
  constructor(e10 = {}) {
    if (!e10.tech) throw new Error("A tech was not provided.");
    const t3 = Cn(e10, { kind: eo[e10.kind] || "subtitles", language: e10.language || e10.srclang || "" });
    let i5 = to[t3.mode] || "disabled";
    const s5 = t3.default;
    "metadata" !== t3.kind && "chapters" !== t3.kind || (i5 = "hidden"), super(t3), this.tech_ = t3.tech, this.cues_ = [], this.activeCues_ = [], this.preload_ = false !== this.tech_.preloadTextTracks;
    const n4 = new Qa(this.cues_), r5 = new Qa(this.activeCues_);
    let a9 = false;
    this.timeupdateHandler = ia(this, function(e11 = {}) {
      this.tech_.isDisposed() || (this.tech_.isReady_ ? (this.activeCues = this.activeCues, a9 && (this.trigger("cuechange"), a9 = false), "timeupdate" !== e11.type && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler))) : "timeupdate" !== e11.type && (this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler)));
    });
    const o4 = () => {
      this.stopTracking();
    };
    this.tech_.one("dispose", o4), "disabled" !== i5 && this.startTracking(), Object.defineProperties(this, { default: { get: () => s5, set() {
    } }, mode: { get: () => i5, set(e11) {
      to[e11] && i5 !== e11 && (i5 = e11, this.preload_ || "disabled" === i5 || 0 !== this.cues.length || ho(this.src, this), this.stopTracking(), "disabled" !== i5 && this.startTracking(), this.trigger("modechange"));
    } }, cues: { get() {
      return this.loaded_ ? n4 : null;
    }, set() {
    } }, activeCues: { get() {
      if (!this.loaded_) return null;
      if (0 === this.cues.length) return r5;
      const e11 = this.tech_.currentTime(), t4 = [];
      for (let i6 = 0, s6 = this.cues.length; i6 < s6; i6++) {
        const s7 = this.cues[i6];
        s7.startTime <= e11 && s7.endTime >= e11 && t4.push(s7);
      }
      if (a9 = false, t4.length !== this.activeCues_.length) a9 = true;
      else for (let i6 = 0; i6 < t4.length; i6++) -1 === this.activeCues_.indexOf(t4[i6]) && (a9 = true);
      return this.activeCues_ = t4, r5.setCues_(this.activeCues_), r5;
    }, set() {
    } } }), t3.src ? (this.src = t3.src, this.preload_ || (this.loaded_ = true), (this.preload_ || "subtitles" !== t3.kind && "captions" !== t3.kind) && ho(this.src, this)) : this.loaded_ = true;
  }
  startTracking() {
    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler), this.tech_.on("timeupdate", this.timeupdateHandler);
  }
  stopTracking() {
    this.rvf_ && (this.tech_.cancelVideoFrameCallback(this.rvf_), this.rvf_ = void 0), this.tech_.off("timeupdate", this.timeupdateHandler);
  }
  addCue(e10) {
    let t3 = e10;
    if (!("getCueAsHTML" in t3)) {
      t3 = new b3.vttjs.VTTCue(e10.startTime, e10.endTime, e10.text);
      for (const i6 in e10) i6 in t3 || (t3[i6] = e10[i6]);
      t3.id = e10.id, t3.originalCue_ = e10;
    }
    const i5 = this.tech_.textTracks();
    for (let s5 = 0; s5 < i5.length; s5++) i5[s5] !== this && i5[s5].removeCue(t3);
    this.cues_.push(t3), this.cues.setCues_(this.cues_);
  }
  removeCue(e10) {
    let t3 = this.cues_.length;
    for (; t3--; ) {
      const i5 = this.cues_[t3];
      if (i5 === e10 || i5.originalCue_ && i5.originalCue_ === e10) {
        this.cues_.splice(t3, 1), this.cues.setCues_(this.cues_);
        break;
      }
    }
  }
};
uo.prototype.allowedEvents_ = { cuechange: "cuechange" };
var co = class extends io {
  constructor(e10 = {}) {
    const t3 = Cn(e10, { kind: Za[e10.kind] || "" });
    super(t3);
    let i5 = false;
    Object.defineProperty(this, "enabled", { get: () => i5, set(e11) {
      "boolean" == typeof e11 && e11 !== i5 && (i5 = e11, this.trigger("enabledchange"));
    } }), t3.enabled && (this.enabled = t3.enabled), this.loaded_ = true;
  }
};
var po = class extends io {
  constructor(e10 = {}) {
    const t3 = Cn(e10, { kind: Ja[e10.kind] || "" });
    super(t3);
    let i5 = false;
    Object.defineProperty(this, "selected", { get: () => i5, set(e11) {
      "boolean" == typeof e11 && e11 !== i5 && (i5 = e11, this.trigger("selectedchange"));
    } }), t3.selected && (this.selected = t3.selected);
  }
};
var mo = class _mo extends oa {
  constructor(e10 = {}) {
    let t3;
    super();
    const i5 = new uo(e10);
    this.kind = i5.kind, this.src = i5.src, this.srclang = i5.language, this.label = i5.label, this.default = i5.default, Object.defineProperties(this, { readyState: { get: () => t3 }, track: { get: () => i5 } }), t3 = _mo.NONE, i5.addEventListener("loadeddata", () => {
      t3 = _mo.LOADED, this.trigger({ type: "load", target: this });
    });
  }
};
mo.prototype.allowedEvents_ = { load: "load" }, mo.NONE = 0, mo.LOADING = 1, mo.LOADED = 2, mo.ERROR = 3;
var go = { audio: { ListClass: Wa, TrackClass: co, capitalName: "Audio" }, video: { ListClass: Xa, TrackClass: po, capitalName: "Video" }, text: { ListClass: Ka, TrackClass: uo, capitalName: "Text" } };
Object.keys(go).forEach(function(e10) {
  go[e10].getterName = `${e10}Tracks`, go[e10].privateName = `${e10}Tracks_`;
});
var fo = { remoteText: { ListClass: Ka, TrackClass: uo, capitalName: "RemoteText", getterName: "remoteTextTracks", privateName: "remoteTextTracks_" }, remoteTextEl: { ListClass: Ya, TrackClass: mo, capitalName: "RemoteTextTrackEls", getterName: "remoteTextTrackEls", privateName: "remoteTextTrackEls_" } };
var yo = Object.assign({}, go, fo);
function _o(e10, t3, i5, s5, n4 = {}) {
  const r5 = e10.textTracks();
  n4.kind = t3, i5 && (n4.label = i5), s5 && (n4.language = s5), n4.tech = e10;
  const a9 = new yo.text.TrackClass(n4);
  return r5.addTrack(a9), a9;
}
fo.names = Object.keys(fo), go.names = Object.keys(go), yo.names = [].concat(fo.names).concat(go.names);
var vo = class _vo extends Ca {
  constructor(e10 = {}, t3 = function() {
  }) {
    e10.reportTouchActivity = false, super(null, e10, t3), this.onDurationChange_ = (e11) => this.onDurationChange(e11), this.trackProgress_ = (e11) => this.trackProgress(e11), this.trackCurrentTime_ = (e11) => this.trackCurrentTime(e11), this.stopTrackingCurrentTime_ = (e11) => this.stopTrackingCurrentTime(e11), this.disposeSourceHandler_ = (e11) => this.disposeSourceHandler(e11), this.queuedHanders_ = /* @__PURE__ */ new Set(), this.hasStarted_ = false, this.on("playing", function() {
      this.hasStarted_ = true;
    }), this.on("loadstart", function() {
      this.hasStarted_ = false;
    }), yo.names.forEach((t4) => {
      const i5 = yo[t4];
      e10 && e10[i5.getterName] && (this[i5.privateName] = e10[i5.getterName]);
    }), this.featuresProgressEvents || this.manualProgressOn(), this.featuresTimeupdateEvents || this.manualTimeUpdatesOn(), ["Text", "Audio", "Video"].forEach((t4) => {
      false === e10[`native${t4}Tracks`] && (this[`featuresNative${t4}Tracks`] = false);
    }), false === e10.nativeCaptions || false === e10.nativeTextTracks ? this.featuresNativeTextTracks = false : true !== e10.nativeCaptions && true !== e10.nativeTextTracks || (this.featuresNativeTextTracks = true), this.featuresNativeTextTracks || this.emulateTextTracks(), this.preloadTextTracks = false !== e10.preloadTextTracks, this.autoRemoteTextTracks_ = new yo.text.ListClass(), this.initTrackListeners(), e10.nativeControlsForTouch || this.emitTapEvents(), this.constructor && (this.name_ = this.constructor.name || "Unknown Tech");
  }
  triggerSourceset(e10) {
    this.isReady_ || this.one("ready", () => this.setTimeout(() => this.triggerSourceset(e10), 1)), this.trigger({ src: e10, type: "sourceset" });
  }
  manualProgressOn() {
    this.on("durationchange", this.onDurationChange_), this.manualProgress = true, this.one("ready", this.trackProgress_);
  }
  manualProgressOff() {
    this.manualProgress = false, this.stopTrackingProgress(), this.off("durationchange", this.onDurationChange_);
  }
  trackProgress(e10) {
    this.stopTrackingProgress(), this.progressInterval = this.setInterval(ia(this, function() {
      const e11 = this.bufferedPercent();
      this.bufferedPercent_ !== e11 && this.trigger("progress"), this.bufferedPercent_ = e11, 1 === e11 && this.stopTrackingProgress();
    }), 500);
  }
  onDurationChange(e10) {
    this.duration_ = this.duration();
  }
  buffered() {
    return Aa(0, 0);
  }
  bufferedPercent() {
    return Ma(this.buffered(), this.duration_);
  }
  stopTrackingProgress() {
    this.clearInterval(this.progressInterval);
  }
  manualTimeUpdatesOn() {
    this.manualTimeUpdates = true, this.on("play", this.trackCurrentTime_), this.on("pause", this.stopTrackingCurrentTime_);
  }
  manualTimeUpdatesOff() {
    this.manualTimeUpdates = false, this.stopTrackingCurrentTime(), this.off("play", this.trackCurrentTime_), this.off("pause", this.stopTrackingCurrentTime_);
  }
  trackCurrentTime() {
    this.currentTimeInterval && this.stopTrackingCurrentTime(), this.currentTimeInterval = this.setInterval(function() {
      this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
    }, 250);
  }
  stopTrackingCurrentTime() {
    this.clearInterval(this.currentTimeInterval), this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
  }
  dispose() {
    this.clearTracks(go.names), this.manualProgress && this.manualProgressOff(), this.manualTimeUpdates && this.manualTimeUpdatesOff(), super.dispose();
  }
  clearTracks(e10) {
    (e10 = [].concat(e10)).forEach((e11) => {
      const t3 = this[`${e11}Tracks`]() || [];
      let i5 = t3.length;
      for (; i5--; ) {
        const s5 = t3[i5];
        "text" === e11 && this.removeRemoteTextTrack(s5), t3.removeTrack(s5);
      }
    });
  }
  cleanupAutoTextTracks() {
    const e10 = this.autoRemoteTextTracks_ || [];
    let t3 = e10.length;
    for (; t3--; ) {
      const i5 = e10[t3];
      this.removeRemoteTextTrack(i5);
    }
  }
  reset() {
  }
  crossOrigin() {
  }
  setCrossOrigin() {
  }
  error(e10) {
    return void 0 !== e10 && (this.error_ = new Ua(e10), this.trigger("error")), this.error_;
  }
  played() {
    return this.hasStarted_ ? Aa(0, 0) : Aa();
  }
  play() {
  }
  setScrubbing(e10) {
  }
  scrubbing() {
  }
  setCurrentTime(e10) {
    this.manualTimeUpdates && this.trigger({ type: "timeupdate", target: this, manuallyTriggered: true });
  }
  initTrackListeners() {
    go.names.forEach((e10) => {
      const t3 = go[e10], i5 = () => {
        this.trigger(`${e10}trackchange`);
      }, s5 = this[t3.getterName]();
      s5.addEventListener("removetrack", i5), s5.addEventListener("addtrack", i5), this.on("dispose", () => {
        s5.removeEventListener("removetrack", i5), s5.removeEventListener("addtrack", i5);
      });
    });
  }
  addWebVttScript_() {
    if (!b3.WebVTT) if (ae.body.contains(this.el())) {
      if (!this.options_["vtt.js"] && wn(Be) && Object.keys(Be).length > 0) return void this.trigger("vttjsloaded");
      const e10 = ae.createElement("script");
      e10.src = this.options_["vtt.js"] || "https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js", e10.onload = () => {
        this.trigger("vttjsloaded");
      }, e10.onerror = () => {
        this.trigger("vttjserror");
      }, this.on("dispose", () => {
        e10.onload = null, e10.onerror = null;
      }), b3.WebVTT = true, this.el().parentNode.appendChild(e10);
    } else this.ready(this.addWebVttScript_);
  }
  emulateTextTracks() {
    const e10 = this.textTracks(), t3 = this.remoteTextTracks(), i5 = (t4) => e10.addTrack(t4.track), s5 = (t4) => e10.removeTrack(t4.track);
    t3.on("addtrack", i5), t3.on("removetrack", s5), this.addWebVttScript_();
    const n4 = () => this.trigger("texttrackchange"), r5 = () => {
      n4();
      for (let t4 = 0; t4 < e10.length; t4++) {
        const i6 = e10[t4];
        i6.removeEventListener("cuechange", n4), "showing" === i6.mode && i6.addEventListener("cuechange", n4);
      }
    };
    r5(), e10.addEventListener("change", r5), e10.addEventListener("addtrack", r5), e10.addEventListener("removetrack", r5), this.on("dispose", function() {
      t3.off("addtrack", i5), t3.off("removetrack", s5), e10.removeEventListener("change", r5), e10.removeEventListener("addtrack", r5), e10.removeEventListener("removetrack", r5);
      for (let t4 = 0; t4 < e10.length; t4++) {
        e10[t4].removeEventListener("cuechange", n4);
      }
    });
  }
  addTextTrack(e10, t3, i5) {
    if (!e10) throw new Error("TextTrack kind is required but was not provided");
    return _o(this, e10, t3, i5);
  }
  createRemoteTextTrack(e10) {
    const t3 = Cn(e10, { tech: this });
    return new fo.remoteTextEl.TrackClass(t3);
  }
  addRemoteTextTrack(e10 = {}, t3) {
    const i5 = this.createRemoteTextTrack(e10);
    return "boolean" != typeof t3 && (t3 = false), this.remoteTextTrackEls().addTrackElement_(i5), this.remoteTextTracks().addTrack(i5.track), false === t3 && this.ready(() => this.autoRemoteTextTracks_.addTrack(i5.track)), i5;
  }
  removeRemoteTextTrack(e10) {
    const t3 = this.remoteTextTrackEls().getTrackElementByTrack_(e10);
    this.remoteTextTrackEls().removeTrackElement_(t3), this.remoteTextTracks().removeTrack(e10), this.autoRemoteTextTracks_.removeTrack(e10);
  }
  getVideoPlaybackQuality() {
    return {};
  }
  requestPictureInPicture() {
    return Promise.reject();
  }
  disablePictureInPicture() {
    return true;
  }
  setDisablePictureInPicture() {
  }
  requestVideoFrameCallback(e10) {
    const t3 = Hr();
    return !this.isReady_ || this.paused() ? (this.queuedHanders_.add(t3), this.one("playing", () => {
      this.queuedHanders_.has(t3) && (this.queuedHanders_.delete(t3), e10());
    })) : this.requestNamedAnimationFrame(t3, e10), t3;
  }
  cancelVideoFrameCallback(e10) {
    this.queuedHanders_.has(e10) ? this.queuedHanders_.delete(e10) : this.cancelNamedAnimationFrame(e10);
  }
  setPoster() {
  }
  playsinline() {
  }
  setPlaysinline() {
  }
  overrideNativeAudioTracks(e10) {
  }
  overrideNativeVideoTracks(e10) {
  }
  canPlayType(e10) {
    return "";
  }
  static canPlayType(e10) {
    return "";
  }
  static canPlaySource(e10, t3) {
    return _vo.canPlayType(e10.type);
  }
  static isTech(e10) {
    return e10.prototype instanceof _vo || e10 instanceof _vo || e10 === _vo;
  }
  static registerTech(e10, t3) {
    if (_vo.techs_ || (_vo.techs_ = {}), !_vo.isTech(t3)) throw new Error(`Tech ${e10} must be a Tech`);
    if (!_vo.canPlayType) throw new Error("Techs must have a static canPlayType method on them");
    if (!_vo.canPlaySource) throw new Error("Techs must have a static canPlaySource method on them");
    return e10 = Sa(e10), _vo.techs_[e10] = t3, _vo.techs_[Ta(e10)] = t3, "Tech" !== e10 && _vo.defaultTechOrder_.push(e10), t3;
  }
  static getTech(e10) {
    if (e10) return _vo.techs_ && _vo.techs_[e10] ? _vo.techs_[e10] : (e10 = Sa(e10), b3 && b3.videojs && b3.videojs[e10] ? (yn.warn(`The ${e10} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`), b3.videojs[e10]) : void 0);
  }
};
yo.names.forEach(function(e10) {
  const t3 = yo[e10];
  vo.prototype[t3.getterName] = function() {
    return this[t3.privateName] = this[t3.privateName] || new t3.ListClass(), this[t3.privateName];
  };
}), vo.prototype.featuresVolumeControl = true, vo.prototype.featuresMuteControl = true, vo.prototype.featuresFullscreenResize = false, vo.prototype.featuresPlaybackRate = false, vo.prototype.featuresProgressEvents = false, vo.prototype.featuresSourceset = false, vo.prototype.featuresTimeupdateEvents = false, vo.prototype.featuresNativeTextTracks = false, vo.prototype.featuresVideoFrameCallback = false, vo.withSourceHandlers = function(e10) {
  e10.registerSourceHandler = function(t3, i5) {
    let s5 = e10.sourceHandlers;
    s5 || (s5 = e10.sourceHandlers = []), void 0 === i5 && (i5 = s5.length), s5.splice(i5, 0, t3);
  }, e10.canPlayType = function(t3) {
    const i5 = e10.sourceHandlers || [];
    let s5;
    for (let e11 = 0; e11 < i5.length; e11++) if (s5 = i5[e11].canPlayType(t3), s5) return s5;
    return "";
  }, e10.selectSourceHandler = function(t3, i5) {
    const s5 = e10.sourceHandlers || [];
    let n4;
    for (let e11 = 0; e11 < s5.length; e11++) if (n4 = s5[e11].canHandleSource(t3, i5), n4) return s5[e11];
    return null;
  }, e10.canPlaySource = function(t3, i5) {
    const s5 = e10.selectSourceHandler(t3, i5);
    return s5 ? s5.canHandleSource(t3, i5) : "";
  };
  ["seekable", "seeking", "duration"].forEach(function(e11) {
    const t3 = this[e11];
    "function" == typeof t3 && (this[e11] = function() {
      return this.sourceHandler_ && this.sourceHandler_[e11] ? this.sourceHandler_[e11].apply(this.sourceHandler_, arguments) : t3.apply(this, arguments);
    });
  }, e10.prototype), e10.prototype.setSource = function(t3) {
    let i5 = e10.selectSourceHandler(t3, this.options_);
    i5 || (e10.nativeSourceHandler ? i5 = e10.nativeSourceHandler : yn.error("No source handler found for the current source.")), this.disposeSourceHandler(), this.off("dispose", this.disposeSourceHandler_), i5 !== e10.nativeSourceHandler && (this.currentSource_ = t3), this.sourceHandler_ = i5.handleSource(t3, this, this.options_), this.one("dispose", this.disposeSourceHandler_);
  }, e10.prototype.disposeSourceHandler = function() {
    this.currentSource_ && (this.clearTracks(["audio", "video"]), this.currentSource_ = null), this.cleanupAutoTextTracks(), this.sourceHandler_ && (this.sourceHandler_.dispose && this.sourceHandler_.dispose(), this.sourceHandler_ = null);
  };
}, Ca.registerComponent("Tech", vo), vo.registerTech("Tech", vo), vo.defaultTechOrder_ = [];
var bo = {};
var To = {};
var So = {};
function Eo(e10, t3) {
  bo[e10] = bo[e10] || [], bo[e10].push(t3);
}
function wo(e10, t3, i5) {
  e10.setTimeout(() => Mo(t3, bo[t3.type], i5, e10), 1);
}
function Co(e10, t3) {
  e10.forEach((e11) => e11.setTech && e11.setTech(t3));
}
function ko(e10, t3, i5) {
  return e10.reduceRight(Lo(i5), t3[i5]());
}
function Io(e10, t3, i5, s5) {
  return t3[i5](e10.reduce(Lo(i5), s5));
}
function xo(e10, t3, i5, s5 = null) {
  const n4 = "call" + Sa(i5), r5 = e10.reduce(Lo(n4), s5), a9 = r5 === So, o4 = a9 ? null : t3[i5](r5);
  return Oo(e10, i5, o4, a9), o4;
}
var Ao = { buffered: 1, currentTime: 1, duration: 1, muted: 1, played: 1, paused: 1, seekable: 1, volume: 1, ended: 1 };
var Do = { setCurrentTime: 1, setMuted: 1, setVolume: 1 };
var Po = { play: 1, pause: 1 };
function Lo(e10) {
  return (t3, i5) => t3 === So ? So : i5[e10] ? i5[e10](t3) : t3;
}
function Oo(e10, t3, i5, s5) {
  for (let n4 = e10.length - 1; n4 >= 0; n4--) {
    const r5 = e10[n4];
    r5[t3] && r5[t3](s5, i5);
  }
}
function No(e10) {
  To.hasOwnProperty(e10.id()) && delete To[e10.id()];
}
function Ro(e10, t3) {
  const i5 = To[e10.id()];
  let s5 = null;
  if (null == i5) return s5 = t3(e10), To[e10.id()] = [[t3, s5]], s5;
  for (let n4 = 0; n4 < i5.length; n4++) {
    const [e11, r5] = i5[n4];
    e11 === t3 && (s5 = r5);
  }
  return null === s5 && (s5 = t3(e10), i5.push([t3, s5])), s5;
}
function Mo(e10 = {}, t3 = [], i5, s5, n4 = [], r5 = false) {
  const [a9, ...o4] = t3;
  if ("string" == typeof a9) Mo(e10, bo[a9], i5, s5, n4, r5);
  else if (a9) {
    const t4 = Ro(s5, a9);
    if (!t4.setSource) return n4.push(t4), Mo(e10, o4, i5, s5, n4, r5);
    t4.setSource(Object.assign({}, e10), function(a10, l7) {
      if (a10) return Mo(e10, o4, i5, s5, n4, r5);
      n4.push(t4), Mo(l7, e10.type === l7.type ? o4 : bo[l7.type], i5, s5, n4, r5);
    });
  } else o4.length ? Mo(e10, o4, i5, s5, n4, r5) : r5 ? i5(e10, n4) : Mo(e10, bo["*"], i5, s5, n4, true);
}
var Uo = { opus: "video/ogg", ogv: "video/ogg", mp4: "video/mp4", mov: "video/mp4", m4v: "video/mp4", mkv: "video/x-matroska", m4a: "audio/mp4", mp3: "audio/mpeg", aac: "audio/aac", caf: "audio/x-caf", flac: "audio/flac", oga: "audio/ogg", wav: "audio/wav", m3u8: "application/x-mpegURL", mpd: "application/dash+xml", jpg: "image/jpeg", jpeg: "image/jpeg", gif: "image/gif", png: "image/png", svg: "image/svg+xml", webp: "image/webp" };
var Bo = function(e10 = "") {
  const t3 = ro(e10);
  return Uo[t3.toLowerCase()] || "";
};
var Fo = (e10, t3) => {
  if (!t3) return "";
  if (e10.cache_.source.src === t3 && e10.cache_.source.type) return e10.cache_.source.type;
  const i5 = e10.cache_.sources.filter((e11) => e11.src === t3);
  if (i5.length) return i5[0].type;
  const s5 = e10.$$("source");
  for (let n4 = 0; n4 < s5.length; n4++) {
    const e11 = s5[n4];
    if (e11.type && e11.src && e11.src === t3) return e11.type;
  }
  return Bo(t3);
};
var qo = function(e10) {
  if (Array.isArray(e10)) {
    let t3 = [];
    e10.forEach(function(e11) {
      e11 = qo(e11), Array.isArray(e11) ? t3 = t3.concat(e11) : En(e11) && t3.push(e11);
    }), e10 = t3;
  } else e10 = "string" == typeof e10 && e10.trim() ? [jo({ src: e10 })] : En(e10) && "string" == typeof e10.src && e10.src && e10.src.trim() ? [jo(e10)] : [];
  return e10;
};
function jo(e10) {
  if (!e10.type) {
    const t3 = Bo(e10.src);
    t3 && (e10.type = t3);
  }
  return e10;
}
var $o = '<svg xmlns="http://www.w3.org/2000/svg">\n  <defs>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-play">\n      <path d="M16 10v28l22-14z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-pause">\n      <path d="M12 38h8V10h-8v28zm16-28v28h8V10h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-audio">\n      <path d="M24 2C14.06 2 6 10.06 6 20v14c0 3.31 2.69 6 6 6h6V24h-8v-4c0-7.73 6.27-14 14-14s14 6.27 14 14v4h-8v16h6c3.31 0 6-2.69 6-6V20c0-9.94-8.06-18-18-18z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-captions">\n      <path d="M38 8H10c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h28c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM22 22h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2zm14 0h-3v-1h-4v6h4v-1h3v2a2 2 0 0 1-2 2h-6a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h6a2 2 0 0 1 2 2v2z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-subtitles">\n      <path d="M40 8H8c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zM8 24h8v4H8v-4zm20 12H8v-4h20v4zm12 0h-8v-4h8v4zm0-8H20v-4h20v4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-fullscreen-enter">\n      <path d="M14 28h-4v10h10v-4h-6v-6zm-4-8h4v-6h6v-4H10v10zm24 14h-6v4h10V28h-4v6zm-6-24v4h6v6h4V10H28z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-fullscreen-exit">\n      <path d="M10 32h6v6h4V28H10v4zm6-16h-6v4h10V10h-4v6zm12 22h4v-6h6v-4H28v10zm4-22v-6h-4v10h10v-4h-6z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-play-circle">\n      <path d="M20 33l12-9-12-9v18zm4-29C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-mute">\n      <path d="M33 24c0-3.53-2.04-6.58-5-8.05v4.42l4.91 4.91c.06-.42.09-.85.09-1.28zm5 0c0 1.88-.41 3.65-1.08 5.28l3.03 3.03C41.25 29.82 42 27 42 24c0-8.56-5.99-15.72-14-17.54v4.13c5.78 1.72 10 7.07 10 13.41zM8.55 6L6 8.55 15.45 18H6v12h8l10 10V26.55l8.51 8.51c-1.34 1.03-2.85 1.86-4.51 2.36v4.13a17.94 17.94 0 0 0 7.37-3.62L39.45 42 42 39.45l-18-18L8.55 6zM24 8l-4.18 4.18L24 16.36V8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-low">\n      <path d="M14 18v12h8l10 10V8L22 18h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-medium">\n      <path d="M37 24c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zm-27-6v12h8l10 10V8L18 18h-8z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-volume-high">\n      <path d="M6 18v12h8l10 10V8L14 18H6zm27 6c0-3.53-2.04-6.58-5-8.05v16.11c2.96-1.48 5-4.53 5-8.06zM28 6.46v4.13c5.78 1.72 10 7.07 10 13.41s-4.22 11.69-10 13.41v4.13c8.01-1.82 14-8.97 14-17.54S36.01 8.28 28 6.46z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-spinner">\n      <path d="M18.8 21l9.53-16.51C26.94 4.18 25.49 4 24 4c-4.8 0-9.19 1.69-12.64 4.51l7.33 12.69.11-.2zm24.28-3c-1.84-5.85-6.3-10.52-11.99-12.68L23.77 18h19.31zm.52 2H28.62l.58 1 9.53 16.5C41.99 33.94 44 29.21 44 24c0-1.37-.14-2.71-.4-4zm-26.53 4l-7.8-13.5C6.01 14.06 4 18.79 4 24c0 1.37.14 2.71.4 4h14.98l-2.31-4zM4.92 30c1.84 5.85 6.3 10.52 11.99 12.68L24.23 30H4.92zm22.54 0l-7.8 13.51c1.4.31 2.85.49 4.34.49 4.8 0 9.19-1.69 12.64-4.51L29.31 26.8 27.46 30z"></path>\n    </symbol>\n    <symbol viewBox="0 0 24 24" id="vjs-icon-hd">\n      <path d="M19 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-8 12H9.5v-2h-2v2H6V9h1.5v2.5h2V9H11v6zm2-6h4c.55 0 1 .45 1 1v4c0 .55-.45 1-1 1h-4V9zm1.5 4.5h2v-3h-2v3z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-chapters">\n      <path d="M6 26h4v-4H6v4zm0 8h4v-4H6v4zm0-16h4v-4H6v4zm8 8h28v-4H14v4zm0 8h28v-4H14v4zm0-20v4h28v-4H14z"></path>\n    </symbol>\n    <symbol viewBox="0 0 40 40" id="vjs-icon-downloading">\n      <path d="M18.208 36.875q-3.208-.292-5.979-1.729-2.771-1.438-4.812-3.729-2.042-2.292-3.188-5.229-1.146-2.938-1.146-6.23 0-6.583 4.334-11.416 4.333-4.834 10.833-5.5v3.166q-5.167.75-8.583 4.646Q6.25 14.75 6.25 19.958q0 5.209 3.396 9.104 3.396 3.896 8.562 4.646zM20 28.417L11.542 20l2.083-2.083 4.917 4.916v-11.25h2.916v11.25l4.875-4.916L28.417 20zm1.792 8.458v-3.167q1.833-.25 3.541-.958 1.709-.708 3.167-1.875l2.333 2.292q-1.958 1.583-4.25 2.541-2.291.959-4.791 1.167zm6.791-27.792q-1.541-1.125-3.25-1.854-1.708-.729-3.541-1.021V3.042q2.5.25 4.77 1.208 2.271.958 4.271 2.5zm4.584 21.584l-2.25-2.25q1.166-1.5 1.854-3.209.687-1.708.937-3.541h3.209q-.292 2.5-1.229 4.791-.938 2.292-2.521 4.209zm.541-12.417q-.291-1.833-.958-3.562-.667-1.73-1.833-3.188l2.375-2.208q1.541 1.916 2.458 4.208.917 2.292 1.167 4.75z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download">\n      <path d="M10.8 40.55q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h26.35v-7.7h3.4v7.7q0 1.4-1 2.4t-2.4 1zM24 32.1L13.9 22.05l2.45-2.45 5.95 5.95V7.15h3.4v18.4l5.95-5.95 2.45 2.45z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download-done">\n      <path d="M9.8 40.5v-3.45h28.4v3.45zm9.2-9.05L7.4 19.85l2.45-2.35L19 26.65l19.2-19.2 2.4 2.4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-file-download-off">\n      <path d="M4.9 4.75L43.25 43.1 41 45.3l-4.75-4.75q-.05.05-.075.025-.025-.025-.075-.025H10.8q-1.35 0-2.375-1T7.4 37.15v-7.7h3.4v7.7h22.05l-7-7-1.85 1.8L13.9 21.9l1.85-1.85L2.7 7zm26.75 14.7l2.45 2.45-3.75 3.8-2.45-2.5zM25.7 7.15V21.1l-3.4-3.45V7.15z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-share">\n      <path d="M36 32.17c-1.52 0-2.89.59-3.93 1.54L17.82 25.4c.11-.45.18-.92.18-1.4s-.07-.95-.18-1.4l14.1-8.23c1.07 1 2.5 1.62 4.08 1.62 3.31 0 6-2.69 6-6s-2.69-6-6-6-6 2.69-6 6c0 .48.07.95.18 1.4l-14.1 8.23c-1.07-1-2.5-1.62-4.08-1.62-3.31 0-6 2.69-6 6s2.69 6 6 6c1.58 0 3.01-.62 4.08-1.62l14.25 8.31c-.1.42-.16.86-.16 1.31A5.83 5.83 0 1 0 36 32.17z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cog">\n      <path d="M38.86 25.95c.08-.64.14-1.29.14-1.95s-.06-1.31-.14-1.95l4.23-3.31c.38-.3.49-.84.24-1.28l-4-6.93c-.25-.43-.77-.61-1.22-.43l-4.98 2.01c-1.03-.79-2.16-1.46-3.38-1.97L29 4.84c-.09-.47-.5-.84-1-.84h-8c-.5 0-.91.37-.99.84l-.75 5.3a14.8 14.8 0 0 0-3.38 1.97L9.9 10.1a1 1 0 0 0-1.22.43l-4 6.93c-.25.43-.14.97.24 1.28l4.22 3.31C9.06 22.69 9 23.34 9 24s.06 1.31.14 1.95l-4.22 3.31c-.38.3-.49.84-.24 1.28l4 6.93c.25.43.77.61 1.22.43l4.98-2.01c1.03.79 2.16 1.46 3.38 1.97l.75 5.3c.08.47.49.84.99.84h8c.5 0 .91-.37.99-.84l.75-5.3a14.8 14.8 0 0 0 3.38-1.97l4.98 2.01a1 1 0 0 0 1.22-.43l4-6.93c.25-.43.14-.97-.24-1.28l-4.22-3.31zM24 31c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-square">\n      <path d="M36 8H12c-2.21 0-4 1.79-4 4v24c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 28H12V12h24v24z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle">\n      <circle cx="24" cy="24" r="20"></circle>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle-outline">\n      <path d="M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-circle-inner-circle">\n      <path d="M24 4C12.97 4 4 12.97 4 24s8.97 20 20 20 20-8.97 20-20S35.03 4 24 4zm0 36c-8.82 0-16-7.18-16-16S15.18 8 24 8s16 7.18 16 16-7.18 16-16 16zm6-16c0 3.31-2.69 6-6 6s-6-2.69-6-6 2.69-6 6-6 6 2.69 6 6z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cancel">\n      <path d="M24 4C12.95 4 4 12.95 4 24s8.95 20 20 20 20-8.95 20-20S35.05 4 24 4zm10 27.17L31.17 34 24 26.83 16.83 34 14 31.17 21.17 24 14 16.83 16.83 14 24 21.17 31.17 14 34 16.83 26.83 24 34 31.17z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-replay">\n      <path d="M24 10V2L14 12l10 10v-8c6.63 0 12 5.37 12 12s-5.37 12-12 12-12-5.37-12-12H8c0 8.84 7.16 16 16 16s16-7.16 16-16-7.16-16-16-16z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-repeat">\n      <path d="M14 14h20v6l8-8-8-8v6H10v12h4v-8zm20 20H14v-6l-8 8 8 8v-6h24V26h-4v8z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-5">\n      <path d="M17.689 98l-8.697 8.696 8.697 8.697 2.486-2.485-4.32-4.319h1.302c4.93 0 9.071 1.722 12.424 5.165 3.352 3.443 5.029 7.638 5.029 12.584h3.55c0-2.958-.553-5.73-1.658-8.313-1.104-2.583-2.622-4.841-4.555-6.774-1.932-1.932-4.19-3.45-6.773-4.555-2.584-1.104-5.355-1.657-8.313-1.657H15.5l4.615-4.615zm-8.08 21.659v13.861h11.357v5.008H9.609V143h12.7c.834 0 1.55-.298 2.146-.894.596-.597.895-1.31.895-2.145v-7.781c0-.835-.299-1.55-.895-2.147a2.929 2.929 0 0 0-2.147-.894h-8.227v-5.096H25.35v-4.384z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-10">\n      <path d="M42.315 125.63c0-4.997-1.694-9.235-5.08-12.713-3.388-3.479-7.571-5.218-12.552-5.218h-1.315l4.363 4.363-2.51 2.51-8.787-8.786L25.221 97l2.45 2.45-4.662 4.663h1.375c2.988 0 5.788.557 8.397 1.673 2.61 1.116 4.892 2.65 6.844 4.602 1.953 1.953 3.487 4.234 4.602 6.844 1.116 2.61 1.674 5.41 1.674 8.398zM8.183 142v-19.657H3.176V117.8h9.643V142zm13.63 0c-1.156 0-2.127-.393-2.912-1.178-.778-.778-1.168-1.746-1.168-2.902v-16.04c0-1.156.393-2.127 1.178-2.912.779-.779 1.746-1.168 2.902-1.168h7.696c1.156 0 2.126.392 2.911 1.177.779.78 1.168 1.747 1.168 2.903v16.04c0 1.156-.392 2.127-1.177 2.912-.779.779-1.746 1.168-2.902 1.168zm.556-4.636h6.583v-15.02H22.37z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-replay-30">\n      <path d="M26.047 97l-8.733 8.732 8.733 8.733 2.496-2.494-4.336-4.338h1.307c4.95 0 9.108 1.73 12.474 5.187 3.367 3.458 5.051 7.668 5.051 12.635h3.565c0-2.97-.556-5.751-1.665-8.346-1.109-2.594-2.633-4.862-4.574-6.802-1.94-1.941-4.208-3.466-6.803-4.575-2.594-1.109-5.375-1.664-8.345-1.664H23.85l4.634-4.634zM2.555 117.531v4.688h10.297v5.25H5.873v4.687h6.979v5.156H2.555V142H13.36c1.061 0 1.95-.395 2.668-1.186.718-.79 1.076-1.772 1.076-2.94v-16.218c0-1.168-.358-2.149-1.076-2.94-.717-.79-1.607-1.185-2.668-1.185zm22.482.14c-1.149 0-2.11.39-2.885 1.165-.78.78-1.172 1.744-1.172 2.893v15.943c0 1.149.388 2.11 1.163 2.885.78.78 1.745 1.172 2.894 1.172h7.649c1.148 0 2.11-.388 2.884-1.163.78-.78 1.17-1.745 1.17-2.894v-15.943c0-1.15-.386-2.111-1.16-2.885-.78-.78-1.746-1.172-2.894-1.172zm.553 4.518h6.545v14.93H25.59z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-5">\n      <path d="M29.508 97l-2.431 2.43 4.625 4.625h-1.364c-2.965 0-5.742.554-8.332 1.66-2.589 1.107-4.851 2.629-6.788 4.566-1.937 1.937-3.458 4.2-4.565 6.788-1.107 2.59-1.66 5.367-1.66 8.331h3.557c0-4.957 1.68-9.16 5.04-12.611 3.36-3.45 7.51-5.177 12.451-5.177h1.304l-4.326 4.33 2.49 2.49 8.715-8.716zm-9.783 21.61v13.89h11.382v5.018H19.725V142h12.727a2.93 2.93 0 0 0 2.15-.896 2.93 2.93 0 0 0 .896-2.15v-7.798c0-.837-.299-1.554-.896-2.152a2.93 2.93 0 0 0-2.15-.896h-8.245V123h11.29v-4.392z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-10">\n      <path d="M23.119 97l-2.386 2.383 4.538 4.538h-1.339c-2.908 0-5.633.543-8.173 1.63-2.54 1.085-4.76 2.577-6.66 4.478-1.9 1.9-3.392 4.12-4.478 6.66-1.085 2.54-1.629 5.264-1.629 8.172h3.49c0-4.863 1.648-8.986 4.944-12.372 3.297-3.385 7.368-5.078 12.216-5.078h1.279l-4.245 4.247 2.443 2.442 8.55-8.55zm-9.52 21.45v4.42h4.871V142h4.513v-23.55zm18.136 0c-1.125 0-2.066.377-2.824 1.135-.764.764-1.148 1.709-1.148 2.834v15.612c0 1.124.38 2.066 1.139 2.824.764.764 1.708 1.145 2.833 1.145h7.489c1.125 0 2.066-.378 2.824-1.136.764-.764 1.145-1.709 1.145-2.833v-15.612c0-1.125-.378-2.067-1.136-2.825-.764-.764-1.708-1.145-2.833-1.145zm.54 4.42h6.408v14.617h-6.407z"></path>\n    </symbol>\n    <symbol viewBox="0 96 48 48" id="vjs-icon-forward-30">\n      <path d="M25.549 97l-2.437 2.434 4.634 4.635H26.38c-2.97 0-5.753.555-8.347 1.664-2.594 1.109-4.861 2.633-6.802 4.574-1.94 1.94-3.465 4.207-4.574 6.802-1.109 2.594-1.664 5.377-1.664 8.347h3.565c0-4.967 1.683-9.178 5.05-12.636 3.366-3.458 7.525-5.187 12.475-5.187h1.307l-4.335 4.338 2.495 2.494 8.732-8.732zm-11.553 20.53v4.689h10.297v5.249h-6.978v4.688h6.978v5.156H13.996V142h10.808c1.06 0 1.948-.395 2.666-1.186.718-.79 1.077-1.771 1.077-2.94v-16.217c0-1.169-.36-2.15-1.077-2.94-.718-.79-1.605-1.186-2.666-1.186zm21.174.168c-1.149 0-2.11.389-2.884 1.163-.78.78-1.172 1.745-1.172 2.894v15.942c0 1.15.388 2.11 1.162 2.885.78.78 1.745 1.17 2.894 1.17h7.649c1.149 0 2.11-.386 2.885-1.16.78-.78 1.17-1.746 1.17-2.895v-15.942c0-1.15-.387-2.11-1.161-2.885-.78-.78-1.745-1.172-2.894-1.172zm.552 4.516h6.542v14.931h-6.542z"></path>\n    </symbol>\n    <symbol viewBox="0 0 512 512" id="vjs-icon-audio-description">\n      <g fill-rule="evenodd"><path d="M227.29 381.351V162.993c50.38-1.017 89.108-3.028 117.631 17.126 27.374 19.342 48.734 56.965 44.89 105.325-4.067 51.155-41.335 94.139-89.776 98.475-24.085 2.155-71.972 0-71.972 0s-.84-1.352-.773-2.568m48.755-54.804c31.43 1.26 53.208-16.633 56.495-45.386 4.403-38.51-21.188-63.552-58.041-60.796v103.612c-.036 1.466.575 2.22 1.546 2.57"></path><path d="M383.78 381.328c13.336 3.71 17.387-11.06 23.215-21.408 12.722-22.571 22.294-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.226 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894"></path><path d="M425.154 381.328c13.336 3.71 17.384-11.061 23.215-21.408 12.721-22.571 22.291-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.511c-.586 3.874 2.226 7.315 3.866 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894"></path><path d="M466.26 381.328c13.337 3.71 17.385-11.061 23.216-21.408 12.722-22.571 22.292-51.594 22.445-84.774.221-47.594-18.343-82.517-35.6-106.182h-8.51c-.587 3.874 2.225 7.315 3.865 10.276 13.166 23.762 25.367 56.553 25.54 94.194.2 43.176-14.162 79.278-30.955 107.894M4.477 383.005H72.58l18.573-28.484 64.169-.135s.065 19.413.065 28.62h48.756V160.307h-58.816c-5.653 9.537-140.85 222.697-140.85 222.697zm152.667-145.282v71.158l-40.453-.27 40.453-70.888z"></path></g>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-next-item">\n      <path d="M12 36l17-12-17-12v24zm20-24v24h4V12h-4z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-previous-item">\n      <path d="M12 12h4v24h-4zm7 12l17 12V12z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-shuffle">\n      <path d="M21.17 18.34L10.83 8 8 10.83l10.34 10.34 2.83-2.83zM29 8l4.09 4.09L8 37.17 10.83 40l25.09-25.09L40 19V8H29zm.66 18.83l-2.83 2.83 6.26 6.26L29 40h11V29l-4.09 4.09-6.25-6.26z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-cast">\n      <path d="M42 6H6c-2.21 0-4 1.79-4 4v6h4v-6h36v28H28v4h14c2.21 0 4-1.79 4-4V10c0-2.21-1.79-4-4-4zM2 36v6h6c0-3.31-2.69-6-6-6zm0-8v4c5.52 0 10 4.48 10 10h4c0-7.73-6.27-14-14-14zm0-8v4c9.94 0 18 8.06 18 18h4c0-12.15-9.85-22-22-22z"></path>\n    </symbol>\n    <symbol viewBox="0 0 48 48" id="vjs-icon-picture-in-picture-enter">\n      <path d="M38 22H22v11.99h16V22zm8 16V9.96C46 7.76 44.2 6 42 6H6C3.8 6 2 7.76 2 9.96V38c0 2.2 1.8 4 4 4h36c2.2 0 4-1.8 4-4zm-4 .04H6V9.94h36v28.1z"></path>\n    </symbol>\n    <symbol viewBox="0 0 22 18" id="vjs-icon-picture-in-picture-exit">\n      <path d="M18 4H4v10h14V4zm4 12V1.98C22 .88 21.1 0 20 0H2C.9 0 0 .88 0 1.98V16c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2zm-2 .02H2V1.97h18v14.05z"></path>\n      <path fill="none" d="M-1-3h24v24H-1z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-facebook">\n      <path d="M1343 12v264h-157q-86 0-116 36t-30 108v189h293l-39 296h-254v759H734V905H479V609h255V391q0-186 104-288.5T1115 0q147 0 228 12z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-linkedin">\n      <path d="M477 625v991H147V625h330zm21-306q1 73-50.5 122T312 490h-2q-82 0-132-49t-50-122q0-74 51.5-122.5T314 148t133 48.5T498 319zm1166 729v568h-329v-530q0-105-40.5-164.5T1168 862q-63 0-105.5 34.5T999 982q-11 30-11 81v553H659q2-399 2-647t-1-296l-1-48h329v144h-2q20-32 41-56t56.5-52 87-43.5T1285 602q171 0 275 113.5t104 332.5z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1200 1227" id="vjs-icon-twitter">\n      <path d="M714.163 519.284L1160.89 0H1055.03L667.137 450.887L357.328 0H0L468.492 681.821L0 1226.37H105.866L515.491 750.218L842.672 1226.37H1200L714.137 519.284H714.163ZM569.165 687.828L521.697 619.934L144.011 79.6944H306.615L611.412 515.685L658.88 583.579L1055.08 1150.3H892.476L569.165 687.854V687.828Z"/>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-tumblr">\n      <path d="M1328 1329l80 237q-23 35-111 66t-177 32q-104 2-190.5-26T787 1564t-95-106-55.5-120-16.5-118V676H452V461q72-26 129-69.5t91-90 58-102 34-99T779 12q1-5 4.5-8.5T791 0h244v424h333v252h-334v518q0 30 6.5 56t22.5 52.5 49.5 41.5 81.5 14q78-2 134-29z"></path>\n    </symbol>\n    <symbol viewBox="0 0 1792 1792" id="vjs-icon-pinterest">\n      <path d="M1664 896q0 209-103 385.5T1281.5 1561 896 1664q-111 0-218-32 59-93 78-164 9-34 54-211 20 39 73 67.5t114 28.5q121 0 216-68.5t147-188.5 52-270q0-114-59.5-214T1180 449t-255-63q-105 0-196 29t-154.5 77-109 110.5-67 129.5T377 866q0 104 40 183t117 111q30 12 38-20 2-7 8-31t8-30q6-23-11-43-51-61-51-151 0-151 104.5-259.5T904 517q151 0 235.5 82t84.5 213q0 170-68.5 289T980 1220q-61 0-98-43.5T859 1072q8-35 26.5-93.5t30-103T927 800q0-50-27-83t-77-33q-62 0-105 57t-43 142q0 73 25 122l-99 418q-17 70-13 177-206-91-333-281T128 896q0-209 103-385.5T510.5 231 896 128t385.5 103T1561 510.5 1664 896z"></path>\n    </symbol>\n  </defs>\n</svg>';
var Ho = zn ? 10009 : Wn ? 461 : 8;
var Vo = { codes: { play: 415, pause: 19, ff: 417, rw: 412, back: Ho }, names: { 415: "play", 19: "pause", 417: "ff", 412: "rw", [Ho]: "back" }, isEventKey(e10, t3) {
  return t3 = t3.toLowerCase(), !(!this.names[e10.keyCode] || this.names[e10.keyCode] !== t3);
}, getEventName(e10) {
  if (this.names[e10.keyCode]) return this.names[e10.keyCode];
  if (this.codes[e10.code]) {
    const t3 = this.codes[e10.code];
    return this.names[t3];
  }
  return null;
} };
var zo = 5;
var Wo = class extends oa {
  constructor(e10) {
    super(), this.player_ = e10, this.focusableComponents = [], this.isListening_ = false, this.isPaused_ = false, this.onKeyDown_ = this.onKeyDown_.bind(this), this.lastFocusedComponent_ = null;
  }
  start() {
    this.isListening_ || (this.player_.on("keydown", this.onKeyDown_), this.player_.on("modalKeydown", this.onKeyDown_), this.player_.on("loadedmetadata", () => {
      this.focus(this.updateFocusableComponents()[0]);
    }), this.player_.on("modalclose", () => {
      this.refocusComponent();
    }), this.player_.on("focusin", this.handlePlayerFocus_.bind(this)), this.player_.on("focusout", this.handlePlayerBlur_.bind(this)), this.isListening_ = true, this.player_.errorDisplay && this.player_.errorDisplay.on("aftermodalfill", () => {
      this.updateFocusableComponents(), this.focusableComponents.length && (this.focusableComponents.length > 1 ? this.focusableComponents[1].focus() : this.focusableComponents[0].focus());
    }));
  }
  stop() {
    this.player_.off("keydown", this.onKeyDown_), this.isListening_ = false;
  }
  onKeyDown_(e10) {
    const t3 = e10.originalEvent ? e10.originalEvent : e10;
    if (["ArrowLeft", "ArrowRight", "ArrowUp", "ArrowDown"].includes(t3.key)) {
      if (this.isPaused_) return;
      t3.preventDefault();
      const e11 = t3.key.substring(5).toLowerCase();
      this.move(e11);
    } else if (Vo.isEventKey(t3, "play") || Vo.isEventKey(t3, "pause") || Vo.isEventKey(t3, "ff") || Vo.isEventKey(t3, "rw")) {
      t3.preventDefault();
      const e11 = Vo.getEventName(t3);
      this.performMediaAction_(e11);
    } else Vo.isEventKey(t3, "Back") && e10.target && "function" == typeof e10.target.closeable && e10.target.closeable() && (t3.preventDefault(), e10.target.close());
  }
  performMediaAction_(e10) {
    if (this.player_) switch (e10) {
      case "play":
        this.player_.paused() && this.player_.play();
        break;
      case "pause":
        this.player_.paused() || this.player_.pause();
        break;
      case "ff":
        this.userSeek_(this.player_.currentTime() + zo);
        break;
      case "rw":
        this.userSeek_(this.player_.currentTime() - zo);
    }
  }
  userSeek_(e10) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser(), this.player_.currentTime(e10);
  }
  pause() {
    this.isPaused_ = true;
  }
  resume() {
    this.isPaused_ = false;
  }
  handlePlayerBlur_(e10) {
    const t3 = e10.relatedTarget;
    let i5 = null;
    const s5 = this.getCurrentComponent(e10.target);
    t3 && (i5 = Boolean(t3.closest(".video-js")), t3.classList.contains("vjs-text-track-settings") && !this.isPaused_ && this.searchForTrackSelect_()), (e10.currentTarget.contains(e10.relatedTarget) || i5) && t3 || (s5 && "CloseButton" === s5.name() ? this.refocusComponent() : (this.pause(), s5 && s5.el() && (this.lastFocusedComponent_ = s5)));
  }
  handlePlayerFocus_() {
    this.getCurrentComponent() && this.getCurrentComponent().getIsFocusable() && this.resume();
  }
  updateFocusableComponents() {
    const e10 = this.player_, t3 = [];
    function i5(e11) {
      for (const s5 of e11) s5.hasOwnProperty("el_") && s5.getIsFocusable() && s5.getIsAvailableToBeFocused(s5.el()) && t3.push(s5), s5.hasOwnProperty("children_") && s5.children_.length > 0 && i5(s5.children_);
    }
    return e10.children_.forEach((e11) => {
      if (e11.hasOwnProperty("el_")) {
        if (e11.getIsFocusable && e11.getIsAvailableToBeFocused && e11.getIsFocusable() && e11.getIsAvailableToBeFocused(e11.el())) return void t3.push(e11);
        e11.hasOwnProperty("children_") && e11.children_.length > 0 ? i5(e11.children_) : e11.hasOwnProperty("items") && e11.items.length > 0 ? i5(e11.items) : this.findSuitableDOMChild(e11) && t3.push(e11);
      }
      if ("ErrorDisplay" === e11.name_ && e11.opened_) {
        const i6 = e11.el_.querySelector(".vjs-errors-ok-button-container");
        if (i6) {
          i6.querySelectorAll("button").forEach((e12, i7) => {
            t3.push({ name: () => "ModalButton" + (i7 + 1), el: () => e12, getPositions: () => {
              const t4 = e12.getBoundingClientRect();
              return { boundingClientRect: { x: t4.x, y: t4.y, width: t4.width, height: t4.height, top: t4.top, right: t4.right, bottom: t4.bottom, left: t4.left }, center: { x: t4.left + t4.width / 2, y: t4.top + t4.height / 2, width: 0, height: 0, top: t4.top + t4.height / 2, right: t4.left + t4.width / 2, bottom: t4.top + t4.height / 2, left: t4.left + t4.width / 2 } };
            }, getIsAvailableToBeFocused: () => true, getIsFocusable: (e13) => true, focus: () => e12.focus() });
          });
        }
      }
    }), this.focusableComponents = t3, this.focusableComponents;
  }
  findSuitableDOMChild(e10) {
    function t3(i5) {
      if (e10.getIsFocusable(i5) && e10.getIsAvailableToBeFocused(i5)) return i5;
      for (let e11 = 0; e11 < i5.children.length; e11++) {
        const s5 = t3(i5.children[e11]);
        if (s5) return s5;
      }
      return null;
    }
    return e10.el() ? t3(e10.el()) : null;
  }
  getCurrentComponent(e10) {
    this.updateFocusableComponents();
    const t3 = e10 || document.activeElement;
    if (this.focusableComponents.length) {
      for (const i5 of this.focusableComponents) if (i5.el() === t3) return i5;
    }
  }
  add(e10) {
    const t3 = [...this.focusableComponents];
    e10.hasOwnProperty("el_") && e10.getIsFocusable() && e10.getIsAvailableToBeFocused(e10.el()) && t3.push(e10), this.focusableComponents = t3, this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents });
  }
  remove(e10) {
    for (let t3 = 0; t3 < this.focusableComponents.length; t3++) if (this.focusableComponents[t3].name() === e10.name()) return this.focusableComponents.splice(t3, 1), void this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents });
  }
  clear() {
    this.focusableComponents.length > 0 && (this.focusableComponents = [], this.trigger({ type: "focusableComponentsChanged", focusableComponents: this.focusableComponents }));
  }
  move(e10) {
    const t3 = this.getCurrentComponent();
    if (!t3) return;
    const i5 = t3.getPositions(), s5 = this.focusableComponents.filter((s6) => s6 !== t3 && this.isInDirection_(i5.boundingClientRect, s6.getPositions().boundingClientRect, e10)), n4 = this.findBestCandidate_(i5.center, s5, e10);
    n4 ? this.focus(n4) : this.trigger({ type: "endOfFocusableComponents", direction: e10, focusedComponent: t3 });
  }
  findBestCandidate_(e10, t3, i5) {
    let s5 = 1 / 0, n4 = null;
    for (const r5 of t3) {
      const t4 = r5.getPositions().center, a9 = this.calculateDistance_(e10, t4, i5);
      a9 < s5 && (s5 = a9, n4 = r5);
    }
    return n4;
  }
  isInDirection_(e10, t3, i5) {
    switch (i5) {
      case "right":
        return t3.left >= e10.right;
      case "left":
        return t3.right <= e10.left;
      case "down":
        return t3.top >= e10.bottom;
      case "up":
        return t3.bottom <= e10.top;
      default:
        return false;
    }
  }
  refocusComponent() {
    if (this.lastFocusedComponent_) {
      this.player_.userActive() || this.player_.userActive(true), this.updateFocusableComponents();
      for (let e10 = 0; e10 < this.focusableComponents.length; e10++) if (this.focusableComponents[e10].name() === this.lastFocusedComponent_.name()) return void this.focus(this.focusableComponents[e10]);
    } else this.focus(this.updateFocusableComponents()[0]);
  }
  focus(e10) {
    "object" == typeof e10 && (e10.getIsAvailableToBeFocused(e10.el()) ? e10.focus() : this.findSuitableDOMChild(e10) && this.findSuitableDOMChild(e10).focus());
  }
  calculateDistance_(e10, t3, i5) {
    const s5 = Math.abs(e10.x - t3.x), n4 = Math.abs(e10.y - t3.y);
    let r5;
    switch (i5) {
      case "right":
      case "left":
        r5 = s5 + 100 * n4;
        break;
      case "up":
        r5 = 2 * n4 + 0.5 * s5;
        break;
      case "down":
        r5 = 5 * n4 + s5;
        break;
      default:
        r5 = s5 + n4;
    }
    return r5;
  }
  searchForTrackSelect_() {
    const e10 = this;
    for (const t3 of e10.updateFocusableComponents()) if ("TextTrackSelect" === t3.constructor.name) {
      e10.focus(t3);
      break;
    }
  }
};
var Go = class extends Ca {
  constructor(e10, t3, i5) {
    if (super(e10, Cn({ createEl: false }, t3), i5), t3.playerOptions.sources && 0 !== t3.playerOptions.sources.length) e10.src(t3.playerOptions.sources);
    else for (let s5 = 0, n4 = t3.playerOptions.techOrder; s5 < n4.length; s5++) {
      const t4 = Sa(n4[s5]);
      let i6 = vo.getTech(t4);
      if (t4 || (i6 = Ca.getComponent(t4)), i6 && i6.isSupported()) {
        e10.loadTech_(t4);
        break;
      }
    }
  }
};
Ca.registerComponent("MediaLoader", Go);
var Xo = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.options_.controlText && this.controlText(this.options_.controlText), this.handleMouseOver_ = (e11) => this.handleMouseOver(e11), this.handleMouseOut_ = (e11) => this.handleMouseOut(e11), this.handleClick_ = (e11) => this.handleClick(e11), this.handleKeyDown_ = (e11) => this.handleKeyDown(e11), this.emitTapEvents(), this.enable();
  }
  createEl(e10 = "div", t3 = {}, i5 = {}) {
    t3 = Object.assign({ className: this.buildCSSClass(), tabIndex: 0 }, t3), "button" === e10 && yn.error(`Creating a ClickableComponent with an HTML element of ${e10} is not supported; use a Button instead.`), i5 = Object.assign({ role: "button" }, i5), this.tabIndex_ = t3.tabIndex;
    const s5 = rr(e10, t3, i5);
    return this.player_.options_.experimentalSvgIcons || s5.appendChild(rr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), this.createControlTextEl(s5), s5;
  }
  dispose() {
    this.controlTextEl_ = null, super.dispose();
  }
  createControlTextEl(e10) {
    return this.controlTextEl_ = rr("span", { className: "vjs-control-text" }, { "aria-live": "polite" }), e10 && e10.appendChild(this.controlTextEl_), this.controlText(this.controlText_, e10), this.controlTextEl_;
  }
  controlText(e10, t3 = this.el()) {
    if (void 0 === e10) return this.controlText_ || "Need Text";
    const i5 = this.localize(e10);
    this.controlText_ = e10, ar(this.controlTextEl_, i5), this.nonIconControl || this.player_.options_.noUITitleAttributes || t3.setAttribute("title", i5);
  }
  buildCSSClass() {
    return `vjs-control vjs-button ${super.buildCSSClass()}`;
  }
  enable() {
    this.enabled_ || (this.enabled_ = true, this.removeClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "false"), void 0 !== this.tabIndex_ && this.el_.setAttribute("tabIndex", this.tabIndex_), this.on(["tap", "click"], this.handleClick_), this.on("keydown", this.handleKeyDown_));
  }
  disable() {
    this.enabled_ = false, this.addClass("vjs-disabled"), this.el_.setAttribute("aria-disabled", "true"), void 0 !== this.tabIndex_ && this.el_.removeAttribute("tabIndex"), this.off("mouseover", this.handleMouseOver_), this.off("mouseout", this.handleMouseOut_), this.off(["tap", "click"], this.handleClick_), this.off("keydown", this.handleKeyDown_);
  }
  handleLanguagechange() {
    this.controlText(this.controlText_);
  }
  handleClick(e10) {
    this.options_.clickHandler && this.options_.clickHandler.call(this, arguments);
  }
  handleKeyDown(e10) {
    " " === e10.key || "Enter" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.trigger("click")) : super.handleKeyDown(e10);
  }
};
Ca.registerComponent("ClickableComponent", Xo);
var Ko = class extends Xo {
  constructor(e10, t3) {
    super(e10, t3), this.update(), this.update_ = (e11) => this.update(e11), e10.on("posterchange", this.update_);
  }
  dispose() {
    this.player().off("posterchange", this.update_), super.dispose();
  }
  createEl() {
    return rr("div", { className: "vjs-poster" });
  }
  crossOrigin(e10) {
    if (void 0 === e10) return this.$("img") ? this.$("img").crossOrigin : this.player_.tech_ && this.player_.tech_.isReady_ ? this.player_.crossOrigin() : this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;
    null === e10 || "anonymous" === e10 || "use-credentials" === e10 ? this.$("img") && (this.$("img").crossOrigin = e10) : this.player_.log.warn(`crossOrigin must be null,  "anonymous" or "use-credentials", given "${e10}"`);
  }
  update(e10) {
    const t3 = this.player().poster();
    this.setSrc(t3), t3 ? this.show() : this.hide();
  }
  setSrc(e10) {
    e10 ? (this.$("img") || this.el_.appendChild(rr("picture", { className: "vjs-poster", tabIndex: -1 }, {}, rr("img", { loading: "lazy", crossOrigin: this.crossOrigin() }, { alt: "" }))), this.$("img").src = e10) : this.el_.textContent = "";
  }
  handleClick(e10) {
    this.player_.controls() && (this.player_.tech(true) && this.player_.tech(true).focus(), this.player_.paused() ? Fa(this.player_.play()) : this.player_.pause());
  }
};
Ko.prototype.crossorigin = Ko.prototype.crossOrigin, Ca.registerComponent("PosterImage", Ko);
var Yo = "#222";
var Qo = "#ccc";
var Jo = { monospace: "monospace", sansSerif: "sans-serif", serif: "serif", monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace', monospaceSerif: '"Courier New", monospace', proportionalSansSerif: "sans-serif", proportionalSerif: "serif", casual: '"Comic Sans MS", Impact, fantasy', script: '"Monotype Corsiva", cursive', smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif' };
function Zo(e10, t3) {
  let i5;
  if (4 === e10.length) i5 = e10[1] + e10[1] + e10[2] + e10[2] + e10[3] + e10[3];
  else {
    if (7 !== e10.length) throw new Error("Invalid color code provided, " + e10 + "; must be formatted as e.g. #f0e or #f604e2.");
    i5 = e10.slice(1);
  }
  return "rgba(" + parseInt(i5.slice(0, 2), 16) + "," + parseInt(i5.slice(2, 4), 16) + "," + parseInt(i5.slice(4, 6), 16) + "," + t3 + ")";
}
function el(e10, t3, i5) {
  try {
    e10.style[t3] = i5;
  } catch (s5) {
    return;
  }
}
function tl(e10) {
  return e10 ? `${e10}px` : "";
}
var il = class extends Ca {
  constructor(e10, t3, i5) {
    super(e10, t3, i5);
    const s5 = (e11) => this.updateDisplay(e11), n4 = (e11) => {
      this.updateDisplayOverlay(), this.updateDisplay(e11);
    };
    e10.on("loadstart", (e11) => this.toggleDisplay(e11)), e10.on("texttrackchange", s5), e10.on("loadedmetadata", (e11) => {
      this.updateDisplayOverlay(), this.preselectTrack(e11);
    }), e10.ready(ia(this, function() {
      if (e10.tech_ && e10.tech_.featuresNativeTextTracks) return void this.hide();
      e10.on("fullscreenchange", n4), e10.on("playerresize", n4);
      const t4 = b3.screen.orientation || b3, i6 = b3.screen.orientation ? "change" : "orientationchange";
      t4.addEventListener(i6, n4), e10.on("dispose", () => t4.removeEventListener(i6, n4));
      const s6 = this.options_.playerOptions.tracks || [];
      for (let e11 = 0; e11 < s6.length; e11++) this.player_.addRemoteTextTrack(s6[e11], true);
      this.preselectTrack();
    }));
  }
  preselectTrack() {
    const e10 = { captions: 1, subtitles: 1 }, t3 = this.player_.textTracks(), i5 = this.player_.cache_.selectedLanguage;
    let s5, n4, r5;
    for (let a9 = 0; a9 < t3.length; a9++) {
      const o4 = t3[a9];
      i5 && i5.enabled && i5.language && i5.language === o4.language && o4.kind in e10 ? o4.kind === i5.kind ? r5 = o4 : r5 || (r5 = o4) : i5 && !i5.enabled ? (r5 = null, s5 = null, n4 = null) : o4.default && ("descriptions" !== o4.kind || s5 ? o4.kind in e10 && !n4 && (n4 = o4) : s5 = o4);
    }
    r5 ? r5.mode = "showing" : n4 ? n4.mode = "showing" : s5 && (s5.mode = "showing");
  }
  toggleDisplay() {
    this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks ? this.hide() : this.show();
  }
  createEl() {
    return super.createEl("div", { className: "vjs-text-track-display" }, { translate: "yes", "aria-live": "off", "aria-atomic": "true" });
  }
  clearDisplay() {
    "function" == typeof b3.WebVTT && b3.WebVTT.processCues(b3, [], this.el_);
  }
  updateDisplay() {
    const e10 = this.player_.textTracks(), t3 = this.options_.allowMultipleShowingTracks;
    if (this.clearDisplay(), t3) {
      const t4 = [];
      for (let i6 = 0; i6 < e10.length; ++i6) {
        const s6 = e10[i6];
        "showing" === s6.mode && t4.push(s6);
      }
      return void this.updateForTrack(t4);
    }
    let i5 = null, s5 = null, n4 = e10.length;
    for (; n4--; ) {
      const t4 = e10[n4];
      "showing" === t4.mode && ("descriptions" === t4.kind ? i5 = t4 : s5 = t4);
    }
    if (s5 ? ("off" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "off"), this.updateForTrack(s5)) : i5 && ("assertive" !== this.getAttribute("aria-live") && this.setAttribute("aria-live", "assertive"), this.updateForTrack(i5)), !b3.CSS.supports("inset", "10px")) {
      const e11 = this.el_, t4 = e11.querySelectorAll(".vjs-text-track-cue"), i6 = this.player_.controlBar.el_.getBoundingClientRect().height, s6 = this.player_.el_.getBoundingClientRect().height;
      e11.style = "", el(e11, "position", "relative"), el(e11, "height", s6 - i6 + "px"), el(e11, "top", "unset"), el(e11, "bottom", Gn ? s6 + "px" : "0px"), t4.length > 0 && t4.forEach((e12) => {
        if (e12.style.inset) {
          const t5 = e12.style.inset.split(" ");
          3 === t5.length && Object.assign(e12.style, { top: t5[0], right: t5[1], bottom: t5[2], left: "unset" });
        }
      });
    }
  }
  updateDisplayOverlay() {
    if (!this.player_.videoHeight() || !b3.CSS.supports("inset-inline: 10px")) return;
    const e10 = this.player_.currentWidth(), t3 = this.player_.currentHeight(), i5 = e10 / t3, s5 = this.player_.videoWidth() / this.player_.videoHeight();
    let n4 = 0, r5 = 0;
    Math.abs(i5 - s5) > 0.1 && (i5 > s5 ? n4 = Math.round((e10 - t3 * s5) / 2) : r5 = Math.round((t3 - e10 / s5) / 2)), el(this.el_, "insetInline", tl(n4)), el(this.el_, "insetBlock", tl(r5));
  }
  updateDisplayState(e10) {
    const t3 = this.player_.textTrackSettings.getValues(), i5 = e10.activeCues;
    let s5 = i5.length;
    for (; s5--; ) {
      const e11 = i5[s5];
      if (!e11) continue;
      const n4 = e11.displayState;
      if (t3.color && (n4.firstChild.style.color = t3.color), t3.textOpacity && el(n4.firstChild, "color", Zo(t3.color || "#fff", t3.textOpacity)), t3.backgroundColor && (n4.firstChild.style.backgroundColor = t3.backgroundColor), t3.backgroundOpacity && el(n4.firstChild, "backgroundColor", Zo(t3.backgroundColor || "#000", t3.backgroundOpacity)), t3.windowColor && (t3.windowOpacity ? el(n4, "backgroundColor", Zo(t3.windowColor, t3.windowOpacity)) : n4.style.backgroundColor = t3.windowColor), t3.edgeStyle && ("dropshadow" === t3.edgeStyle ? n4.firstChild.style.textShadow = `2px 2px 3px ${Yo}, 2px 2px 4px ${Yo}, 2px 2px 5px ${Yo}` : "raised" === t3.edgeStyle ? n4.firstChild.style.textShadow = `1px 1px ${Yo}, 2px 2px ${Yo}, 3px 3px ${Yo}` : "depressed" === t3.edgeStyle ? n4.firstChild.style.textShadow = `1px 1px ${Qo}, 0 1px ${Qo}, -1px -1px ${Yo}, 0 -1px ${Yo}` : "uniform" === t3.edgeStyle && (n4.firstChild.style.textShadow = `0 0 4px ${Yo}, 0 0 4px ${Yo}, 0 0 4px ${Yo}, 0 0 4px ${Yo}`)), t3.fontPercent && 1 !== t3.fontPercent) {
        const e12 = b3.parseFloat(n4.style.fontSize);
        n4.style.fontSize = e12 * t3.fontPercent + "px", n4.style.height = "auto", n4.style.top = "auto";
      }
      t3.fontFamily && "default" !== t3.fontFamily && ("small-caps" === t3.fontFamily ? n4.firstChild.style.fontVariant = "small-caps" : n4.firstChild.style.fontFamily = Jo[t3.fontFamily]);
    }
  }
  updateForTrack(e10) {
    if (Array.isArray(e10) || (e10 = [e10]), "function" != typeof b3.WebVTT || e10.every((e11) => !e11.activeCues)) return;
    const t3 = [];
    for (let i5 = 0; i5 < e10.length; ++i5) {
      const s5 = e10[i5];
      for (let e11 = 0; e11 < s5.activeCues.length; ++e11) t3.push(s5.activeCues[e11]);
    }
    b3.WebVTT.processCues(b3, t3, this.el_);
    for (let i5 = 0; i5 < e10.length; ++i5) {
      const t4 = e10[i5];
      for (let e11 = 0; e11 < t4.activeCues.length; ++e11) {
        const s5 = t4.activeCues[e11].displayState;
        hr(s5, "vjs-text-track-cue", "vjs-text-track-cue-" + (t4.language ? t4.language : i5)), t4.language && gr(s5, "lang", t4.language);
      }
      this.player_.textTrackSettings && this.updateDisplayState(t4);
    }
  }
};
Ca.registerComponent("TextTrackDisplay", il);
var sl = class extends Ca {
  createEl() {
    const e10 = this.player_.isAudio(), t3 = this.localize(e10 ? "Audio Player" : "Video Player"), i5 = rr("span", { className: "vjs-control-text", textContent: this.localize("{1} is loading.", [t3]) }), s5 = super.createEl("div", { className: "vjs-loading-spinner", dir: "ltr" });
    return s5.appendChild(i5), s5;
  }
  handleLanguagechange() {
    this.$(".vjs-control-text").textContent = this.localize("{1} is loading.", [this.player_.isAudio() ? "Audio Player" : "Video Player"]);
  }
};
Ca.registerComponent("LoadingSpinner", sl);
var nl = class extends Xo {
  createEl(e10, t3 = {}, i5 = {}) {
    const s5 = rr("button", t3 = Object.assign({ className: this.buildCSSClass() }, t3), i5 = Object.assign({ type: "button" }, i5));
    return this.player_.options_.experimentalSvgIcons || s5.appendChild(rr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), this.createControlTextEl(s5), s5;
  }
  addChild(e10, t3 = {}) {
    const i5 = this.constructor.name;
    return yn.warn(`Adding an actionable (user controllable) child to a Button (${i5}) is not supported; use a ClickableComponent instead.`), Ca.prototype.addChild.call(this, e10, t3);
  }
  enable() {
    super.enable(), this.el_.removeAttribute("disabled");
  }
  disable() {
    super.disable(), this.el_.setAttribute("disabled", "disabled");
  }
  handleKeyDown(e10) {
    " " !== e10.key && "Enter" !== e10.key ? super.handleKeyDown(e10) : e10.stopPropagation();
  }
};
Ca.registerComponent("Button", nl);
var rl = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.mouseused_ = false, this.setIcon("play"), this.on("mousedown", (e11) => this.handleMouseDown(e11));
  }
  buildCSSClass() {
    return "vjs-big-play-button";
  }
  handleClick(e10) {
    const t3 = this.player_.play();
    if (this.mouseused_ && "clientX" in e10 && "clientY" in e10) return Fa(t3), void (this.player_.tech(true) && this.player_.tech(true).focus());
    const i5 = this.player_.getChild("controlBar"), s5 = i5 && i5.getChild("playToggle");
    if (!s5) return void this.player_.tech(true).focus();
    const n4 = () => s5.focus();
    Ba(t3) ? t3.then(n4, () => {
    }) : this.setTimeout(n4, 1);
  }
  handleKeyDown(e10) {
    this.mouseused_ = false, super.handleKeyDown(e10);
  }
  handleMouseDown(e10) {
    this.mouseused_ = true;
  }
};
rl.prototype.controlText_ = "Play Video", Ca.registerComponent("BigPlayButton", rl);
var al = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.setIcon("cancel"), this.controlText(t3 && t3.controlText || this.localize("Close"));
  }
  buildCSSClass() {
    return `vjs-close-button ${super.buildCSSClass()}`;
  }
  handleClick(e10) {
    this.trigger({ type: "close", bubbles: false });
  }
  handleKeyDown(e10) {
    "Escape" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.trigger("click")) : super.handleKeyDown(e10);
  }
};
Ca.registerComponent("CloseButton", al);
var ol = class extends nl {
  constructor(e10, t3 = {}) {
    super(e10, t3), t3.replay = void 0 === t3.replay || t3.replay, this.setIcon("play"), this.on(e10, "play", (e11) => this.handlePlay(e11)), this.on(e10, "pause", (e11) => this.handlePause(e11)), t3.replay && this.on(e10, "ended", (e11) => this.handleEnded(e11));
  }
  buildCSSClass() {
    return `vjs-play-control ${super.buildCSSClass()}`;
  }
  handleClick(e10) {
    this.player_.paused() ? Fa(this.player_.play()) : this.player_.pause();
  }
  handleSeeked(e10) {
    this.removeClass("vjs-ended"), this.player_.paused() ? this.handlePause(e10) : this.handlePlay(e10);
  }
  handlePlay(e10) {
    this.removeClass("vjs-ended", "vjs-paused"), this.addClass("vjs-playing"), this.setIcon("pause"), this.controlText("Pause");
  }
  handlePause(e10) {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.setIcon("play"), this.controlText("Play");
  }
  handleEnded(e10) {
    this.removeClass("vjs-playing"), this.addClass("vjs-ended"), this.setIcon("replay"), this.controlText("Replay"), this.one(this.player_, "seeked", (e11) => this.handleSeeked(e11));
  }
};
ol.prototype.controlText_ = "Play", Ca.registerComponent("PlayToggle", ol);
var ll = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.on(e10, ["timeupdate", "ended", "seeking"], (e11) => this.update(e11)), this.updateTextNode_();
  }
  createEl() {
    const e10 = this.buildCSSClass(), t3 = super.createEl("div", { className: `${e10} vjs-time-control vjs-control` }), i5 = rr("span", { className: "vjs-control-text", textContent: `${this.localize(this.labelText_)} ` }, { role: "presentation" });
    return t3.appendChild(i5), this.contentEl_ = rr("span", { className: `${e10}-display` }, { role: "presentation" }), t3.appendChild(this.contentEl_), t3;
  }
  dispose() {
    this.contentEl_ = null, this.textNode_ = null, super.dispose();
  }
  update(e10) {
    (this.player_.options_.enableSmoothSeeking || "seeking" !== e10.type) && this.updateContent(e10);
  }
  updateTextNode_(e10 = 0) {
    e10 = Na(e10), this.formattedTime_ !== e10 && (this.formattedTime_ = e10, this.requestNamedAnimationFrame("TimeDisplay#updateTextNode_", () => {
      if (!this.contentEl_) return;
      let e11 = this.textNode_;
      e11 && this.contentEl_.firstChild !== e11 && (e11 = null, yn.warn("TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.")), this.textNode_ = ae.createTextNode(this.formattedTime_), this.textNode_ && (e11 ? this.contentEl_.replaceChild(this.textNode_, e11) : this.contentEl_.appendChild(this.textNode_));
    }));
  }
  updateContent(e10) {
  }
};
ll.prototype.labelText_ = "Time", ll.prototype.controlText_ = "Time", Ca.registerComponent("TimeDisplay", ll);
var hl = class extends ll {
  buildCSSClass() {
    return "vjs-current-time";
  }
  updateContent(e10) {
    let t3;
    t3 = this.player_.ended() ? this.player_.duration() : this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime(), this.updateTextNode_(t3);
  }
};
hl.prototype.labelText_ = "Current Time", hl.prototype.controlText_ = "Current Time", Ca.registerComponent("CurrentTimeDisplay", hl);
var ul = class extends ll {
  constructor(e10, t3) {
    super(e10, t3);
    const i5 = (e11) => this.updateContent(e11);
    this.on(e10, "durationchange", i5), this.on(e10, "loadstart", i5), this.on(e10, "loadedmetadata", i5);
  }
  buildCSSClass() {
    return "vjs-duration";
  }
  updateContent(e10) {
    const t3 = this.player_.duration();
    this.updateTextNode_(t3);
  }
};
ul.prototype.labelText_ = "Duration", ul.prototype.controlText_ = "Duration", Ca.registerComponent("DurationDisplay", ul);
var dl = class extends Ca {
  createEl() {
    const e10 = super.createEl("div", { className: "vjs-time-control vjs-time-divider" }, { "aria-hidden": true }), t3 = super.createEl("div"), i5 = super.createEl("span", { textContent: "/" });
    return t3.appendChild(i5), e10.appendChild(t3), e10;
  }
};
Ca.registerComponent("TimeDivider", dl);
var cl = class extends ll {
  constructor(e10, t3) {
    super(e10, t3), this.on(e10, "durationchange", (e11) => this.updateContent(e11));
  }
  buildCSSClass() {
    return "vjs-remaining-time";
  }
  createEl() {
    const e10 = super.createEl();
    return false !== this.options_.displayNegative && e10.insertBefore(rr("span", {}, { "aria-hidden": true }, "-"), this.contentEl_), e10;
  }
  updateContent(e10) {
    if ("number" != typeof this.player_.duration()) return;
    let t3;
    t3 = this.player_.ended() ? 0 : this.player_.remainingTimeDisplay ? this.player_.remainingTimeDisplay() : this.player_.remainingTime(), this.updateTextNode_(t3);
  }
};
cl.prototype.labelText_ = "Remaining Time", cl.prototype.controlText_ = "Remaining Time", Ca.registerComponent("RemainingTimeDisplay", cl);
var pl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.updateShowing(), this.on(this.player(), "durationchange", (e11) => this.updateShowing(e11));
  }
  createEl() {
    const e10 = super.createEl("div", { className: "vjs-live-control vjs-control" });
    return this.contentEl_ = rr("div", { className: "vjs-live-display" }, { "aria-live": "off" }), this.contentEl_.appendChild(rr("span", { className: "vjs-control-text", textContent: `${this.localize("Stream Type")} ` })), this.contentEl_.appendChild(ae.createTextNode(this.localize("LIVE"))), e10.appendChild(this.contentEl_), e10;
  }
  dispose() {
    this.contentEl_ = null, super.dispose();
  }
  updateShowing(e10) {
    this.player().duration() === 1 / 0 ? this.show() : this.hide();
  }
};
Ca.registerComponent("LiveDisplay", pl);
var ml = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.updateLiveEdgeStatus(), this.player_.liveTracker && (this.updateLiveEdgeStatusHandler_ = (e11) => this.updateLiveEdgeStatus(e11), this.on(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_));
  }
  createEl() {
    const e10 = super.createEl("button", { className: "vjs-seek-to-live-control vjs-control" });
    return this.setIcon("circle", e10), this.textEl_ = rr("span", { className: "vjs-seek-to-live-text", textContent: this.localize("LIVE") }, { "aria-hidden": "true" }), e10.appendChild(this.textEl_), e10;
  }
  updateLiveEdgeStatus() {
    !this.player_.liveTracker || this.player_.liveTracker.atLiveEdge() ? (this.setAttribute("aria-disabled", true), this.addClass("vjs-at-live-edge"), this.controlText("Seek to live, currently playing live")) : (this.setAttribute("aria-disabled", false), this.removeClass("vjs-at-live-edge"), this.controlText("Seek to live, currently behind live"));
  }
  handleClick() {
    this.player_.liveTracker.seekToLiveEdge();
  }
  dispose() {
    this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.updateLiveEdgeStatusHandler_), this.textEl_ = null, super.dispose();
  }
};
function gl(e10, t3, i5) {
  return e10 = Number(e10), Math.min(i5, Math.max(t3, isNaN(e10) ? t3 : e10));
}
ml.prototype.controlText_ = "Seek to live, currently playing live", Ca.registerComponent("SeekToLive", ml);
var fl = Object.freeze({ __proto__: null, clamp: gl });
var yl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.handleMouseDown_ = (e11) => this.handleMouseDown(e11), this.handleMouseUp_ = (e11) => this.handleMouseUp(e11), this.handleKeyDown_ = (e11) => this.handleKeyDown(e11), this.handleClick_ = (e11) => this.handleClick(e11), this.handleMouseMove_ = (e11) => this.handleMouseMove(e11), this.update_ = (e11) => this.update(e11), this.bar = this.getChild(this.options_.barName), this.vertical(!!this.options_.vertical), this.enable();
  }
  enabled() {
    return this.enabled_;
  }
  enable() {
    this.enabled() || (this.on("mousedown", this.handleMouseDown_), this.on("touchstart", this.handleMouseDown_), this.on("keydown", this.handleKeyDown_), this.on("click", this.handleClick_), this.on(this.player_, "controlsvisible", this.update), this.playerEvent && this.on(this.player_, this.playerEvent, this.update), this.removeClass("disabled"), this.setAttribute("tabindex", 0), this.enabled_ = true);
  }
  disable() {
    if (!this.enabled()) return;
    const e10 = this.bar.el_.ownerDocument;
    this.off("mousedown", this.handleMouseDown_), this.off("touchstart", this.handleMouseDown_), this.off("keydown", this.handleKeyDown_), this.off("click", this.handleClick_), this.off(this.player_, "controlsvisible", this.update_), this.off(e10, "mousemove", this.handleMouseMove_), this.off(e10, "mouseup", this.handleMouseUp_), this.off(e10, "touchmove", this.handleMouseMove_), this.off(e10, "touchend", this.handleMouseUp_), this.removeAttribute("tabindex"), this.addClass("disabled"), this.playerEvent && this.off(this.player_, this.playerEvent, this.update), this.enabled_ = false;
  }
  createEl(e10, t3 = {}, i5 = {}) {
    return t3.className = t3.className + " vjs-slider", t3 = Object.assign({ tabIndex: 0 }, t3), i5 = Object.assign({ role: "slider", "aria-valuenow": 0, "aria-valuemin": 0, "aria-valuemax": 100 }, i5), super.createEl(e10, t3, i5);
  }
  handleMouseDown(e10) {
    const t3 = this.bar.el_.ownerDocument;
    "mousedown" === e10.type && e10.preventDefault(), "touchstart" !== e10.type || Mn || e10.preventDefault(), yr(), this.addClass("vjs-sliding"), this.trigger("slideractive"), this.on(t3, "mousemove", this.handleMouseMove_), this.on(t3, "mouseup", this.handleMouseUp_), this.on(t3, "touchmove", this.handleMouseMove_), this.on(t3, "touchend", this.handleMouseUp_), this.handleMouseMove(e10, true);
  }
  handleMouseMove(e10) {
  }
  handleMouseUp(e10) {
    const t3 = this.bar.el_.ownerDocument;
    _r(), this.removeClass("vjs-sliding"), this.trigger("sliderinactive"), this.off(t3, "mousemove", this.handleMouseMove_), this.off(t3, "mouseup", this.handleMouseUp_), this.off(t3, "touchmove", this.handleMouseMove_), this.off(t3, "touchend", this.handleMouseUp_), this.update();
  }
  update() {
    if (!this.el_ || !this.bar) return;
    const e10 = this.getProgress();
    return e10 === this.progress_ || (this.progress_ = e10, this.requestNamedAnimationFrame("Slider#update", () => {
      const t3 = this.vertical() ? "height" : "width";
      this.bar.el().style[t3] = (100 * e10).toFixed(2) + "%";
    })), e10;
  }
  getProgress() {
    return Number(gl(this.getPercent(), 0, 1).toFixed(4));
  }
  calculateDistance(e10) {
    const t3 = Tr(this.el_, e10);
    return this.vertical() ? t3.y : t3.x;
  }
  handleKeyDown(e10) {
    const t3 = this.options_.playerOptions.spatialNavigation, i5 = t3 && t3.enabled, s5 = t3 && t3.horizontalSeek;
    i5 ? s5 && "ArrowLeft" === e10.key || !s5 && "ArrowDown" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.stepBack()) : s5 && "ArrowRight" === e10.key || !s5 && "ArrowUp" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.stepForward()) : super.handleKeyDown(e10) : "ArrowLeft" === e10.key || "ArrowDown" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.stepBack()) : "ArrowUp" === e10.key || "ArrowRight" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.stepForward()) : super.handleKeyDown(e10);
  }
  handleClick(e10) {
    e10.stopPropagation(), e10.preventDefault();
  }
  vertical(e10) {
    if (void 0 === e10) return this.vertical_ || false;
    this.vertical_ = !!e10, this.vertical_ ? this.addClass("vjs-slider-vertical") : this.addClass("vjs-slider-horizontal");
  }
};
Ca.registerComponent("Slider", yl);
var _l = (e10, t3) => gl(e10 / t3 * 100, 0, 100).toFixed(2) + "%";
var vl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.partEls_ = [], this.on(e10, "progress", (e11) => this.update(e11));
  }
  createEl() {
    const e10 = super.createEl("div", { className: "vjs-load-progress" }), t3 = rr("span", { className: "vjs-control-text" }), i5 = rr("span", { textContent: this.localize("Loaded") }), s5 = ae.createTextNode(": ");
    return this.percentageEl_ = rr("span", { className: "vjs-control-text-loaded-percentage", textContent: "0%" }), e10.appendChild(t3), t3.appendChild(i5), t3.appendChild(s5), t3.appendChild(this.percentageEl_), e10;
  }
  dispose() {
    this.partEls_ = null, this.percentageEl_ = null, super.dispose();
  }
  update(e10) {
    this.requestNamedAnimationFrame("LoadProgressBar#update", () => {
      const e11 = this.player_.liveTracker, t3 = this.player_.buffered(), i5 = e11 && e11.isLive() ? e11.seekableEnd() : this.player_.duration(), s5 = this.player_.bufferedEnd(), n4 = this.partEls_, r5 = _l(s5, i5);
      this.percent_ !== r5 && (this.el_.style.width = r5, ar(this.percentageEl_, r5), this.percent_ = r5);
      for (let a9 = 0; a9 < t3.length; a9++) {
        const e12 = t3.start(a9), i6 = t3.end(a9);
        let r6 = n4[a9];
        r6 || (r6 = this.el_.appendChild(rr()), n4[a9] = r6), r6.dataset.start === e12 && r6.dataset.end === i6 || (r6.dataset.start = e12, r6.dataset.end = i6, r6.style.left = _l(e12, s5), r6.style.width = _l(i6 - e12, s5));
      }
      for (let a9 = n4.length; a9 > t3.length; a9--) this.el_.removeChild(n4[a9 - 1]);
      n4.length = t3.length;
    });
  }
};
Ca.registerComponent("LoadProgressBar", vl);
var bl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.update = sa(ia(this, this.update), ta);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-time-tooltip" }, { "aria-hidden": "true" });
  }
  update(e10, t3, i5) {
    const s5 = br(this.el_), n4 = vr(this.player_.el()), r5 = e10.width * t3;
    if (!n4 || !s5) return;
    let a9 = e10.left - n4.left + r5, o4 = e10.width - r5 + (n4.right - e10.right);
    o4 || (o4 = e10.width - r5, a9 = r5);
    let l7 = s5.width / 2;
    a9 < l7 ? l7 += l7 - a9 : o4 < l7 && (l7 = o4), l7 < 0 ? l7 = 0 : l7 > s5.width && (l7 = s5.width), l7 = Math.round(l7), this.el_.style.right = `-${l7}px`, this.write(i5);
  }
  write(e10) {
    ar(this.el_, e10);
  }
  updateTime(e10, t3, i5, s5) {
    this.requestNamedAnimationFrame("TimeTooltip#updateTime", () => {
      let n4;
      const r5 = this.player_.duration();
      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {
        const e11 = this.player_.liveTracker.liveWindow(), i6 = e11 - t3 * e11;
        n4 = (i6 < 1 ? "" : "-") + Na(i6, e11);
      } else n4 = Na(i5, r5);
      this.update(e10, t3, n4), s5 && s5();
    });
  }
};
Ca.registerComponent("TimeTooltip", bl);
var Tl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.setIcon("circle"), this.update = sa(ia(this, this.update), ta);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-play-progress vjs-slider-bar" }, { "aria-hidden": "true" });
  }
  update(e10, t3) {
    const i5 = this.getChild("timeTooltip");
    if (!i5) return;
    const s5 = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
    i5.updateTime(e10, t3, s5);
  }
};
Tl.prototype.options_ = { children: [] }, Yn || Ln || Tl.prototype.options_.children.push("timeTooltip"), Ca.registerComponent("PlayProgressBar", Tl);
var Sl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.update = sa(ia(this, this.update), ta);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-mouse-display" });
  }
  update(e10, t3) {
    const i5 = t3 * this.player_.duration();
    this.getChild("timeTooltip").updateTime(e10, t3, i5, () => {
      this.el_.style.left = e10.width * t3 + "px";
    });
  }
};
Sl.prototype.options_ = { children: ["timeTooltip"] }, Ca.registerComponent("MouseTimeDisplay", Sl);
var El = class _El extends yl {
  constructor(e10, t3) {
    (t3 = Cn(_El.prototype.options_, t3)).children = [...t3.children];
    const i5 = e10.options_.disableSeekWhileScrubbingOnMobile && (Yn || Ln);
    (!Yn && !Ln || i5) && t3.children.splice(1, 0, "mouseTimeDisplay"), super(e10, t3), this.shouldDisableSeekWhileScrubbingOnMobile_ = i5, this.pendingSeekTime_ = null, this.setEventHandlers_();
  }
  setEventHandlers_() {
    this.update_ = ia(this, this.update), this.update = sa(this.update_, ta), this.on(this.player_, ["durationchange", "timeupdate"], this.update), this.on(this.player_, ["ended"], this.update_), this.player_.liveTracker && this.on(this.player_.liveTracker, "liveedgechange", this.update), this.updateInterval = null, this.enableIntervalHandler_ = (e10) => this.enableInterval_(e10), this.disableIntervalHandler_ = (e10) => this.disableInterval_(e10), this.on(this.player_, ["playing"], this.enableIntervalHandler_), this.on(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in ae && "visibilityState" in ae && this.on(ae, "visibilitychange", this.toggleVisibility_);
  }
  toggleVisibility_(e10) {
    "hidden" === ae.visibilityState ? (this.cancelNamedAnimationFrame("SeekBar#update"), this.cancelNamedAnimationFrame("Slider#update"), this.disableInterval_(e10)) : (this.player_.ended() || this.player_.paused() || this.enableInterval_(), this.update());
  }
  enableInterval_() {
    this.updateInterval || (this.updateInterval = this.setInterval(this.update, ta));
  }
  disableInterval_(e10) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && e10 && "ended" !== e10.type || this.updateInterval && (this.clearInterval(this.updateInterval), this.updateInterval = null);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-progress-holder" }, { "aria-label": this.localize("Progress Bar") });
  }
  update(e10) {
    if ("hidden" === ae.visibilityState) return;
    const t3 = super.update();
    return this.requestNamedAnimationFrame("SeekBar#update", () => {
      const e11 = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_(), i5 = this.player_.liveTracker;
      let s5 = this.player_.duration();
      i5 && i5.isLive() && (s5 = this.player_.liveTracker.liveCurrentTime()), this.percent_ !== t3 && (this.el_.setAttribute("aria-valuenow", (100 * t3).toFixed(2)), this.percent_ = t3), this.currentTime_ === e11 && this.duration_ === s5 || (this.el_.setAttribute("aria-valuetext", this.localize("progress bar timing: currentTime={1} duration={2}", [Na(e11, s5), Na(s5, s5)], "{1} of {2}")), this.currentTime_ = e11, this.duration_ = s5), this.bar && this.bar.update(vr(this.el()), this.getProgress());
    }), t3;
  }
  userSeek_(e10) {
    this.player_.liveTracker && this.player_.liveTracker.isLive() && this.player_.liveTracker.nextSeekedFromUser(), this.player_.currentTime(e10);
  }
  getCurrentTime_() {
    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
  }
  getPercent() {
    if (this.pendingSeekTime_) return this.pendingSeekTime_ / this.player_.duration();
    const e10 = this.getCurrentTime_();
    let t3;
    const i5 = this.player_.liveTracker;
    return i5 && i5.isLive() ? (t3 = (e10 - i5.seekableStart()) / i5.liveWindow(), i5.atLiveEdge() && (t3 = 1)) : t3 = e10 / this.player_.duration(), t3;
  }
  handleMouseDown(e10) {
    Ir(e10) && (e10.stopPropagation(), this.videoWasPlaying = !this.player_.paused(), this.shouldDisableSeekWhileScrubbingOnMobile_ || this.player_.pause(), super.handleMouseDown(e10));
  }
  handleMouseMove(e10, t3 = false) {
    if (!Ir(e10) || isNaN(this.player_.duration())) return;
    let i5;
    t3 || this.player_.scrubbing() || this.player_.scrubbing(true);
    const s5 = this.calculateDistance(e10), n4 = this.player_.liveTracker;
    if (n4 && n4.isLive()) {
      if (s5 >= 0.99) return void n4.seekToLiveEdge();
      const e11 = n4.seekableStart(), t4 = n4.liveCurrentTime();
      if (i5 = e11 + s5 * n4.liveWindow(), i5 >= t4 && (i5 = t4), i5 <= e11 && (i5 = e11 + 0.1), i5 === 1 / 0) return;
    } else i5 = s5 * this.player_.duration(), i5 === this.player_.duration() && (i5 -= 0.1);
    this.shouldDisableSeekWhileScrubbingOnMobile_ ? this.pendingSeekTime_ = i5 : this.userSeek_(i5), this.player_.options_.enableSmoothSeeking && this.update();
  }
  enable() {
    super.enable();
    const e10 = this.getChild("mouseTimeDisplay");
    e10 && e10.show();
  }
  disable() {
    super.disable();
    const e10 = this.getChild("mouseTimeDisplay");
    e10 && e10.hide();
  }
  handleMouseUp(e10) {
    super.handleMouseUp(e10), e10 && e10.stopPropagation(), this.player_.scrubbing(false), this.pendingSeekTime_ && (this.userSeek_(this.pendingSeekTime_), this.pendingSeekTime_ = null), this.player_.trigger({ type: "timeupdate", target: this, manuallyTriggered: true }), this.videoWasPlaying ? Fa(this.player_.play()) : this.update_();
  }
  stepForward() {
    this.userSeek_(this.player_.currentTime() + this.options().stepSeconds);
  }
  stepBack() {
    this.userSeek_(this.player_.currentTime() - this.options().stepSeconds);
  }
  handleAction(e10) {
    this.player_.paused() ? this.player_.play() : this.player_.pause();
  }
  handleKeyDown(e10) {
    const t3 = this.player_.liveTracker;
    if (" " === e10.key || "Enter" === e10.key) e10.preventDefault(), e10.stopPropagation(), this.handleAction(e10);
    else if ("Home" === e10.key) e10.preventDefault(), e10.stopPropagation(), this.userSeek_(0);
    else if ("End" === e10.key) e10.preventDefault(), e10.stopPropagation(), t3 && t3.isLive() ? this.userSeek_(t3.liveCurrentTime()) : this.userSeek_(this.player_.duration());
    else if (/^[0-9]$/.test(e10.key)) {
      e10.preventDefault(), e10.stopPropagation();
      const i5 = 0.1 * parseInt(e10.key, 10);
      t3 && t3.isLive() ? this.userSeek_(t3.seekableStart() + t3.liveWindow() * i5) : this.userSeek_(this.player_.duration() * i5);
    } else "PageDown" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.userSeek_(this.player_.currentTime() - this.options().stepSeconds * this.options().pageMultiplier)) : "PageUp" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.userSeek_(this.player_.currentTime() + this.options().stepSeconds * this.options().pageMultiplier)) : super.handleKeyDown(e10);
  }
  dispose() {
    this.disableInterval_(), this.off(this.player_, ["durationchange", "timeupdate"], this.update), this.off(this.player_, ["ended"], this.update_), this.player_.liveTracker && this.off(this.player_.liveTracker, "liveedgechange", this.update), this.off(this.player_, ["playing"], this.enableIntervalHandler_), this.off(this.player_, ["ended", "pause", "waiting"], this.disableIntervalHandler_), "hidden" in ae && "visibilityState" in ae && this.off(ae, "visibilitychange", this.toggleVisibility_), super.dispose();
  }
};
El.prototype.options_ = { children: ["loadProgressBar", "playProgressBar"], barName: "playProgressBar", stepSeconds: 5, pageMultiplier: 12 }, Ca.registerComponent("SeekBar", El);
var wl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.handleMouseMove = sa(ia(this, this.handleMouseMove), ta), this.throttledHandleMouseSeek = sa(ia(this, this.handleMouseSeek), ta), this.handleMouseUpHandler_ = (e11) => this.handleMouseUp(e11), this.handleMouseDownHandler_ = (e11) => this.handleMouseDown(e11), this.enable();
  }
  createEl() {
    return super.createEl("div", { className: "vjs-progress-control vjs-control" });
  }
  handleMouseMove(e10) {
    const t3 = this.getChild("seekBar");
    if (!t3) return;
    const i5 = t3.getChild("playProgressBar"), s5 = t3.getChild("mouseTimeDisplay");
    if (!i5 && !s5) return;
    const n4 = t3.el(), r5 = br(n4);
    let a9 = Tr(n4, e10).x;
    a9 = gl(a9, 0, 1), s5 && s5.update(r5, a9), i5 && i5.update(r5, t3.getProgress());
  }
  handleMouseSeek(e10) {
    const t3 = this.getChild("seekBar");
    t3 && t3.handleMouseMove(e10);
  }
  enabled() {
    return this.enabled_;
  }
  disable() {
    if (this.children().forEach((e10) => e10.disable && e10.disable()), this.enabled() && (this.off(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.off(this.el_, ["mousemove", "touchmove"], this.handleMouseMove), this.removeListenersAddedOnMousedownAndTouchstart(), this.addClass("disabled"), this.enabled_ = false, this.player_.scrubbing())) {
      const e10 = this.getChild("seekBar");
      this.player_.scrubbing(false), e10.videoWasPlaying && Fa(this.player_.play());
    }
  }
  enable() {
    this.children().forEach((e10) => e10.enable && e10.enable()), this.enabled() || (this.on(["mousedown", "touchstart"], this.handleMouseDownHandler_), this.on(this.el_, ["mousemove", "touchmove"], this.handleMouseMove), this.removeClass("disabled"), this.enabled_ = true);
  }
  removeListenersAddedOnMousedownAndTouchstart() {
    const e10 = this.el_.ownerDocument;
    this.off(e10, "mousemove", this.throttledHandleMouseSeek), this.off(e10, "touchmove", this.throttledHandleMouseSeek), this.off(e10, "mouseup", this.handleMouseUpHandler_), this.off(e10, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseDown(e10) {
    const t3 = this.el_.ownerDocument, i5 = this.getChild("seekBar");
    i5 && i5.handleMouseDown(e10), this.on(t3, "mousemove", this.throttledHandleMouseSeek), this.on(t3, "touchmove", this.throttledHandleMouseSeek), this.on(t3, "mouseup", this.handleMouseUpHandler_), this.on(t3, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseUp(e10) {
    const t3 = this.getChild("seekBar");
    t3 && t3.handleMouseUp(e10), this.removeListenersAddedOnMousedownAndTouchstart();
  }
};
wl.prototype.options_ = { children: ["seekBar"] }, Ca.registerComponent("ProgressControl", wl);
var Cl = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.setIcon("picture-in-picture-enter"), this.on(e10, ["enterpictureinpicture", "leavepictureinpicture"], (e11) => this.handlePictureInPictureChange(e11)), this.on(e10, ["disablepictureinpicturechanged", "loadedmetadata"], (e11) => this.handlePictureInPictureEnabledChange(e11)), this.on(e10, ["loadedmetadata", "audioonlymodechange", "audiopostermodechange"], () => this.handlePictureInPictureAudioModeChange()), this.disable();
  }
  buildCSSClass() {
    return `vjs-picture-in-picture-control vjs-hidden ${super.buildCSSClass()}`;
  }
  handlePictureInPictureAudioModeChange() {
    "audio" === this.player_.currentType().substring(0, 5) || this.player_.audioPosterMode() || this.player_.audioOnlyMode() ? (this.player_.isInPictureInPicture() && this.player_.exitPictureInPicture(), this.hide()) : this.show();
  }
  handlePictureInPictureEnabledChange() {
    ae.pictureInPictureEnabled && false === this.player_.disablePictureInPicture() || this.player_.options_.enableDocumentPictureInPicture && "documentPictureInPicture" in b3 ? this.enable() : this.disable();
  }
  handlePictureInPictureChange(e10) {
    this.player_.isInPictureInPicture() ? (this.setIcon("picture-in-picture-exit"), this.controlText("Exit Picture-in-Picture")) : (this.setIcon("picture-in-picture-enter"), this.controlText("Picture-in-Picture")), this.handlePictureInPictureEnabledChange();
  }
  handleClick(e10) {
    this.player_.isInPictureInPicture() ? this.player_.exitPictureInPicture() : this.player_.requestPictureInPicture();
  }
  show() {
    "function" == typeof ae.exitPictureInPicture && super.show();
  }
};
Cl.prototype.controlText_ = "Picture-in-Picture", Ca.registerComponent("PictureInPictureToggle", Cl);
var kl = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.setIcon("fullscreen-enter"), this.on(e10, "fullscreenchange", (e11) => this.handleFullscreenChange(e11)), false === ae[e10.fsApi_.fullscreenEnabled] && this.disable();
  }
  buildCSSClass() {
    return `vjs-fullscreen-control ${super.buildCSSClass()}`;
  }
  handleFullscreenChange(e10) {
    this.player_.isFullscreen() ? (this.controlText("Exit Fullscreen"), this.setIcon("fullscreen-exit")) : (this.controlText("Fullscreen"), this.setIcon("fullscreen-enter"));
  }
  handleClick(e10) {
    this.player_.isFullscreen() ? this.player_.exitFullscreen() : this.player_.requestFullscreen();
  }
};
kl.prototype.controlText_ = "Fullscreen", Ca.registerComponent("FullscreenToggle", kl);
var Il = function(e10, t3) {
  t3.tech_ && !t3.tech_.featuresVolumeControl && e10.addClass("vjs-hidden"), e10.on(t3, "loadstart", function() {
    t3.tech_.featuresVolumeControl ? e10.removeClass("vjs-hidden") : e10.addClass("vjs-hidden");
  });
};
var xl = class extends Ca {
  createEl() {
    const e10 = super.createEl("div", { className: "vjs-volume-level" });
    return this.setIcon("circle", e10), e10.appendChild(super.createEl("span", { className: "vjs-control-text" })), e10;
  }
};
Ca.registerComponent("VolumeLevel", xl);
var Al = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.update = sa(ia(this, this.update), ta);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-volume-tooltip" }, { "aria-hidden": "true" });
  }
  update(e10, t3, i5, s5) {
    if (!i5) {
      const i6 = vr(this.el_), s6 = vr(this.player_.el()), n4 = e10.width * t3;
      if (!s6 || !i6) return;
      const r5 = e10.left - s6.left + n4, a9 = e10.width - n4 + (s6.right - e10.right);
      let o4 = i6.width / 2;
      r5 < o4 ? o4 += o4 - r5 : a9 < o4 && (o4 = a9), o4 < 0 ? o4 = 0 : o4 > i6.width && (o4 = i6.width), this.el_.style.right = `-${o4}px`;
    }
    this.write(`${s5}%`);
  }
  write(e10) {
    ar(this.el_, e10);
  }
  updateVolume(e10, t3, i5, s5, n4) {
    this.requestNamedAnimationFrame("VolumeLevelTooltip#updateVolume", () => {
      this.update(e10, t3, i5, s5.toFixed(0)), n4 && n4();
    });
  }
};
Ca.registerComponent("VolumeLevelTooltip", Al);
var Dl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.update = sa(ia(this, this.update), ta);
  }
  createEl() {
    return super.createEl("div", { className: "vjs-mouse-display" });
  }
  update(e10, t3, i5) {
    const s5 = 100 * t3;
    this.getChild("volumeLevelTooltip").updateVolume(e10, t3, i5, s5, () => {
      i5 ? this.el_.style.bottom = e10.height * t3 + "px" : this.el_.style.left = e10.width * t3 + "px";
    });
  }
};
Dl.prototype.options_ = { children: ["volumeLevelTooltip"] }, Ca.registerComponent("MouseVolumeLevelDisplay", Dl);
var Pl = class extends yl {
  constructor(e10, t3) {
    super(e10, t3), this.on("slideractive", (e11) => this.updateLastVolume_(e11)), this.on(e10, "volumechange", (e11) => this.updateARIAAttributes(e11)), e10.ready(() => this.updateARIAAttributes());
  }
  createEl() {
    return super.createEl("div", { className: "vjs-volume-bar vjs-slider-bar" }, { "aria-label": this.localize("Volume Level"), "aria-live": "polite" });
  }
  handleMouseDown(e10) {
    Ir(e10) && super.handleMouseDown(e10);
  }
  handleMouseMove(e10) {
    const t3 = this.getChild("mouseVolumeLevelDisplay");
    if (t3) {
      const i5 = this.el(), s5 = vr(i5), n4 = this.vertical();
      let r5 = Tr(i5, e10);
      r5 = n4 ? r5.y : r5.x, r5 = gl(r5, 0, 1), t3.update(s5, r5, n4);
    }
    Ir(e10) && (this.checkMuted(), this.player_.volume(this.calculateDistance(e10)));
  }
  checkMuted() {
    this.player_.muted() && this.player_.muted(false);
  }
  getPercent() {
    return this.player_.muted() ? 0 : this.player_.volume();
  }
  stepForward() {
    this.checkMuted(), this.player_.volume(this.player_.volume() + 0.1);
  }
  stepBack() {
    this.checkMuted(), this.player_.volume(this.player_.volume() - 0.1);
  }
  updateARIAAttributes(e10) {
    const t3 = this.player_.muted() ? 0 : this.volumeAsPercentage_();
    this.el_.setAttribute("aria-valuenow", t3), this.el_.setAttribute("aria-valuetext", t3 + "%");
  }
  volumeAsPercentage_() {
    return Math.round(100 * this.player_.volume());
  }
  updateLastVolume_() {
    const e10 = this.player_.volume();
    this.one("sliderinactive", () => {
      0 === this.player_.volume() && this.player_.lastVolume_(e10);
    });
  }
};
Pl.prototype.options_ = { children: ["volumeLevel"], barName: "volumeLevel" }, Yn || Ln || Pl.prototype.options_.children.splice(0, 0, "mouseVolumeLevelDisplay"), Pl.prototype.playerEvent = "volumechange", Ca.registerComponent("VolumeBar", Pl);
var Ll = class extends Ca {
  constructor(e10, t3 = {}) {
    t3.vertical = t3.vertical || false, (void 0 === t3.volumeBar || wn(t3.volumeBar)) && (t3.volumeBar = t3.volumeBar || {}, t3.volumeBar.vertical = t3.vertical), super(e10, t3), Il(this, e10), this.throttledHandleMouseMove = sa(ia(this, this.handleMouseMove), ta), this.handleMouseUpHandler_ = (e11) => this.handleMouseUp(e11), this.on("mousedown", (e11) => this.handleMouseDown(e11)), this.on("touchstart", (e11) => this.handleMouseDown(e11)), this.on("mousemove", (e11) => this.handleMouseMove(e11)), this.on(this.volumeBar, ["focus", "slideractive"], () => {
      this.volumeBar.addClass("vjs-slider-active"), this.addClass("vjs-slider-active"), this.trigger("slideractive");
    }), this.on(this.volumeBar, ["blur", "sliderinactive"], () => {
      this.volumeBar.removeClass("vjs-slider-active"), this.removeClass("vjs-slider-active"), this.trigger("sliderinactive");
    });
  }
  createEl() {
    let e10 = "vjs-volume-horizontal";
    return this.options_.vertical && (e10 = "vjs-volume-vertical"), super.createEl("div", { className: `vjs-volume-control vjs-control ${e10}` });
  }
  handleMouseDown(e10) {
    const t3 = this.el_.ownerDocument;
    this.on(t3, "mousemove", this.throttledHandleMouseMove), this.on(t3, "touchmove", this.throttledHandleMouseMove), this.on(t3, "mouseup", this.handleMouseUpHandler_), this.on(t3, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseUp(e10) {
    const t3 = this.el_.ownerDocument;
    this.off(t3, "mousemove", this.throttledHandleMouseMove), this.off(t3, "touchmove", this.throttledHandleMouseMove), this.off(t3, "mouseup", this.handleMouseUpHandler_), this.off(t3, "touchend", this.handleMouseUpHandler_);
  }
  handleMouseMove(e10) {
    this.volumeBar.handleMouseMove(e10);
  }
};
Ll.prototype.options_ = { children: ["volumeBar"] }, Ca.registerComponent("VolumeControl", Ll);
var Ol = function(e10, t3) {
  t3.tech_ && !t3.tech_.featuresMuteControl && e10.addClass("vjs-hidden"), e10.on(t3, "loadstart", function() {
    t3.tech_.featuresMuteControl ? e10.removeClass("vjs-hidden") : e10.addClass("vjs-hidden");
  });
};
var Nl = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), Ol(this, e10), this.on(e10, ["loadstart", "volumechange"], (e11) => this.update(e11));
  }
  buildCSSClass() {
    return `vjs-mute-control ${super.buildCSSClass()}`;
  }
  handleClick(e10) {
    const t3 = this.player_.volume(), i5 = this.player_.lastVolume_();
    if (0 === t3) {
      const e11 = i5 < 0.1 ? 0.1 : i5;
      this.player_.volume(e11), this.player_.muted(false);
    } else this.player_.muted(!this.player_.muted());
  }
  update(e10) {
    this.updateIcon_(), this.updateControlText_();
  }
  updateIcon_() {
    const e10 = this.player_.volume();
    let t3 = 3;
    this.setIcon("volume-high"), Yn && this.player_.tech_ && this.player_.tech_.el_ && this.player_.muted(this.player_.tech_.el_.muted), 0 === e10 || this.player_.muted() ? (this.setIcon("volume-mute"), t3 = 0) : e10 < 0.33 ? (this.setIcon("volume-low"), t3 = 1) : e10 < 0.67 && (this.setIcon("volume-medium"), t3 = 2), ur(this.el_, [0, 1, 2, 3].reduce((e11, t4) => e11 + `${t4 ? " " : ""}vjs-vol-${t4}`, "")), hr(this.el_, `vjs-vol-${t3}`);
  }
  updateControlText_() {
    const e10 = this.player_.muted() || 0 === this.player_.volume() ? "Unmute" : "Mute";
    this.controlText() !== e10 && this.controlText(e10);
  }
};
Nl.prototype.controlText_ = "Mute", Ca.registerComponent("MuteToggle", Nl);
var Rl = class extends Ca {
  constructor(e10, t3 = {}) {
    void 0 !== t3.inline ? t3.inline = t3.inline : t3.inline = true, (void 0 === t3.volumeControl || wn(t3.volumeControl)) && (t3.volumeControl = t3.volumeControl || {}, t3.volumeControl.vertical = !t3.inline), super(e10, t3), this.handleKeyPressHandler_ = (e11) => this.handleKeyPress(e11), this.on(e10, ["loadstart"], (e11) => this.volumePanelState_(e11)), this.on(this.muteToggle, "keyup", (e11) => this.handleKeyPress(e11)), this.on(this.volumeControl, "keyup", (e11) => this.handleVolumeControlKeyUp(e11)), this.on("keydown", (e11) => this.handleKeyPress(e11)), this.on("mouseover", (e11) => this.handleMouseOver(e11)), this.on("mouseout", (e11) => this.handleMouseOut(e11)), this.on(this.volumeControl, ["slideractive"], this.sliderActive_), this.on(this.volumeControl, ["sliderinactive"], this.sliderInactive_);
  }
  sliderActive_() {
    this.addClass("vjs-slider-active");
  }
  sliderInactive_() {
    this.removeClass("vjs-slider-active");
  }
  volumePanelState_() {
    this.volumeControl.hasClass("vjs-hidden") && this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-hidden"), this.volumeControl.hasClass("vjs-hidden") && !this.muteToggle.hasClass("vjs-hidden") && this.addClass("vjs-mute-toggle-only");
  }
  createEl() {
    let e10 = "vjs-volume-panel-horizontal";
    return this.options_.inline || (e10 = "vjs-volume-panel-vertical"), super.createEl("div", { className: `vjs-volume-panel vjs-control ${e10}` });
  }
  dispose() {
    this.handleMouseOut(), super.dispose();
  }
  handleVolumeControlKeyUp(e10) {
    "Escape" === e10.key && this.muteToggle.focus();
  }
  handleMouseOver(e10) {
    this.addClass("vjs-hover"), Kr(ae, "keyup", this.handleKeyPressHandler_);
  }
  handleMouseOut(e10) {
    this.removeClass("vjs-hover"), Yr(ae, "keyup", this.handleKeyPressHandler_);
  }
  handleKeyPress(e10) {
    "Escape" === e10.key && this.handleMouseOut();
  }
};
Rl.prototype.options_ = { children: ["muteToggle", "volumeControl"] }, Ca.registerComponent("VolumePanel", Rl);
var Ml = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.validOptions = [5, 10, 30], this.skipTime = this.getSkipForwardTime(), this.skipTime && this.validOptions.includes(this.skipTime) ? (this.setIcon(`forward-${this.skipTime}`), this.controlText(this.localize("Skip forward {1} seconds", [this.skipTime.toLocaleString(e10.language())])), this.show()) : this.hide();
  }
  getSkipForwardTime() {
    const e10 = this.options_.playerOptions;
    return e10.controlBar && e10.controlBar.skipButtons && e10.controlBar.skipButtons.forward;
  }
  buildCSSClass() {
    return `vjs-skip-forward-${this.getSkipForwardTime()} ${super.buildCSSClass()}`;
  }
  handleClick(e10) {
    if (isNaN(this.player_.duration())) return;
    const t3 = this.player_.currentTime(), i5 = this.player_.liveTracker, s5 = i5 && i5.isLive() ? i5.seekableEnd() : this.player_.duration();
    let n4;
    n4 = t3 + this.skipTime <= s5 ? t3 + this.skipTime : s5, this.player_.currentTime(n4);
  }
  handleLanguagechange() {
    this.controlText(this.localize("Skip forward {1} seconds", [this.skipTime]));
  }
};
Ml.prototype.controlText_ = "Skip Forward", Ca.registerComponent("SkipForward", Ml);
var Ul = class extends nl {
  constructor(e10, t3) {
    super(e10, t3), this.validOptions = [5, 10, 30], this.skipTime = this.getSkipBackwardTime(), this.skipTime && this.validOptions.includes(this.skipTime) ? (this.setIcon(`replay-${this.skipTime}`), this.controlText(this.localize("Skip backward {1} seconds", [this.skipTime.toLocaleString(e10.language())])), this.show()) : this.hide();
  }
  getSkipBackwardTime() {
    const e10 = this.options_.playerOptions;
    return e10.controlBar && e10.controlBar.skipButtons && e10.controlBar.skipButtons.backward;
  }
  buildCSSClass() {
    return `vjs-skip-backward-${this.getSkipBackwardTime()} ${super.buildCSSClass()}`;
  }
  handleClick(e10) {
    const t3 = this.player_.currentTime(), i5 = this.player_.liveTracker, s5 = i5 && i5.isLive() && i5.seekableStart();
    let n4;
    n4 = s5 && t3 - this.skipTime <= s5 ? s5 : t3 >= this.skipTime ? t3 - this.skipTime : 0, this.player_.currentTime(n4);
  }
  handleLanguagechange() {
    this.controlText(this.localize("Skip backward {1} seconds", [this.skipTime]));
  }
};
Ul.prototype.controlText_ = "Skip Backward", Ca.registerComponent("SkipBackward", Ul);
var Bl = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), t3 && (this.menuButton_ = t3.menuButton), this.focusedChild_ = -1, this.on("keydown", (e11) => this.handleKeyDown(e11)), this.boundHandleBlur_ = (e11) => this.handleBlur(e11), this.boundHandleTapClick_ = (e11) => this.handleTapClick(e11);
  }
  addEventListenerForItem(e10) {
    e10 instanceof Ca && (this.on(e10, "blur", this.boundHandleBlur_), this.on(e10, ["tap", "click"], this.boundHandleTapClick_));
  }
  removeEventListenerForItem(e10) {
    e10 instanceof Ca && (this.off(e10, "blur", this.boundHandleBlur_), this.off(e10, ["tap", "click"], this.boundHandleTapClick_));
  }
  removeChild(e10) {
    "string" == typeof e10 && (e10 = this.getChild(e10)), this.removeEventListenerForItem(e10), super.removeChild(e10);
  }
  addItem(e10) {
    const t3 = this.addChild(e10);
    t3 && this.addEventListenerForItem(t3);
  }
  createEl() {
    const e10 = this.options_.contentElType || "ul";
    this.contentEl_ = rr(e10, { className: "vjs-menu-content" }), this.contentEl_.setAttribute("role", "menu");
    const t3 = super.createEl("div", { append: this.contentEl_, className: "vjs-menu" });
    return t3.appendChild(this.contentEl_), Kr(t3, "click", function(e11) {
      e11.preventDefault(), e11.stopImmediatePropagation();
    }), t3;
  }
  dispose() {
    this.contentEl_ = null, this.boundHandleBlur_ = null, this.boundHandleTapClick_ = null, super.dispose();
  }
  handleBlur(e10) {
    const t3 = e10.relatedTarget || ae.activeElement;
    if (!this.children().some((e11) => e11.el() === t3)) {
      const e11 = this.menuButton_;
      e11 && e11.buttonPressed_ && t3 !== e11.el().firstChild && e11.unpressButton();
    }
  }
  handleTapClick(e10) {
    if (this.menuButton_) {
      this.menuButton_.unpressButton();
      const t3 = this.children();
      if (!Array.isArray(t3)) return;
      const i5 = t3.filter((t4) => t4.el() === e10.target)[0];
      if (!i5) return;
      "CaptionSettingsMenuItem" !== i5.name() && this.menuButton_.focus();
    }
  }
  handleKeyDown(e10) {
    "ArrowLeft" === e10.key || "ArrowDown" === e10.key ? (e10.preventDefault(), e10.stopPropagation(), this.stepForward()) : "ArrowRight" !== e10.key && "ArrowUp" !== e10.key || (e10.preventDefault(), e10.stopPropagation(), this.stepBack());
  }
  stepForward() {
    let e10 = 0;
    void 0 !== this.focusedChild_ && (e10 = this.focusedChild_ + 1), this.focus(e10);
  }
  stepBack() {
    let e10 = 0;
    void 0 !== this.focusedChild_ && (e10 = this.focusedChild_ - 1), this.focus(e10);
  }
  focus(e10 = 0) {
    const t3 = this.children().slice();
    t3.length && t3[0].hasClass("vjs-menu-title") && t3.shift(), t3.length > 0 && (e10 < 0 ? e10 = 0 : e10 >= t3.length && (e10 = t3.length - 1), this.focusedChild_ = e10, t3[e10].el_.focus());
  }
};
Ca.registerComponent("Menu", Bl);
var Fl = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3), this.menuButton_ = new nl(e10, t3), this.menuButton_.controlText(this.controlText_), this.menuButton_.el_.setAttribute("aria-haspopup", "true");
    const i5 = nl.prototype.buildCSSClass();
    this.menuButton_.el_.className = this.buildCSSClass() + " " + i5, this.menuButton_.removeClass("vjs-control"), this.addChild(this.menuButton_), this.update(), this.enabled_ = true;
    const s5 = (e11) => this.handleClick(e11);
    this.handleMenuKeyUp_ = (e11) => this.handleMenuKeyUp(e11), this.on(this.menuButton_, "tap", s5), this.on(this.menuButton_, "click", s5), this.on(this.menuButton_, "keydown", (e11) => this.handleKeyDown(e11)), this.on(this.menuButton_, "mouseenter", () => {
      this.addClass("vjs-hover"), this.menu.show(), Kr(ae, "keyup", this.handleMenuKeyUp_);
    }), this.on("mouseleave", (e11) => this.handleMouseLeave(e11)), this.on("keydown", (e11) => this.handleSubmenuKeyDown(e11));
  }
  update() {
    const e10 = this.createMenu();
    this.menu && (this.menu.dispose(), this.removeChild(this.menu)), this.menu = e10, this.addChild(e10), this.buttonPressed_ = false, this.menuButton_.el_.setAttribute("aria-expanded", "false"), this.items && this.items.length <= this.hideThreshold_ ? (this.hide(), this.menu.contentEl_.removeAttribute("role")) : (this.show(), this.menu.contentEl_.setAttribute("role", "menu"));
  }
  createMenu() {
    const e10 = new Bl(this.player_, { menuButton: this });
    if (this.hideThreshold_ = 0, this.options_.title) {
      const t3 = rr("li", { className: "vjs-menu-title", textContent: Sa(this.options_.title), tabIndex: -1 }), i5 = new Ca(this.player_, { el: t3 });
      e10.addItem(i5);
    }
    if (this.items = this.createItems(), this.items) for (let t3 = 0; t3 < this.items.length; t3++) e10.addItem(this.items[t3]);
    return e10;
  }
  createItems() {
  }
  createEl() {
    return super.createEl("div", { className: this.buildWrapperCSSClass() }, {});
  }
  setIcon(e10) {
    super.setIcon(e10, this.menuButton_.el_);
  }
  buildWrapperCSSClass() {
    let e10 = "vjs-menu-button";
    true === this.options_.inline ? e10 += "-inline" : e10 += "-popup";
    return `vjs-menu-button ${e10} ${nl.prototype.buildCSSClass()} ${super.buildCSSClass()}`;
  }
  buildCSSClass() {
    let e10 = "vjs-menu-button";
    return true === this.options_.inline ? e10 += "-inline" : e10 += "-popup", `vjs-menu-button ${e10} ${super.buildCSSClass()}`;
  }
  controlText(e10, t3 = this.menuButton_.el()) {
    return this.menuButton_.controlText(e10, t3);
  }
  dispose() {
    this.handleMouseLeave(), super.dispose();
  }
  handleClick(e10) {
    this.buttonPressed_ ? this.unpressButton() : this.pressButton();
  }
  handleMouseLeave(e10) {
    this.removeClass("vjs-hover"), Yr(ae, "keyup", this.handleMenuKeyUp_);
  }
  focus() {
    this.menuButton_.focus();
  }
  blur() {
    this.menuButton_.blur();
  }
  handleKeyDown(e10) {
    "Escape" === e10.key || "Tab" === e10.key ? (this.buttonPressed_ && this.unpressButton(), "Tab" === !e10.key && (e10.preventDefault(), this.menuButton_.focus())) : "Up" !== e10.key && ("Down" !== e10.key || this.player_.options_.playerOptions.spatialNavigation && this.player_.options_.playerOptions.spatialNavigation.enabled) || this.buttonPressed_ || (e10.preventDefault(), this.pressButton());
  }
  handleMenuKeyUp(e10) {
    "Escape" !== e10.key && "Tab" !== e10.key || this.removeClass("vjs-hover");
  }
  handleSubmenuKeyPress(e10) {
    this.handleSubmenuKeyDown(e10);
  }
  handleSubmenuKeyDown(e10) {
    "Escape" !== e10.key && "Tab" !== e10.key || (this.buttonPressed_ && this.unpressButton(), "Tab" === !e10.key && (e10.preventDefault(), this.menuButton_.focus()));
  }
  pressButton() {
    if (this.enabled_) {
      if (this.buttonPressed_ = true, this.menu.show(), this.menu.lockShowing(), this.menuButton_.el_.setAttribute("aria-expanded", "true"), Yn && sr()) return;
      this.menu.focus();
    }
  }
  unpressButton() {
    this.enabled_ && (this.buttonPressed_ = false, this.menu.unlockShowing(), this.menu.hide(), this.menuButton_.el_.setAttribute("aria-expanded", "false"));
  }
  disable() {
    this.unpressButton(), this.enabled_ = false, this.addClass("vjs-disabled"), this.menuButton_.disable();
  }
  enable() {
    this.enabled_ = true, this.removeClass("vjs-disabled"), this.menuButton_.enable();
  }
};
Ca.registerComponent("MenuButton", Fl);
var ql = class extends Fl {
  constructor(e10, t3) {
    const i5 = t3.tracks;
    if (super(e10, t3), this.items.length <= 1 && this.hide(), !i5) return;
    const s5 = ia(this, this.update);
    i5.addEventListener("removetrack", s5), i5.addEventListener("addtrack", s5), i5.addEventListener("labelchange", s5), this.player_.on("ready", s5), this.player_.on("dispose", function() {
      i5.removeEventListener("removetrack", s5), i5.removeEventListener("addtrack", s5), i5.removeEventListener("labelchange", s5);
    });
  }
};
Ca.registerComponent("TrackButton", ql);
var jl = class extends Xo {
  constructor(e10, t3) {
    super(e10, t3), this.selectable = t3.selectable, this.isSelected_ = t3.selected || false, this.multiSelectable = t3.multiSelectable, this.selected(this.isSelected_), this.selectable ? this.multiSelectable ? this.el_.setAttribute("role", "menuitemcheckbox") : this.el_.setAttribute("role", "menuitemradio") : this.el_.setAttribute("role", "menuitem");
  }
  createEl(e10, t3, i5) {
    this.nonIconControl = true;
    const s5 = super.createEl("li", Object.assign({ className: "vjs-menu-item", tabIndex: -1 }, t3), i5), n4 = rr("span", { className: "vjs-menu-item-text", textContent: this.localize(this.options_.label) });
    return this.player_.options_.experimentalSvgIcons ? s5.appendChild(n4) : s5.replaceChild(n4, s5.querySelector(".vjs-icon-placeholder")), s5;
  }
  handleKeyDown(e10) {
    ["Tab", "Escape", "ArrowUp", "ArrowLeft", "ArrowRight", "ArrowDown"].includes(e10.key) || super.handleKeyDown(e10);
  }
  handleClick(e10) {
    this.selected(true);
  }
  selected(e10) {
    this.selectable && (e10 ? (this.addClass("vjs-selected"), this.el_.setAttribute("aria-checked", "true"), this.controlText(", selected"), this.isSelected_ = true) : (this.removeClass("vjs-selected"), this.el_.setAttribute("aria-checked", "false"), this.controlText(""), this.isSelected_ = false));
  }
};
Ca.registerComponent("MenuItem", jl);
var $l = class extends jl {
  constructor(e10, t3) {
    const i5 = t3.track, s5 = e10.textTracks();
    t3.label = i5.label || i5.language || "Unknown", t3.selected = "showing" === i5.mode, super(e10, t3), this.track = i5, this.kinds = (t3.kinds || [t3.kind || this.track.kind]).filter(Boolean);
    const n4 = (...e11) => {
      this.handleTracksChange.apply(this, e11);
    }, r5 = (...e11) => {
      this.handleSelectedLanguageChange.apply(this, e11);
    };
    if (e10.on(["loadstart", "texttrackchange"], n4), s5.addEventListener("change", n4), s5.addEventListener("selectedlanguagechange", r5), this.on("dispose", function() {
      e10.off(["loadstart", "texttrackchange"], n4), s5.removeEventListener("change", n4), s5.removeEventListener("selectedlanguagechange", r5);
    }), void 0 === s5.onchange) {
      let e11;
      this.on(["tap", "click"], function() {
        if ("object" != typeof b3.Event) try {
          e11 = new b3.Event("change");
        } catch (t4) {
        }
        e11 || (e11 = ae.createEvent("Event"), e11.initEvent("change", true, true)), s5.dispatchEvent(e11);
      });
    }
    this.handleTracksChange();
  }
  handleClick(e10) {
    const t3 = this.track, i5 = this.player_.textTracks();
    if (super.handleClick(e10), i5) for (let s5 = 0; s5 < i5.length; s5++) {
      const e11 = i5[s5];
      -1 !== this.kinds.indexOf(e11.kind) && (e11 === t3 ? "showing" !== e11.mode && (e11.mode = "showing") : "disabled" !== e11.mode && (e11.mode = "disabled"));
    }
  }
  handleTracksChange(e10) {
    const t3 = "showing" === this.track.mode;
    t3 !== this.isSelected_ && this.selected(t3);
  }
  handleSelectedLanguageChange(e10) {
    if ("showing" === this.track.mode) {
      const e11 = this.player_.cache_.selectedLanguage;
      if (e11 && e11.enabled && e11.language === this.track.language && e11.kind !== this.track.kind) return;
      this.player_.cache_.selectedLanguage = { enabled: true, language: this.track.language, kind: this.track.kind };
    }
  }
  dispose() {
    this.track = null, super.dispose();
  }
};
Ca.registerComponent("TextTrackMenuItem", $l);
var Hl = class extends $l {
  constructor(e10, t3) {
    t3.track = { player: e10, kind: t3.kind, kinds: t3.kinds, default: false, mode: "disabled" }, t3.kinds || (t3.kinds = [t3.kind]), t3.label ? t3.track.label = t3.label : t3.track.label = t3.kinds.join(" and ") + " off", t3.selectable = true, t3.multiSelectable = false, super(e10, t3);
  }
  handleTracksChange(e10) {
    const t3 = this.player().textTracks();
    let i5 = true;
    for (let s5 = 0, n4 = t3.length; s5 < n4; s5++) {
      const e11 = t3[s5];
      if (this.options_.kinds.indexOf(e11.kind) > -1 && "showing" === e11.mode) {
        i5 = false;
        break;
      }
    }
    i5 !== this.isSelected_ && this.selected(i5);
  }
  handleSelectedLanguageChange(e10) {
    const t3 = this.player().textTracks();
    let i5 = true;
    for (let s5 = 0, n4 = t3.length; s5 < n4; s5++) {
      const e11 = t3[s5];
      if (["captions", "descriptions", "subtitles"].indexOf(e11.kind) > -1 && "showing" === e11.mode) {
        i5 = false;
        break;
      }
    }
    i5 && (this.player_.cache_.selectedLanguage = { enabled: false });
  }
  handleLanguagechange() {
    this.$(".vjs-menu-item-text").textContent = this.player_.localize(this.options_.label), super.handleLanguagechange();
  }
};
Ca.registerComponent("OffTextTrackMenuItem", Hl);
var Vl = class extends ql {
  constructor(e10, t3 = {}) {
    t3.tracks = e10.textTracks(), super(e10, t3);
  }
  createItems(e10 = [], t3 = $l) {
    let i5;
    this.label_ && (i5 = `${this.label_} off`), e10.push(new Hl(this.player_, { kinds: this.kinds_, kind: this.kind_, label: i5 })), this.hideThreshold_ += 1;
    const s5 = this.player_.textTracks();
    Array.isArray(this.kinds_) || (this.kinds_ = [this.kind_]);
    for (let n4 = 0; n4 < s5.length; n4++) {
      const i6 = s5[n4];
      if (this.kinds_.indexOf(i6.kind) > -1) {
        const s6 = new t3(this.player_, { track: i6, kinds: this.kinds_, kind: this.kind_, selectable: true, multiSelectable: false });
        s6.addClass(`vjs-${i6.kind}-menu-item`), e10.push(s6);
      }
    }
    return e10;
  }
};
Ca.registerComponent("TextTrackButton", Vl);
var zl = class extends jl {
  constructor(e10, t3) {
    const i5 = t3.track, s5 = t3.cue, n4 = e10.currentTime();
    t3.selectable = true, t3.multiSelectable = false, t3.label = s5.text, t3.selected = s5.startTime <= n4 && n4 < s5.endTime, super(e10, t3), this.track = i5, this.cue = s5;
  }
  handleClick(e10) {
    super.handleClick(), this.player_.currentTime(this.cue.startTime);
  }
};
Ca.registerComponent("ChaptersTrackMenuItem", zl);
var Wl = class extends Vl {
  constructor(e10, t3, i5) {
    super(e10, t3, i5), this.setIcon("chapters"), this.selectCurrentItem_ = () => {
      this.items.forEach((e11) => {
        e11.selected(this.track_.activeCues[0] === e11.cue);
      });
    };
  }
  buildCSSClass() {
    return `vjs-chapters-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;
  }
  update(e10) {
    if (e10 && e10.track && "chapters" !== e10.track.kind) return;
    const t3 = this.findChaptersTrack();
    t3 !== this.track_ ? (this.setTrack(t3), super.update()) : (!this.items || t3 && t3.cues && t3.cues.length !== this.items.length) && super.update();
  }
  setTrack(e10) {
    if (this.track_ !== e10) {
      if (this.updateHandler_ || (this.updateHandler_ = this.update.bind(this)), this.track_) {
        const e11 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        e11 && e11.removeEventListener("load", this.updateHandler_), this.track_.removeEventListener("cuechange", this.selectCurrentItem_), this.track_ = null;
      }
      if (this.track_ = e10, this.track_) {
        this.track_.mode = "hidden";
        const e11 = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
        e11 && e11.addEventListener("load", this.updateHandler_), this.track_.addEventListener("cuechange", this.selectCurrentItem_);
      }
    }
  }
  findChaptersTrack() {
    const e10 = this.player_.textTracks() || [];
    for (let t3 = e10.length - 1; t3 >= 0; t3--) {
      const i5 = e10[t3];
      if (i5.kind === this.kind_) return i5;
    }
  }
  getMenuCaption() {
    return this.track_ && this.track_.label ? this.track_.label : this.localize(Sa(this.kind_));
  }
  createMenu() {
    return this.options_.title = this.getMenuCaption(), super.createMenu();
  }
  createItems() {
    const e10 = [];
    if (!this.track_) return e10;
    const t3 = this.track_.cues;
    if (!t3) return e10;
    for (let i5 = 0, s5 = t3.length; i5 < s5; i5++) {
      const s6 = t3[i5], n4 = new zl(this.player_, { track: this.track_, cue: s6 });
      e10.push(n4);
    }
    return e10;
  }
};
Wl.prototype.kind_ = "chapters", Wl.prototype.controlText_ = "Chapters", Ca.registerComponent("ChaptersButton", Wl);
var Gl = class extends Vl {
  constructor(e10, t3, i5) {
    super(e10, t3, i5), this.setIcon("audio-description");
    const s5 = e10.textTracks(), n4 = ia(this, this.handleTracksChange);
    s5.addEventListener("change", n4), this.on("dispose", function() {
      s5.removeEventListener("change", n4);
    });
  }
  handleTracksChange(e10) {
    const t3 = this.player().textTracks();
    let i5 = false;
    for (let s5 = 0, n4 = t3.length; s5 < n4; s5++) {
      const e11 = t3[s5];
      if (e11.kind !== this.kind_ && "showing" === e11.mode) {
        i5 = true;
        break;
      }
    }
    i5 ? this.disable() : this.enable();
  }
  buildCSSClass() {
    return `vjs-descriptions-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;
  }
};
Gl.prototype.kind_ = "descriptions", Gl.prototype.controlText_ = "Descriptions", Ca.registerComponent("DescriptionsButton", Gl);
var Xl = class extends Vl {
  constructor(e10, t3, i5) {
    super(e10, t3, i5), this.setIcon("subtitles");
  }
  buildCSSClass() {
    return `vjs-subtitles-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;
  }
};
Xl.prototype.kind_ = "subtitles", Xl.prototype.controlText_ = "Subtitles", Ca.registerComponent("SubtitlesButton", Xl);
var Kl = class extends $l {
  constructor(e10, t3) {
    t3.track = { player: e10, kind: t3.kind, label: t3.kind + " settings", selectable: false, default: false, mode: "disabled" }, t3.selectable = false, t3.name = "CaptionSettingsMenuItem", super(e10, t3), this.addClass("vjs-texttrack-settings"), this.controlText(", opens " + t3.kind + " settings dialog");
  }
  handleClick(e10) {
    this.player().getChild("textTrackSettings").open();
  }
  handleLanguagechange() {
    this.$(".vjs-menu-item-text").textContent = this.player_.localize(this.options_.kind + " settings"), super.handleLanguagechange();
  }
};
Ca.registerComponent("CaptionSettingsMenuItem", Kl);
var Yl = class extends Vl {
  constructor(e10, t3, i5) {
    super(e10, t3, i5), this.setIcon("captions");
  }
  buildCSSClass() {
    return `vjs-captions-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-captions-button ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    const e10 = [];
    return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (e10.push(new Kl(this.player_, { kind: this.kind_ })), this.hideThreshold_ += 1), super.createItems(e10);
  }
};
Yl.prototype.kind_ = "captions", Yl.prototype.controlText_ = "Captions", Ca.registerComponent("CaptionsButton", Yl);
var Ql = class extends $l {
  createEl(e10, t3, i5) {
    const s5 = super.createEl(e10, t3, i5), n4 = s5.querySelector(".vjs-menu-item-text");
    return "captions" === this.options_.track.kind && (this.player_.options_.experimentalSvgIcons ? this.setIcon("captions", s5) : n4.appendChild(rr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), n4.appendChild(rr("span", { className: "vjs-control-text", textContent: ` ${this.localize("Captions")}` }))), s5;
  }
};
Ca.registerComponent("SubsCapsMenuItem", Ql);
var Jl = class extends Vl {
  constructor(e10, t3 = {}) {
    super(e10, t3), this.label_ = "subtitles", this.setIcon("subtitles"), ["en", "en-us", "en-ca", "fr-ca"].indexOf(this.player_.language_) > -1 && (this.label_ = "captions", this.setIcon("captions")), this.menuButton_.controlText(Sa(this.label_));
  }
  buildCSSClass() {
    return `vjs-subs-caps-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    let e10 = [];
    return this.player().tech_ && this.player().tech_.featuresNativeTextTracks || !this.player().getChild("textTrackSettings") || (e10.push(new Kl(this.player_, { kind: this.label_ })), this.hideThreshold_ += 1), e10 = super.createItems(e10, Ql), e10;
  }
};
Jl.prototype.kinds_ = ["captions", "subtitles"], Jl.prototype.controlText_ = "Subtitles", Ca.registerComponent("SubsCapsButton", Jl);
var Zl = class extends jl {
  constructor(e10, t3) {
    const i5 = t3.track, s5 = e10.audioTracks();
    t3.label = i5.label || i5.language || "Unknown", t3.selected = i5.enabled, super(e10, t3), this.track = i5, this.addClass(`vjs-${i5.kind}-menu-item`);
    const n4 = (...e11) => {
      this.handleTracksChange.apply(this, e11);
    };
    s5.addEventListener("change", n4), this.on("dispose", () => {
      s5.removeEventListener("change", n4);
    });
  }
  createEl(e10, t3, i5) {
    const s5 = super.createEl(e10, t3, i5), n4 = s5.querySelector(".vjs-menu-item-text");
    return ["main-desc", "descriptions"].indexOf(this.options_.track.kind) >= 0 && (n4.appendChild(rr("span", { className: "vjs-icon-placeholder" }, { "aria-hidden": true })), n4.appendChild(rr("span", { className: "vjs-control-text", textContent: " " + this.localize("Descriptions") }))), s5;
  }
  handleClick(e10) {
    if (super.handleClick(e10), this.track.enabled = true, this.player_.tech_.featuresNativeAudioTracks) {
      const e11 = this.player_.audioTracks();
      for (let t3 = 0; t3 < e11.length; t3++) {
        const i5 = e11[t3];
        i5 !== this.track && (i5.enabled = i5 === this.track);
      }
    }
  }
  handleTracksChange(e10) {
    this.selected(this.track.enabled);
  }
};
Ca.registerComponent("AudioTrackMenuItem", Zl);
var eh = class extends ql {
  constructor(e10, t3 = {}) {
    t3.tracks = e10.audioTracks(), super(e10, t3), this.setIcon("audio");
  }
  buildCSSClass() {
    return `vjs-audio-button ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-audio-button ${super.buildWrapperCSSClass()}`;
  }
  createItems(e10 = []) {
    this.hideThreshold_ = 1;
    const t3 = this.player_.audioTracks();
    for (let i5 = 0; i5 < t3.length; i5++) {
      const s5 = t3[i5];
      e10.push(new Zl(this.player_, { track: s5, selectable: true, multiSelectable: false }));
    }
    return e10;
  }
};
eh.prototype.controlText_ = "Audio Track", Ca.registerComponent("AudioTrackButton", eh);
var th = class extends jl {
  constructor(e10, t3) {
    const i5 = t3.rate, s5 = parseFloat(i5, 10);
    t3.label = i5, t3.selected = s5 === e10.playbackRate(), t3.selectable = true, t3.multiSelectable = false, super(e10, t3), this.label = i5, this.rate = s5, this.on(e10, "ratechange", (e11) => this.update(e11));
  }
  handleClick(e10) {
    super.handleClick(), this.player().playbackRate(this.rate);
  }
  update(e10) {
    this.selected(this.player().playbackRate() === this.rate);
  }
};
th.prototype.contentElType = "button", Ca.registerComponent("PlaybackRateMenuItem", th);
var ih = class extends Fl {
  constructor(e10, t3) {
    super(e10, t3), this.menuButton_.el_.setAttribute("aria-describedby", this.labelElId_), this.updateVisibility(), this.updateLabel(), this.on(e10, "loadstart", (e11) => this.updateVisibility(e11)), this.on(e10, "ratechange", (e11) => this.updateLabel(e11)), this.on(e10, "playbackrateschange", (e11) => this.handlePlaybackRateschange(e11));
  }
  createEl() {
    const e10 = super.createEl();
    return this.labelElId_ = "vjs-playback-rate-value-label-" + this.id_, this.labelEl_ = rr("div", { className: "vjs-playback-rate-value", id: this.labelElId_, textContent: "1x" }), e10.appendChild(this.labelEl_), e10;
  }
  dispose() {
    this.labelEl_ = null, super.dispose();
  }
  buildCSSClass() {
    return `vjs-playback-rate ${super.buildCSSClass()}`;
  }
  buildWrapperCSSClass() {
    return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;
  }
  createItems() {
    const e10 = this.playbackRates(), t3 = [];
    for (let i5 = e10.length - 1; i5 >= 0; i5--) t3.push(new th(this.player(), { rate: e10[i5] + "x" }));
    return t3;
  }
  handlePlaybackRateschange(e10) {
    this.update();
  }
  playbackRates() {
    const e10 = this.player();
    return e10.playbackRates && e10.playbackRates() || [];
  }
  playbackRateSupported() {
    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;
  }
  updateVisibility(e10) {
    this.playbackRateSupported() ? this.removeClass("vjs-hidden") : this.addClass("vjs-hidden");
  }
  updateLabel(e10) {
    this.playbackRateSupported() && (this.labelEl_.textContent = this.player().playbackRate() + "x");
  }
};
ih.prototype.controlText_ = "Playback Rate", Ca.registerComponent("PlaybackRateMenuButton", ih);
var sh = class extends Ca {
  buildCSSClass() {
    return `vjs-spacer ${super.buildCSSClass()}`;
  }
  createEl(e10 = "div", t3 = {}, i5 = {}) {
    return t3.className || (t3.className = this.buildCSSClass()), super.createEl(e10, t3, i5);
  }
};
Ca.registerComponent("Spacer", sh);
var nh = class extends sh {
  buildCSSClass() {
    return `vjs-custom-control-spacer ${super.buildCSSClass()}`;
  }
  createEl() {
    return super.createEl("div", { className: this.buildCSSClass(), textContent: " " });
  }
};
Ca.registerComponent("CustomControlSpacer", nh);
var rh = class extends Ca {
  createEl() {
    return super.createEl("div", { className: "vjs-control-bar", dir: "ltr" });
  }
};
rh.prototype.options_ = { children: ["playToggle", "skipBackward", "skipForward", "volumePanel", "currentTimeDisplay", "timeDivider", "durationDisplay", "progressControl", "liveDisplay", "seekToLive", "remainingTimeDisplay", "customControlSpacer", "playbackRateMenuButton", "chaptersButton", "descriptionsButton", "subsCapsButton", "audioTrackButton", "pictureInPictureToggle", "fullscreenToggle"] }, Ca.registerComponent("ControlBar", rh);
var ah = class extends Ha {
  constructor(e10, t3) {
    super(e10, t3), this.on(e10, "error", (e11) => {
      this.open(e11);
    });
  }
  buildCSSClass() {
    return `vjs-error-display ${super.buildCSSClass()}`;
  }
  content() {
    const e10 = this.player().error();
    return e10 ? this.localize(e10.message) : "";
  }
};
ah.prototype.options_ = Object.assign({}, Ha.prototype.options_, { pauseOnOpen: false, fillAlways: true, temporary: false, uncloseable: true }), Ca.registerComponent("ErrorDisplay", ah);
var oh = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3), this.el_.setAttribute("aria-labelledby", this.selectLabelledbyIds);
  }
  createEl() {
    this.selectLabelledbyIds = [this.options_.legendId, this.options_.labelId].join(" ").trim();
    return rr("select", { id: this.options_.id }, {}, this.options_.SelectOptions.map((e10) => {
      const t3 = (this.options_.labelId ? this.options_.labelId : `vjs-track-option-${Hr()}`) + "-" + e10[1].replace(/\W+/g, ""), i5 = rr("option", { id: t3, value: this.localize(e10[0]), textContent: this.localize(e10[1]) });
      return i5.setAttribute("aria-labelledby", `${this.selectLabelledbyIds} ${t3}`), i5;
    }));
  }
};
Ca.registerComponent("TextTrackSelect", oh);
var lh = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3);
    const i5 = rr("legend", { textContent: this.localize(this.options_.legendText), id: this.options_.legendId });
    this.el().appendChild(i5);
    const s5 = this.options_.selects;
    for (const n4 of s5) {
      const t4 = this.options_.selectConfigs[n4], i6 = t4.className, s6 = t4.id.replace("%s", this.options_.id_);
      let r5 = null;
      const a9 = `vjs_select_${Hr()}`;
      if ("colors" === this.options_.type) {
        r5 = rr("span", { className: i6 });
        const e11 = rr("label", { id: s6, className: "vjs-label", textContent: this.localize(t4.label) });
        e11.setAttribute("for", a9), r5.appendChild(e11);
      }
      const o4 = new oh(e10, { SelectOptions: t4.options, legendId: this.options_.legendId, id: a9, labelId: s6 });
      this.addChild(o4), "colors" === this.options_.type && (r5.appendChild(o4.el()), this.el().appendChild(r5));
    }
  }
  createEl() {
    return rr("fieldset", { className: this.options_.className });
  }
};
Ca.registerComponent("TextTrackFieldset", lh);
var hh = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3);
    const i5 = this.options_.textTrackComponentid, s5 = new lh(e10, { id_: i5, legendId: `captions-text-legend-${i5}`, legendText: this.localize("Text"), className: "vjs-fg vjs-track-setting", selects: this.options_.fieldSets[0], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(s5);
    const n4 = new lh(e10, { id_: i5, legendId: `captions-background-${i5}`, legendText: this.localize("Text Background"), className: "vjs-bg vjs-track-setting", selects: this.options_.fieldSets[1], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(n4);
    const r5 = new lh(e10, { id_: i5, legendId: `captions-window-${i5}`, legendText: this.localize("Caption Area Background"), className: "vjs-window vjs-track-setting", selects: this.options_.fieldSets[2], selectConfigs: this.options_.selectConfigs, type: "colors" });
    this.addChild(r5);
  }
  createEl() {
    return rr("div", { className: "vjs-track-settings-colors" });
  }
};
Ca.registerComponent("TextTrackSettingsColors", hh);
var uh = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3);
    const i5 = this.options_.textTrackComponentid, s5 = new lh(e10, { id_: i5, legendId: `captions-font-size-${i5}`, legendText: "Font Size", className: "vjs-font-percent vjs-track-setting", selects: this.options_.fieldSets[0], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(s5);
    const n4 = new lh(e10, { id_: i5, legendId: `captions-edge-style-${i5}`, legendText: this.localize("Text Edge Style"), className: "vjs-edge-style vjs-track-setting", selects: this.options_.fieldSets[1], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(n4);
    const r5 = new lh(e10, { id_: i5, legendId: `captions-font-family-${i5}`, legendText: this.localize("Font Family"), className: "vjs-font-family vjs-track-setting", selects: this.options_.fieldSets[2], selectConfigs: this.options_.selectConfigs, type: "font" });
    this.addChild(r5);
  }
  createEl() {
    return rr("div", { className: "vjs-track-settings-font" });
  }
};
Ca.registerComponent("TextTrackSettingsFont", uh);
var dh = class extends Ca {
  constructor(e10, t3 = {}) {
    super(e10, t3);
    const i5 = this.localize("restore all settings to the default values"), s5 = new nl(e10, { controlText: i5, className: "vjs-default-button" });
    s5.el().classList.remove("vjs-control", "vjs-button"), s5.el().textContent = this.localize("Reset"), this.addChild(s5);
    const n4 = new nl(e10, { controlText: i5, className: "vjs-done-button" });
    n4.el().classList.remove("vjs-control", "vjs-button"), n4.el().textContent = this.localize("Done"), this.addChild(n4);
  }
  createEl() {
    return rr("div", { className: "vjs-track-settings-controls" });
  }
};
Ca.registerComponent("TrackSettingsControls", dh);
var ch = "vjs-text-track-settings";
var ph = ["#000", "Black"];
var mh = ["#00F", "Blue"];
var gh = ["#0FF", "Cyan"];
var fh = ["#0F0", "Green"];
var yh = ["#F0F", "Magenta"];
var _h = ["#F00", "Red"];
var vh = ["#FFF", "White"];
var bh = ["#FF0", "Yellow"];
var Th = ["1", "Opaque"];
var Sh = ["0.5", "Semi-Transparent"];
var Eh = ["0", "Transparent"];
var wh = { backgroundColor: { selector: ".vjs-bg-color > select", id: "captions-background-color-%s", label: "Color", options: [ph, vh, _h, fh, mh, bh, yh, gh], className: "vjs-bg-color" }, backgroundOpacity: { selector: ".vjs-bg-opacity > select", id: "captions-background-opacity-%s", label: "Opacity", options: [Th, Sh, Eh], className: "vjs-bg-opacity vjs-opacity" }, color: { selector: ".vjs-text-color > select", id: "captions-foreground-color-%s", label: "Color", options: [vh, ph, _h, fh, mh, bh, yh, gh], className: "vjs-text-color" }, edgeStyle: { selector: ".vjs-edge-style > select", id: "", label: "Text Edge Style", options: [["none", "None"], ["raised", "Raised"], ["depressed", "Depressed"], ["uniform", "Uniform"], ["dropshadow", "Drop shadow"]] }, fontFamily: { selector: ".vjs-font-family > select", id: "", label: "Font Family", options: [["proportionalSansSerif", "Proportional Sans-Serif"], ["monospaceSansSerif", "Monospace Sans-Serif"], ["proportionalSerif", "Proportional Serif"], ["monospaceSerif", "Monospace Serif"], ["casual", "Casual"], ["script", "Script"], ["small-caps", "Small Caps"]] }, fontPercent: { selector: ".vjs-font-percent > select", id: "", label: "Font Size", options: [["0.50", "50%"], ["0.75", "75%"], ["1.00", "100%"], ["1.25", "125%"], ["1.50", "150%"], ["1.75", "175%"], ["2.00", "200%"], ["3.00", "300%"], ["4.00", "400%"]], default: 2, parser: (e10) => "1.00" === e10 ? null : Number(e10) }, textOpacity: { selector: ".vjs-text-opacity > select", id: "captions-foreground-opacity-%s", label: "Opacity", options: [Th, Sh], className: "vjs-text-opacity vjs-opacity" }, windowColor: { selector: ".vjs-window-color > select", id: "captions-window-color-%s", label: "Color", className: "vjs-window-color" }, windowOpacity: { selector: ".vjs-window-opacity > select", id: "captions-window-opacity-%s", label: "Opacity", options: [Eh, Sh, Th], className: "vjs-window-opacity vjs-opacity" } };
function Ch(e10, t3) {
  if (t3 && (e10 = t3(e10)), e10 && "none" !== e10) return e10;
}
function kh(e10, t3) {
  return Ch(e10.options[e10.options.selectedIndex].value, t3);
}
function Ih(e10, t3, i5) {
  if (t3) {
    for (let s5 = 0; s5 < e10.options.length; s5++) if (Ch(e10.options[s5].value, i5) === t3) {
      e10.selectedIndex = s5;
      break;
    }
  }
}
wh.windowColor.options = wh.backgroundColor.options;
var xh = class extends Ha {
  constructor(e10, t3) {
    t3.temporary = false, super(e10, t3), this.updateDisplay = this.updateDisplay.bind(this), this.fill(), this.hasBeenOpened_ = this.hasBeenFilled_ = true, this.renderModalComponents(e10), this.endDialog = rr("p", { className: "vjs-control-text", textContent: this.localize("End of dialog window.") }), this.el().appendChild(this.endDialog), this.setDefaults(), void 0 === t3.persistTextTrackSettings && (this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings), this.bindFunctionsToSelectsAndButtons(), this.options_.persistTextTrackSettings && this.restoreSettings();
  }
  renderModalComponents(e10) {
    const t3 = new hh(e10, { textTrackComponentid: this.id_, selectConfigs: wh, fieldSets: [["color", "textOpacity"], ["backgroundColor", "backgroundOpacity"], ["windowColor", "windowOpacity"]] });
    this.addChild(t3);
    const i5 = new uh(e10, { textTrackComponentid: this.id_, selectConfigs: wh, fieldSets: [["fontPercent"], ["edgeStyle"], ["fontFamily"]] });
    this.addChild(i5);
    const s5 = new dh(e10);
    this.addChild(s5);
  }
  bindFunctionsToSelectsAndButtons() {
    this.on(this.$(".vjs-done-button"), ["click", "tap"], () => {
      this.saveSettings(), this.close();
    }), this.on(this.$(".vjs-default-button"), ["click", "tap"], () => {
      this.setDefaults(), this.updateDisplay();
    }), Tn(wh, (e10) => {
      this.on(this.$(e10.selector), "change", this.updateDisplay);
    });
  }
  dispose() {
    this.endDialog = null, super.dispose();
  }
  label() {
    return this.localize("Caption Settings Dialog");
  }
  description() {
    return this.localize("Beginning of dialog window. Escape will cancel and close the window.");
  }
  buildCSSClass() {
    return super.buildCSSClass() + " vjs-text-track-settings";
  }
  getValues() {
    return Sn(wh, (e10, t3, i5) => {
      const s5 = kh(this.$(t3.selector), t3.parser);
      return void 0 !== s5 && (e10[i5] = s5), e10;
    }, {});
  }
  setValues(e10) {
    Tn(wh, (t3, i5) => {
      Ih(this.$(t3.selector), e10[i5], t3.parser);
    });
  }
  setDefaults() {
    Tn(wh, (e10) => {
      const t3 = e10.hasOwnProperty("default") ? e10.default : 0;
      this.$(e10.selector).selectedIndex = t3;
    });
  }
  restoreSettings() {
    let e10;
    try {
      e10 = JSON.parse(b3.localStorage.getItem(ch));
    } catch (t3) {
      yn.warn(t3);
    }
    e10 && this.setValues(e10);
  }
  saveSettings() {
    if (!this.options_.persistTextTrackSettings) return;
    const e10 = this.getValues();
    try {
      Object.keys(e10).length ? b3.localStorage.setItem(ch, JSON.stringify(e10)) : b3.localStorage.removeItem(ch);
    } catch (t3) {
      yn.warn(t3);
    }
  }
  updateDisplay() {
    const e10 = this.player_.getChild("textTrackDisplay");
    e10 && e10.updateDisplay();
  }
  handleLanguagechange() {
    this.fill(), this.renderModalComponents(this.player_), this.bindFunctionsToSelectsAndButtons();
  }
};
Ca.registerComponent("TextTrackSettings", xh);
var Ah = class extends Ca {
  constructor(e10, t3) {
    let i5 = t3.ResizeObserver || b3.ResizeObserver;
    null === t3.ResizeObserver && (i5 = false);
    super(e10, Cn({ createEl: !i5, reportTouchActivity: false }, t3)), this.ResizeObserver = t3.ResizeObserver || b3.ResizeObserver, this.loadListener_ = null, this.resizeObserver_ = null, this.debouncedHandler_ = na(() => {
      this.resizeHandler();
    }, 100, false, this), i5 ? (this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_), this.resizeObserver_.observe(e10.el())) : (this.loadListener_ = () => {
      if (!this.el_ || !this.el_.contentWindow) return;
      const e11 = this.debouncedHandler_;
      let t4 = this.unloadListener_ = function() {
        Yr(this, "resize", e11), Yr(this, "unload", t4), t4 = null;
      };
      Kr(this.el_.contentWindow, "unload", t4), Kr(this.el_.contentWindow, "resize", e11);
    }, this.one("load", this.loadListener_));
  }
  createEl() {
    return super.createEl("iframe", { className: "vjs-resize-manager", tabIndex: -1, title: this.localize("No content") }, { "aria-hidden": "true" });
  }
  resizeHandler() {
    this.player_ && this.player_.trigger && this.player_.trigger("playerresize");
  }
  dispose() {
    this.debouncedHandler_ && this.debouncedHandler_.cancel(), this.resizeObserver_ && (this.player_.el() && this.resizeObserver_.unobserve(this.player_.el()), this.resizeObserver_.disconnect()), this.loadListener_ && this.off("load", this.loadListener_), this.el_ && this.el_.contentWindow && this.unloadListener_ && this.unloadListener_.call(this.el_.contentWindow), this.ResizeObserver = null, this.resizeObserver = null, this.debouncedHandler_ = null, this.loadListener_ = null, super.dispose();
  }
};
Ca.registerComponent("ResizeManager", Ah);
var Dh = { trackingThreshold: 20, liveTolerance: 15 };
var Ph = class extends Ca {
  constructor(e10, t3) {
    super(e10, Cn(Dh, t3, { createEl: false })), this.trackLiveHandler_ = () => this.trackLive_(), this.handlePlay_ = (e11) => this.handlePlay(e11), this.handleFirstTimeupdate_ = (e11) => this.handleFirstTimeupdate(e11), this.handleSeeked_ = (e11) => this.handleSeeked(e11), this.seekToLiveEdge_ = (e11) => this.seekToLiveEdge(e11), this.reset_(), this.on(this.player_, "durationchange", (e11) => this.handleDurationchange(e11)), this.on(this.player_, "canplay", () => this.toggleTracking());
  }
  trackLive_() {
    const e10 = this.player_.seekable();
    if (!e10 || !e10.length) return;
    const t3 = Number(b3.performance.now().toFixed(4)), i5 = -1 === this.lastTime_ ? 0 : (t3 - this.lastTime_) / 1e3;
    this.lastTime_ = t3, this.pastSeekEnd_ = this.pastSeekEnd() + i5;
    const s5 = this.liveCurrentTime(), n4 = this.player_.currentTime();
    let r5 = this.player_.paused() || this.seekedBehindLive_ || Math.abs(s5 - n4) > this.options_.liveTolerance;
    this.timeupdateSeen_ && s5 !== 1 / 0 || (r5 = false), r5 !== this.behindLiveEdge_ && (this.behindLiveEdge_ = r5, this.trigger("liveedgechange"));
  }
  handleDurationchange() {
    this.toggleTracking();
  }
  toggleTracking() {
    this.player_.duration() === 1 / 0 && this.liveWindow() >= this.options_.trackingThreshold ? (this.player_.options_.liveui && this.player_.addClass("vjs-liveui"), this.startTracking()) : (this.player_.removeClass("vjs-liveui"), this.stopTracking());
  }
  startTracking() {
    this.isTracking() || (this.timeupdateSeen_ || (this.timeupdateSeen_ = this.player_.hasStarted()), this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, ta), this.trackLive_(), this.on(this.player_, ["play", "pause"], this.trackLiveHandler_), this.timeupdateSeen_ ? this.on(this.player_, "seeked", this.handleSeeked_) : (this.one(this.player_, "play", this.handlePlay_), this.one(this.player_, "timeupdate", this.handleFirstTimeupdate_)));
  }
  handleFirstTimeupdate() {
    this.timeupdateSeen_ = true, this.on(this.player_, "seeked", this.handleSeeked_);
  }
  handleSeeked() {
    const e10 = Math.abs(this.liveCurrentTime() - this.player_.currentTime());
    this.seekedBehindLive_ = this.nextSeekedFromUser_ && e10 > 2, this.nextSeekedFromUser_ = false, this.trackLive_();
  }
  handlePlay() {
    this.one(this.player_, "timeupdate", this.seekToLiveEdge_);
  }
  reset_() {
    this.lastTime_ = -1, this.pastSeekEnd_ = 0, this.lastSeekEnd_ = -1, this.behindLiveEdge_ = true, this.timeupdateSeen_ = false, this.seekedBehindLive_ = false, this.nextSeekedFromUser_ = false, this.clearInterval(this.trackingInterval_), this.trackingInterval_ = null, this.off(this.player_, ["play", "pause"], this.trackLiveHandler_), this.off(this.player_, "seeked", this.handleSeeked_), this.off(this.player_, "play", this.handlePlay_), this.off(this.player_, "timeupdate", this.handleFirstTimeupdate_), this.off(this.player_, "timeupdate", this.seekToLiveEdge_);
  }
  nextSeekedFromUser() {
    this.nextSeekedFromUser_ = true;
  }
  stopTracking() {
    this.isTracking() && (this.reset_(), this.trigger("liveedgechange"));
  }
  seekableEnd() {
    const e10 = this.player_.seekable(), t3 = [];
    let i5 = e10 ? e10.length : 0;
    for (; i5--; ) t3.push(e10.end(i5));
    return t3.length ? t3.sort()[t3.length - 1] : 1 / 0;
  }
  seekableStart() {
    const e10 = this.player_.seekable(), t3 = [];
    let i5 = e10 ? e10.length : 0;
    for (; i5--; ) t3.push(e10.start(i5));
    return t3.length ? t3.sort()[0] : 0;
  }
  liveWindow() {
    const e10 = this.liveCurrentTime();
    return e10 === 1 / 0 ? 0 : e10 - this.seekableStart();
  }
  isLive() {
    return this.isTracking();
  }
  atLiveEdge() {
    return !this.behindLiveEdge();
  }
  liveCurrentTime() {
    return this.pastSeekEnd() + this.seekableEnd();
  }
  pastSeekEnd() {
    const e10 = this.seekableEnd();
    return -1 !== this.lastSeekEnd_ && e10 !== this.lastSeekEnd_ && (this.pastSeekEnd_ = 0), this.lastSeekEnd_ = e10, this.pastSeekEnd_;
  }
  behindLiveEdge() {
    return this.behindLiveEdge_;
  }
  isTracking() {
    return "number" == typeof this.trackingInterval_;
  }
  seekToLiveEdge() {
    this.seekedBehindLive_ = false, this.atLiveEdge() || (this.nextSeekedFromUser_ = false, this.player_.currentTime(this.liveCurrentTime()));
  }
  dispose() {
    this.stopTracking(), super.dispose();
  }
};
Ca.registerComponent("LiveTracker", Ph);
var Lh = class extends Ca {
  constructor(e10, t3) {
    super(e10, t3), this.on("statechanged", (e11) => this.updateDom_()), this.updateDom_();
  }
  createEl() {
    return this.els = { title: rr("div", { className: "vjs-title-bar-title", id: `vjs-title-bar-title-${Hr()}` }), description: rr("div", { className: "vjs-title-bar-description", id: `vjs-title-bar-description-${Hr()}` }) }, rr("div", { className: "vjs-title-bar" }, {}, kn(this.els));
  }
  updateDom_() {
    const e10 = this.player_.tech_, t3 = e10 && e10.el_, i5 = { title: "aria-labelledby", description: "aria-describedby" };
    ["title", "description"].forEach((e11) => {
      const s5 = this.state[e11], n4 = this.els[e11], r5 = i5[e11];
      Er(n4), s5 && ar(n4, s5), t3 && (t3.removeAttribute(r5), s5 && t3.setAttribute(r5, n4.id));
    }), this.state.title || this.state.description ? this.show() : this.hide();
  }
  update(e10) {
    this.setState(e10);
  }
  dispose() {
    const e10 = this.player_.tech_, t3 = e10 && e10.el_;
    t3 && (t3.removeAttribute("aria-labelledby"), t3.removeAttribute("aria-describedby")), super.dispose(), this.els = null;
  }
};
Ca.registerComponent("TitleBar", Lh);
var Oh = { initialDisplay: 4e3, position: [], takeFocus: false };
var Nh = class extends nl {
  constructor(e10, t3) {
    super(e10, t3 = Cn(Oh, t3)), this.controlText(t3.controlText), this.hide(), this.on(this.player_, ["useractive", "userinactive"], (e11) => {
      this.removeClass("force-display");
    });
  }
  buildCSSClass() {
    return `vjs-transient-button focus-visible ${this.options_.position.map((e10) => `vjs-${e10}`).join(" ")}`;
  }
  createEl() {
    const e10 = rr("button", {}, { type: "button", class: this.buildCSSClass() }, rr("span"));
    return this.controlTextEl_ = e10.querySelector("span"), e10;
  }
  show() {
    super.show(), this.addClass("force-display"), this.options_.takeFocus && this.el().focus({ preventScroll: true }), this.forceDisplayTimeout = this.player_.setTimeout(() => {
      this.removeClass("force-display");
    }, this.options_.initialDisplay);
  }
  hide() {
    this.removeClass("force-display"), super.hide();
  }
  dispose() {
    this.player_.clearTimeout(this.forceDisplayTimeout), super.dispose();
  }
};
Ca.registerComponent("TransientButton", Nh);
var Rh = (e10) => {
  const t3 = e10.el();
  if (t3.hasAttribute("src")) return e10.triggerSourceset(t3.src), true;
  const i5 = e10.$$("source"), s5 = [];
  let n4 = "";
  if (!i5.length) return false;
  for (let r5 = 0; r5 < i5.length; r5++) {
    const e11 = i5[r5].src;
    e11 && -1 === s5.indexOf(e11) && s5.push(e11);
  }
  return !!s5.length && (1 === s5.length && (n4 = s5[0]), e10.triggerSourceset(n4), true);
};
var Mh = Object.defineProperty({}, "innerHTML", { get() {
  return this.cloneNode(true).innerHTML;
}, set(e10) {
  const t3 = ae.createElement(this.nodeName.toLowerCase());
  t3.innerHTML = e10;
  const i5 = ae.createDocumentFragment();
  for (; t3.childNodes.length; ) i5.appendChild(t3.childNodes[0]);
  return this.innerText = "", b3.Element.prototype.appendChild.call(this, i5), this.innerHTML;
} });
var Uh = (e10, t3) => {
  let i5 = {};
  for (let s5 = 0; s5 < e10.length && (i5 = Object.getOwnPropertyDescriptor(e10[s5], t3), !(i5 && i5.set && i5.get)); s5++) ;
  return i5.enumerable = true, i5.configurable = true, i5;
};
var Bh = (e10) => Uh([e10.el(), b3.HTMLMediaElement.prototype, b3.Element.prototype, Mh], "innerHTML");
var Fh = function(e10) {
  const t3 = e10.el();
  if (t3.resetSourceWatch_) return;
  const i5 = {}, s5 = Bh(e10), n4 = (i6) => (...s6) => {
    const n5 = i6.apply(t3, s6);
    return Rh(e10), n5;
  };
  ["append", "appendChild", "insertAdjacentHTML"].forEach((e11) => {
    t3[e11] && (i5[e11] = t3[e11], t3[e11] = n4(i5[e11]));
  }), Object.defineProperty(t3, "innerHTML", Cn(s5, { set: n4(s5.set) })), t3.resetSourceWatch_ = () => {
    t3.resetSourceWatch_ = null, Object.keys(i5).forEach((e11) => {
      t3[e11] = i5[e11];
    }), Object.defineProperty(t3, "innerHTML", s5);
  }, e10.one("sourceset", t3.resetSourceWatch_);
};
var qh = Object.defineProperty({}, "src", { get() {
  return this.hasAttribute("src") ? no(b3.Element.prototype.getAttribute.call(this, "src")) : "";
}, set(e10) {
  return b3.Element.prototype.setAttribute.call(this, "src", e10), e10;
} });
var jh = (e10) => Uh([e10.el(), b3.HTMLMediaElement.prototype, qh], "src");
var $h = function(e10) {
  if (!e10.featuresSourceset) return;
  const t3 = e10.el();
  if (t3.resetSourceset_) return;
  const i5 = jh(e10), s5 = t3.setAttribute, n4 = t3.load;
  Object.defineProperty(t3, "src", Cn(i5, { set: (s6) => {
    const n5 = i5.set.call(t3, s6);
    return e10.triggerSourceset(t3.src), n5;
  } })), t3.setAttribute = (i6, n5) => {
    const r5 = s5.call(t3, i6, n5);
    return /src/i.test(i6) && e10.triggerSourceset(t3.src), r5;
  }, t3.load = () => {
    const i6 = n4.call(t3);
    return Rh(e10) || (e10.triggerSourceset(""), Fh(e10)), i6;
  }, t3.currentSrc ? e10.triggerSourceset(t3.currentSrc) : Rh(e10) || Fh(e10), t3.resetSourceset_ = () => {
    t3.resetSourceset_ = null, t3.load = n4, t3.setAttribute = s5, Object.defineProperty(t3, "src", i5), t3.resetSourceWatch_ && t3.resetSourceWatch_();
  };
};
var Hh = class _Hh extends vo {
  constructor(e10, t3) {
    super(e10, t3);
    const i5 = e10.source;
    let s5 = false;
    if (this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && "VIDEO" === this.el_.tagName, i5 && (this.el_.currentSrc !== i5.src || e10.tag && 3 === e10.tag.initNetworkState_) ? this.setSource(i5) : this.handleLateInit_(this.el_), e10.enableSourceset && this.setupSourcesetHandling_(), this.isScrubbing_ = false, this.el_.hasChildNodes()) {
      const e11 = this.el_.childNodes;
      let t4 = e11.length;
      const i6 = [];
      for (; t4--; ) {
        const n4 = e11[t4];
        "track" === n4.nodeName.toLowerCase() && (this.featuresNativeTextTracks ? (this.remoteTextTrackEls().addTrackElement_(n4), this.remoteTextTracks().addTrack(n4.track), this.textTracks().addTrack(n4.track), s5 || this.el_.hasAttribute("crossorigin") || !ao(n4.src) || (s5 = true)) : i6.push(n4));
      }
      for (let s6 = 0; s6 < i6.length; s6++) this.el_.removeChild(i6[s6]);
    }
    this.proxyNativeTracks_(), this.featuresNativeTextTracks && s5 && yn.warn("Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\nThis may prevent text tracks from loading."), this.restoreMetadataTracksInIOSNativePlayer_(), (Xn || Vn) && true === e10.nativeControlsForTouch && this.setControls(true), this.proxyWebkitFullscreen_(), this.triggerReady();
  }
  dispose() {
    this.el_ && this.el_.resetSourceset_ && this.el_.resetSourceset_(), _Hh.disposeMediaElement(this.el_), this.options_ = null, super.dispose();
  }
  setupSourcesetHandling_() {
    $h(this);
  }
  restoreMetadataTracksInIOSNativePlayer_() {
    const e10 = this.textTracks();
    let t3;
    const i5 = () => {
      t3 = [];
      for (let i6 = 0; i6 < e10.length; i6++) {
        const s6 = e10[i6];
        "metadata" === s6.kind && t3.push({ track: s6, storedMode: s6.mode });
      }
    };
    i5(), e10.addEventListener("change", i5), this.on("dispose", () => e10.removeEventListener("change", i5));
    const s5 = () => {
      for (let e11 = 0; e11 < t3.length; e11++) {
        const i6 = t3[e11];
        "disabled" === i6.track.mode && i6.track.mode !== i6.storedMode && (i6.track.mode = i6.storedMode);
      }
      e10.removeEventListener("change", s5);
    };
    this.on("webkitbeginfullscreen", () => {
      e10.removeEventListener("change", i5), e10.removeEventListener("change", s5), e10.addEventListener("change", s5);
    }), this.on("webkitendfullscreen", () => {
      e10.removeEventListener("change", i5), e10.addEventListener("change", i5), e10.removeEventListener("change", s5);
    });
  }
  overrideNative_(e10, t3) {
    if (t3 !== this[`featuresNative${e10}Tracks`]) return;
    const i5 = e10.toLowerCase();
    this[`${i5}TracksListeners_`] && Object.keys(this[`${i5}TracksListeners_`]).forEach((e11) => {
      this.el()[`${i5}Tracks`].removeEventListener(e11, this[`${i5}TracksListeners_`][e11]);
    }), this[`featuresNative${e10}Tracks`] = !t3, this[`${i5}TracksListeners_`] = null, this.proxyNativeTracksForType_(i5);
  }
  overrideNativeAudioTracks(e10) {
    this.overrideNative_("Audio", e10);
  }
  overrideNativeVideoTracks(e10) {
    this.overrideNative_("Video", e10);
  }
  proxyNativeTracksForType_(e10) {
    const t3 = go[e10], i5 = this.el()[t3.getterName], s5 = this[t3.getterName]();
    if (!this[`featuresNative${t3.capitalName}Tracks`] || !i5 || !i5.addEventListener) return;
    const n4 = { change: (t4) => {
      const i6 = { type: "change", target: s5, currentTarget: s5, srcElement: s5 };
      s5.trigger(i6), "text" === e10 && this[fo.remoteText.getterName]().trigger(i6);
    }, addtrack(e11) {
      s5.addTrack(e11.track);
    }, removetrack(e11) {
      s5.removeTrack(e11.track);
    } }, r5 = function() {
      const e11 = [];
      for (let t4 = 0; t4 < s5.length; t4++) {
        let n5 = false;
        for (let e12 = 0; e12 < i5.length; e12++) if (i5[e12] === s5[t4]) {
          n5 = true;
          break;
        }
        n5 || e11.push(s5[t4]);
      }
      for (; e11.length; ) s5.removeTrack(e11.shift());
    };
    this[t3.getterName + "Listeners_"] = n4, Object.keys(n4).forEach((e11) => {
      const t4 = n4[e11];
      i5.addEventListener(e11, t4), this.on("dispose", (s6) => i5.removeEventListener(e11, t4));
    }), this.on("loadstart", r5), this.on("dispose", (e11) => this.off("loadstart", r5));
  }
  proxyNativeTracks_() {
    go.names.forEach((e10) => {
      this.proxyNativeTracksForType_(e10);
    });
  }
  createEl() {
    let e10 = this.options_.tag;
    if (!e10 || !this.options_.playerElIngest && !this.movingMediaElementInDOM) {
      if (e10) {
        const t4 = e10.cloneNode(true);
        e10.parentNode && e10.parentNode.insertBefore(t4, e10), _Hh.disposeMediaElement(e10), e10 = t4;
      } else {
        e10 = ae.createElement("video");
        const t4 = Cn({}, this.options_.tag && pr(this.options_.tag));
        Xn && true === this.options_.nativeControlsForTouch || delete t4.controls, cr(e10, Object.assign(t4, { id: this.options_.techId, class: "vjs-tech" }));
      }
      e10.playerId = this.options_.playerId;
    }
    void 0 !== this.options_.preload && gr(e10, "preload", this.options_.preload), void 0 !== this.options_.disablePictureInPicture && (e10.disablePictureInPicture = this.options_.disablePictureInPicture);
    const t3 = ["loop", "muted", "playsinline", "autoplay"];
    for (let i5 = 0; i5 < t3.length; i5++) {
      const s5 = t3[i5], n4 = this.options_[s5];
      void 0 !== n4 && (n4 ? gr(e10, s5, s5) : fr(e10, s5), e10[s5] = n4);
    }
    return e10;
  }
  handleLateInit_(e10) {
    if (0 === e10.networkState || 3 === e10.networkState) return;
    if (0 === e10.readyState) {
      let e11 = false;
      const t4 = function() {
        e11 = true;
      };
      this.on("loadstart", t4);
      const i5 = function() {
        e11 || this.trigger("loadstart");
      };
      return this.on("loadedmetadata", i5), void this.ready(function() {
        this.off("loadstart", t4), this.off("loadedmetadata", i5), e11 || this.trigger("loadstart");
      });
    }
    const t3 = ["loadstart"];
    t3.push("loadedmetadata"), e10.readyState >= 2 && t3.push("loadeddata"), e10.readyState >= 3 && t3.push("canplay"), e10.readyState >= 4 && t3.push("canplaythrough"), this.ready(function() {
      t3.forEach(function(e11) {
        this.trigger(e11);
      }, this);
    });
  }
  setScrubbing(e10) {
    this.isScrubbing_ = e10;
  }
  scrubbing() {
    return this.isScrubbing_;
  }
  setCurrentTime(e10) {
    try {
      this.isScrubbing_ && this.el_.fastSeek && Qn ? this.el_.fastSeek(e10) : this.el_.currentTime = e10;
    } catch (t3) {
      yn(t3, "Video is not ready. (Video.js)");
    }
  }
  duration() {
    if (this.el_.duration === 1 / 0 && Ln && Mn && 0 === this.el_.currentTime) {
      const e10 = () => {
        this.el_.currentTime > 0 && (this.el_.duration === 1 / 0 && this.trigger("durationchange"), this.off("timeupdate", e10));
      };
      return this.on("timeupdate", e10), NaN;
    }
    return this.el_.duration || NaN;
  }
  width() {
    return this.el_.offsetWidth;
  }
  height() {
    return this.el_.offsetHeight;
  }
  proxyWebkitFullscreen_() {
    if (!("webkitDisplayingFullscreen" in this.el_)) return;
    const e10 = function() {
      this.trigger("fullscreenchange", { isFullscreen: false }), this.el_.controls && !this.options_.nativeControlsForTouch && this.controls() && (this.el_.controls = false);
    }, t3 = function() {
      "webkitPresentationMode" in this.el_ && "picture-in-picture" !== this.el_.webkitPresentationMode && (this.one("webkitendfullscreen", e10), this.trigger("fullscreenchange", { isFullscreen: true, nativeIOSFullscreen: true }));
    };
    this.on("webkitbeginfullscreen", t3), this.on("dispose", () => {
      this.off("webkitbeginfullscreen", t3), this.off("webkitendfullscreen", e10);
    });
  }
  supportsFullScreen() {
    return "function" == typeof this.el_.webkitEnterFullScreen;
  }
  enterFullScreen() {
    const e10 = this.el_;
    if (e10.paused && e10.networkState <= e10.HAVE_METADATA) Fa(this.el_.play()), this.setTimeout(function() {
      e10.pause();
      try {
        e10.webkitEnterFullScreen();
      } catch (t3) {
        this.trigger("fullscreenerror", t3);
      }
    }, 0);
    else try {
      e10.webkitEnterFullScreen();
    } catch (t3) {
      this.trigger("fullscreenerror", t3);
    }
  }
  exitFullScreen() {
    this.el_.webkitDisplayingFullscreen ? this.el_.webkitExitFullScreen() : this.trigger("fullscreenerror", new Error("The video is not fullscreen"));
  }
  requestPictureInPicture() {
    return this.el_.requestPictureInPicture();
  }
  requestVideoFrameCallback(e10) {
    return this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.requestVideoFrameCallback(e10) : super.requestVideoFrameCallback(e10);
  }
  cancelVideoFrameCallback(e10) {
    this.featuresVideoFrameCallback && !this.el_.webkitKeys ? this.el_.cancelVideoFrameCallback(e10) : super.cancelVideoFrameCallback(e10);
  }
  src(e10) {
    if (void 0 === e10) return this.el_.src;
    this.setSrc(e10);
  }
  addSourceElement(e10, t3) {
    if (!e10) return yn.error("Invalid source URL."), false;
    const i5 = { src: e10 };
    t3 && (i5.type = t3);
    const s5 = rr("source", {}, i5);
    return this.el_.appendChild(s5), true;
  }
  removeSourceElement(e10) {
    if (!e10) return yn.error("Source URL is required to remove the source element."), false;
    const t3 = this.el_.querySelectorAll("source");
    for (const i5 of t3) if (i5.src === e10) return this.el_.removeChild(i5), true;
    return yn.warn(`No matching source element found with src: ${e10}`), false;
  }
  reset() {
    _Hh.resetMediaElement(this.el_);
  }
  currentSrc() {
    return this.currentSource_ ? this.currentSource_.src : this.el_.currentSrc;
  }
  setControls(e10) {
    this.el_.controls = !!e10;
  }
  addTextTrack(e10, t3, i5) {
    return this.featuresNativeTextTracks ? this.el_.addTextTrack(e10, t3, i5) : super.addTextTrack(e10, t3, i5);
  }
  createRemoteTextTrack(e10) {
    if (!this.featuresNativeTextTracks) return super.createRemoteTextTrack(e10);
    const t3 = ae.createElement("track");
    return e10.kind && (t3.kind = e10.kind), e10.label && (t3.label = e10.label), (e10.language || e10.srclang) && (t3.srclang = e10.language || e10.srclang), e10.default && (t3.default = e10.default), e10.id && (t3.id = e10.id), e10.src && (t3.src = e10.src), t3;
  }
  addRemoteTextTrack(e10, t3) {
    const i5 = super.addRemoteTextTrack(e10, t3);
    return this.featuresNativeTextTracks && this.el().appendChild(i5), i5;
  }
  removeRemoteTextTrack(e10) {
    if (super.removeRemoteTextTrack(e10), this.featuresNativeTextTracks) {
      const t3 = this.$$("track");
      let i5 = t3.length;
      for (; i5--; ) e10 !== t3[i5] && e10 !== t3[i5].track || this.el().removeChild(t3[i5]);
    }
  }
  getVideoPlaybackQuality() {
    if ("function" == typeof this.el().getVideoPlaybackQuality) return this.el().getVideoPlaybackQuality();
    const e10 = {};
    return void 0 !== this.el().webkitDroppedFrameCount && void 0 !== this.el().webkitDecodedFrameCount && (e10.droppedVideoFrames = this.el().webkitDroppedFrameCount, e10.totalVideoFrames = this.el().webkitDecodedFrameCount), b3.performance && (e10.creationTime = b3.performance.now()), e10;
  }
};
In(Hh, "TEST_VID", function() {
  if (!tr()) return;
  const e10 = ae.createElement("video"), t3 = ae.createElement("track");
  return t3.kind = "captions", t3.srclang = "en", t3.label = "English", e10.appendChild(t3), e10;
}), Hh.isSupported = function() {
  try {
    Hh.TEST_VID.volume = 0.5;
  } catch (e10) {
    return false;
  }
  return !(!Hh.TEST_VID || !Hh.TEST_VID.canPlayType);
}, Hh.canPlayType = function(e10) {
  return Hh.TEST_VID.canPlayType(e10);
}, Hh.canPlaySource = function(e10, t3) {
  return Hh.canPlayType(e10.type);
}, Hh.canControlVolume = function() {
  try {
    const e10 = Hh.TEST_VID.volume;
    Hh.TEST_VID.volume = e10 / 2 + 0.1;
    const t3 = e10 !== Hh.TEST_VID.volume;
    return t3 && Yn ? (b3.setTimeout(() => {
      Hh && Hh.prototype && (Hh.prototype.featuresVolumeControl = e10 !== Hh.TEST_VID.volume);
    }), false) : t3;
  } catch (e10) {
    return false;
  }
}, Hh.canMuteVolume = function() {
  try {
    const e10 = Hh.TEST_VID.muted;
    return Hh.TEST_VID.muted = !e10, Hh.TEST_VID.muted ? gr(Hh.TEST_VID, "muted", "muted") : fr(Hh.TEST_VID, "muted", "muted"), e10 !== Hh.TEST_VID.muted;
  } catch (e10) {
    return false;
  }
}, Hh.canControlPlaybackRate = function() {
  if (Ln && Mn && Bn < 58) return false;
  try {
    const e10 = Hh.TEST_VID.playbackRate;
    return Hh.TEST_VID.playbackRate = e10 / 2 + 0.1, e10 !== Hh.TEST_VID.playbackRate;
  } catch (e10) {
    return false;
  }
}, Hh.canOverrideAttributes = function() {
  try {
    const e10 = () => {
    };
    Object.defineProperty(ae.createElement("video"), "src", { get: e10, set: e10 }), Object.defineProperty(ae.createElement("audio"), "src", { get: e10, set: e10 }), Object.defineProperty(ae.createElement("video"), "innerHTML", { get: e10, set: e10 }), Object.defineProperty(ae.createElement("audio"), "innerHTML", { get: e10, set: e10 });
  } catch (e10) {
    return false;
  }
  return true;
}, Hh.supportsNativeTextTracks = function() {
  return Qn || Yn && Mn;
}, Hh.supportsNativeVideoTracks = function() {
  return !(!Hh.TEST_VID || !Hh.TEST_VID.videoTracks);
}, Hh.supportsNativeAudioTracks = function() {
  return !(!Hh.TEST_VID || !Hh.TEST_VID.audioTracks);
}, Hh.Events = ["loadstart", "suspend", "abort", "error", "emptied", "stalled", "loadedmetadata", "loadeddata", "canplay", "canplaythrough", "playing", "waiting", "seeking", "seeked", "ended", "durationchange", "timeupdate", "progress", "play", "pause", "ratechange", "resize", "volumechange"], [["featuresMuteControl", "canMuteVolume"], ["featuresPlaybackRate", "canControlPlaybackRate"], ["featuresSourceset", "canOverrideAttributes"], ["featuresNativeTextTracks", "supportsNativeTextTracks"], ["featuresNativeVideoTracks", "supportsNativeVideoTracks"], ["featuresNativeAudioTracks", "supportsNativeAudioTracks"]].forEach(function([e10, t3]) {
  In(Hh.prototype, e10, () => Hh[t3](), true);
}), Hh.prototype.featuresVolumeControl = Hh.canControlVolume(), Hh.prototype.movingMediaElementInDOM = !Yn, Hh.prototype.featuresFullscreenResize = true, Hh.prototype.featuresProgressEvents = true, Hh.prototype.featuresTimeupdateEvents = true, Hh.prototype.featuresVideoFrameCallback = !(!Hh.TEST_VID || !Hh.TEST_VID.requestVideoFrameCallback), Hh.disposeMediaElement = function(e10) {
  if (e10) {
    for (e10.parentNode && e10.parentNode.removeChild(e10); e10.hasChildNodes(); ) e10.removeChild(e10.firstChild);
    e10.removeAttribute("src"), "function" == typeof e10.load && function() {
      try {
        e10.load();
      } catch (t3) {
      }
    }();
  }
}, Hh.resetMediaElement = function(e10) {
  if (!e10) return;
  const t3 = e10.querySelectorAll("source");
  let i5 = t3.length;
  for (; i5--; ) e10.removeChild(t3[i5]);
  e10.removeAttribute("src"), "function" == typeof e10.load && function() {
    try {
      e10.load();
    } catch (t4) {
    }
  }();
}, ["muted", "defaultMuted", "autoplay", "controls", "loop", "playsinline"].forEach(function(e10) {
  Hh.prototype[e10] = function() {
    return this.el_[e10] || this.el_.hasAttribute(e10);
  };
}), ["muted", "defaultMuted", "autoplay", "loop", "playsinline"].forEach(function(e10) {
  Hh.prototype["set" + Sa(e10)] = function(t3) {
    this.el_[e10] = t3, t3 ? this.el_.setAttribute(e10, e10) : this.el_.removeAttribute(e10);
  };
}), ["paused", "currentTime", "buffered", "volume", "poster", "preload", "error", "seeking", "seekable", "ended", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "played", "networkState", "readyState", "videoWidth", "videoHeight", "crossOrigin"].forEach(function(e10) {
  Hh.prototype[e10] = function() {
    return this.el_[e10];
  };
}), ["volume", "src", "poster", "preload", "playbackRate", "defaultPlaybackRate", "disablePictureInPicture", "crossOrigin"].forEach(function(e10) {
  Hh.prototype["set" + Sa(e10)] = function(t3) {
    this.el_[e10] = t3;
  };
}), ["pause", "load", "play"].forEach(function(e10) {
  Hh.prototype[e10] = function() {
    return this.el_[e10]();
  };
}), vo.withSourceHandlers(Hh), Hh.nativeSourceHandler = {}, Hh.nativeSourceHandler.canPlayType = function(e10) {
  try {
    return Hh.TEST_VID.canPlayType(e10);
  } catch (t3) {
    return "";
  }
}, Hh.nativeSourceHandler.canHandleSource = function(e10, t3) {
  if (e10.type) return Hh.nativeSourceHandler.canPlayType(e10.type);
  if (e10.src) {
    const t4 = ro(e10.src);
    return Hh.nativeSourceHandler.canPlayType(`video/${t4}`);
  }
  return "";
}, Hh.nativeSourceHandler.handleSource = function(e10, t3, i5) {
  t3.setSrc(e10.src);
}, Hh.nativeSourceHandler.dispose = function() {
}, Hh.registerSourceHandler(Hh.nativeSourceHandler), vo.registerTech("Html5", Hh);
var Vh = ["progress", "abort", "suspend", "emptied", "stalled", "loadedmetadata", "loadeddata", "timeupdate", "resize", "volumechange", "texttrackchange"];
var zh = { canplay: "CanPlay", canplaythrough: "CanPlayThrough", playing: "Playing", seeked: "Seeked" };
var Wh = ["tiny", "xsmall", "small", "medium", "large", "xlarge", "huge"];
var Gh = {};
Wh.forEach((e10) => {
  const t3 = "x" === e10.charAt(0) ? `x-${e10.substring(1)}` : e10;
  Gh[e10] = `vjs-layout-${t3}`;
});
var Xh = { tiny: 210, xsmall: 320, small: 425, medium: 768, large: 1440, xlarge: 2560, huge: 1 / 0 };
var Kh = class _Kh extends Ca {
  constructor(e10, t3, i5) {
    if (e10.id = e10.id || t3.id || `vjs_video_${Hr()}`, (t3 = Object.assign(_Kh.getTagSettings(e10), t3)).initChildren = false, t3.createEl = false, t3.evented = false, t3.reportTouchActivity = false, !t3.language) {
      const i6 = e10.closest("[lang]");
      i6 && (t3.language = i6.getAttribute("lang"));
    }
    if (super(null, t3, i5), this.boundDocumentFullscreenChange_ = (e11) => this.documentFullscreenChange_(e11), this.boundFullWindowOnEscKey_ = (e11) => this.fullWindowOnEscKey(e11), this.boundUpdateStyleEl_ = (e11) => this.updateStyleEl_(e11), this.boundApplyInitTime_ = (e11) => this.applyInitTime_(e11), this.boundUpdateCurrentBreakpoint_ = (e11) => this.updateCurrentBreakpoint_(e11), this.boundHandleTechClick_ = (e11) => this.handleTechClick_(e11), this.boundHandleTechDoubleClick_ = (e11) => this.handleTechDoubleClick_(e11), this.boundHandleTechTouchStart_ = (e11) => this.handleTechTouchStart_(e11), this.boundHandleTechTouchMove_ = (e11) => this.handleTechTouchMove_(e11), this.boundHandleTechTouchEnd_ = (e11) => this.handleTechTouchEnd_(e11), this.boundHandleTechTap_ = (e11) => this.handleTechTap_(e11), this.boundUpdatePlayerHeightOnAudioOnlyMode_ = (e11) => this.updatePlayerHeightOnAudioOnlyMode_(e11), this.isFullscreen_ = false, this.log = _n(this.id_), this.fsApi_ = un, this.isPosterFromTech_ = false, this.queuedCallbacks_ = [], this.isReady_ = false, this.hasStarted_ = false, this.userActive_ = false, this.debugEnabled_ = false, this.audioOnlyMode_ = false, this.audioPosterMode_ = false, this.audioOnlyCache_ = { controlBarHeight: null, playerHeight: null, hiddenChildren: [] }, !this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) throw new Error("No techOrder specified. Did you overwrite videojs.options instead of just changing the properties you want to override?");
    if (this.tag = e10, this.tagAttributes = e10 && pr(e10), this.language(this.options_.language), t3.languages) {
      const e11 = {};
      Object.getOwnPropertyNames(t3.languages).forEach(function(i6) {
        e11[i6.toLowerCase()] = t3.languages[i6];
      }), this.languages_ = e11;
    } else this.languages_ = _Kh.prototype.options_.languages;
    this.resetCache_(), this.poster_ = t3.poster || "", this.controls_ = !!t3.controls, e10.controls = false, e10.removeAttribute("controls"), this.changingSrc_ = false, this.playCallbacks_ = [], this.playTerminatedQueue_ = [], e10.hasAttribute("autoplay") ? this.autoplay(true) : this.autoplay(this.options_.autoplay), t3.plugins && Object.keys(t3.plugins).forEach((e11) => {
      if ("function" != typeof this[e11]) throw new Error(`plugin "${e11}" does not exist`);
    }), this.scrubbing_ = false, this.el_ = this.createEl(), _a(this, { eventBusKey: "el_" }), this.fsApi_.requestFullscreen && (Kr(ae, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_), this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_)), this.fluid_ && this.on(["playerreset", "resize"], this.boundUpdateStyleEl_);
    const s5 = Cn(this.options_);
    if (t3.plugins && Object.keys(t3.plugins).forEach((e11) => {
      this[e11](t3.plugins[e11]);
    }), t3.debug && this.debug(true), this.options_.playerOptions = s5, this.middleware_ = [], this.playbackRates(t3.playbackRates), t3.experimentalSvgIcons) {
      const e11 = new b3.DOMParser().parseFromString($o, "image/svg+xml");
      if (e11.querySelector("parsererror")) yn.warn("Failed to load SVG Icons. Falling back to Font Icons."), this.options_.experimentalSvgIcons = null;
      else {
        const t4 = e11.documentElement;
        t4.style.display = "none", this.el_.appendChild(t4), this.addClass("vjs-svg-icons-enabled");
      }
    }
    this.initChildren(), this.isAudio("audio" === e10.nodeName.toLowerCase()), this.controls() ? this.addClass("vjs-controls-enabled") : this.addClass("vjs-controls-disabled"), this.el_.setAttribute("role", "region"), this.isAudio() ? this.el_.setAttribute("aria-label", this.localize("Audio Player")) : this.el_.setAttribute("aria-label", this.localize("Video Player")), this.isAudio() && this.addClass("vjs-audio"), t3.spatialNavigation && t3.spatialNavigation.enabled && (this.spatialNavigation = new Wo(this), this.addClass("vjs-spatial-navigation-enabled")), Xn && this.addClass("vjs-touch-enabled"), Yn || this.addClass("vjs-workinghover"), _Kh.players[this.id_] = this;
    const n4 = nn.split(".")[0];
    this.addClass(`vjs-v${n4}`), this.userActive(true), this.reportUserActivity(), this.one("play", (e11) => this.listenForUserActivity_(e11)), this.on("keydown", (e11) => this.handleKeyDown(e11)), this.on("languagechange", (e11) => this.handleLanguagechange(e11)), this.breakpoints(this.options_.breakpoints), this.responsive(this.options_.responsive), this.on("ready", () => {
      this.audioPosterMode(this.options_.audioPosterMode), this.audioOnlyMode(this.options_.audioOnlyMode);
    });
  }
  dispose() {
    this.trigger("dispose"), this.off("dispose"), Yr(ae, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_), Yr(ae, "keydown", this.boundFullWindowOnEscKey_), this.styleEl_ && this.styleEl_.parentNode && (this.styleEl_.parentNode.removeChild(this.styleEl_), this.styleEl_ = null), _Kh.players[this.id_] = null, this.tag && this.tag.player && (this.tag.player = null), this.el_ && this.el_.player && (this.el_.player = null), this.tech_ && (this.tech_.dispose(), this.isPosterFromTech_ = false, this.poster_ = ""), this.playerElIngest_ && (this.playerElIngest_ = null), this.tag && (this.tag = null), No(this), yo.names.forEach((e10) => {
      const t3 = this[yo[e10].getterName]();
      t3 && t3.off && t3.off();
    }), super.dispose({ restoreEl: this.options_.restoreEl });
  }
  createEl() {
    let e10, t3 = this.tag, i5 = this.playerElIngest_ = t3.parentNode && t3.parentNode.hasAttribute && t3.parentNode.hasAttribute("data-vjs-player");
    const s5 = "video-js" === this.tag.tagName.toLowerCase();
    i5 ? e10 = this.el_ = t3.parentNode : s5 || (e10 = this.el_ = super.createEl("div"));
    const n4 = pr(t3);
    if (s5) {
      for (e10 = this.el_ = t3, t3 = this.tag = ae.createElement("video"); e10.children.length; ) t3.appendChild(e10.firstChild);
      lr(e10, "video-js") || hr(e10, "video-js"), e10.appendChild(t3), i5 = this.playerElIngest_ = e10, Object.keys(e10).forEach((i6) => {
        try {
          t3[i6] = e10[i6];
        } catch (s6) {
        }
      });
    }
    t3.setAttribute("tabindex", "-1"), n4.tabindex = "-1", Mn && $n && (t3.setAttribute("role", "application"), n4.role = "application"), t3.removeAttribute("width"), t3.removeAttribute("height"), "width" in n4 && delete n4.width, "height" in n4 && delete n4.height, Object.getOwnPropertyNames(n4).forEach(function(i6) {
      s5 && "class" === i6 || e10.setAttribute(i6, n4[i6]), s5 && t3.setAttribute(i6, n4[i6]);
    }), t3.playerId = t3.id, t3.id += "_html5_api", t3.className = "vjs-tech", t3.player = e10.player = this, this.addClass("vjs-paused");
    const r5 = ["IS_SMART_TV", "IS_TIZEN", "IS_WEBOS", "IS_ANDROID", "IS_IPAD", "IS_IPHONE", "IS_CHROMECAST_RECEIVER"].filter((e11) => Jn[e11]).map((e11) => "vjs-device-" + e11.substring(3).toLowerCase().replace(/\_/g, "-"));
    if (this.addClass(...r5), true !== b3.VIDEOJS_NO_DYNAMIC_STYLE) {
      this.styleEl_ = Br("vjs-styles-dimensions");
      const e11 = xr(".vjs-styles-defaults"), t4 = xr("head");
      t4.insertBefore(this.styleEl_, e11 ? e11.nextSibling : t4.firstChild);
    }
    this.fill_ = false, this.fluid_ = false, this.width(this.options_.width), this.height(this.options_.height), this.fill(this.options_.fill), this.fluid(this.options_.fluid), this.aspectRatio(this.options_.aspectRatio), this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);
    const a9 = t3.getElementsByTagName("a");
    for (let o4 = 0; o4 < a9.length; o4++) {
      const e11 = a9.item(o4);
      hr(e11, "vjs-hidden"), e11.setAttribute("hidden", "hidden");
    }
    return t3.initNetworkState_ = t3.networkState, t3.parentNode && !i5 && t3.parentNode.insertBefore(e10, t3), or(t3, e10), this.children_.unshift(t3), this.el_.setAttribute("lang", this.language_), this.el_.setAttribute("translate", "no"), this.el_ = e10, e10;
  }
  crossOrigin(e10) {
    if (void 0 === e10) return this.techGet_("crossOrigin");
    null === e10 || "anonymous" === e10 || "use-credentials" === e10 ? (this.techCall_("setCrossOrigin", e10), this.posterImage && this.posterImage.crossOrigin(e10)) : yn.warn(`crossOrigin must be null,  "anonymous" or "use-credentials", given "${e10}"`);
  }
  width(e10) {
    return this.dimension("width", e10);
  }
  height(e10) {
    return this.dimension("height", e10);
  }
  dimension(e10, t3) {
    const i5 = e10 + "_";
    if (void 0 === t3) return this[i5] || 0;
    if ("" === t3 || "auto" === t3) return this[i5] = void 0, void this.updateStyleEl_();
    const s5 = parseFloat(t3);
    isNaN(s5) ? yn.error(`Improper value "${t3}" supplied for for ${e10}`) : (this[i5] = s5, this.updateStyleEl_());
  }
  fluid(e10) {
    if (void 0 === e10) return !!this.fluid_;
    this.fluid_ = !!e10, ha(this) && this.off(["playerreset", "resize"], this.boundUpdateStyleEl_), e10 ? (this.addClass("vjs-fluid"), this.fill(false), ua(this, () => {
      this.on(["playerreset", "resize"], this.boundUpdateStyleEl_);
    })) : this.removeClass("vjs-fluid"), this.updateStyleEl_();
  }
  fill(e10) {
    if (void 0 === e10) return !!this.fill_;
    this.fill_ = !!e10, e10 ? (this.addClass("vjs-fill"), this.fluid(false)) : this.removeClass("vjs-fill");
  }
  aspectRatio(e10) {
    if (void 0 === e10) return this.aspectRatio_;
    if (!/^\d+\:\d+$/.test(e10)) throw new Error("Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.");
    this.aspectRatio_ = e10, this.fluid(true), this.updateStyleEl_();
  }
  updateStyleEl_() {
    if (true === b3.VIDEOJS_NO_DYNAMIC_STYLE) {
      const e11 = "number" == typeof this.width_ ? this.width_ : this.options_.width, t4 = "number" == typeof this.height_ ? this.height_ : this.options_.height, i6 = this.tech_ && this.tech_.el();
      return void (i6 && (e11 >= 0 && (i6.width = e11), t4 >= 0 && (i6.height = t4)));
    }
    let e10, t3, i5, s5;
    i5 = void 0 !== this.aspectRatio_ && "auto" !== this.aspectRatio_ ? this.aspectRatio_ : this.videoWidth() > 0 ? this.videoWidth() + ":" + this.videoHeight() : "16:9";
    const n4 = i5.split(":"), r5 = n4[1] / n4[0];
    e10 = void 0 !== this.width_ ? this.width_ : void 0 !== this.height_ ? this.height_ / r5 : this.videoWidth() || 300, t3 = void 0 !== this.height_ ? this.height_ : e10 * r5, s5 = /^[^a-zA-Z]/.test(this.id()) ? "dimensions-" + this.id() : this.id() + "-dimensions", this.addClass(s5), Fr(this.styleEl_, `
      .${s5} {
        width: ${e10}px;
        height: ${t3}px;
      }

      .${s5}.vjs-fluid:not(.vjs-audio-only-mode) {
        padding-top: ${100 * r5}%;
      }
    `);
  }
  loadTech_(e10, t3) {
    this.tech_ && this.unloadTech_();
    const i5 = Sa(e10), s5 = e10.charAt(0).toLowerCase() + e10.slice(1);
    "Html5" !== i5 && this.tag && (vo.getTech("Html5").disposeMediaElement(this.tag), this.tag.player = null, this.tag = null), this.techName_ = i5, this.isReady_ = false;
    let n4 = this.autoplay();
    ("string" == typeof this.autoplay() || true === this.autoplay() && this.options_.normalizeAutoplay) && (n4 = false);
    const r5 = { source: t3, autoplay: n4, nativeControlsForTouch: this.options_.nativeControlsForTouch, playerId: this.id(), techId: `${this.id()}_${s5}_api`, playsinline: this.options_.playsinline, preload: this.options_.preload, loop: this.options_.loop, disablePictureInPicture: this.options_.disablePictureInPicture, muted: this.options_.muted, poster: this.poster(), language: this.language(), playerElIngest: this.playerElIngest_ || false, "vtt.js": this.options_["vtt.js"], canOverridePoster: !!this.options_.techCanOverridePoster, enableSourceset: this.options_.enableSourceset };
    yo.names.forEach((e11) => {
      const t4 = yo[e11];
      r5[t4.getterName] = this[t4.privateName];
    }), Object.assign(r5, this.options_[i5]), Object.assign(r5, this.options_[s5]), Object.assign(r5, this.options_[e10.toLowerCase()]), this.tag && (r5.tag = this.tag), t3 && t3.src === this.cache_.src && this.cache_.currentTime > 0 && (r5.startTime = this.cache_.currentTime);
    const a9 = vo.getTech(e10);
    if (!a9) throw new Error(`No Tech named '${i5}' exists! '${i5}' should be registered using videojs.registerTech()'`);
    this.tech_ = new a9(r5), this.tech_.ready(ia(this, this.handleTechReady_), true), ja.jsonToTextTracks(this.textTracksJson_ || [], this.tech_), Vh.forEach((e11) => {
      this.on(this.tech_, e11, (t4) => this[`handleTech${Sa(e11)}_`](t4));
    }), Object.keys(zh).forEach((e11) => {
      this.on(this.tech_, e11, (t4) => {
        0 === this.tech_.playbackRate() && this.tech_.seeking() ? this.queuedCallbacks_.push({ callback: this[`handleTech${zh[e11]}_`].bind(this), event: t4 }) : this[`handleTech${zh[e11]}_`](t4);
      });
    }), this.on(this.tech_, "loadstart", (e11) => this.handleTechLoadStart_(e11)), this.on(this.tech_, "sourceset", (e11) => this.handleTechSourceset_(e11)), this.on(this.tech_, "waiting", (e11) => this.handleTechWaiting_(e11)), this.on(this.tech_, "ended", (e11) => this.handleTechEnded_(e11)), this.on(this.tech_, "seeking", (e11) => this.handleTechSeeking_(e11)), this.on(this.tech_, "play", (e11) => this.handleTechPlay_(e11)), this.on(this.tech_, "pause", (e11) => this.handleTechPause_(e11)), this.on(this.tech_, "durationchange", (e11) => this.handleTechDurationChange_(e11)), this.on(this.tech_, "fullscreenchange", (e11, t4) => this.handleTechFullscreenChange_(e11, t4)), this.on(this.tech_, "fullscreenerror", (e11, t4) => this.handleTechFullscreenError_(e11, t4)), this.on(this.tech_, "enterpictureinpicture", (e11) => this.handleTechEnterPictureInPicture_(e11)), this.on(this.tech_, "leavepictureinpicture", (e11) => this.handleTechLeavePictureInPicture_(e11)), this.on(this.tech_, "error", (e11) => this.handleTechError_(e11)), this.on(this.tech_, "posterchange", (e11) => this.handleTechPosterChange_(e11)), this.on(this.tech_, "textdata", (e11) => this.handleTechTextData_(e11)), this.on(this.tech_, "ratechange", (e11) => this.handleTechRateChange_(e11)), this.on(this.tech_, "loadedmetadata", this.boundUpdateStyleEl_), this.usingNativeControls(this.techGet_("controls")), this.controls() && !this.usingNativeControls() && this.addTechControlsListeners_(), this.tech_.el().parentNode === this.el() || "Html5" === i5 && this.tag || or(this.tech_.el(), this.el()), this.tag && (this.tag.player = null, this.tag = null);
  }
  unloadTech_() {
    yo.names.forEach((e10) => {
      const t3 = yo[e10];
      this[t3.privateName] = this[t3.getterName]();
    }), this.textTracksJson_ = ja.textTracksToJson(this.tech_), this.isReady_ = false, this.tech_.dispose(), this.tech_ = false, this.isPosterFromTech_ && (this.poster_ = "", this.trigger("posterchange")), this.isPosterFromTech_ = false;
  }
  tech(e10) {
    return void 0 === e10 && yn.warn("Using the tech directly can be dangerous. I hope you know what you're doing.\nSee https://github.com/videojs/video.js/issues/2617 for more info.\n"), this.tech_;
  }
  version() {
    return { "video.js": nn };
  }
  addTechControlsListeners_() {
    this.removeTechControlsListeners_(), this.on(this.tech_, "click", this.boundHandleTechClick_), this.on(this.tech_, "dblclick", this.boundHandleTechDoubleClick_), this.on(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.on(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.on(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.on(this.tech_, "tap", this.boundHandleTechTap_);
  }
  removeTechControlsListeners_() {
    this.off(this.tech_, "tap", this.boundHandleTechTap_), this.off(this.tech_, "touchstart", this.boundHandleTechTouchStart_), this.off(this.tech_, "touchmove", this.boundHandleTechTouchMove_), this.off(this.tech_, "touchend", this.boundHandleTechTouchEnd_), this.off(this.tech_, "click", this.boundHandleTechClick_), this.off(this.tech_, "dblclick", this.boundHandleTechDoubleClick_);
  }
  handleTechReady_() {
    this.triggerReady(), this.cache_.volume && this.techCall_("setVolume", this.cache_.volume), this.handleTechPosterChange_(), this.handleTechDurationChange_();
  }
  handleTechLoadStart_() {
    this.removeClass("vjs-ended", "vjs-seeking"), this.error(null), this.handleTechDurationChange_(), this.paused() ? (this.hasStarted(false), this.trigger("loadstart")) : this.trigger("loadstart"), this.manualAutoplay_(true === this.autoplay() && this.options_.normalizeAutoplay ? "play" : this.autoplay());
  }
  manualAutoplay_(e10) {
    if (!this.tech_ || "string" != typeof e10) return;
    const t3 = () => {
      const e11 = this.muted();
      this.muted(true);
      const t4 = () => {
        this.muted(e11);
      };
      this.playTerminatedQueue_.push(t4);
      const i6 = this.play();
      if (Ba(i6)) return i6.catch((e12) => {
        throw t4(), new Error(`Rejection at manualAutoplay. Restoring muted value. ${e12 || ""}`);
      });
    };
    let i5;
    return "any" !== e10 || this.muted() ? i5 = "muted" !== e10 || this.muted() ? this.play() : t3() : (i5 = this.play(), Ba(i5) && (i5 = i5.catch(t3))), Ba(i5) ? i5.then(() => {
      this.trigger({ type: "autoplay-success", autoplay: e10 });
    }).catch(() => {
      this.trigger({ type: "autoplay-failure", autoplay: e10 });
    }) : void 0;
  }
  updateSourceCaches_(e10 = "") {
    let t3 = e10, i5 = "";
    "string" != typeof t3 && (t3 = e10.src, i5 = e10.type), this.cache_.source = this.cache_.source || {}, this.cache_.sources = this.cache_.sources || [], t3 && !i5 && (i5 = Fo(this, t3)), this.cache_.source = Cn({}, e10, { src: t3, type: i5 });
    const s5 = this.cache_.sources.filter((e11) => e11.src && e11.src === t3), n4 = [], r5 = this.$$("source"), a9 = [];
    for (let o4 = 0; o4 < r5.length; o4++) {
      const e11 = pr(r5[o4]);
      n4.push(e11), e11.src && e11.src === t3 && a9.push(e11.src);
    }
    a9.length && !s5.length ? this.cache_.sources = n4 : s5.length || (this.cache_.sources = [this.cache_.source]), this.cache_.src = t3;
  }
  handleTechSourceset_(e10) {
    if (!this.changingSrc_) {
      let t3 = (e11) => this.updateSourceCaches_(e11);
      const i5 = this.currentSource().src, s5 = e10.src;
      i5 && !/^blob:/.test(i5) && /^blob:/.test(s5) && (!this.lastSource_ || this.lastSource_.tech !== s5 && this.lastSource_.player !== i5) && (t3 = () => {
      }), t3(s5), e10.src || this.tech_.any(["sourceset", "loadstart"], (e11) => {
        if ("sourceset" === e11.type) return;
        const t4 = this.techGet_("currentSrc");
        this.lastSource_.tech = t4, this.updateSourceCaches_(t4);
      });
    }
    this.lastSource_ = { player: this.currentSource().src, tech: e10.src }, this.trigger({ src: e10.src, type: "sourceset" });
  }
  hasStarted(e10) {
    if (void 0 === e10) return this.hasStarted_;
    e10 !== this.hasStarted_ && (this.hasStarted_ = e10, this.hasStarted_ ? this.addClass("vjs-has-started") : this.removeClass("vjs-has-started"));
  }
  handleTechPlay_() {
    this.removeClass("vjs-ended", "vjs-paused"), this.addClass("vjs-playing"), this.hasStarted(true), this.trigger("play");
  }
  handleTechRateChange_() {
    this.tech_.playbackRate() > 0 && 0 === this.cache_.lastPlaybackRate && (this.queuedCallbacks_.forEach((e10) => e10.callback(e10.event)), this.queuedCallbacks_ = []), this.cache_.lastPlaybackRate = this.tech_.playbackRate(), this.trigger("ratechange");
  }
  handleTechWaiting_() {
    this.addClass("vjs-waiting"), this.trigger("waiting");
    const e10 = this.currentTime(), t3 = () => {
      e10 !== this.currentTime() && (this.removeClass("vjs-waiting"), this.off("timeupdate", t3));
    };
    this.on("timeupdate", t3);
  }
  handleTechCanPlay_() {
    this.removeClass("vjs-waiting"), this.trigger("canplay");
  }
  handleTechCanPlayThrough_() {
    this.removeClass("vjs-waiting"), this.trigger("canplaythrough");
  }
  handleTechPlaying_() {
    this.removeClass("vjs-waiting"), this.trigger("playing");
  }
  handleTechSeeking_() {
    this.addClass("vjs-seeking"), this.trigger("seeking");
  }
  handleTechSeeked_() {
    this.removeClass("vjs-seeking", "vjs-ended"), this.trigger("seeked");
  }
  handleTechPause_() {
    this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.trigger("pause");
  }
  handleTechEnded_() {
    this.addClass("vjs-ended"), this.removeClass("vjs-waiting"), this.options_.loop ? (this.currentTime(0), this.play()) : this.paused() || this.pause(), this.trigger("ended");
  }
  handleTechDurationChange_() {
    this.duration(this.techGet_("duration"));
  }
  handleTechClick_(e10) {
    this.controls_ && (void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.click && false === this.options_.userActions.click || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" == typeof this.options_.userActions.click ? this.options_.userActions.click.call(this, e10) : this.paused() ? Fa(this.play()) : this.pause()));
  }
  handleTechDoubleClick_(e10) {
    if (!this.controls_) return;
    Array.prototype.some.call(this.$$(".vjs-control-bar, .vjs-modal-dialog"), (t3) => t3.contains(e10.target)) || void 0 !== this.options_ && void 0 !== this.options_.userActions && void 0 !== this.options_.userActions.doubleClick && false === this.options_.userActions.doubleClick || (void 0 !== this.options_ && void 0 !== this.options_.userActions && "function" == typeof this.options_.userActions.doubleClick ? this.options_.userActions.doubleClick.call(this, e10) : this.isInPictureInPicture() && !ae.pictureInPictureElement ? this.exitPictureInPicture() : this.isFullscreen() ? this.exitFullscreen() : this.requestFullscreen());
  }
  handleTechTap_() {
    this.userActive(!this.userActive());
  }
  handleTechTouchStart_() {
    this.userWasActive = this.userActive();
  }
  handleTechTouchMove_() {
    this.userWasActive && this.reportUserActivity();
  }
  handleTechTouchEnd_(e10) {
    e10.cancelable && e10.preventDefault();
  }
  toggleFullscreenClass_() {
    this.isFullscreen() ? this.addClass("vjs-fullscreen") : this.removeClass("vjs-fullscreen");
  }
  documentFullscreenChange_(e10) {
    const t3 = e10.target.player;
    if (t3 && t3 !== this) return;
    const i5 = this.el();
    let s5 = ae[this.fsApi_.fullscreenElement] === i5;
    !s5 && i5.matches && (s5 = i5.matches(":" + this.fsApi_.fullscreen)), this.isFullscreen(s5);
  }
  handleTechFullscreenChange_(e10, t3) {
    t3 && (t3.nativeIOSFullscreen && (this.addClass("vjs-ios-native-fs"), this.tech_.one("webkitendfullscreen", () => {
      this.removeClass("vjs-ios-native-fs");
    })), this.isFullscreen(t3.isFullscreen));
  }
  handleTechFullscreenError_(e10, t3) {
    this.trigger("fullscreenerror", t3);
  }
  togglePictureInPictureClass_() {
    this.isInPictureInPicture() ? this.addClass("vjs-picture-in-picture") : this.removeClass("vjs-picture-in-picture");
  }
  handleTechEnterPictureInPicture_(e10) {
    this.isInPictureInPicture(true);
  }
  handleTechLeavePictureInPicture_(e10) {
    this.isInPictureInPicture(false);
  }
  handleTechError_() {
    const e10 = this.tech_.error();
    e10 && this.error(e10);
  }
  handleTechTextData_() {
    let e10 = null;
    arguments.length > 1 && (e10 = arguments[1]), this.trigger("textdata", e10);
  }
  getCache() {
    return this.cache_;
  }
  resetCache_() {
    this.cache_ = { currentTime: 0, initTime: 0, inactivityTimeout: this.options_.inactivityTimeout, duration: NaN, lastVolume: 1, lastPlaybackRate: this.defaultPlaybackRate(), media: null, src: "", source: {}, sources: [], playbackRates: [], volume: 1 };
  }
  techCall_(e10, t3) {
    this.ready(function() {
      if (e10 in Do) return Io(this.middleware_, this.tech_, e10, t3);
      if (e10 in Po) return xo(this.middleware_, this.tech_, e10, t3);
      try {
        this.tech_ && this.tech_[e10](t3);
      } catch (i5) {
        throw yn(i5), i5;
      }
    }, true);
  }
  techGet_(e10) {
    if (this.tech_ && this.tech_.isReady_) {
      if (e10 in Ao) return ko(this.middleware_, this.tech_, e10);
      if (e10 in Po) return xo(this.middleware_, this.tech_, e10);
      try {
        return this.tech_[e10]();
      } catch (t3) {
        if (void 0 === this.tech_[e10]) throw yn(`Video.js: ${e10} method not defined for ${this.techName_} playback technology.`, t3), t3;
        if ("TypeError" === t3.name) throw yn(`Video.js: ${e10} unavailable on ${this.techName_} playback technology element.`, t3), this.tech_.isReady_ = false, t3;
        throw yn(t3), t3;
      }
    }
  }
  play() {
    return new Promise((e10) => {
      this.play_(e10);
    });
  }
  play_(e10 = Fa) {
    this.playCallbacks_.push(e10);
    const t3 = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())), i5 = Boolean(Qn || Yn);
    if (this.waitToPlay_ && (this.off(["ready", "loadstart"], this.waitToPlay_), this.waitToPlay_ = null), !this.isReady_ || !t3) return this.waitToPlay_ = (e11) => {
      this.play_();
    }, this.one(["ready", "loadstart"], this.waitToPlay_), void (!t3 && i5 && this.load());
    const s5 = this.techGet_("play");
    i5 && this.hasClass("vjs-ended") && this.resetProgressBar_(), null === s5 ? this.runPlayTerminatedQueue_() : this.runPlayCallbacks_(s5);
  }
  runPlayTerminatedQueue_() {
    const e10 = this.playTerminatedQueue_.slice(0);
    this.playTerminatedQueue_ = [], e10.forEach(function(e11) {
      e11();
    });
  }
  runPlayCallbacks_(e10) {
    const t3 = this.playCallbacks_.slice(0);
    this.playCallbacks_ = [], this.playTerminatedQueue_ = [], t3.forEach(function(t4) {
      t4(e10);
    });
  }
  pause() {
    this.techCall_("pause");
  }
  paused() {
    return false !== this.techGet_("paused");
  }
  played() {
    return this.techGet_("played") || Aa(0, 0);
  }
  scrubbing(e10) {
    if (void 0 === e10) return this.scrubbing_;
    this.scrubbing_ = !!e10, this.techCall_("setScrubbing", this.scrubbing_), e10 ? this.addClass("vjs-scrubbing") : this.removeClass("vjs-scrubbing");
  }
  currentTime(e10) {
    return void 0 === e10 ? (this.cache_.currentTime = this.techGet_("currentTime") || 0, this.cache_.currentTime) : (e10 < 0 && (e10 = 0), this.isReady_ && !this.changingSrc_ && this.tech_ && this.tech_.isReady_ ? (this.techCall_("setCurrentTime", e10), this.cache_.initTime = 0, void (isFinite(e10) && (this.cache_.currentTime = Number(e10)))) : (this.cache_.initTime = e10, this.off("canplay", this.boundApplyInitTime_), void this.one("canplay", this.boundApplyInitTime_)));
  }
  applyInitTime_() {
    this.currentTime(this.cache_.initTime);
  }
  duration(e10) {
    if (void 0 === e10) return void 0 !== this.cache_.duration ? this.cache_.duration : NaN;
    (e10 = parseFloat(e10)) < 0 && (e10 = 1 / 0), e10 !== this.cache_.duration && (this.cache_.duration = e10, e10 === 1 / 0 ? this.addClass("vjs-live") : this.removeClass("vjs-live"), isNaN(e10) || this.trigger("durationchange"));
  }
  remainingTime() {
    return this.duration() - this.currentTime();
  }
  remainingTimeDisplay() {
    return Math.floor(this.duration()) - Math.floor(this.currentTime());
  }
  buffered() {
    let e10 = this.techGet_("buffered");
    return e10 && e10.length || (e10 = Aa(0, 0)), e10;
  }
  seekable() {
    let e10 = this.techGet_("seekable");
    return e10 && e10.length || (e10 = Aa(0, 0)), e10;
  }
  seeking() {
    return this.techGet_("seeking");
  }
  ended() {
    return this.techGet_("ended");
  }
  networkState() {
    return this.techGet_("networkState");
  }
  readyState() {
    return this.techGet_("readyState");
  }
  bufferedPercent() {
    return Ma(this.buffered(), this.duration());
  }
  bufferedEnd() {
    const e10 = this.buffered(), t3 = this.duration();
    let i5 = e10.end(e10.length - 1);
    return i5 > t3 && (i5 = t3), i5;
  }
  volume(e10) {
    let t3;
    return void 0 !== e10 ? (t3 = Math.max(0, Math.min(1, e10)), this.cache_.volume = t3, this.techCall_("setVolume", t3), void (t3 > 0 && this.lastVolume_(t3))) : (t3 = parseFloat(this.techGet_("volume")), isNaN(t3) ? 1 : t3);
  }
  muted(e10) {
    if (void 0 === e10) return this.techGet_("muted") || false;
    this.techCall_("setMuted", e10);
  }
  defaultMuted(e10) {
    return void 0 !== e10 && this.techCall_("setDefaultMuted", e10), this.techGet_("defaultMuted") || false;
  }
  lastVolume_(e10) {
    if (void 0 === e10 || 0 === e10) return this.cache_.lastVolume;
    this.cache_.lastVolume = e10;
  }
  supportsFullScreen() {
    return this.techGet_("supportsFullScreen") || false;
  }
  isFullscreen(e10) {
    if (void 0 !== e10) {
      const t3 = this.isFullscreen_;
      return this.isFullscreen_ = Boolean(e10), this.isFullscreen_ !== t3 && this.fsApi_.prefixed && this.trigger("fullscreenchange"), void this.toggleFullscreenClass_();
    }
    return this.isFullscreen_;
  }
  requestFullscreen(e10) {
    this.isInPictureInPicture() && this.exitPictureInPicture();
    const t3 = this;
    return new Promise((i5, s5) => {
      function n4() {
        t3.off("fullscreenerror", a9), t3.off("fullscreenchange", r5);
      }
      function r5() {
        n4(), i5();
      }
      function a9(e11, t4) {
        n4(), s5(t4);
      }
      t3.one("fullscreenchange", r5), t3.one("fullscreenerror", a9);
      const o4 = t3.requestFullscreenHelper_(e10);
      o4 && (o4.then(n4, n4), o4.then(i5, s5));
    });
  }
  requestFullscreenHelper_(e10) {
    let t3;
    if (this.fsApi_.prefixed || (t3 = this.options_.fullscreen && this.options_.fullscreen.options || {}, void 0 !== e10 && (t3 = e10)), this.fsApi_.requestFullscreen) {
      const e11 = this.el_[this.fsApi_.requestFullscreen](t3);
      return e11 && e11.then(() => this.isFullscreen(true), () => this.isFullscreen(false)), e11;
    }
    this.tech_.supportsFullScreen() && true == !this.options_.preferFullWindow ? this.techCall_("enterFullScreen") : this.enterFullWindow();
  }
  exitFullscreen() {
    const e10 = this;
    return new Promise((t3, i5) => {
      function s5() {
        e10.off("fullscreenerror", r5), e10.off("fullscreenchange", n4);
      }
      function n4() {
        s5(), t3();
      }
      function r5(e11, t4) {
        s5(), i5(t4);
      }
      e10.one("fullscreenchange", n4), e10.one("fullscreenerror", r5);
      const a9 = e10.exitFullscreenHelper_();
      a9 && (a9.then(s5, s5), a9.then(t3, i5));
    });
  }
  exitFullscreenHelper_() {
    if (this.fsApi_.requestFullscreen) {
      const e10 = ae[this.fsApi_.exitFullscreen]();
      return e10 && Fa(e10.then(() => this.isFullscreen(false))), e10;
    }
    this.tech_.supportsFullScreen() && true == !this.options_.preferFullWindow ? this.techCall_("exitFullScreen") : this.exitFullWindow();
  }
  enterFullWindow() {
    this.isFullscreen(true), this.isFullWindow = true, this.docOrigOverflow = ae.documentElement.style.overflow, Kr(ae, "keydown", this.boundFullWindowOnEscKey_), ae.documentElement.style.overflow = "hidden", hr(ae.body, "vjs-full-window"), this.trigger("enterFullWindow");
  }
  fullWindowOnEscKey(e10) {
    "Escape" === e10.key && true === this.isFullscreen() && (this.isFullWindow ? this.exitFullWindow() : this.exitFullscreen());
  }
  exitFullWindow() {
    this.isFullscreen(false), this.isFullWindow = false, Yr(ae, "keydown", this.boundFullWindowOnEscKey_), ae.documentElement.style.overflow = this.docOrigOverflow, ur(ae.body, "vjs-full-window"), this.trigger("exitFullWindow");
  }
  disablePictureInPicture(e10) {
    if (void 0 === e10) return this.techGet_("disablePictureInPicture");
    this.techCall_("setDisablePictureInPicture", e10), this.options_.disablePictureInPicture = e10, this.trigger("disablepictureinpicturechanged");
  }
  isInPictureInPicture(e10) {
    return void 0 !== e10 ? (this.isInPictureInPicture_ = !!e10, void this.togglePictureInPictureClass_()) : !!this.isInPictureInPicture_;
  }
  requestPictureInPicture() {
    if (this.options_.enableDocumentPictureInPicture && b3.documentPictureInPicture) {
      const e10 = ae.createElement(this.el().tagName);
      return e10.classList = this.el().classList, e10.classList.add("vjs-pip-container"), this.posterImage && e10.appendChild(this.posterImage.el().cloneNode(true)), this.titleBar && e10.appendChild(this.titleBar.el().cloneNode(true)), e10.appendChild(rr("p", { className: "vjs-pip-text" }, {}, this.localize("Playing in picture-in-picture"))), b3.documentPictureInPicture.requestWindow({ width: this.videoWidth(), height: this.videoHeight() }).then((t3) => (Pr(t3), this.el_.parentNode.insertBefore(e10, this.el_), t3.document.body.appendChild(this.el_), t3.document.body.classList.add("vjs-pip-window"), this.player_.isInPictureInPicture(true), this.player_.trigger({ type: "enterpictureinpicture", pipWindow: t3 }), t3.addEventListener("pagehide", (t4) => {
        const i5 = t4.target.querySelector(".video-js");
        e10.parentNode.replaceChild(i5, e10), this.player_.isInPictureInPicture(false), this.player_.trigger("leavepictureinpicture");
      }), t3));
    }
    return "pictureInPictureEnabled" in ae && false === this.disablePictureInPicture() ? this.techGet_("requestPictureInPicture") : Promise.reject("No PiP mode is available");
  }
  exitPictureInPicture() {
    return b3.documentPictureInPicture && b3.documentPictureInPicture.window ? (b3.documentPictureInPicture.window.close(), Promise.resolve()) : "pictureInPictureEnabled" in ae ? ae.exitPictureInPicture() : void 0;
  }
  handleKeyDown(e10) {
    const { userActions: t3 } = this.options_;
    if (!t3 || !t3.hotkeys) return;
    ((e11) => {
      const t4 = e11.tagName.toLowerCase();
      if (e11.isContentEditable) return true;
      if ("input" === t4) return -1 === ["button", "checkbox", "hidden", "radio", "reset", "submit"].indexOf(e11.type);
      return -1 !== ["textarea"].indexOf(t4);
    })(this.el_.ownerDocument.activeElement) || ("function" == typeof t3.hotkeys ? t3.hotkeys.call(this, e10) : this.handleHotkeys(e10));
  }
  handleHotkeys(e10) {
    const t3 = this.options_.userActions ? this.options_.userActions.hotkeys : {}, { fullscreenKey: i5 = (t4) => "f" === e10.key.toLowerCase(), muteKey: s5 = (t4) => "m" === e10.key.toLowerCase(), playPauseKey: n4 = (t4) => "k" === e10.key.toLowerCase() || " " === e10.key.toLowerCase() } = t3;
    if (i5.call(this, e10)) {
      e10.preventDefault(), e10.stopPropagation();
      const t4 = Ca.getComponent("FullscreenToggle");
      false !== ae[this.fsApi_.fullscreenEnabled] && t4.prototype.handleClick.call(this, e10);
    } else if (s5.call(this, e10)) {
      e10.preventDefault(), e10.stopPropagation();
      Ca.getComponent("MuteToggle").prototype.handleClick.call(this, e10);
    } else if (n4.call(this, e10)) {
      e10.preventDefault(), e10.stopPropagation();
      Ca.getComponent("PlayToggle").prototype.handleClick.call(this, e10);
    }
  }
  canPlayType(e10) {
    let t3;
    for (let i5 = 0, s5 = this.options_.techOrder; i5 < s5.length; i5++) {
      const n4 = s5[i5];
      let r5 = vo.getTech(n4);
      if (r5 || (r5 = Ca.getComponent(n4)), r5) {
        if (r5.isSupported() && (t3 = r5.canPlayType(e10), t3)) return t3;
      } else yn.error(`The "${n4}" tech is undefined. Skipped browser support check for that tech.`);
    }
    return "";
  }
  selectSource(e10) {
    const t3 = this.options_.techOrder.map((e11) => [e11, vo.getTech(e11)]).filter(([e11, t4]) => t4 ? t4.isSupported() : (yn.error(`The "${e11}" tech is undefined. Skipped browser support check for that tech.`), false)), i5 = function(e11, t4, i6) {
      let s6;
      return e11.some((e12) => t4.some((t5) => {
        if (s6 = i6(e12, t5), s6) return true;
      })), s6;
    };
    let s5;
    const n4 = (e11) => (t4, i6) => e11(i6, t4), r5 = ([e11, t4], i6) => {
      if (t4.canPlaySource(i6, this.options_[e11.toLowerCase()])) return { source: i6, tech: e11 };
    };
    return s5 = this.options_.sourceOrder ? i5(e10, t3, n4(r5)) : i5(t3, e10, r5), s5 || false;
  }
  handleSrc_(e10, t3) {
    if (void 0 === e10) return this.cache_.src || "";
    this.resetRetryOnError_ && this.resetRetryOnError_();
    const i5 = qo(e10);
    if (i5.length) {
      if (this.changingSrc_ = true, t3 || (this.cache_.sources = i5), this.updateSourceCaches_(i5[0]), wo(this, i5[0], (e11, s5) => {
        this.middleware_ = s5, t3 || (this.cache_.sources = i5), this.updateSourceCaches_(e11);
        if (this.src_(e11)) return i5.length > 1 ? this.handleSrc_(i5.slice(1)) : (this.changingSrc_ = false, this.setTimeout(function() {
          this.error({ code: 4, message: this.options_.notSupportedMessage });
        }, 0), void this.triggerReady());
        Co(s5, this.tech_);
      }), i5.length > 1) {
        const e11 = () => {
          this.error(null), this.handleSrc_(i5.slice(1), true);
        }, t4 = () => {
          this.off("error", e11);
        };
        this.one("error", e11), this.one("playing", t4), this.resetRetryOnError_ = () => {
          this.off("error", e11), this.off("playing", t4);
        };
      }
    } else this.setTimeout(function() {
      this.error({ code: 4, message: this.options_.notSupportedMessage });
    }, 0);
  }
  src(e10) {
    return this.handleSrc_(e10, false);
  }
  src_(e10) {
    const t3 = this.selectSource([e10]);
    return !t3 || (Ea(t3.tech, this.techName_) ? (this.ready(function() {
      this.tech_.constructor.prototype.hasOwnProperty("setSource") ? this.techCall_("setSource", e10) : this.techCall_("src", e10.src), this.changingSrc_ = false;
    }, true), false) : (this.changingSrc_ = true, this.loadTech_(t3.tech, t3.source), this.tech_.ready(() => {
      this.changingSrc_ = false;
    }), false));
  }
  addSourceElement(e10, t3) {
    return !!this.tech_ && this.tech_.addSourceElement(e10, t3);
  }
  removeSourceElement(e10) {
    return !!this.tech_ && this.tech_.removeSourceElement(e10);
  }
  load() {
    this.tech_ && this.tech_.vhs ? this.src(this.currentSource()) : this.techCall_("load");
  }
  reset() {
    if (this.paused()) this.doReset_();
    else {
      Fa(this.play().then(() => this.doReset_()));
    }
  }
  doReset_() {
    this.tech_ && this.tech_.clearTracks("text"), this.removeClass("vjs-playing"), this.addClass("vjs-paused"), this.resetCache_(), this.poster(""), this.loadTech_(this.options_.techOrder[0], null), this.techCall_("reset"), this.resetControlBarUI_(), this.error(null), this.titleBar && this.titleBar.update({ title: void 0, description: void 0 }), ha(this) && this.trigger("playerreset");
  }
  resetControlBarUI_() {
    this.resetProgressBar_(), this.resetPlaybackRate_(), this.resetVolumeBar_();
  }
  resetProgressBar_() {
    this.currentTime(0);
    const { currentTimeDisplay: e10, durationDisplay: t3, progressControl: i5, remainingTimeDisplay: s5 } = this.controlBar || {}, { seekBar: n4 } = i5 || {};
    e10 && e10.updateContent(), t3 && t3.updateContent(), s5 && s5.updateContent(), n4 && (n4.update(), n4.loadProgressBar && n4.loadProgressBar.update());
  }
  resetPlaybackRate_() {
    this.playbackRate(this.defaultPlaybackRate()), this.handleTechRateChange_();
  }
  resetVolumeBar_() {
    this.volume(1), this.trigger("volumechange");
  }
  currentSources() {
    const e10 = this.currentSource(), t3 = [];
    return 0 !== Object.keys(e10).length && t3.push(e10), this.cache_.sources || t3;
  }
  currentSource() {
    return this.cache_.source || {};
  }
  currentSrc() {
    return this.currentSource() && this.currentSource().src || "";
  }
  currentType() {
    return this.currentSource() && this.currentSource().type || "";
  }
  preload(e10) {
    return void 0 !== e10 ? (this.techCall_("setPreload", e10), void (this.options_.preload = e10)) : this.techGet_("preload");
  }
  autoplay(e10) {
    if (void 0 === e10) return this.options_.autoplay || false;
    let t3;
    "string" == typeof e10 && /(any|play|muted)/.test(e10) || true === e10 && this.options_.normalizeAutoplay ? (this.options_.autoplay = e10, this.manualAutoplay_("string" == typeof e10 ? e10 : "play"), t3 = false) : this.options_.autoplay = !!e10, t3 = void 0 === t3 ? this.options_.autoplay : t3, this.tech_ && this.techCall_("setAutoplay", t3);
  }
  playsinline(e10) {
    return void 0 !== e10 && (this.techCall_("setPlaysinline", e10), this.options_.playsinline = e10), this.techGet_("playsinline");
  }
  loop(e10) {
    return void 0 !== e10 ? (this.techCall_("setLoop", e10), void (this.options_.loop = e10)) : this.techGet_("loop");
  }
  poster(e10) {
    if (void 0 === e10) return this.poster_;
    e10 || (e10 = ""), e10 !== this.poster_ && (this.poster_ = e10, this.techCall_("setPoster", e10), this.isPosterFromTech_ = false, this.trigger("posterchange"));
  }
  handleTechPosterChange_() {
    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
      const e10 = this.tech_.poster() || "";
      e10 !== this.poster_ && (this.poster_ = e10, this.isPosterFromTech_ = true, this.trigger("posterchange"));
    }
  }
  controls(e10) {
    if (void 0 === e10) return !!this.controls_;
    e10 = !!e10, this.controls_ !== e10 && (this.controls_ = e10, this.usingNativeControls() && this.techCall_("setControls", e10), this.controls_ ? (this.removeClass("vjs-controls-disabled"), this.addClass("vjs-controls-enabled"), this.trigger("controlsenabled"), this.usingNativeControls() || this.addTechControlsListeners_()) : (this.removeClass("vjs-controls-enabled"), this.addClass("vjs-controls-disabled"), this.trigger("controlsdisabled"), this.usingNativeControls() || this.removeTechControlsListeners_()));
  }
  usingNativeControls(e10) {
    if (void 0 === e10) return !!this.usingNativeControls_;
    e10 = !!e10, this.usingNativeControls_ !== e10 && (this.usingNativeControls_ = e10, this.usingNativeControls_ ? (this.addClass("vjs-using-native-controls"), this.trigger("usingnativecontrols")) : (this.removeClass("vjs-using-native-controls"), this.trigger("usingcustomcontrols")));
  }
  error(e10) {
    if (void 0 === e10) return this.error_ || null;
    if (an("beforeerror").forEach((t3) => {
      const i5 = t3(this, e10);
      En(i5) && !Array.isArray(i5) || "string" == typeof i5 || "number" == typeof i5 || null === i5 ? e10 = i5 : this.log.error("please return a value that MediaError expects in beforeerror hooks");
    }), this.options_.suppressNotSupportedError && e10 && 4 === e10.code) {
      const t3 = function() {
        this.error(e10);
      };
      return this.options_.suppressNotSupportedError = false, this.any(["click", "touchstart"], t3), void this.one("loadstart", function() {
        this.off(["click", "touchstart"], t3);
      });
    }
    if (null === e10) return this.error_ = null, this.removeClass("vjs-error"), void (this.errorDisplay && this.errorDisplay.close());
    this.error_ = new Ua(e10), this.addClass("vjs-error"), yn.error(`(CODE:${this.error_.code} ${Ua.errorTypes[this.error_.code]})`, this.error_.message, this.error_), this.trigger("error"), an("error").forEach((e11) => e11(this, this.error_));
  }
  reportUserActivity(e10) {
    this.userActivity_ = true;
  }
  userActive(e10) {
    if (void 0 === e10) return this.userActive_;
    if ((e10 = !!e10) !== this.userActive_) {
      if (this.userActive_ = e10, this.userActive_) return this.userActivity_ = true, this.removeClass("vjs-user-inactive"), this.addClass("vjs-user-active"), void this.trigger("useractive");
      this.tech_ && this.tech_.one("mousemove", function(e11) {
        e11.stopPropagation(), e11.preventDefault();
      }), this.userActivity_ = false, this.removeClass("vjs-user-active"), this.addClass("vjs-user-inactive"), this.trigger("userinactive");
    }
  }
  listenForUserActivity_() {
    let e10, t3, i5;
    const s5 = ia(this, this.reportUserActivity), n4 = function(e11) {
      e11.screenX === t3 && e11.screenY === i5 || (t3 = e11.screenX, i5 = e11.screenY, s5());
    }, r5 = function() {
      s5(), this.clearInterval(e10), e10 = this.setInterval(s5, 250);
    }, a9 = function(t4) {
      s5(), this.clearInterval(e10);
    };
    this.on("mousedown", r5), this.on("mousemove", n4), this.on("mouseup", a9), this.on("mouseleave", a9);
    const o4 = this.getChild("controlBar");
    let l7;
    !o4 || Yn || Ln || (o4.on("mouseenter", function(e11) {
      0 !== this.player().options_.inactivityTimeout && (this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout), this.player().options_.inactivityTimeout = 0;
    }), o4.on("mouseleave", function(e11) {
      this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;
    })), this.on("keydown", s5), this.on("keyup", s5);
    const h3 = function() {
      if (!this.userActivity_) return;
      this.userActivity_ = false, this.userActive(true), this.clearTimeout(l7);
      const e11 = this.options_.inactivityTimeout;
      e11 <= 0 || (l7 = this.setTimeout(function() {
        this.userActivity_ || this.userActive(false);
      }, e11));
    };
    this.setInterval(h3, 250);
  }
  playbackRate(e10) {
    if (void 0 === e10) return this.tech_ && this.tech_.featuresPlaybackRate ? this.cache_.lastPlaybackRate || this.techGet_("playbackRate") : 1;
    this.techCall_("setPlaybackRate", e10);
  }
  defaultPlaybackRate(e10) {
    return void 0 !== e10 ? this.techCall_("setDefaultPlaybackRate", e10) : this.tech_ && this.tech_.featuresPlaybackRate ? this.techGet_("defaultPlaybackRate") : 1;
  }
  isAudio(e10) {
    if (void 0 === e10) return !!this.isAudio_;
    this.isAudio_ = !!e10;
  }
  updatePlayerHeightOnAudioOnlyMode_() {
    const e10 = this.getChild("ControlBar");
    e10 && this.audioOnlyCache_.controlBarHeight !== e10.currentHeight() && (this.audioOnlyCache_.controlBarHeight = e10.currentHeight(), this.height(this.audioOnlyCache_.controlBarHeight));
  }
  enableAudioOnlyUI_() {
    this.addClass("vjs-audio-only-mode");
    const e10 = this.children(), t3 = this.getChild("ControlBar"), i5 = t3 && t3.currentHeight();
    e10.forEach((e11) => {
      e11 !== t3 && e11.el_ && !e11.hasClass("vjs-hidden") && (e11.hide(), this.audioOnlyCache_.hiddenChildren.push(e11));
    }), this.audioOnlyCache_.playerHeight = this.currentHeight(), this.audioOnlyCache_.controlBarHeight = i5, this.on("playerresize", this.boundUpdatePlayerHeightOnAudioOnlyMode_), this.height(i5), this.trigger("audioonlymodechange");
  }
  disableAudioOnlyUI_() {
    this.removeClass("vjs-audio-only-mode"), this.off("playerresize", this.boundUpdatePlayerHeightOnAudioOnlyMode_), this.audioOnlyCache_.hiddenChildren.forEach((e10) => e10.show()), this.height(this.audioOnlyCache_.playerHeight), this.trigger("audioonlymodechange");
  }
  audioOnlyMode(e10) {
    if ("boolean" != typeof e10 || e10 === this.audioOnlyMode_) return this.audioOnlyMode_;
    if (this.audioOnlyMode_ = e10, e10) {
      const e11 = [];
      return this.isInPictureInPicture() && e11.push(this.exitPictureInPicture()), this.isFullscreen() && e11.push(this.exitFullscreen()), this.audioPosterMode() && e11.push(this.audioPosterMode(false)), Promise.all(e11).then(() => this.enableAudioOnlyUI_());
    }
    return Promise.resolve().then(() => this.disableAudioOnlyUI_());
  }
  enablePosterModeUI_() {
    (this.tech_ && this.tech_).hide(), this.addClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }
  disablePosterModeUI_() {
    (this.tech_ && this.tech_).show(), this.removeClass("vjs-audio-poster-mode"), this.trigger("audiopostermodechange");
  }
  audioPosterMode(e10) {
    if ("boolean" != typeof e10 || e10 === this.audioPosterMode_) return this.audioPosterMode_;
    if (this.audioPosterMode_ = e10, e10) {
      if (this.audioOnlyMode()) {
        return this.audioOnlyMode(false).then(() => {
          this.enablePosterModeUI_();
        });
      }
      return Promise.resolve().then(() => {
        this.enablePosterModeUI_();
      });
    }
    return Promise.resolve().then(() => {
      this.disablePosterModeUI_();
    });
  }
  addTextTrack(e10, t3, i5) {
    if (this.tech_) return this.tech_.addTextTrack(e10, t3, i5);
  }
  addRemoteTextTrack(e10, t3) {
    if (this.tech_) return this.tech_.addRemoteTextTrack(e10, t3);
  }
  removeRemoteTextTrack(e10 = {}) {
    let { track: t3 } = e10;
    if (t3 || (t3 = e10), this.tech_) return this.tech_.removeRemoteTextTrack(t3);
  }
  getVideoPlaybackQuality() {
    return this.techGet_("getVideoPlaybackQuality");
  }
  videoWidth() {
    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;
  }
  videoHeight() {
    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;
  }
  language(e10) {
    if (void 0 === e10) return this.language_;
    this.language_ !== String(e10).toLowerCase() && (this.language_ = String(e10).toLowerCase(), ha(this) && this.trigger("languagechange"));
  }
  languages() {
    return Cn(_Kh.prototype.options_.languages, this.languages_);
  }
  toJSON() {
    const e10 = Cn(this.options_), t3 = e10.tracks;
    e10.tracks = [];
    for (let i5 = 0; i5 < t3.length; i5++) {
      let s5 = t3[i5];
      s5 = Cn(s5), s5.player = void 0, e10.tracks[i5] = s5;
    }
    return e10;
  }
  createModal(e10, t3) {
    (t3 = t3 || {}).content = e10 || "";
    const i5 = new Ha(this, t3);
    return this.addChild(i5), i5.on("dispose", () => {
      this.removeChild(i5);
    }), i5.open(), i5;
  }
  updateCurrentBreakpoint_() {
    if (!this.responsive()) return;
    const e10 = this.currentBreakpoint(), t3 = this.currentWidth();
    for (let i5 = 0; i5 < Wh.length; i5++) {
      const s5 = Wh[i5];
      if (t3 <= this.breakpoints_[s5]) {
        if (e10 === s5) return;
        e10 && this.removeClass(Gh[e10]), this.addClass(Gh[s5]), this.breakpoint_ = s5;
        break;
      }
    }
  }
  removeCurrentBreakpoint_() {
    const e10 = this.currentBreakpointClass();
    this.breakpoint_ = "", e10 && this.removeClass(e10);
  }
  breakpoints(e10) {
    return void 0 === e10 || (this.breakpoint_ = "", this.breakpoints_ = Object.assign({}, Xh, e10), this.updateCurrentBreakpoint_()), Object.assign(this.breakpoints_);
  }
  responsive(e10) {
    if (void 0 === e10) return this.responsive_;
    return (e10 = Boolean(e10)) !== this.responsive_ ? (this.responsive_ = e10, e10 ? (this.on("playerresize", this.boundUpdateCurrentBreakpoint_), this.updateCurrentBreakpoint_()) : (this.off("playerresize", this.boundUpdateCurrentBreakpoint_), this.removeCurrentBreakpoint_()), e10) : void 0;
  }
  currentBreakpoint() {
    return this.breakpoint_;
  }
  currentBreakpointClass() {
    return Gh[this.breakpoint_] || "";
  }
  loadMedia(e10, t3) {
    if (!e10 || "object" != typeof e10) return;
    const i5 = this.crossOrigin();
    this.reset(), this.cache_.media = Cn(e10);
    const { artist: s5, artwork: n4, description: r5, poster: a9, src: o4, textTracks: l7, title: h3 } = this.cache_.media;
    !n4 && a9 && (this.cache_.media.artwork = [{ src: a9, type: Bo(a9) }]), i5 && this.crossOrigin(i5), o4 && this.src(o4), a9 && this.poster(a9), Array.isArray(l7) && l7.forEach((e11) => this.addRemoteTextTrack(e11, false)), this.titleBar && this.titleBar.update({ title: h3, description: r5 || s5 || "" }), this.ready(t3);
  }
  getMedia() {
    if (!this.cache_.media) {
      const e10 = this.poster(), t3 = { src: this.currentSources(), textTracks: Array.prototype.map.call(this.remoteTextTracks(), (e11) => ({ kind: e11.kind, label: e11.label, language: e11.language, src: e11.src })) };
      return e10 && (t3.poster = e10, t3.artwork = [{ src: t3.poster, type: Bo(t3.poster) }]), t3;
    }
    return Cn(this.cache_.media);
  }
  static getTagSettings(e10) {
    const t3 = { sources: [], tracks: [] }, i5 = pr(e10), s5 = i5["data-setup"];
    if (lr(e10, "vjs-fill") && (i5.fill = true), lr(e10, "vjs-fluid") && (i5.fluid = true), null !== s5) try {
      Object.assign(i5, JSON.parse(s5 || "{}"));
    } catch (n4) {
      yn.error("data-setup", n4);
    }
    if (Object.assign(t3, i5), e10.hasChildNodes()) {
      const i6 = e10.childNodes;
      for (let e11 = 0, s6 = i6.length; e11 < s6; e11++) {
        const s7 = i6[e11], n4 = s7.nodeName.toLowerCase();
        "source" === n4 ? t3.sources.push(pr(s7)) : "track" === n4 && t3.tracks.push(pr(s7));
      }
    }
    return t3;
  }
  debug(e10) {
    if (void 0 === e10) return this.debugEnabled_;
    e10 ? (this.trigger("debugon"), this.previousLogLevel_ = this.log.level, this.log.level("debug"), this.debugEnabled_ = true) : (this.trigger("debugoff"), this.log.level(this.previousLogLevel_), this.previousLogLevel_ = void 0, this.debugEnabled_ = false);
  }
  playbackRates(e10) {
    if (void 0 === e10) return this.cache_.playbackRates;
    Array.isArray(e10) && e10.every((e11) => "number" == typeof e11) && (this.cache_.playbackRates = e10, this.trigger("playbackrateschange"));
  }
};
yo.names.forEach(function(e10) {
  const t3 = yo[e10];
  Kh.prototype[t3.getterName] = function() {
    return this.tech_ ? this.tech_[t3.getterName]() : (this[t3.privateName] = this[t3.privateName] || new t3.ListClass(), this[t3.privateName]);
  };
}), Kh.prototype.crossorigin = Kh.prototype.crossOrigin, Kh.players = {};
var Yh = b3.navigator;
Kh.prototype.options_ = { techOrder: vo.defaultTechOrder_, html5: {}, enableSourceset: true, inactivityTimeout: 2e3, playbackRates: [], liveui: false, children: ["mediaLoader", "posterImage", "titleBar", "textTrackDisplay", "loadingSpinner", "bigPlayButton", "liveTracker", "controlBar", "errorDisplay", "textTrackSettings", "resizeManager"], language: Yh && (Yh.languages && Yh.languages[0] || Yh.userLanguage || Yh.language) || "en", languages: {}, notSupportedMessage: "No compatible source was found for this media.", normalizeAutoplay: false, fullscreen: { options: { navigationUI: "hide" } }, breakpoints: {}, responsive: false, audioOnlyMode: false, audioPosterMode: false, spatialNavigation: { enabled: false, horizontalSeek: false }, enableSmoothSeeking: false, disableSeekWhileScrubbingOnMobile: false }, Vh.forEach(function(e10) {
  Kh.prototype[`handleTech${Sa(e10)}_`] = function() {
    return this.trigger(e10);
  };
}), Ca.registerComponent("Player", Kh);
var Qh = "plugin";
var Jh = "activePlugins_";
var Zh = {};
var eu = (e10) => Zh.hasOwnProperty(e10);
var tu = (e10) => eu(e10) ? Zh[e10] : void 0;
var iu = (e10, t3) => {
  e10[Jh] = e10[Jh] || {}, e10[Jh][t3] = true;
};
var su = (e10, t3, i5) => {
  const s5 = (i5 ? "before" : "") + "pluginsetup";
  e10.trigger(s5, t3), e10.trigger(s5 + ":" + t3.name, t3);
};
var nu = function(e10, t3) {
  const i5 = function() {
    su(this, { name: e10, plugin: t3, instance: null }, true);
    const i6 = t3.apply(this, arguments);
    return iu(this, e10), su(this, { name: e10, plugin: t3, instance: i6 }), i6;
  };
  return Object.keys(t3).forEach(function(e11) {
    i5[e11] = t3[e11];
  }), i5;
};
var ru = (e10, t3) => (t3.prototype.name = e10, function(...i5) {
  su(this, { name: e10, plugin: t3, instance: null }, true);
  const s5 = new t3(...[this, ...i5]);
  return this[e10] = () => s5, su(this, s5.getEventHash()), s5;
});
var au = class _au {
  constructor(e10) {
    if (this.constructor === _au) throw new Error("Plugin must be sub-classed; not directly instantiated.");
    this.player = e10, this.log || (this.log = this.player.log.createLogger(this.name)), _a(this), delete this.trigger, ba(this, this.constructor.defaultState), iu(e10, this.name), this.dispose = this.dispose.bind(this), e10.on("dispose", this.dispose);
  }
  version() {
    return this.constructor.VERSION;
  }
  getEventHash(e10 = {}) {
    return e10.name = this.name, e10.plugin = this.constructor, e10.instance = this, e10;
  }
  trigger(e10, t3 = {}) {
    return Qr(this.eventBusEl_, e10, this.getEventHash(t3));
  }
  handleStateChanged(e10) {
  }
  dispose() {
    const { name: e10, player: t3 } = this;
    this.trigger("dispose"), this.off(), t3.off("dispose", this.dispose), t3[Jh][e10] = false, this.player = this.state = null, t3[e10] = ru(e10, Zh[e10]);
  }
  static isBasic(e10) {
    const t3 = "string" == typeof e10 ? tu(e10) : e10;
    return "function" == typeof t3 && !_au.prototype.isPrototypeOf(t3.prototype);
  }
  static registerPlugin(e10, t3) {
    if ("string" != typeof e10) throw new Error(`Illegal plugin name, "${e10}", must be a string, was ${typeof e10}.`);
    if (eu(e10)) yn.warn(`A plugin named "${e10}" already exists. You may want to avoid re-registering plugins!`);
    else if (Kh.prototype.hasOwnProperty(e10)) throw new Error(`Illegal plugin name, "${e10}", cannot share a name with an existing player method!`);
    if ("function" != typeof t3) throw new Error(`Illegal plugin for "${e10}", must be a function, was ${typeof t3}.`);
    return Zh[e10] = t3, e10 !== Qh && (_au.isBasic(t3) ? Kh.prototype[e10] = nu(e10, t3) : Kh.prototype[e10] = ru(e10, t3)), t3;
  }
  static deregisterPlugin(e10) {
    if (e10 === Qh) throw new Error("Cannot de-register base plugin.");
    eu(e10) && (delete Zh[e10], delete Kh.prototype[e10]);
  }
  static getPlugins(e10 = Object.keys(Zh)) {
    let t3;
    return e10.forEach((e11) => {
      const i5 = tu(e11);
      i5 && (t3 = t3 || {}, t3[e11] = i5);
    }), t3;
  }
  static getPluginVersion(e10) {
    const t3 = tu(e10);
    return t3 && t3.VERSION || "";
  }
};
function ou(e10, t3) {
  let i5 = false;
  return function(...s5) {
    return i5 || yn.warn(e10), i5 = true, t3.apply(this, s5);
  };
}
function lu(e10, t3, i5, s5) {
  return ou(`${t3} is deprecated and will be removed in ${e10}.0; please use ${i5} instead.`, s5);
}
au.getPlugin = tu, au.BASE_PLUGIN_NAME = Qh, au.registerPlugin(Qh, au), Kh.prototype.usingPlugin = function(e10) {
  return !!this[Jh] && true === this[Jh][e10];
}, Kh.prototype.hasPlugin = function(e10) {
  return !!eu(e10);
};
var hu = { NetworkBadStatus: "networkbadstatus", NetworkRequestFailed: "networkrequestfailed", NetworkRequestAborted: "networkrequestaborted", NetworkRequestTimeout: "networkrequesttimeout", NetworkBodyParserFailed: "networkbodyparserfailed", StreamingHlsPlaylistParserError: "streaminghlsplaylistparsererror", StreamingDashManifestParserError: "streamingdashmanifestparsererror", StreamingContentSteeringParserError: "streamingcontentsteeringparsererror", StreamingVttParserError: "streamingvttparsererror", StreamingFailedToSelectNextSegment: "streamingfailedtoselectnextsegment", StreamingFailedToDecryptSegment: "streamingfailedtodecryptsegment", StreamingFailedToTransmuxSegment: "streamingfailedtotransmuxsegment", StreamingFailedToAppendSegment: "streamingfailedtoappendsegment", StreamingCodecsChangeError: "streamingcodecschangeerror" };
var uu = (e10) => 0 === e10.indexOf("#") ? e10.slice(1) : e10;
function du(e10, t3, i5) {
  let s5 = du.getPlayer(e10);
  if (s5) return t3 && yn.warn(`Player "${e10}" is already initialised. Options will not be applied.`), i5 && s5.ready(i5), s5;
  const n4 = "string" == typeof e10 ? xr("#" + uu(e10)) : e10;
  if (!ir(n4)) throw new TypeError("The element or ID supplied is not valid. (videojs)");
  const r5 = "getRootNode" in n4 && n4.getRootNode() instanceof b3.ShadowRoot ? n4.getRootNode() : n4.ownerDocument.body;
  n4.ownerDocument.defaultView && r5.contains(n4) || yn.warn("The element supplied is not included in the DOM"), true === (t3 = t3 || {}).restoreEl && (t3.restoreEl = (n4.parentNode && n4.parentNode.hasAttribute && n4.parentNode.hasAttribute("data-vjs-player") ? n4.parentNode : n4).cloneNode(true)), an("beforesetup").forEach((e11) => {
    const i6 = e11(n4, Cn(t3));
    En(i6) && !Array.isArray(i6) ? t3 = Cn(t3, i6) : yn.error("please return an object in beforesetup hooks");
  });
  const a9 = Ca.getComponent("Player");
  return s5 = new a9(n4, t3, i5), an("setup").forEach((e11) => e11(s5)), s5;
}
if (du.hooks_ = rn, du.hooks = an, du.hook = on, du.hookOnce = hn, du.removeHook = ln, true !== b3.VIDEOJS_NO_DYNAMIC_STYLE && tr()) {
  let e10 = xr(".vjs-styles-defaults");
  if (!e10) {
    e10 = Br("vjs-styles-defaults");
    const t3 = xr("head");
    t3 && t3.insertBefore(e10, t3.firstChild), Fr(e10, "\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    ");
  }
}
Mr(1, du), du.VERSION = nn, du.options = Kh.prototype.options_, du.getPlayers = () => Kh.players, du.getPlayer = (e10) => {
  const t3 = Kh.players;
  let i5;
  if ("string" == typeof e10) {
    const s5 = uu(e10), n4 = t3[s5];
    if (n4) return n4;
    i5 = xr("#" + s5);
  } else i5 = e10;
  if (ir(i5)) {
    const { player: e11, playerId: s5 } = i5;
    if (e11 || t3[s5]) return e11 || t3[s5];
  }
}, du.getAllPlayers = () => Object.keys(Kh.players).map((e10) => Kh.players[e10]).filter(Boolean), du.players = Kh.players, du.getComponent = Ca.getComponent, du.registerComponent = (e10, t3) => (vo.isTech(t3) && yn.warn(`The ${e10} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`), Ca.registerComponent.call(Ca, e10, t3)), du.getTech = vo.getTech, du.registerTech = vo.registerTech, du.use = Eo, Object.defineProperty(du, "middleware", { value: {}, writeable: false, enumerable: true }), Object.defineProperty(du.middleware, "TERMINATOR", { value: So, writeable: false, enumerable: true }), du.browser = Jn, du.obj = xn, du.mergeOptions = lu(9, "videojs.mergeOptions", "videojs.obj.merge", Cn), du.defineLazyProperty = lu(9, "videojs.defineLazyProperty", "videojs.obj.defineLazyProperty", In), du.bind = lu(9, "videojs.bind", "native Function.prototype.bind", ia), du.registerPlugin = au.registerPlugin, du.deregisterPlugin = au.deregisterPlugin, du.plugin = (e10, t3) => (yn.warn("videojs.plugin() is deprecated; use videojs.registerPlugin() instead"), au.registerPlugin(e10, t3)), du.getPlugins = au.getPlugins, du.getPlugin = au.getPlugin, du.getPluginVersion = au.getPluginVersion, du.addLanguage = function(e10, t3) {
  return e10 = ("" + e10).toLowerCase(), du.options.languages = Cn(du.options.languages, { [e10]: t3 }), du.options.languages[e10];
}, du.log = yn, du.createLogger = _n, du.time = Ra, du.createTimeRange = lu(9, "videojs.createTimeRange", "videojs.time.createTimeRanges", Aa), du.createTimeRanges = lu(9, "videojs.createTimeRanges", "videojs.time.createTimeRanges", Aa), du.formatTime = lu(9, "videojs.formatTime", "videojs.time.formatTime", Na), du.setFormatTime = lu(9, "videojs.setFormatTime", "videojs.time.setFormatTime", La), du.resetFormatTime = lu(9, "videojs.resetFormatTime", "videojs.time.resetFormatTime", Oa), du.parseUrl = lu(9, "videojs.parseUrl", "videojs.url.parseUrl", so), du.isCrossOrigin = lu(9, "videojs.isCrossOrigin", "videojs.url.isCrossOrigin", ao), du.EventTarget = oa, du.any = Zr, du.on = Kr, du.one = Jr, du.off = Yr, du.trigger = Qr, du.xhr = Ce, du.TextTrack = uo, du.AudioTrack = co, du.VideoTrack = po, ["isEl", "isTextNode", "createEl", "hasClass", "addClass", "removeClass", "toggleClass", "setAttributes", "getAttributes", "emptyEl", "appendContent", "insertContent"].forEach((e10) => {
  du[e10] = function() {
    return yn.warn(`videojs.${e10}() is deprecated; use videojs.dom.${e10}() instead`), Lr[e10].apply(null, arguments);
  };
}), du.computedStyle = lu(9, "videojs.computedStyle", "videojs.dom.computedStyle", Dr), du.dom = Lr, du.fn = ra, du.num = fl, du.str = wa, du.url = oo, du.Error = hu;
var cu = class {
  constructor(e10) {
    let t3 = this;
    return t3.id = e10.id, t3.label = t3.id, t3.width = e10.width, t3.height = e10.height, t3.bitrate = e10.bandwidth, t3.frameRate = e10.frameRate, t3.enabled_ = e10.enabled, Object.defineProperty(t3, "enabled", { get: () => t3.enabled_(), set(e11) {
      t3.enabled_(e11);
    } }), t3;
  }
};
var pu = class extends du.EventTarget {
  constructor() {
    super();
    let e10 = this;
    return e10.levels_ = [], e10.selectedIndex_ = -1, Object.defineProperty(e10, "selectedIndex", { get: () => e10.selectedIndex_ }), Object.defineProperty(e10, "length", { get: () => e10.levels_.length }), e10[Symbol.iterator] = () => e10.levels_.values(), e10;
  }
  addQualityLevel(e10) {
    let t3 = this.getQualityLevelById(e10.id);
    if (t3) return t3;
    const i5 = this.levels_.length;
    return t3 = new cu(e10), "" + i5 in this || Object.defineProperty(this, i5, { get() {
      return this.levels_[i5];
    } }), this.levels_.push(t3), this.trigger({ qualityLevel: t3, type: "addqualitylevel" }), t3;
  }
  removeQualityLevel(e10) {
    let t3 = null;
    for (let i5 = 0, s5 = this.length; i5 < s5; i5++) if (this[i5] === e10) {
      t3 = this.levels_.splice(i5, 1)[0], this.selectedIndex_ === i5 ? this.selectedIndex_ = -1 : this.selectedIndex_ > i5 && this.selectedIndex_--;
      break;
    }
    return t3 && this.trigger({ qualityLevel: e10, type: "removequalitylevel" }), t3;
  }
  getQualityLevelById(e10) {
    for (let t3 = 0, i5 = this.length; t3 < i5; t3++) {
      const i6 = this[t3];
      if (i6.id === e10) return i6;
    }
    return null;
  }
  dispose() {
    this.selectedIndex_ = -1, this.levels_.length = 0;
  }
};
pu.prototype.allowedEvents_ = { change: "change", addqualitylevel: "addqualitylevel", removequalitylevel: "removequalitylevel" };
for (const Cg in pu.prototype.allowedEvents_) pu.prototype["on" + Cg] = null;
var mu = "4.1.0";
var gu = function(e10, t3) {
  const i5 = e10.qualityLevels, s5 = new pu(), n4 = function() {
    s5.dispose(), e10.qualityLevels = i5, e10.off("dispose", n4);
  };
  return e10.on("dispose", n4), e10.qualityLevels = () => s5, e10.qualityLevels.VERSION = mu, s5;
};
var fu = function(e10) {
  return gu(this, du.obj.merge({}, e10));
};
du.registerPlugin("qualityLevels", fu), fu.VERSION = mu;
var yu = je;
var _u = (e10, t3) => t3 && t3.responseURL && e10 !== t3.responseURL ? t3.responseURL : e10;
var vu = (e10) => du.log.debug ? du.log.debug.bind(du, "VHS:", `${e10} >`) : function() {
};
function bu(...e10) {
  const t3 = du.obj || du;
  return (t3.merge || t3.mergeOptions).apply(t3, e10);
}
function Tu(...e10) {
  const t3 = du.time || du;
  return (t3.createTimeRanges || t3.createTimeRanges).apply(t3, e10);
}
function Su(e10) {
  if (0 === e10.length) return "Buffered Ranges are empty";
  let t3 = "Buffered Ranges: \n";
  for (let i5 = 0; i5 < e10.length; i5++) {
    const s5 = e10.start(i5), n4 = e10.end(i5);
    t3 += `${s5} --> ${n4}. Duration (${n4 - s5})
`;
  }
  return t3;
}
var Eu = 1 / 30;
var wu = 3 * Eu;
var Cu = function(e10, t3) {
  const i5 = [];
  let s5;
  if (e10 && e10.length) for (s5 = 0; s5 < e10.length; s5++) t3(e10.start(s5), e10.end(s5)) && i5.push([e10.start(s5), e10.end(s5)]);
  return Tu(i5);
};
var ku = function(e10, t3) {
  return Cu(e10, function(e11, i5) {
    return e11 - wu <= t3 && i5 + wu >= t3;
  });
};
var Iu = function(e10, t3) {
  return Cu(e10, function(e11) {
    return e11 - Eu >= t3;
  });
};
var xu = function(e10) {
  if (e10.length < 2) return Tu();
  const t3 = [];
  for (let i5 = 1; i5 < e10.length; i5++) {
    const s5 = e10.end(i5 - 1), n4 = e10.start(i5);
    t3.push([s5, n4]);
  }
  return Tu(t3);
};
var Au = function(e10, t3) {
  let i5 = null, s5 = null, n4 = 0;
  const r5 = [], a9 = [];
  if (!(e10 && e10.length && t3 && t3.length)) return Tu();
  let o4 = e10.length;
  for (; o4--; ) r5.push({ time: e10.start(o4), type: "start" }), r5.push({ time: e10.end(o4), type: "end" });
  for (o4 = t3.length; o4--; ) r5.push({ time: t3.start(o4), type: "start" }), r5.push({ time: t3.end(o4), type: "end" });
  for (r5.sort(function(e11, t4) {
    return e11.time - t4.time;
  }), o4 = 0; o4 < r5.length; o4++) "start" === r5[o4].type ? (n4++, 2 === n4 && (i5 = r5[o4].time)) : "end" === r5[o4].type && (n4--, 1 === n4 && (s5 = r5[o4].time)), null !== i5 && null !== s5 && (a9.push([i5, s5]), i5 = null, s5 = null);
  return Tu(a9);
};
var Du = (e10) => {
  const t3 = [];
  if (!e10 || !e10.length) return "";
  for (let i5 = 0; i5 < e10.length; i5++) t3.push(e10.start(i5) + " => " + e10.end(i5));
  return t3.join(", ");
};
var Pu = function(e10, t3, i5 = 1) {
  return ((e10.length ? e10.end(e10.length - 1) : 0) - t3) / i5;
};
var Lu = (e10) => {
  const t3 = [];
  for (let i5 = 0; i5 < e10.length; i5++) t3.push({ start: e10.start(i5), end: e10.end(i5) });
  return t3;
};
var Ou = function(e10, t3) {
  if (e10 === t3) return false;
  if (!e10 && t3 || !t3 && e10) return true;
  if (e10.length !== t3.length) return true;
  for (let i5 = 0; i5 < e10.length; i5++) if (e10.start(i5) !== t3.start(i5) || e10.end(i5) !== t3.end(i5)) return true;
  return false;
};
var Nu = function(e10) {
  if (e10 && e10.length && e10.end) return e10.end(e10.length - 1);
};
var Ru = function(e10, t3) {
  let i5 = 0;
  if (!e10 || !e10.length) return i5;
  for (let s5 = 0; s5 < e10.length; s5++) {
    const n4 = e10.start(s5), r5 = e10.end(s5);
    t3 > r5 || (i5 += t3 > n4 && t3 <= r5 ? r5 - t3 : r5 - n4);
  }
  return i5;
};
var Mu = (e10, t3) => {
  if (!t3.preload) return t3.duration;
  let i5 = 0;
  return (t3.parts || []).forEach(function(e11) {
    i5 += e11.duration;
  }), (t3.preloadHints || []).forEach(function(t4) {
    "PART" === t4.type && (i5 += e10.partTargetDuration);
  }), i5;
};
var Uu = (e10) => (e10.segments || []).reduce((e11, t3, i5) => (t3.parts ? t3.parts.forEach(function(s5, n4) {
  e11.push({ duration: s5.duration, segmentIndex: i5, partIndex: n4, part: s5, segment: t3 });
}) : e11.push({ duration: t3.duration, segmentIndex: i5, partIndex: null, segment: t3, part: null }), e11), []);
var Bu = (e10) => {
  const t3 = e10.segments && e10.segments.length && e10.segments[e10.segments.length - 1];
  return t3 && t3.parts || [];
};
var Fu = ({ preloadSegment: e10 }) => {
  if (!e10) return;
  const { parts: t3, preloadHints: i5 } = e10;
  let s5 = (i5 || []).reduce((e11, t4) => e11 + ("PART" === t4.type ? 1 : 0), 0);
  return s5 += t3 && t3.length ? t3.length : 0, s5;
};
var qu = (e10, t3) => {
  if (t3.endList) return 0;
  if (e10 && e10.suggestedPresentationDelay) return e10.suggestedPresentationDelay;
  const i5 = Bu(t3).length > 0;
  return i5 && t3.serverControl && t3.serverControl.partHoldBack ? t3.serverControl.partHoldBack : i5 && t3.partTargetDuration ? 3 * t3.partTargetDuration : t3.serverControl && t3.serverControl.holdBack ? t3.serverControl.holdBack : t3.targetDuration ? 3 * t3.targetDuration : 0;
};
var ju = function(e10, t3) {
  let i5 = 0, s5 = t3 - e10.mediaSequence, n4 = e10.segments[s5];
  if (n4) {
    if (void 0 !== n4.start) return { result: n4.start, precise: true };
    if (void 0 !== n4.end) return { result: n4.end - n4.duration, precise: true };
  }
  for (; s5--; ) {
    if (n4 = e10.segments[s5], void 0 !== n4.end) return { result: i5 + n4.end, precise: true };
    if (i5 += Mu(e10, n4), void 0 !== n4.start) return { result: i5 + n4.start, precise: true };
  }
  return { result: i5, precise: false };
};
var $u = function(e10, t3) {
  let i5, s5 = 0, n4 = t3 - e10.mediaSequence;
  for (; n4 < e10.segments.length; n4++) {
    if (i5 = e10.segments[n4], void 0 !== i5.start) return { result: i5.start - s5, precise: true };
    if (s5 += Mu(e10, i5), void 0 !== i5.end) return { result: i5.end - s5, precise: true };
  }
  return { result: -1, precise: false };
};
var Hu = function(e10, t3, i5) {
  if (void 0 === t3 && (t3 = e10.mediaSequence + e10.segments.length), t3 < e10.mediaSequence) return 0;
  const s5 = ju(e10, t3);
  if (s5.precise) return s5.result;
  const n4 = $u(e10, t3);
  return n4.precise ? n4.result : s5.result + i5;
};
var Vu = function(e10, t3, i5) {
  if (!e10) return 0;
  if ("number" != typeof i5 && (i5 = 0), void 0 === t3) {
    if (e10.totalDuration) return e10.totalDuration;
    if (!e10.endList) return b3.Infinity;
  }
  return Hu(e10, t3, i5);
};
var zu = function({ defaultDuration: e10, durationList: t3, startIndex: i5, endIndex: s5 }) {
  let n4 = 0;
  if (i5 > s5 && ([i5, s5] = [s5, i5]), i5 < 0) {
    for (let t4 = i5; t4 < Math.min(0, s5); t4++) n4 += e10;
    i5 = 0;
  }
  for (let r5 = i5; r5 < s5; r5++) n4 += t3[r5].duration;
  return n4;
};
var Wu = function(e10, t3, i5, s5) {
  if (!e10 || !e10.segments) return null;
  if (e10.endList) return Vu(e10);
  if (null === t3) return null;
  t3 = t3 || 0;
  let n4 = Hu(e10, e10.mediaSequence + e10.segments.length, t3);
  return i5 && (n4 -= s5 = "number" == typeof s5 ? s5 : qu(null, e10)), Math.max(0, n4);
};
var Gu = function(e10) {
  return e10.excludeUntil && e10.excludeUntil > Date.now();
};
var Xu = function(e10) {
  return e10.excludeUntil && e10.excludeUntil === 1 / 0;
};
var Ku = function(e10) {
  const t3 = Gu(e10);
  return !e10.disabled && !t3;
};
var Yu = function(e10, t3) {
  return t3.attributes && t3.attributes[e10];
};
var Qu = function(e10, t3, i5, s5 = 0) {
  if (!Yu("BANDWIDTH", i5)) return NaN;
  return (e10 * i5.attributes.BANDWIDTH - 8 * s5) / t3;
};
var Ju = (e10, t3) => {
  if (1 === e10.playlists.length) return true;
  const i5 = t3.attributes.BANDWIDTH || Number.MAX_VALUE;
  return 0 === e10.playlists.filter((e11) => !!Ku(e11) && (e11.attributes.BANDWIDTH || 0) < i5).length;
};
var Zu = (e10, t3) => !(!e10 && !t3 || !e10 && t3 || e10 && !t3) && (e10 === t3 || (!(!e10.id || !t3.id || e10.id !== t3.id) || (!(!e10.resolvedUri || !t3.resolvedUri || e10.resolvedUri !== t3.resolvedUri) || !(!e10.uri || !t3.uri || e10.uri !== t3.uri))));
var ed = function(e10, t3) {
  const i5 = e10 && e10.mediaGroups && e10.mediaGroups.AUDIO || {};
  let s5 = false;
  for (const n4 in i5) {
    for (const e11 in i5[n4]) if (s5 = t3(i5[n4][e11]), s5) break;
    if (s5) break;
  }
  return !!s5;
};
var td = (e10) => {
  if (!e10 || !e10.playlists || !e10.playlists.length) {
    return ed(e10, (e11) => e11.playlists && e11.playlists.length || e11.uri);
  }
  for (let t3 = 0; t3 < e10.playlists.length; t3++) {
    const i5 = e10.playlists[t3], s5 = i5.attributes && i5.attributes.CODECS;
    if (s5 && s5.split(",").every((e11) => ut(e11))) continue;
    if (!ed(e10, (e11) => Zu(i5, e11))) return false;
  }
  return true;
};
var id = { liveEdgeDelay: qu, duration: Vu, seekable: function(e10, t3, i5) {
  const s5 = t3 || 0;
  let n4 = Wu(e10, t3, true, i5);
  return null === n4 ? Tu() : (n4 < s5 && (n4 = s5), Tu(s5, n4));
}, getMediaInfoForTime: function({ playlist: e10, currentTime: t3, startingSegmentIndex: i5, startingPartIndex: s5, startTime: n4, exactManifestTimings: r5 }) {
  let a9 = t3 - n4;
  const o4 = Uu(e10);
  let l7 = 0;
  for (let h3 = 0; h3 < o4.length; h3++) {
    const e11 = o4[h3];
    if (i5 === e11.segmentIndex && ("number" != typeof s5 || "number" != typeof e11.partIndex || s5 === e11.partIndex)) {
      l7 = h3;
      break;
    }
  }
  if (a9 < 0) {
    if (l7 > 0) for (let t4 = l7 - 1; t4 >= 0; t4--) {
      const i6 = o4[t4];
      if (a9 += i6.duration, r5) {
        if (a9 < 0) continue;
      } else if (a9 + Eu <= 0) continue;
      return { partIndex: i6.partIndex, segmentIndex: i6.segmentIndex, startTime: n4 - zu({ defaultDuration: e10.targetDuration, durationList: o4, startIndex: l7, endIndex: t4 }) };
    }
    return { partIndex: o4[0] && o4[0].partIndex || null, segmentIndex: o4[0] && o4[0].segmentIndex || 0, startTime: t3 };
  }
  if (l7 < 0) {
    for (let i6 = l7; i6 < 0; i6++) if (a9 -= e10.targetDuration, a9 < 0) return { partIndex: o4[0] && o4[0].partIndex || null, segmentIndex: o4[0] && o4[0].segmentIndex || 0, startTime: t3 };
    l7 = 0;
  }
  for (let h3 = l7; h3 < o4.length; h3++) {
    const t4 = o4[h3];
    a9 -= t4.duration;
    const i6 = t4.duration > Eu;
    if (!(0 === a9) && !(i6 && a9 + Eu >= 0) || h3 === o4.length - 1) {
      if (r5) {
        if (a9 > 0) continue;
      } else if (a9 - Eu >= 0) continue;
      return { partIndex: t4.partIndex, segmentIndex: t4.segmentIndex, startTime: n4 + zu({ defaultDuration: e10.targetDuration, durationList: o4, startIndex: l7, endIndex: h3 }) };
    }
  }
  return { segmentIndex: o4[o4.length - 1].segmentIndex, partIndex: o4[o4.length - 1].partIndex, startTime: t3 };
}, isEnabled: Ku, isDisabled: function(e10) {
  return e10.disabled;
}, isExcluded: Gu, isIncompatible: Xu, playlistEnd: Wu, isAes: function(e10) {
  for (let t3 = 0; t3 < e10.segments.length; t3++) if (e10.segments[t3].key) return true;
  return false;
}, hasAttribute: Yu, estimateSegmentRequestTime: Qu, isLowestEnabledRendition: Ju, isAudioOnly: td, playlistMatch: Zu, segmentDurationWithParts: Mu };
var { log: sd } = du;
var nd = (e10, t3) => `${e10}-${t3}`;
var rd = (e10, t3, i5) => `placeholder-uri-${e10}-${t3}-${i5}`;
var ad = ({ onwarn: e10, oninfo: t3, manifestString: i5, customTagParsers: s5 = [], customTagMappers: n4 = [], llhls: r5 }) => {
  const a9 = new tt();
  e10 && a9.on("warn", e10), t3 && a9.on("info", t3), s5.forEach((e11) => a9.addParser(e11)), n4.forEach((e11) => a9.addTagMapper(e11)), a9.push(i5), a9.end();
  const o4 = a9.manifest;
  if (r5 || (["preloadSegment", "skip", "serverControl", "renditionReports", "partInf", "partTargetDuration"].forEach(function(e11) {
    o4.hasOwnProperty(e11) && delete o4[e11];
  }), o4.segments && o4.segments.forEach(function(e11) {
    ["parts", "preloadHints"].forEach(function(t4) {
      e11.hasOwnProperty(t4) && delete e11[t4];
    });
  })), !o4.targetDuration) {
    let t4 = 10;
    o4.segments && o4.segments.length && (t4 = o4.segments.reduce((e11, t5) => Math.max(e11, t5.duration), 0)), e10 && e10({ message: `manifest has no targetDuration defaulting to ${t4}` }), o4.targetDuration = t4;
  }
  const l7 = Bu(o4);
  if (l7.length && !o4.partTargetDuration) {
    const t4 = l7.reduce((e11, t5) => Math.max(e11, t5.duration), 0);
    e10 && (e10({ message: `manifest has no partTargetDuration defaulting to ${t4}` }), sd.error("LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.")), o4.partTargetDuration = t4;
  }
  return o4;
};
var od = (e10, t3) => {
  e10.mediaGroups && ["AUDIO", "SUBTITLES"].forEach((i5) => {
    if (e10.mediaGroups[i5]) for (const s5 in e10.mediaGroups[i5]) for (const n4 in e10.mediaGroups[i5][s5]) {
      const r5 = e10.mediaGroups[i5][s5][n4];
      t3(r5, i5, s5, n4);
    }
  });
};
var ld = ({ playlist: e10, uri: t3, id: i5 }) => {
  e10.id = i5, e10.playlistErrors_ = 0, t3 && (e10.uri = t3), e10.attributes = e10.attributes || {};
};
var hd = (e10) => {
  let t3 = e10.playlists.length;
  for (; t3--; ) {
    const i5 = e10.playlists[t3];
    ld({ playlist: i5, id: nd(t3, i5.uri) }), i5.resolvedUri = yu(e10.uri, i5.uri), e10.playlists[i5.id] = i5, e10.playlists[i5.uri] = i5, i5.attributes.BANDWIDTH || sd.warn("Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.");
  }
};
var ud = (e10) => {
  od(e10, (t3) => {
    t3.uri && (t3.resolvedUri = yu(e10.uri, t3.uri));
  });
};
var dd = (e10, t3) => {
  const i5 = nd(0, t3), s5 = { mediaGroups: { AUDIO: {}, VIDEO: {}, "CLOSED-CAPTIONS": {}, SUBTITLES: {} }, uri: b3.location.href, resolvedUri: b3.location.href, playlists: [{ uri: t3, id: i5, resolvedUri: t3, attributes: {} }] };
  return s5.playlists[i5] = s5.playlists[0], s5.playlists[t3] = s5.playlists[0], s5;
};
var cd = (e10, t3, i5 = rd) => {
  e10.uri = t3;
  for (let n4 = 0; n4 < e10.playlists.length; n4++) if (!e10.playlists[n4].uri) {
    const t4 = `placeholder-uri-${n4}`;
    e10.playlists[n4].uri = t4;
  }
  const s5 = td(e10);
  od(e10, (t4, n4, r5, a9) => {
    if (!t4.playlists || !t4.playlists.length) {
      if (s5 && "AUDIO" === n4 && !t4.uri) for (let t5 = 0; t5 < e10.playlists.length; t5++) {
        const i6 = e10.playlists[t5];
        if (i6.attributes && i6.attributes.AUDIO && i6.attributes.AUDIO === r5) return;
      }
      t4.playlists = [Fe({}, t4)];
    }
    t4.playlists.forEach(function(t5, s6) {
      const o4 = i5(n4, r5, a9, t5), l7 = nd(s6, o4);
      t5.uri ? t5.resolvedUri = t5.resolvedUri || yu(e10.uri, t5.uri) : (t5.uri = 0 === s6 ? o4 : l7, t5.resolvedUri = t5.uri), t5.id = t5.id || l7, t5.attributes = t5.attributes || {}, e10.playlists[t5.id] = t5, e10.playlists[t5.uri] = t5;
    });
  }), hd(e10), ud(e10);
};
var pd = class {
  constructor() {
    this.offset_ = null, this.pendingDateRanges_ = /* @__PURE__ */ new Map(), this.processedDateRanges_ = /* @__PURE__ */ new Map();
  }
  setOffset(e10 = []) {
    if (null !== this.offset_) return;
    if (!e10.length) return;
    const [t3] = e10;
    void 0 !== t3.programDateTime && (this.offset_ = t3.programDateTime / 1e3);
  }
  setPendingDateRanges(e10 = []) {
    if (!e10.length) return;
    const [t3] = e10, i5 = t3.startDate.getTime();
    this.trimProcessedDateRanges_(i5), this.pendingDateRanges_ = e10.reduce((e11, t4) => (e11.set(t4.id, t4), e11), /* @__PURE__ */ new Map());
  }
  processDateRange(e10) {
    this.pendingDateRanges_.delete(e10.id), this.processedDateRanges_.set(e10.id, e10);
  }
  getDateRangesToProcess() {
    if (null === this.offset_) return [];
    const e10 = {}, t3 = [];
    this.pendingDateRanges_.forEach((i5, s5) => {
      if (!this.processedDateRanges_.has(s5) && (i5.startTime = i5.startDate.getTime() / 1e3 - this.offset_, i5.processDateRange = () => this.processDateRange(i5), t3.push(i5), i5.class)) if (e10[i5.class]) {
        const t4 = e10[i5.class].push(i5);
        i5.classListIndex = t4 - 1;
      } else e10[i5.class] = [i5], i5.classListIndex = 0;
    });
    for (const i5 of t3) {
      const t4 = e10[i5.class] || [];
      i5.endDate ? i5.endTime = i5.endDate.getTime() / 1e3 - this.offset_ : i5.endOnNext && t4[i5.classListIndex + 1] ? i5.endTime = t4[i5.classListIndex + 1].startTime : i5.duration ? i5.endTime = i5.startTime + i5.duration : i5.plannedDuration ? i5.endTime = i5.startTime + i5.plannedDuration : i5.endTime = i5.startTime;
    }
    return t3;
  }
  trimProcessedDateRanges_(e10) {
    new Map(this.processedDateRanges_).forEach((t3, i5) => {
      t3.startDate.getTime() < e10 && this.processedDateRanges_.delete(i5);
    });
  }
};
var md = 22;
var gd = ({ requestType: e10, request: t3, error: i5, parseFailure: s5 }) => {
  const n4 = t3.status < 200 || t3.status > 299, r5 = t3.status >= 400 && t3.status <= 499, a9 = { uri: t3.uri, requestType: e10 }, o4 = n4 && !r5 || s5;
  if (i5 && r5) a9.error = Fe({}, i5), a9.errorType = du.Error.NetworkRequestFailed;
  else if (t3.aborted) a9.errorType = du.Error.NetworkRequestAborted;
  else if (t3.timedout) a9.erroType = du.Error.NetworkRequestTimeout;
  else if (o4) {
    const e11 = s5 ? du.Error.NetworkBodyParserFailed : du.Error.NetworkBadStatus;
    a9.errorType = e11, a9.status = t3.status, a9.headers = t3.headers;
  }
  return a9;
};
var fd = vu("CodecUtils");
var yd = function(e10) {
  const t3 = e10.attributes || {};
  if (t3.CODECS) return lt(t3.CODECS);
};
var _d = (e10, t3) => {
  const i5 = t3.attributes || {};
  return e10 && e10.mediaGroups && e10.mediaGroups.AUDIO && i5.AUDIO && e10.mediaGroups.AUDIO[i5.AUDIO];
};
var vd = (e10, t3) => {
  if (!_d(e10, t3)) return true;
  const i5 = t3.attributes || {}, s5 = e10.mediaGroups.AUDIO[i5.AUDIO];
  for (const n4 in s5) if (!s5[n4].uri && !s5[n4].playlists) return true;
  return false;
};
var bd = function(e10) {
  const t3 = {};
  return e10.forEach(({ mediaType: e11, type: i5, details: s5 }) => {
    t3[e11] = t3[e11] || [], t3[e11].push(ot(`${i5}${s5}`));
  }), Object.keys(t3).forEach(function(e11) {
    if (t3[e11].length > 1) return fd(`multiple ${e11} codecs found as attributes: ${t3[e11].join(", ")}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`), void (t3[e11] = null);
    t3[e11] = t3[e11][0];
  }), t3;
};
var Td = function(e10) {
  let t3 = 0;
  return e10.audio && t3++, e10.video && t3++, t3;
};
var Sd = function(e10, t3) {
  const i5 = t3.attributes || {}, s5 = bd(yd(t3) || []);
  if (_d(e10, t3) && !s5.audio && !vd(e10, t3)) {
    const t4 = bd(ht(e10, i5.AUDIO) || []);
    t4.audio && (s5.audio = t4.audio);
  }
  return s5;
};
var { EventTarget: Ed } = du;
var wd = (e10, t3) => {
  if (t3.endList || !t3.serverControl) return e10;
  const i5 = {};
  if (t3.serverControl.canBlockReload) {
    const { preloadSegment: e11 } = t3;
    let s5 = t3.mediaSequence + t3.segments.length;
    if (e11) {
      const n4 = e11.parts || [], r5 = Fu(t3) - 1;
      r5 > -1 && r5 !== n4.length - 1 && (i5._HLS_part = r5), (r5 > -1 || n4.length) && s5--;
    }
    i5._HLS_msn = s5;
  }
  if (t3.serverControl && t3.serverControl.canSkipUntil && (i5._HLS_skip = t3.serverControl.canSkipDateranges ? "v2" : "YES"), Object.keys(i5).length) {
    const t4 = new b3.URL(e10);
    ["_HLS_skip", "_HLS_msn", "_HLS_part"].forEach(function(e11) {
      i5.hasOwnProperty(e11) && t4.searchParams.set(e11, i5[e11]);
    }), e10 = t4.toString();
  }
  return e10;
};
var Cd = (e10, t3) => {
  if (!e10) return t3;
  const i5 = bu(e10, t3);
  if (e10.preloadHints && !t3.preloadHints && delete i5.preloadHints, e10.parts && !t3.parts) delete i5.parts;
  else if (e10.parts && t3.parts) for (let s5 = 0; s5 < t3.parts.length; s5++) e10.parts && e10.parts[s5] && (i5.parts[s5] = bu(e10.parts[s5], t3.parts[s5]));
  return !e10.skipped && t3.skipped && (i5.skipped = false), e10.preload && !t3.preload && (i5.preload = false), i5;
};
var kd = (e10, t3, i5) => {
  const s5 = e10.slice(), n4 = t3.slice();
  i5 = i5 || 0;
  const r5 = [];
  let a9;
  for (let o4 = 0; o4 < n4.length; o4++) {
    const e11 = s5[o4 + i5], t4 = n4[o4];
    e11 ? (a9 = e11.map || a9, r5.push(Cd(e11, t4))) : (a9 && !t4.map && (t4.map = a9), r5.push(t4));
  }
  return r5;
};
var Id = (e10, t3) => {
  !e10.resolvedUri && e10.uri && (e10.resolvedUri = yu(t3, e10.uri)), e10.key && !e10.key.resolvedUri && (e10.key.resolvedUri = yu(t3, e10.key.uri)), e10.map && !e10.map.resolvedUri && (e10.map.resolvedUri = yu(t3, e10.map.uri)), e10.map && e10.map.key && !e10.map.key.resolvedUri && (e10.map.key.resolvedUri = yu(t3, e10.map.key.uri)), e10.parts && e10.parts.length && e10.parts.forEach((e11) => {
    e11.resolvedUri || (e11.resolvedUri = yu(t3, e11.uri));
  }), e10.preloadHints && e10.preloadHints.length && e10.preloadHints.forEach((e11) => {
    e11.resolvedUri || (e11.resolvedUri = yu(t3, e11.uri));
  });
};
var xd = function(e10) {
  const t3 = e10.segments || [], i5 = e10.preloadSegment;
  if (i5 && i5.parts && i5.parts.length) {
    if (i5.preloadHints) {
      for (let e11 = 0; e11 < i5.preloadHints.length; e11++) if ("MAP" === i5.preloadHints[e11].type) return t3;
    }
    i5.duration = e10.targetDuration, i5.preload = true, t3.push(i5);
  }
  return t3;
};
var Ad = (e10, t3) => e10 === t3 || e10.segments && t3.segments && e10.segments.length === t3.segments.length && e10.endList === t3.endList && e10.mediaSequence === t3.mediaSequence && e10.preloadSegment === t3.preloadSegment;
var Dd = (e10, t3, i5 = Ad) => {
  const s5 = bu(e10, {}), n4 = s5.playlists[t3.id];
  if (!n4) return null;
  if (i5(n4, t3)) return null;
  t3.segments = xd(t3);
  const r5 = bu(n4, t3);
  if (r5.preloadSegment && !t3.preloadSegment && delete r5.preloadSegment, n4.segments) {
    if (t3.skip) {
      t3.segments = t3.segments || [];
      for (let e11 = 0; e11 < t3.skip.skippedSegments; e11++) t3.segments.unshift({ skipped: true });
    }
    r5.segments = kd(n4.segments, t3.segments, t3.mediaSequence - n4.mediaSequence);
  }
  r5.segments.forEach((e11) => {
    Id(e11, r5.resolvedUri);
  });
  for (let a9 = 0; a9 < s5.playlists.length; a9++) s5.playlists[a9].id === t3.id && (s5.playlists[a9] = r5);
  return s5.playlists[t3.id] = r5, s5.playlists[t3.uri] = r5, od(e10, (e11, i6, s6, n5) => {
    if (e11.playlists) for (let a9 = 0; a9 < e11.playlists.length; a9++) t3.id === e11.playlists[a9].id && (e11.playlists[a9] = r5);
  }), s5;
};
var Pd = (e10, t3) => {
  const i5 = e10.segments || [], s5 = i5[i5.length - 1], n4 = s5 && s5.parts && s5.parts[s5.parts.length - 1], r5 = n4 && n4.duration || s5 && s5.duration;
  return t3 && r5 ? 1e3 * r5 : 500 * (e10.partTargetDuration || e10.targetDuration || 10);
};
var Ld = (e10, t3, i5) => {
  if (!e10) return;
  const s5 = [];
  return e10.forEach((e11) => {
    if (!e11.attributes) return;
    const { BANDWIDTH: t4, RESOLUTION: i6, CODECS: n4 } = e11.attributes;
    s5.push({ id: e11.id, bandwidth: t4, resolution: i6, codecs: n4 });
  }), { type: t3, isLive: i5, renditions: s5 };
};
var Od = class extends Ed {
  constructor(e10, t3, i5 = {}) {
    if (super(), !e10) throw new Error("A non-empty playlist URL or object is required");
    this.logger_ = vu("PlaylistLoader");
    const { withCredentials: s5 = false } = i5;
    this.src = e10, this.vhs_ = t3, this.withCredentials = s5, this.addDateRangesToTextTrack_ = i5.addDateRangesToTextTrack;
    const n4 = t3.options_;
    this.customTagParsers = n4 && n4.customTagParsers || [], this.customTagMappers = n4 && n4.customTagMappers || [], this.llhls = n4 && n4.llhls, this.dateRangesStorage_ = new pd(), this.state = "HAVE_NOTHING", this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this), this.on("mediaupdatetimeout", this.handleMediaupdatetimeout_), this.on("loadedplaylist", this.handleLoadedPlaylist_.bind(this));
  }
  handleLoadedPlaylist_() {
    const e10 = this.media();
    if (!e10) return;
    this.dateRangesStorage_.setOffset(e10.segments), this.dateRangesStorage_.setPendingDateRanges(e10.dateRanges);
    const t3 = this.dateRangesStorage_.getDateRangesToProcess();
    t3.length && this.addDateRangesToTextTrack_ && this.addDateRangesToTextTrack_(t3);
  }
  handleMediaupdatetimeout_() {
    if ("HAVE_METADATA" !== this.state) return;
    const e10 = this.media();
    let t3 = yu(this.main.uri, e10.uri);
    this.llhls && (t3 = wd(t3, e10)), this.state = "HAVE_CURRENT_METADATA", this.request = this.vhs_.xhr({ uri: t3, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (e11, t4) => {
      if (this.request) return e11 ? this.playlistRequestError(this.request, this.media(), "HAVE_METADATA") : void this.haveMetadata({ playlistString: this.request.responseText, url: this.media().uri, id: this.media().id });
    });
  }
  playlistRequestError(e10, t3, i5) {
    const { uri: s5, id: n4 } = t3;
    this.request = null, i5 && (this.state = i5), this.error = { playlist: this.main.playlists[n4], status: e10.status, message: `HLS playlist request error at URL: ${s5}.`, responseText: e10.responseText, code: e10.status >= 500 ? 4 : 2, metadata: gd({ requestType: e10.requestType, request: e10, error: e10.error }) }, this.trigger("error");
  }
  parseManifest_({ url: e10, manifestString: t3 }) {
    try {
      const i5 = ad({ onwarn: ({ message: t4 }) => this.logger_(`m3u8-parser warn for ${e10}: ${t4}`), oninfo: ({ message: t4 }) => this.logger_(`m3u8-parser info for ${e10}: ${t4}`), manifestString: t3, customTagParsers: this.customTagParsers, customTagMappers: this.customTagMappers, llhls: this.llhls });
      return i5.playlists && i5.playlists.length ? (this.excludeAudioOnlyVariants(i5.playlists), i5) : i5;
    } catch (i5) {
      this.error = i5, this.error.metadata = { errorType: du.Error.StreamingHlsPlaylistParserError, error: i5 };
    }
  }
  excludeAudioOnlyVariants(e10) {
    const t3 = (e11) => {
      const t4 = e11.attributes || {}, { width: i5, height: s5 } = t4.RESOLUTION || {};
      if (i5 && s5) return true;
      const n4 = yd(e11) || [], r5 = bd(n4);
      return Boolean(r5.video);
    };
    e10.some(t3) && e10.forEach((e11) => {
      t3(e11) || (e11.excludeUntil = 1 / 0);
    });
  }
  haveMetadata({ playlistString: e10, playlistObject: t3, url: i5, id: s5 }) {
    this.request = null, this.state = "HAVE_METADATA";
    const n4 = { playlistInfo: { type: "media", uri: i5 } };
    this.trigger({ type: "playlistparsestart", metadata: n4 });
    const r5 = t3 || this.parseManifest_({ url: i5, manifestString: e10 });
    r5.lastRequest = Date.now(), ld({ playlist: r5, uri: i5, id: s5 });
    const a9 = Dd(this.main, r5);
    this.targetDuration = r5.partTargetDuration || r5.targetDuration, this.pendingMedia_ = null, a9 ? (this.main = a9, this.media_ = this.main.playlists[s5]) : this.trigger("playlistunchanged"), this.updateMediaUpdateTimeout_(Pd(this.media(), !!a9)), n4.parsedPlaylist = Ld(this.main.playlists, n4.playlistInfo.type, !this.media_.endList), this.trigger({ type: "playlistparsecomplete", metadata: n4 }), this.trigger("loadedplaylist");
  }
  dispose() {
    this.trigger("dispose"), this.stopRequest(), b3.clearTimeout(this.mediaUpdateTimeout), b3.clearTimeout(this.finalRenditionTimeout), this.dateRangesStorage_ = new pd(), this.off();
  }
  stopRequest() {
    if (this.request) {
      const e10 = this.request;
      this.request = null, e10.onreadystatechange = null, e10.abort();
    }
  }
  media(e10, t3) {
    if (!e10) return this.media_;
    if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
    if ("string" == typeof e10) {
      if (!this.main.playlists[e10]) throw new Error("Unknown playlist URI: " + e10);
      e10 = this.main.playlists[e10];
    }
    if (b3.clearTimeout(this.finalRenditionTimeout), t3) {
      const t4 = (e10.partTargetDuration || e10.targetDuration) / 2 * 1e3 || 5e3;
      return void (this.finalRenditionTimeout = b3.setTimeout(this.media.bind(this, e10, false), t4));
    }
    const i5 = this.state, s5 = !this.media_ || e10.id !== this.media_.id, n4 = this.main.playlists[e10.id];
    if (n4 && n4.endList || e10.endList && e10.segments.length) return this.request && (this.request.onreadystatechange = null, this.request.abort(), this.request = null), this.state = "HAVE_METADATA", this.media_ = e10, void (s5 && (this.trigger("mediachanging"), "HAVE_MAIN_MANIFEST" === i5 ? this.trigger("loadedmetadata") : this.trigger("mediachange")));
    if (this.updateMediaUpdateTimeout_(Pd(e10, true)), !s5) return;
    if (this.state = "SWITCHING_MEDIA", this.request) {
      if (e10.resolvedUri === this.request.url) return;
      this.request.onreadystatechange = null, this.request.abort(), this.request = null;
    }
    this.media_ && this.trigger("mediachanging"), this.pendingMedia_ = e10;
    const r5 = { playlistInfo: { type: "media", uri: e10.uri } };
    this.trigger({ type: "playlistrequeststart", metadata: r5 }), this.request = this.vhs_.xhr({ uri: e10.resolvedUri, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (t4, s6) => {
      if (this.request) {
        if (e10.lastRequest = Date.now(), e10.resolvedUri = _u(e10.resolvedUri, s6), t4) return this.playlistRequestError(this.request, e10, i5);
        this.trigger({ type: "playlistrequestcomplete", metadata: r5 }), this.haveMetadata({ playlistString: s6.responseText, url: e10.uri, id: e10.id }), "HAVE_MAIN_MANIFEST" === i5 ? this.trigger("loadedmetadata") : this.trigger("mediachange");
      }
    });
  }
  pause() {
    this.mediaUpdateTimeout && (b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), this.stopRequest(), "HAVE_NOTHING" === this.state && (this.started = false), "SWITCHING_MEDIA" === this.state ? this.media_ ? this.state = "HAVE_METADATA" : this.state = "HAVE_MAIN_MANIFEST" : "HAVE_CURRENT_METADATA" === this.state && (this.state = "HAVE_METADATA");
  }
  load(e10) {
    this.mediaUpdateTimeout && (b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null);
    const t3 = this.media();
    if (e10) {
      const e11 = t3 ? (t3.partTargetDuration || t3.targetDuration) / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = b3.setTimeout(() => {
        this.mediaUpdateTimeout = null, this.load();
      }, e11);
    } else this.started ? t3 && !t3.endList ? this.trigger("mediaupdatetimeout") : this.trigger("loadedplaylist") : this.start();
  }
  updateMediaUpdateTimeout_(e10) {
    this.mediaUpdateTimeout && (b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null), this.media() && !this.media().endList && (this.mediaUpdateTimeout = b3.setTimeout(() => {
      this.mediaUpdateTimeout = null, this.trigger("mediaupdatetimeout"), this.updateMediaUpdateTimeout_(e10);
    }, e10));
  }
  start() {
    if (this.started = true, "object" == typeof this.src) return this.src.uri || (this.src.uri = b3.location.href), this.src.resolvedUri = this.src.uri, void setTimeout(() => {
      this.setupInitialPlaylist(this.src);
    }, 0);
    const e10 = { playlistInfo: { type: "multivariant", uri: this.src } };
    this.trigger({ type: "playlistrequeststart", metadata: e10 }), this.request = this.vhs_.xhr({ uri: this.src, withCredentials: this.withCredentials, requestType: "hls-playlist" }, (t3, i5) => {
      if (!this.request) return;
      if (this.request = null, t3) return this.error = { status: i5.status, message: `HLS playlist request error at URL: ${this.src}.`, responseText: i5.responseText, code: 2, metadata: gd({ requestType: i5.requestType, request: i5, error: t3 }) }, "HAVE_NOTHING" === this.state && (this.started = false), this.trigger("error");
      this.trigger({ type: "playlistrequestcomplete", metadata: e10 }), this.src = _u(this.src, i5), this.trigger({ type: "playlistparsestart", metadata: e10 });
      const s5 = this.parseManifest_({ manifestString: i5.responseText, url: this.src });
      e10.parsedPlaylist = Ld(s5.playlists, e10.playlistInfo.type, false), this.trigger({ type: "playlistparsecomplete", metadata: e10 }), this.setupInitialPlaylist(s5);
    });
  }
  srcUri() {
    return "string" == typeof this.src ? this.src : this.src.uri;
  }
  setupInitialPlaylist(e10) {
    if (this.state = "HAVE_MAIN_MANIFEST", e10.playlists) return this.main = e10, cd(this.main, this.srcUri()), e10.playlists.forEach((e11) => {
      e11.segments = xd(e11), e11.segments.forEach((t4) => {
        Id(t4, e11.resolvedUri);
      });
    }), this.trigger("loadedplaylist"), void (this.request || this.media(this.main.playlists[0]));
    const t3 = this.srcUri() || b3.location.href;
    this.main = dd(e10, t3), this.haveMetadata({ playlistObject: e10, url: t3, id: this.main.playlists[0].id }), this.trigger("loadedmetadata");
  }
  updateOrDeleteClone(e10, t3) {
    const i5 = this.main, s5 = e10.ID;
    let n4 = i5.playlists.length;
    for (; n4--; ) {
      const r5 = i5.playlists[n4];
      if (r5.attributes["PATHWAY-ID"] === s5) {
        const a9 = r5.resolvedUri, o4 = r5.id;
        if (t3) {
          const t4 = this.createCloneURI_(r5.resolvedUri, e10), a10 = nd(s5, t4), o5 = this.createCloneAttributes_(s5, r5.attributes), l7 = this.createClonePlaylist_(r5, a10, e10, o5);
          i5.playlists[n4] = l7, i5.playlists[a10] = l7, i5.playlists[t4] = l7;
        } else i5.playlists.splice(n4, 1);
        delete i5.playlists[o4], delete i5.playlists[a9];
      }
    }
    this.updateOrDeleteCloneMedia(e10, t3);
  }
  updateOrDeleteCloneMedia(e10, t3) {
    const i5 = this.main, s5 = e10.ID;
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((e11) => {
      if (i5.mediaGroups[e11] && i5.mediaGroups[e11][s5]) {
        for (const t4 in i5.mediaGroups[e11]) if (t4 === s5) {
          for (const s6 in i5.mediaGroups[e11][t4]) {
            i5.mediaGroups[e11][t4][s6].playlists.forEach((e12, t5) => {
              const s7 = i5.playlists[e12.id], n4 = s7.id, r5 = s7.resolvedUri;
              delete i5.playlists[n4], delete i5.playlists[r5];
            });
          }
          delete i5.mediaGroups[e11][t4];
        }
      }
    }), t3 && this.createClonedMediaGroups_(e10);
  }
  addClonePathway(e10, t3 = {}) {
    const i5 = this.main, s5 = i5.playlists.length, n4 = this.createCloneURI_(t3.resolvedUri, e10), r5 = nd(e10.ID, n4), a9 = this.createCloneAttributes_(e10.ID, t3.attributes), o4 = this.createClonePlaylist_(t3, r5, e10, a9);
    i5.playlists[s5] = o4, i5.playlists[r5] = o4, i5.playlists[n4] = o4, this.createClonedMediaGroups_(e10);
  }
  createClonedMediaGroups_(e10) {
    const t3 = e10.ID, i5 = e10["BASE-ID"], s5 = this.main;
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((n4) => {
      if (s5.mediaGroups[n4] && !s5.mediaGroups[n4][t3]) {
        for (const r5 in s5.mediaGroups[n4]) if (r5 === i5) {
          s5.mediaGroups[n4][t3] = {};
          for (const i6 in s5.mediaGroups[n4][r5]) {
            const a9 = s5.mediaGroups[n4][r5][i6];
            s5.mediaGroups[n4][t3][i6] = Fe({}, a9);
            const o4 = s5.mediaGroups[n4][t3][i6], l7 = this.createCloneURI_(a9.resolvedUri, e10);
            o4.resolvedUri = l7, o4.uri = l7, o4.playlists = [], a9.playlists.forEach((r6, a10) => {
              const l8 = s5.playlists[r6.id], h3 = rd(n4, t3, i6), u6 = nd(t3, h3);
              if (l8 && !s5.playlists[u6]) {
                const t4 = this.createClonePlaylist_(l8, u6, e10), i7 = t4.resolvedUri;
                s5.playlists[u6] = t4, s5.playlists[i7] = t4;
              }
              o4.playlists[a10] = this.createClonePlaylist_(r6, u6, e10);
            });
          }
        }
      }
    });
  }
  createClonePlaylist_(e10, t3, i5, s5) {
    const n4 = this.createCloneURI_(e10.resolvedUri, i5), r5 = { resolvedUri: n4, uri: n4, id: t3 };
    return e10.segments && (r5.segments = []), s5 && (r5.attributes = s5), bu(e10, r5);
  }
  createCloneURI_(e10, t3) {
    const i5 = new URL(e10);
    i5.hostname = t3["URI-REPLACEMENT"].HOST;
    const s5 = t3["URI-REPLACEMENT"].PARAMS;
    for (const n4 of Object.keys(s5)) i5.searchParams.set(n4, s5[n4]);
    return i5.href;
  }
  createCloneAttributes_(e10, t3) {
    const i5 = { "PATHWAY-ID": e10 };
    return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((s5) => {
      t3[s5] && (i5[s5] = e10);
    }), i5;
  }
  getKeyIdSet(e10) {
    if (e10.contentProtection) {
      const t3 = /* @__PURE__ */ new Set();
      for (const i5 in e10.contentProtection) {
        const s5 = e10.contentProtection[i5].attributes.keyId;
        s5 && t3.add(s5.toLowerCase());
      }
      return t3;
    }
  }
};
var Nd = function(e10, t3, i5, s5) {
  const n4 = "arraybuffer" === e10.responseType ? e10.response : e10.responseText;
  !t3 && n4 && (e10.responseTime = Date.now(), e10.roundTripTime = e10.responseTime - e10.requestTime, e10.bytesReceived = n4.byteLength || n4.length, e10.bandwidth || (e10.bandwidth = Math.floor(e10.bytesReceived / e10.roundTripTime * 8 * 1e3))), i5.headers && (e10.responseHeaders = i5.headers), t3 && "ETIMEDOUT" === t3.code && (e10.timedout = true), t3 || e10.aborted || 200 === i5.statusCode || 206 === i5.statusCode || 0 === i5.statusCode || (t3 = new Error("XHR Failed with a response of: " + (e10 && (n4 || e10.responseText)))), s5(t3, e10);
};
var Rd = (e10, t3) => {
  if (!e10 || !e10.size) return;
  let i5 = t3;
  return e10.forEach((e11) => {
    i5 = e11(i5);
  }), i5;
};
var Md = (e10, t3, i5, s5) => {
  e10 && e10.size && e10.forEach((e11) => {
    e11(t3, i5, s5);
  });
};
var Ud = function() {
  const e10 = function e11(t3, i5) {
    t3 = bu({ timeout: 45e3 }, t3);
    const s5 = e11.beforeRequest || du.Vhs.xhr.beforeRequest, n4 = e11._requestCallbackSet || du.Vhs.xhr._requestCallbackSet || /* @__PURE__ */ new Set(), r5 = e11._responseCallbackSet || du.Vhs.xhr._responseCallbackSet;
    s5 && "function" == typeof s5 && (du.log.warn("beforeRequest is deprecated, use onRequest instead."), n4.add(s5));
    const a9 = true === du.Vhs.xhr.original ? du.xhr : du.Vhs.xhr, o4 = Rd(n4, t3);
    n4.delete(s5);
    const l7 = a9(o4 || t3, function(e12, t4) {
      return Md(r5, l7, e12, t4), Nd(l7, e12, t4, i5);
    }), h3 = l7.abort;
    return l7.abort = function() {
      return l7.aborted = true, h3.apply(l7, arguments);
    }, l7.uri = t3.uri, l7.requestType = t3.requestType, l7.requestTime = Date.now(), l7;
  };
  return e10.original = true, e10;
};
var Bd = function(e10) {
  let t3;
  const i5 = e10.offset;
  return t3 = "bigint" == typeof e10.offset || "bigint" == typeof e10.length ? b3.BigInt(e10.offset) + b3.BigInt(e10.length) - b3.BigInt(1) : e10.offset + e10.length - 1, "bytes=" + i5 + "-" + t3;
};
var Fd = function(e10) {
  const t3 = {};
  return e10.byterange && (t3.Range = Bd(e10.byterange)), t3;
};
var qd = function(e10, t3) {
  return e10.start(t3) + "-" + e10.end(t3);
};
var jd = function(e10, t3) {
  const i5 = e10.toString(16);
  return "00".substring(0, 2 - i5.length) + i5 + (t3 % 2 ? " " : "");
};
var $d = function(e10) {
  return e10 >= 32 && e10 < 126 ? String.fromCharCode(e10) : ".";
};
var Hd = function(e10) {
  const t3 = {};
  return Object.keys(e10).forEach((i5) => {
    const s5 = e10[i5];
    St(s5) ? t3[i5] = { bytes: s5.buffer, byteOffset: s5.byteOffset, byteLength: s5.byteLength } : t3[i5] = s5;
  }), t3;
};
var Vd = function(e10) {
  const t3 = e10.byterange || { length: 1 / 0, offset: 0 };
  return [t3.length, t3.offset, e10.resolvedUri].join(",");
};
var zd = function(e10) {
  return e10.resolvedUri;
};
var Wd = (e10) => {
  const t3 = Array.prototype.slice.call(e10), i5 = 16;
  let s5, n4, r5 = "";
  for (let a9 = 0; a9 < t3.length / i5; a9++) s5 = t3.slice(a9 * i5, a9 * i5 + i5).map(jd).join(""), n4 = t3.slice(a9 * i5, a9 * i5 + i5).map($d).join(""), r5 += s5 + " " + n4 + "\n";
  return r5;
};
var Gd = ({ bytes: e10 }) => Wd(e10);
var Xd = (e10) => {
  let t3, i5 = "";
  for (t3 = 0; t3 < e10.length; t3++) i5 += qd(e10, t3) + " ";
  return i5;
};
var Kd = Object.freeze({ __proto__: null, createTransferableMessage: Hd, initSegmentId: Vd, segmentKeyId: zd, hexDump: Wd, tagDump: Gd, textRanges: Xd });
var Yd = 0.25;
var Qd = (e10, t3) => {
  if (!t3.dateTimeObject) return null;
  const i5 = t3.videoTimingInfo.transmuxerPrependedSeconds, s5 = e10 - (t3.videoTimingInfo.transmuxedPresentationStart + i5);
  return new Date(t3.dateTimeObject.getTime() + 1e3 * s5);
};
var Jd = (e10) => e10.transmuxedPresentationEnd - e10.transmuxedPresentationStart - e10.transmuxerPrependedSeconds;
var Zd = (e10, t3) => {
  let i5;
  try {
    i5 = new Date(e10);
  } catch (o4) {
    return null;
  }
  if (!t3 || !t3.segments || 0 === t3.segments.length) return null;
  let s5 = t3.segments[0];
  if (i5 < new Date(s5.dateTimeObject)) return null;
  for (let l7 = 0; l7 < t3.segments.length - 1; l7++) {
    s5 = t3.segments[l7];
    if (i5 < new Date(t3.segments[l7 + 1].dateTimeObject)) break;
  }
  const n4 = t3.segments[t3.segments.length - 1], r5 = n4.dateTimeObject, a9 = n4.videoTimingInfo ? Jd(n4.videoTimingInfo) : n4.duration + n4.duration * Yd;
  return i5 > new Date(r5.getTime() + 1e3 * a9) ? null : (i5 > new Date(r5) && (s5 = n4), { segment: s5, estimatedStart: s5.videoTimingInfo ? s5.videoTimingInfo.transmuxedPresentationStart : id.duration(t3, t3.mediaSequence + t3.segments.indexOf(s5)), type: s5.videoTimingInfo ? "accurate" : "estimate" });
};
var ec = (e10, t3) => {
  if (!t3 || !t3.segments || 0 === t3.segments.length) return null;
  let i5, s5 = 0;
  for (let r5 = 0; r5 < t3.segments.length && (i5 = t3.segments[r5], s5 = i5.videoTimingInfo ? i5.videoTimingInfo.transmuxedPresentationEnd : s5 + i5.duration, !(e10 <= s5)); r5++) ;
  const n4 = t3.segments[t3.segments.length - 1];
  if (n4.videoTimingInfo && n4.videoTimingInfo.transmuxedPresentationEnd < e10) return null;
  if (e10 > s5) {
    if (e10 > s5 + n4.duration * Yd) return null;
    i5 = n4;
  }
  return { segment: i5, estimatedStart: i5.videoTimingInfo ? i5.videoTimingInfo.transmuxedPresentationStart : s5 - i5.duration, type: i5.videoTimingInfo ? "accurate" : "estimate" };
};
var tc = (e10, t3) => {
  let i5, s5;
  try {
    i5 = new Date(e10), s5 = new Date(t3);
  } catch (r5) {
  }
  const n4 = i5.getTime();
  return (s5.getTime() - n4) / 1e3;
};
var ic = (e10) => {
  if (!e10.segments || 0 === e10.segments.length) return false;
  for (let t3 = 0; t3 < e10.segments.length; t3++) {
    if (!e10.segments[t3].dateTimeObject) return false;
  }
  return true;
};
var sc = ({ playlist: e10, time: t3, callback: i5 }) => {
  if (!i5) throw new Error("getProgramTime: callback must be provided");
  if (!e10 || void 0 === t3) return i5({ message: "getProgramTime: playlist and time must be provided" });
  const s5 = ec(t3, e10);
  if (!s5) return i5({ message: "valid programTime was not found" });
  if ("estimate" === s5.type) return i5({ message: "Accurate programTime could not be determined. Please seek to e.seekTime and try again", seekTime: s5.estimatedStart });
  const n4 = { mediaSeconds: t3 }, r5 = Qd(t3, s5.segment);
  return r5 && (n4.programDateTime = r5.toISOString()), i5(null, n4);
};
var nc = ({ programTime: e10, playlist: t3, retryCount: i5 = 2, seekTo: s5, pauseAfterSeek: n4 = true, tech: r5, callback: a9 }) => {
  if (!a9) throw new Error("seekToProgramTime: callback must be provided");
  if (void 0 === e10 || !t3 || !s5) return a9({ message: "seekToProgramTime: programTime, seekTo and playlist must be provided" });
  if (!t3.endList && !r5.hasStarted_) return a9({ message: "player must be playing a live stream to start buffering" });
  if (!ic(t3)) return a9({ message: "programDateTime tags must be provided in the manifest " + t3.resolvedUri });
  const o4 = Zd(e10, t3);
  if (!o4) return a9({ message: `${e10} was not found in the stream` });
  const l7 = o4.segment, h3 = tc(l7.dateTimeObject, e10);
  if ("estimate" === o4.type) return 0 === i5 ? a9({ message: `${e10} is not buffered yet. Try again` }) : (s5(o4.estimatedStart + h3), void r5.one("seeked", () => {
    nc({ programTime: e10, playlist: t3, retryCount: i5 - 1, seekTo: s5, pauseAfterSeek: n4, tech: r5, callback: a9 });
  }));
  const u6 = l7.start + h3, d2 = () => a9(null, r5.currentTime());
  r5.one("seeked", d2), n4 && r5.pause(), s5(u6);
};
var rc = (e10, t3) => {
  if (4 === e10.readyState) return t3();
};
var ac = (e10, t3, i5, s5) => {
  let n4, r5 = [], a9 = false;
  const o4 = function(e11, t4, s6, n5) {
    return t4.abort(), a9 = true, i5(e11, t4, s6, n5);
  }, l7 = function(e11, t4) {
    if (a9) return;
    if (e11) return e11.metadata = gd({ requestType: s5, request: t4, error: e11 }), o4(e11, t4, "", r5);
    const i6 = t4.responseText.substring(r5 && r5.byteLength || 0, t4.responseText.length);
    if (r5 = Lt(r5, Pt(i6, true)), n4 = n4 || xs(r5), r5.length < 10 || n4 && r5.length < n4 + 2) return rc(t4, () => o4(e11, t4, "", r5));
    const l8 = Zs(r5);
    return "ts" === l8 && r5.length < 188 || !l8 && r5.length < 376 ? rc(t4, () => o4(e11, t4, "", r5)) : o4(null, t4, l8, r5);
  }, h3 = { uri: e10, beforeSend(e11) {
    e11.overrideMimeType("text/plain; charset=x-user-defined"), e11.addEventListener("progress", function({ total: t4, loaded: i6 }) {
      return Nd(e11, null, { statusCode: e11.status }, l7);
    });
  } }, u6 = t3(h3, function(e11, t4) {
    return Nd(u6, e11, t4, l7);
  });
  return u6;
};
var { EventTarget: oc } = du;
var lc = function(e10, t3) {
  if (!Ad(e10, t3)) return false;
  if (e10.sidx && t3.sidx && (e10.sidx.offset !== t3.sidx.offset || e10.sidx.length !== t3.sidx.length)) return false;
  if (!e10.sidx && t3.sidx || e10.sidx && !t3.sidx) return false;
  if (e10.segments && !t3.segments || !e10.segments && t3.segments) return false;
  if (!e10.segments && !t3.segments) return true;
  for (let i5 = 0; i5 < e10.segments.length; i5++) {
    const s5 = e10.segments[i5], n4 = t3.segments[i5];
    if (s5.uri !== n4.uri) return false;
    if (!s5.byterange && !n4.byterange) continue;
    const r5 = s5.byterange, a9 = n4.byterange;
    if (r5 && !a9 || !r5 && a9) return false;
    if (r5.offset !== a9.offset || r5.length !== a9.length) return false;
  }
  return true;
};
var hc = (e10, t3, i5, s5) => `placeholder-uri-${e10}-${t3}-${s5.attributes.NAME || i5}`;
var uc = ({ mainXml: e10, srcUrl: t3, clientOffset: i5, sidxMapping: s5, previousManifest: n4 }) => {
  const r5 = ys(e10, { manifestUri: t3, clientOffset: i5, sidxMapping: s5, previousManifest: n4 });
  return cd(r5, t3, hc), r5;
};
var dc = (e10, t3) => {
  od(e10, (i5, s5, n4, r5) => {
    t3.mediaGroups[s5][n4] && r5 in t3.mediaGroups[s5][n4] || delete e10.mediaGroups[s5][n4][r5];
  });
};
var cc = (e10, t3, i5) => {
  let s5 = true, n4 = bu(e10, { duration: t3.duration, minimumUpdatePeriod: t3.minimumUpdatePeriod, timelineStarts: t3.timelineStarts });
  for (let r5 = 0; r5 < t3.playlists.length; r5++) {
    const e11 = t3.playlists[r5];
    if (e11.sidx) {
      const t4 = Ei(e11.sidx);
      i5 && i5[t4] && i5[t4].sidx && mi(e11, i5[t4].sidx, e11.sidx.resolvedUri);
    }
    const a9 = Dd(n4, e11, lc);
    a9 && (n4 = a9, s5 = false);
  }
  return od(t3, (e11, t4, i6, r5) => {
    if (e11.playlists && e11.playlists.length) {
      const a9 = e11.playlists[0].id, o4 = Dd(n4, e11.playlists[0], lc);
      o4 && (n4 = o4, r5 in n4.mediaGroups[t4][i6] || (n4.mediaGroups[t4][i6][r5] = e11), n4.mediaGroups[t4][i6][r5].playlists[0] = n4.playlists[a9], s5 = false);
    }
  }), dc(n4, t3), t3.minimumUpdatePeriod !== e10.minimumUpdatePeriod && (s5 = false), s5 ? null : n4;
};
var pc = (e10, t3) => (Boolean(!e10.map && !t3.map) || Boolean(e10.map && t3.map && e10.map.byterange.offset === t3.map.byterange.offset && e10.map.byterange.length === t3.map.byterange.length)) && e10.uri === t3.uri && e10.byterange.offset === t3.byterange.offset && e10.byterange.length === t3.byterange.length;
var mc = (e10, t3) => {
  const i5 = {};
  for (const s5 in e10) {
    const n4 = e10[s5].sidx;
    if (n4) {
      const e11 = Ei(n4);
      if (!t3[e11]) break;
      const s6 = t3[e11].sidxInfo;
      pc(s6, n4) && (i5[e11] = t3[e11]);
    }
  }
  return i5;
};
var gc = (e10, t3) => {
  let i5 = mc(e10.playlists, t3);
  return od(e10, (e11, s5, n4, r5) => {
    if (e11.playlists && e11.playlists.length) {
      const s6 = e11.playlists;
      i5 = bu(i5, mc(s6, t3));
    }
  }), i5;
};
var fc = class extends oc {
  constructor(e10, t3, i5 = {}, s5) {
    super(), this.isPaused_ = true, this.mainPlaylistLoader_ = s5 || this, s5 || (this.isMain_ = true);
    const { withCredentials: n4 = false } = i5;
    if (this.vhs_ = t3, this.withCredentials = n4, this.addMetadataToTextTrack = i5.addMetadataToTextTrack, !e10) throw new Error("A non-empty playlist URL or object is required");
    this.on("minimumUpdatePeriod", () => {
      this.refreshXml_();
    }), this.on("mediaupdatetimeout", () => {
      this.refreshMedia_(this.media().id);
    }), this.state = "HAVE_NOTHING", this.loadedPlaylists_ = {}, this.logger_ = vu("DashPlaylistLoader"), this.isMain_ ? (this.mainPlaylistLoader_.srcUrl = e10, this.mainPlaylistLoader_.sidxMapping_ = {}) : this.childPlaylist_ = e10;
  }
  get isPaused() {
    return this.isPaused_;
  }
  requestErrored_(e10, t3, i5) {
    return !this.request || (this.request = null, e10 ? (this.error = "object" != typeof e10 || e10 instanceof Error ? { status: t3.status, message: "DASH request error at URL: " + t3.uri, response: t3.response, code: 2, metadata: e10.metadata } : e10, i5 && (this.state = i5), this.trigger("error"), true) : void 0);
  }
  addSidxSegments_(e10, t3, i5) {
    const s5 = e10.sidx && Ei(e10.sidx);
    if (!e10.sidx || !s5 || this.mainPlaylistLoader_.sidxMapping_[s5]) return b3.clearTimeout(this.mediaRequest_), void (this.mediaRequest_ = b3.setTimeout(() => i5(false), 0));
    const n4 = _u(e10.sidx.resolvedUri), r5 = (n5, r6) => {
      if (this.requestErrored_(n5, r6, t3)) return;
      const a10 = this.mainPlaylistLoader_.sidxMapping_, { requestType: o4 } = r6;
      let l7;
      try {
        l7 = Cs(wt(r6.response).subarray(8));
      } catch (h3) {
        return h3.metadata = gd({ requestType: o4, request: r6, parseFailure: true }), void this.requestErrored_(h3, r6, t3);
      }
      return a10[s5] = { sidxInfo: e10.sidx, sidx: l7 }, mi(e10, l7, e10.sidx.resolvedUri), i5(true);
    }, a9 = "dash-sidx";
    this.request = ac(n4, this.vhs_.xhr, (t4, i6, s6, a10) => {
      if (t4) return r5(t4, i6);
      if (!s6 || "mp4" !== s6) {
        const t5 = s6 || "unknown";
        return r5({ status: i6.status, message: `Unsupported ${t5} container type for sidx segment at URL: ${n4}`, response: "", playlist: e10, internal: true, playlistExclusionDuration: 1 / 0, code: 2 }, i6);
      }
      const { offset: o4, length: l7 } = e10.sidx.byterange;
      if (a10.length >= l7 + o4) return r5(t4, { response: a10.subarray(o4, o4 + l7), status: i6.status, uri: i6.uri });
      this.request = this.vhs_.xhr({ uri: n4, responseType: "arraybuffer", requestType: "dash-sidx", headers: Fd({ byterange: e10.sidx.byterange }) }, r5);
    }, a9);
  }
  dispose() {
    this.isPaused_ = true, this.trigger("dispose"), this.stopRequest(), this.loadedPlaylists_ = {}, b3.clearTimeout(this.minimumUpdatePeriodTimeout_), b3.clearTimeout(this.mediaRequest_), b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.mediaRequest_ = null, this.minimumUpdatePeriodTimeout_ = null, this.mainPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.mainPlaylistLoader_.createMupOnMedia_), this.mainPlaylistLoader_.createMupOnMedia_ = null), this.off();
  }
  hasPendingRequest() {
    return this.request || this.mediaRequest_;
  }
  stopRequest() {
    if (this.request) {
      const e10 = this.request;
      this.request = null, e10.onreadystatechange = null, e10.abort();
    }
  }
  media(e10) {
    if (!e10) return this.media_;
    if ("HAVE_NOTHING" === this.state) throw new Error("Cannot switch media playlist from " + this.state);
    const t3 = this.state;
    if ("string" == typeof e10) {
      if (!this.mainPlaylistLoader_.main.playlists[e10]) throw new Error("Unknown playlist URI: " + e10);
      e10 = this.mainPlaylistLoader_.main.playlists[e10];
    }
    const i5 = !this.media_ || e10.id !== this.media_.id;
    if (i5 && this.loadedPlaylists_[e10.id] && this.loadedPlaylists_[e10.id].endList) return this.state = "HAVE_METADATA", this.media_ = e10, void (i5 && (this.trigger("mediachanging"), this.trigger("mediachange")));
    i5 && (this.media_ && this.trigger("mediachanging"), this.addSidxSegments_(e10, t3, (i6) => {
      this.haveMetadata({ startingState: t3, playlist: e10 });
    }));
  }
  haveMetadata({ startingState: e10, playlist: t3 }) {
    this.state = "HAVE_METADATA", this.loadedPlaylists_[t3.id] = t3, b3.clearTimeout(this.mediaRequest_), this.mediaRequest_ = null, this.refreshMedia_(t3.id), "HAVE_MAIN_MANIFEST" === e10 ? this.trigger("loadedmetadata") : this.trigger("mediachange");
  }
  pause() {
    this.isPaused_ = true, this.mainPlaylistLoader_.createMupOnMedia_ && (this.off("loadedmetadata", this.mainPlaylistLoader_.createMupOnMedia_), this.mainPlaylistLoader_.createMupOnMedia_ = null), this.stopRequest(), b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null, this.isMain_ && (b3.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_), this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null), "HAVE_NOTHING" === this.state && (this.started = false);
  }
  load(e10) {
    this.isPaused_ = false, b3.clearTimeout(this.mediaUpdateTimeout), this.mediaUpdateTimeout = null;
    const t3 = this.media();
    if (e10) {
      const e11 = t3 ? t3.targetDuration / 2 * 1e3 : 5e3;
      this.mediaUpdateTimeout = b3.setTimeout(() => this.load(), e11);
    } else this.started ? t3 && !t3.endList ? (this.isMain_ && !this.minimumUpdatePeriodTimeout_ && (this.trigger("minimumUpdatePeriod"), this.updateMinimumUpdatePeriodTimeout_()), this.trigger("mediaupdatetimeout")) : this.trigger("loadedplaylist") : this.start();
  }
  start() {
    if (this.started = true, !this.isMain_) return b3.clearTimeout(this.mediaRequest_), void (this.mediaRequest_ = b3.setTimeout(() => this.haveMain_(), 0));
    this.requestMain_((e10, t3) => {
      this.haveMain_(), this.hasPendingRequest() || this.media_ || this.media(this.mainPlaylistLoader_.main.playlists[0]);
    });
  }
  requestMain_(e10) {
    const t3 = { manifestInfo: { uri: this.mainPlaylistLoader_.srcUrl } };
    this.trigger({ type: "manifestrequeststart", metadata: t3 }), this.request = this.vhs_.xhr({ uri: this.mainPlaylistLoader_.srcUrl, withCredentials: this.withCredentials, requestType: "dash-manifest" }, (i5, s5) => {
      if (i5) {
        const { requestType: e11 } = s5;
        i5.metadata = gd({ requestType: e11, request: s5, error: i5 });
      }
      if (this.requestErrored_(i5, s5)) return void ("HAVE_NOTHING" === this.state && (this.started = false));
      this.trigger({ type: "manifestrequestcomplete", metadata: t3 });
      const n4 = s5.responseText !== this.mainPlaylistLoader_.mainXml_;
      return this.mainPlaylistLoader_.mainXml_ = s5.responseText, s5.responseHeaders && s5.responseHeaders.date ? this.mainLoaded_ = Date.parse(s5.responseHeaders.date) : this.mainLoaded_ = Date.now(), this.mainPlaylistLoader_.srcUrl = _u(this.mainPlaylistLoader_.srcUrl, s5), n4 ? (this.handleMain_(), void this.syncClientServerClock_(() => e10(s5, n4))) : e10(s5, n4);
    });
  }
  syncClientServerClock_(e10) {
    const t3 = _s2(this.mainPlaylistLoader_.mainXml_);
    return null === t3 ? (this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now(), e10()) : "DIRECT" === t3.method ? (this.mainPlaylistLoader_.clientOffset_ = t3.value - Date.now(), e10()) : void (this.request = this.vhs_.xhr({ uri: yu(this.mainPlaylistLoader_.srcUrl, t3.value), method: t3.method, withCredentials: this.withCredentials, requestType: "dash-clock-sync" }, (i5, s5) => {
      if (!this.request) return;
      if (i5) {
        const { requestType: t4 } = s5;
        return this.error.metadata = gd({ requestType: t4, request: s5, error: i5 }), this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now(), e10();
      }
      let n4;
      n4 = "HEAD" === t3.method ? s5.responseHeaders && s5.responseHeaders.date ? Date.parse(s5.responseHeaders.date) : this.mainLoaded_ : Date.parse(s5.responseText), this.mainPlaylistLoader_.clientOffset_ = n4 - Date.now(), e10();
    }));
  }
  haveMain_() {
    this.state = "HAVE_MAIN_MANIFEST", this.isMain_ ? this.trigger("loadedplaylist") : this.media_ || this.media(this.childPlaylist_);
  }
  handleMain_() {
    b3.clearTimeout(this.mediaRequest_), this.mediaRequest_ = null;
    const e10 = this.mainPlaylistLoader_.main, t3 = { manifestInfo: { uri: this.mainPlaylistLoader_.srcUrl } };
    let i5;
    this.trigger({ type: "manifestparsestart", metadata: t3 });
    try {
      i5 = uc({ mainXml: this.mainPlaylistLoader_.mainXml_, srcUrl: this.mainPlaylistLoader_.srcUrl, clientOffset: this.mainPlaylistLoader_.clientOffset_, sidxMapping: this.mainPlaylistLoader_.sidxMapping_, previousManifest: e10 });
    } catch (n4) {
      this.error = n4, this.error.metadata = { errorType: du.Error.StreamingDashManifestParserError, error: n4 }, this.trigger("error");
    }
    e10 && (i5 = cc(e10, i5, this.mainPlaylistLoader_.sidxMapping_)), this.mainPlaylistLoader_.main = i5 || e10;
    const s5 = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];
    if (s5 && s5 !== this.mainPlaylistLoader_.srcUrl && (this.mainPlaylistLoader_.srcUrl = s5), (!e10 || i5 && i5.minimumUpdatePeriod !== e10.minimumUpdatePeriod) && this.updateMinimumUpdatePeriodTimeout_(), this.addEventStreamToMetadataTrack_(i5), i5) {
      const { duration: e11, endList: s6 } = i5, n4 = [];
      i5.playlists.forEach((e12) => {
        n4.push({ id: e12.id, bandwidth: e12.attributes.BANDWIDTH, resolution: e12.attributes.RESOLUTION, codecs: e12.attributes.CODECS });
      });
      const r5 = { duration: e11, isLive: !s6, renditions: n4 };
      t3.parsedManifest = r5, this.trigger({ type: "manifestparsecomplete", metadata: t3 });
    }
    return Boolean(i5);
  }
  updateMinimumUpdatePeriodTimeout_() {
    const e10 = this.mainPlaylistLoader_;
    e10.createMupOnMedia_ && (e10.off("loadedmetadata", e10.createMupOnMedia_), e10.createMupOnMedia_ = null), e10.minimumUpdatePeriodTimeout_ && (b3.clearTimeout(e10.minimumUpdatePeriodTimeout_), e10.minimumUpdatePeriodTimeout_ = null);
    let t3 = e10.main && e10.main.minimumUpdatePeriod;
    0 === t3 && (e10.media() ? t3 = 1e3 * e10.media().targetDuration : (e10.createMupOnMedia_ = e10.updateMinimumUpdatePeriodTimeout_, e10.one("loadedmetadata", e10.createMupOnMedia_))), "number" != typeof t3 || t3 <= 0 ? t3 < 0 && this.logger_(`found invalid minimumUpdatePeriod of ${t3}, not setting a timeout`) : this.createMUPTimeout_(t3);
  }
  createMUPTimeout_(e10) {
    const t3 = this.mainPlaylistLoader_;
    t3.minimumUpdatePeriodTimeout_ = b3.setTimeout(() => {
      t3.minimumUpdatePeriodTimeout_ = null, t3.trigger("minimumUpdatePeriod"), t3.createMUPTimeout_(e10);
    }, e10);
  }
  refreshXml_() {
    this.requestMain_((e10, t3) => {
      t3 && (this.media_ && (this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id]), this.mainPlaylistLoader_.sidxMapping_ = gc(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_), this.addSidxSegments_(this.media(), this.state, (e11) => {
        this.refreshMedia_(this.media().id);
      }));
    });
  }
  refreshMedia_(e10) {
    if (!e10) throw new Error("refreshMedia_ must take a media id");
    this.media_ && this.isMain_ && this.handleMain_();
    const t3 = this.mainPlaylistLoader_.main.playlists, i5 = !this.media_ || this.media_ !== t3[e10];
    if (i5 ? this.media_ = t3[e10] : this.trigger("playlistunchanged"), !this.mediaUpdateTimeout) {
      const e11 = () => {
        this.media().endList || (this.mediaUpdateTimeout = b3.setTimeout(() => {
          this.trigger("mediaupdatetimeout"), e11();
        }, Pd(this.media(), Boolean(i5))));
      };
      e11();
    }
    this.trigger("loadedplaylist");
  }
  addEventStreamToMetadataTrack_(e10) {
    if (e10 && this.mainPlaylistLoader_.main.eventStream) {
      const e11 = this.mainPlaylistLoader_.main.eventStream.map((e12) => ({ cueTime: e12.start, frames: [{ data: e12.messageData }] }));
      this.addMetadataToTextTrack("EventStream", e11, this.mainPlaylistLoader_.main.duration);
    }
  }
  getKeyIdSet(e10) {
    if (e10.contentProtection) {
      const t3 = /* @__PURE__ */ new Set();
      for (const i5 in e10.contentProtection) {
        const s5 = e10.contentProtection[i5].attributes["cenc:default_KID"];
        s5 && t3.add(s5.replace(/-/g, "").toLowerCase());
      }
      return t3;
    }
  }
};
var yc = { GOAL_BUFFER_LENGTH: 30, MAX_GOAL_BUFFER_LENGTH: 60, BACK_BUFFER_LENGTH: 30, GOAL_BUFFER_LENGTH_RATE: 1, INITIAL_BANDWIDTH: 4194304, BANDWIDTH_VARIANCE: 1.2, BUFFER_LOW_WATER_LINE: 0, MAX_BUFFER_LOW_WATER_LINE: 30, EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16, BUFFER_LOW_WATER_LINE_RATE: 1, BUFFER_HIGH_WATER_LINE: 30 };
var _c = (e10) => {
  const t3 = new Uint8Array(new ArrayBuffer(e10.length));
  for (let i5 = 0; i5 < e10.length; i5++) t3[i5] = e10.charCodeAt(i5);
  return t3.buffer;
};
var vc = function(e10) {
  return e10.on = e10.addEventListener, e10.off = e10.removeEventListener, e10;
};
var bc = function(e10) {
  try {
    return URL.createObjectURL(new Blob([e10], { type: "application/javascript" }));
  } catch (t3) {
    const i5 = new BlobBuilder();
    return i5.append(e10), URL.createObjectURL(i5.getBlob());
  }
};
var Tc = function(e10) {
  return function() {
    const t3 = bc(e10), i5 = vc(new Worker(t3));
    i5.objURL = t3;
    const s5 = i5.terminate;
    return i5.on = i5.addEventListener, i5.off = i5.removeEventListener, i5.terminate = function() {
      return URL.revokeObjectURL(t3), s5.call(this);
    }, i5;
  };
};
var Sc = function(e10) {
  return `var browserWorkerPolyFill = ${vc.toString()};
browserWorkerPolyFill(self);
` + e10;
};
var Ec = function(e10) {
  return e10.toString().replace(/^function.+?{/, "").slice(0, -1);
};
var wc = Sc(Ec(function() {
  var e10 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {}, t3 = function() {
    this.init = function() {
      var e11 = {};
      this.on = function(t4, i6) {
        e11[t4] || (e11[t4] = []), e11[t4] = e11[t4].concat(i6);
      }, this.off = function(t4, i6) {
        var s6;
        return !!e11[t4] && (s6 = e11[t4].indexOf(i6), e11[t4] = e11[t4].slice(), e11[t4].splice(s6, 1), s6 > -1);
      }, this.trigger = function(t4) {
        var i6, s6, n5, r6;
        if (i6 = e11[t4]) if (2 === arguments.length) for (n5 = i6.length, s6 = 0; s6 < n5; ++s6) i6[s6].call(this, arguments[1]);
        else {
          for (r6 = [], s6 = arguments.length, s6 = 1; s6 < arguments.length; ++s6) r6.push(arguments[s6]);
          for (n5 = i6.length, s6 = 0; s6 < n5; ++s6) i6[s6].apply(this, r6);
        }
      }, this.dispose = function() {
        e11 = {};
      };
    };
  };
  t3.prototype.pipe = function(e11) {
    return this.on("data", function(t4) {
      e11.push(t4);
    }), this.on("done", function(t4) {
      e11.flush(t4);
    }), this.on("partialdone", function(t4) {
      e11.partialFlush(t4);
    }), this.on("endedtimeline", function(t4) {
      e11.endTimeline(t4);
    }), this.on("reset", function(t4) {
      e11.reset(t4);
    }), e11;
  }, t3.prototype.push = function(e11) {
    this.trigger("data", e11);
  }, t3.prototype.flush = function(e11) {
    this.trigger("done", e11);
  }, t3.prototype.partialFlush = function(e11) {
    this.trigger("partialdone", e11);
  }, t3.prototype.endTimeline = function(e11) {
    this.trigger("endedtimeline", e11);
  }, t3.prototype.reset = function(e11) {
    this.trigger("reset", e11);
  };
  var i5, s5, n4, r5, a9, o4, l7, h3, u6, d2, c5, p5, m7, g2, f3, y4, _3, v3, b4, T2, S4, E3, w5, C4, k2, I3, x3, A3, D2, P3, L3, O2, N3, R2, M3, U2, B2, F2, q3, j4, $2 = t3, H3 = Math.pow(2, 32), V4 = { getUint64: function(e11) {
    var t4, i6 = new DataView(e11.buffer, e11.byteOffset, e11.byteLength);
    return i6.getBigUint64 ? (t4 = i6.getBigUint64(0)) < Number.MAX_SAFE_INTEGER ? Number(t4) : t4 : i6.getUint32(0) * H3 + i6.getUint32(4);
  }, MAX_UINT32: H3 }, z3 = V4.MAX_UINT32;
  !function() {
    var e11;
    if (E3 = { avc1: [], avcC: [], btrt: [], dinf: [], dref: [], esds: [], ftyp: [], hdlr: [], mdat: [], mdhd: [], mdia: [], mfhd: [], minf: [], moof: [], moov: [], mp4a: [], mvex: [], mvhd: [], pasp: [], sdtp: [], smhd: [], stbl: [], stco: [], stsc: [], stsd: [], stsz: [], stts: [], styp: [], tfdt: [], tfhd: [], traf: [], trak: [], trun: [], trex: [], tkhd: [], vmhd: [] }, "undefined" != typeof Uint8Array) {
      for (e11 in E3) E3.hasOwnProperty(e11) && (E3[e11] = [e11.charCodeAt(0), e11.charCodeAt(1), e11.charCodeAt(2), e11.charCodeAt(3)]);
      w5 = new Uint8Array(["i".charCodeAt(0), "s".charCodeAt(0), "o".charCodeAt(0), "m".charCodeAt(0)]), k2 = new Uint8Array(["a".charCodeAt(0), "v".charCodeAt(0), "c".charCodeAt(0), "1".charCodeAt(0)]), C4 = new Uint8Array([0, 0, 0, 1]), I3 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]), x3 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]), A3 = { video: I3, audio: x3 }, L3 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]), P3 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), O2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), N3 = O2, R2 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), M3 = O2, D2 = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]);
    }
  }(), i5 = function(e11) {
    var t4, i6, s6 = [], n5 = 0;
    for (t4 = 1; t4 < arguments.length; t4++) s6.push(arguments[t4]);
    for (t4 = s6.length; t4--; ) n5 += s6[t4].byteLength;
    for (i6 = new Uint8Array(n5 + 8), new DataView(i6.buffer, i6.byteOffset, i6.byteLength).setUint32(0, i6.byteLength), i6.set(e11, 4), t4 = 0, n5 = 8; t4 < s6.length; t4++) i6.set(s6[t4], n5), n5 += s6[t4].byteLength;
    return i6;
  }, s5 = function() {
    return i5(E3.dinf, i5(E3.dref, L3));
  }, n4 = function(e11) {
    return i5(E3.esds, new Uint8Array([0, 0, 0, 0, 3, 25, 0, 0, 0, 4, 17, 64, 21, 0, 6, 0, 0, 0, 218, 192, 0, 0, 218, 192, 5, 2, e11.audioobjecttype << 3 | e11.samplingfrequencyindex >>> 1, e11.samplingfrequencyindex << 7 | e11.channelcount << 3, 6, 1, 2]));
  }, f3 = function(e11) {
    return i5(E3.hdlr, A3[e11]);
  }, g2 = function(e11) {
    var t4 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 3, 0, 1, 95, 144, e11.duration >>> 24 & 255, e11.duration >>> 16 & 255, e11.duration >>> 8 & 255, 255 & e11.duration, 85, 196, 0, 0]);
    return e11.samplerate && (t4[12] = e11.samplerate >>> 24 & 255, t4[13] = e11.samplerate >>> 16 & 255, t4[14] = e11.samplerate >>> 8 & 255, t4[15] = 255 & e11.samplerate), i5(E3.mdhd, t4);
  }, m7 = function(e11) {
    return i5(E3.mdia, g2(e11), f3(e11.type), o4(e11));
  }, a9 = function(e11) {
    return i5(E3.mfhd, new Uint8Array([0, 0, 0, 0, (4278190080 & e11) >> 24, (16711680 & e11) >> 16, (65280 & e11) >> 8, 255 & e11]));
  }, o4 = function(e11) {
    return i5(E3.minf, "video" === e11.type ? i5(E3.vmhd, D2) : i5(E3.smhd, P3), s5(), _3(e11));
  }, l7 = function(e11, t4) {
    for (var s6 = [], n5 = t4.length; n5--; ) s6[n5] = b4(t4[n5]);
    return i5.apply(null, [E3.moof, a9(e11)].concat(s6));
  }, h3 = function(e11) {
    for (var t4 = e11.length, s6 = []; t4--; ) s6[t4] = c5(e11[t4]);
    return i5.apply(null, [E3.moov, d2(4294967295)].concat(s6).concat(u6(e11)));
  }, u6 = function(e11) {
    for (var t4 = e11.length, s6 = []; t4--; ) s6[t4] = T2(e11[t4]);
    return i5.apply(null, [E3.mvex].concat(s6));
  }, d2 = function(e11) {
    var t4 = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 1, 95, 144, (4278190080 & e11) >> 24, (16711680 & e11) >> 16, (65280 & e11) >> 8, 255 & e11, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
    return i5(E3.mvhd, t4);
  }, y4 = function(e11) {
    var t4, s6, n5 = e11.samples || [], r6 = new Uint8Array(4 + n5.length);
    for (s6 = 0; s6 < n5.length; s6++) t4 = n5[s6].flags, r6[s6 + 4] = t4.dependsOn << 4 | t4.isDependedOn << 2 | t4.hasRedundancy;
    return i5(E3.sdtp, r6);
  }, _3 = function(e11) {
    return i5(E3.stbl, v3(e11), i5(E3.stts, M3), i5(E3.stsc, N3), i5(E3.stsz, R2), i5(E3.stco, O2));
  }, v3 = function(e11) {
    return i5(E3.stsd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]), "video" === e11.type ? U2(e11) : B2(e11));
  }, U2 = function(e11) {
    var t4, s6, n5 = e11.sps || [], r6 = e11.pps || [], a10 = [], o5 = [];
    for (t4 = 0; t4 < n5.length; t4++) a10.push((65280 & n5[t4].byteLength) >>> 8), a10.push(255 & n5[t4].byteLength), a10 = a10.concat(Array.prototype.slice.call(n5[t4]));
    for (t4 = 0; t4 < r6.length; t4++) o5.push((65280 & r6[t4].byteLength) >>> 8), o5.push(255 & r6[t4].byteLength), o5 = o5.concat(Array.prototype.slice.call(r6[t4]));
    if (s6 = [E3.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e11.width) >> 8, 255 & e11.width, (65280 & e11.height) >> 8, 255 & e11.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 19, 118, 105, 100, 101, 111, 106, 115, 45, 99, 111, 110, 116, 114, 105, 98, 45, 104, 108, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), i5(E3.avcC, new Uint8Array([1, e11.profileIdc, e11.profileCompatibility, e11.levelIdc, 255].concat([n5.length], a10, [r6.length], o5))), i5(E3.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]))], e11.sarRatio) {
      var l8 = e11.sarRatio[0], h4 = e11.sarRatio[1];
      s6.push(i5(E3.pasp, new Uint8Array([(4278190080 & l8) >> 24, (16711680 & l8) >> 16, (65280 & l8) >> 8, 255 & l8, (4278190080 & h4) >> 24, (16711680 & h4) >> 16, (65280 & h4) >> 8, 255 & h4])));
    }
    return i5.apply(null, s6);
  }, B2 = function(e11) {
    return i5(E3.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, (65280 & e11.channelcount) >> 8, 255 & e11.channelcount, (65280 & e11.samplesize) >> 8, 255 & e11.samplesize, 0, 0, 0, 0, (65280 & e11.samplerate) >> 8, 255 & e11.samplerate, 0, 0]), n4(e11));
  }, p5 = function(e11) {
    var t4 = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, (4278190080 & e11.id) >> 24, (16711680 & e11.id) >> 16, (65280 & e11.id) >> 8, 255 & e11.id, 0, 0, 0, 0, (4278190080 & e11.duration) >> 24, (16711680 & e11.duration) >> 16, (65280 & e11.duration) >> 8, 255 & e11.duration, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, (65280 & e11.width) >> 8, 255 & e11.width, 0, 0, (65280 & e11.height) >> 8, 255 & e11.height, 0, 0]);
    return i5(E3.tkhd, t4);
  }, b4 = function(e11) {
    var t4, s6, n5, r6, a10, o5, l8;
    return t4 = i5(E3.tfhd, new Uint8Array([0, 0, 0, 58, (4278190080 & e11.id) >> 24, (16711680 & e11.id) >> 16, (65280 & e11.id) >> 8, 255 & e11.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), o5 = Math.floor(e11.baseMediaDecodeTime / z3), l8 = Math.floor(e11.baseMediaDecodeTime % z3), s6 = i5(E3.tfdt, new Uint8Array([1, 0, 0, 0, o5 >>> 24 & 255, o5 >>> 16 & 255, o5 >>> 8 & 255, 255 & o5, l8 >>> 24 & 255, l8 >>> 16 & 255, l8 >>> 8 & 255, 255 & l8])), a10 = 92, "audio" === e11.type ? (n5 = S4(e11, a10), i5(E3.traf, t4, s6, n5)) : (r6 = y4(e11), n5 = S4(e11, r6.length + a10), i5(E3.traf, t4, s6, n5, r6));
  }, c5 = function(e11) {
    return e11.duration = e11.duration || 4294967295, i5(E3.trak, p5(e11), m7(e11));
  }, T2 = function(e11) {
    var t4 = new Uint8Array([0, 0, 0, 0, (4278190080 & e11.id) >> 24, (16711680 & e11.id) >> 16, (65280 & e11.id) >> 8, 255 & e11.id, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
    return "video" !== e11.type && (t4[t4.length - 1] = 0), i5(E3.trex, t4);
  }, j4 = function(e11, t4) {
    var i6 = 0, s6 = 0, n5 = 0, r6 = 0;
    return e11.length && (void 0 !== e11[0].duration && (i6 = 1), void 0 !== e11[0].size && (s6 = 2), void 0 !== e11[0].flags && (n5 = 4), void 0 !== e11[0].compositionTimeOffset && (r6 = 8)), [0, 0, i6 | s6 | n5 | r6, 1, (4278190080 & e11.length) >>> 24, (16711680 & e11.length) >>> 16, (65280 & e11.length) >>> 8, 255 & e11.length, (4278190080 & t4) >>> 24, (16711680 & t4) >>> 16, (65280 & t4) >>> 8, 255 & t4];
  }, q3 = function(e11, t4) {
    var s6, n5, r6, a10, o5, l8;
    for (t4 += 20 + 16 * (a10 = e11.samples || []).length, r6 = j4(a10, t4), (n5 = new Uint8Array(r6.length + 16 * a10.length)).set(r6), s6 = r6.length, l8 = 0; l8 < a10.length; l8++) o5 = a10[l8], n5[s6++] = (4278190080 & o5.duration) >>> 24, n5[s6++] = (16711680 & o5.duration) >>> 16, n5[s6++] = (65280 & o5.duration) >>> 8, n5[s6++] = 255 & o5.duration, n5[s6++] = (4278190080 & o5.size) >>> 24, n5[s6++] = (16711680 & o5.size) >>> 16, n5[s6++] = (65280 & o5.size) >>> 8, n5[s6++] = 255 & o5.size, n5[s6++] = o5.flags.isLeading << 2 | o5.flags.dependsOn, n5[s6++] = o5.flags.isDependedOn << 6 | o5.flags.hasRedundancy << 4 | o5.flags.paddingValue << 1 | o5.flags.isNonSyncSample, n5[s6++] = 61440 & o5.flags.degradationPriority, n5[s6++] = 15 & o5.flags.degradationPriority, n5[s6++] = (4278190080 & o5.compositionTimeOffset) >>> 24, n5[s6++] = (16711680 & o5.compositionTimeOffset) >>> 16, n5[s6++] = (65280 & o5.compositionTimeOffset) >>> 8, n5[s6++] = 255 & o5.compositionTimeOffset;
    return i5(E3.trun, n5);
  }, F2 = function(e11, t4) {
    var s6, n5, r6, a10, o5, l8;
    for (t4 += 20 + 8 * (a10 = e11.samples || []).length, r6 = j4(a10, t4), (s6 = new Uint8Array(r6.length + 8 * a10.length)).set(r6), n5 = r6.length, l8 = 0; l8 < a10.length; l8++) o5 = a10[l8], s6[n5++] = (4278190080 & o5.duration) >>> 24, s6[n5++] = (16711680 & o5.duration) >>> 16, s6[n5++] = (65280 & o5.duration) >>> 8, s6[n5++] = 255 & o5.duration, s6[n5++] = (4278190080 & o5.size) >>> 24, s6[n5++] = (16711680 & o5.size) >>> 16, s6[n5++] = (65280 & o5.size) >>> 8, s6[n5++] = 255 & o5.size;
    return i5(E3.trun, s6);
  }, S4 = function(e11, t4) {
    return "audio" === e11.type ? F2(e11, t4) : q3(e11, t4);
  };
  var W2, G2, X2, K2, Y2, Q2, J2, Z2, ee3 = { ftyp: r5 = function() {
    return i5(E3.ftyp, w5, C4, w5, k2);
  }, mdat: function(e11) {
    return i5(E3.mdat, e11);
  }, moof: l7, moov: h3, initSegment: function(e11) {
    var t4, i6 = r5(), s6 = h3(e11);
    return (t4 = new Uint8Array(i6.byteLength + s6.byteLength)).set(i6), t4.set(s6, i6.byteLength), t4;
  } }, te3 = function() {
    return { size: 0, flags: { isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0, degradationPriority: 0, isNonSyncSample: 1 } };
  }, ie3 = function(e11, t4) {
    var i6 = te3();
    return i6.dataOffset = t4, i6.compositionTimeOffset = e11.pts - e11.dts, i6.duration = e11.duration, i6.size = 4 * e11.length, i6.size += e11.byteLength, e11.keyFrame && (i6.flags.dependsOn = 2, i6.flags.isNonSyncSample = 0), i6;
  }, se3 = function(e11, t4) {
    var i6, s6, n5, r6, a10, o5 = t4 || 0, l8 = [];
    for (i6 = 0; i6 < e11.length; i6++) for (r6 = e11[i6], s6 = 0; s6 < r6.length; s6++) a10 = r6[s6], o5 += (n5 = ie3(a10, o5)).size, l8.push(n5);
    return l8;
  }, ne3 = function(e11, t4) {
    var i6, s6 = [];
    return i6 = ie3(e11, t4 || 0), s6.push(i6), s6;
  }, re3 = { groupNalsIntoFrames: function(e11) {
    var t4, i6, s6 = [], n5 = [];
    for (n5.byteLength = 0, n5.nalCount = 0, n5.duration = 0, s6.byteLength = 0, t4 = 0; t4 < e11.length; t4++) "access_unit_delimiter_rbsp" === (i6 = e11[t4]).nalUnitType ? (s6.length && (s6.duration = i6.dts - s6.dts, n5.byteLength += s6.byteLength, n5.nalCount += s6.length, n5.duration += s6.duration, n5.push(s6)), (s6 = [i6]).byteLength = i6.data.byteLength, s6.pts = i6.pts, s6.dts = i6.dts) : ("slice_layer_without_partitioning_rbsp_idr" === i6.nalUnitType && (s6.keyFrame = true), s6.duration = i6.dts - s6.dts, s6.byteLength += i6.data.byteLength, s6.push(i6));
    return n5.length && (!s6.duration || s6.duration <= 0) && (s6.duration = n5[n5.length - 1].duration), n5.byteLength += s6.byteLength, n5.nalCount += s6.length, n5.duration += s6.duration, n5.push(s6), n5;
  }, groupFramesIntoGops: function(e11) {
    var t4, i6, s6 = [], n5 = [];
    for (s6.byteLength = 0, s6.nalCount = 0, s6.duration = 0, s6.pts = e11[0].pts, s6.dts = e11[0].dts, n5.byteLength = 0, n5.nalCount = 0, n5.duration = 0, n5.pts = e11[0].pts, n5.dts = e11[0].dts, t4 = 0; t4 < e11.length; t4++) (i6 = e11[t4]).keyFrame ? (s6.length && (n5.push(s6), n5.byteLength += s6.byteLength, n5.nalCount += s6.nalCount, n5.duration += s6.duration), (s6 = [i6]).nalCount = i6.length, s6.byteLength = i6.byteLength, s6.pts = i6.pts, s6.dts = i6.dts, s6.duration = i6.duration) : (s6.duration += i6.duration, s6.nalCount += i6.length, s6.byteLength += i6.byteLength, s6.push(i6));
    return n5.length && s6.duration <= 0 && (s6.duration = n5[n5.length - 1].duration), n5.byteLength += s6.byteLength, n5.nalCount += s6.nalCount, n5.duration += s6.duration, n5.push(s6), n5;
  }, extendFirstKeyFrame: function(e11) {
    var t4;
    return !e11[0][0].keyFrame && e11.length > 1 && (t4 = e11.shift(), e11.byteLength -= t4.byteLength, e11.nalCount -= t4.nalCount, e11[0][0].dts = t4.dts, e11[0][0].pts = t4.pts, e11[0][0].duration += t4.duration), e11;
  }, generateSampleTable: se3, concatenateNalData: function(e11) {
    var t4, i6, s6, n5, r6, a10, o5 = 0, l8 = e11.byteLength, h4 = e11.nalCount, u7 = new Uint8Array(l8 + 4 * h4), d3 = new DataView(u7.buffer);
    for (t4 = 0; t4 < e11.length; t4++) for (n5 = e11[t4], i6 = 0; i6 < n5.length; i6++) for (r6 = n5[i6], s6 = 0; s6 < r6.length; s6++) a10 = r6[s6], d3.setUint32(o5, a10.data.byteLength), o5 += 4, u7.set(a10.data, o5), o5 += a10.data.byteLength;
    return u7;
  }, generateSampleTableForFrame: ne3, concatenateNalDataForFrame: function(e11) {
    var t4, i6, s6 = 0, n5 = e11.byteLength, r6 = e11.length, a10 = new Uint8Array(n5 + 4 * r6), o5 = new DataView(a10.buffer);
    for (t4 = 0; t4 < e11.length; t4++) i6 = e11[t4], o5.setUint32(s6, i6.data.byteLength), s6 += 4, a10.set(i6.data, s6), s6 += i6.data.byteLength;
    return a10;
  } }, ae3 = [33, 16, 5, 32, 164, 27], oe3 = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252], le3 = function(e11) {
    for (var t4 = []; e11--; ) t4.push(0);
    return t4;
  }, he2 = function(e11) {
    return Object.keys(e11).reduce(function(t4, i6) {
      return t4[i6] = new Uint8Array(e11[i6].reduce(function(e12, t5) {
        return e12.concat(t5);
      }, [])), t4;
    }, {});
  }, ue3 = function() {
    if (!W2) {
      var e11 = { 96e3: [ae3, [227, 64], le3(154), [56]], 88200: [ae3, [231], le3(170), [56]], 64e3: [ae3, [248, 192], le3(240), [56]], 48e3: [ae3, [255, 192], le3(268), [55, 148, 128], le3(54), [112]], 44100: [ae3, [255, 192], le3(268), [55, 163, 128], le3(84), [112]], 32e3: [ae3, [255, 192], le3(268), [55, 234], le3(226), [112]], 24e3: [ae3, [255, 192], le3(268), [55, 255, 128], le3(268), [111, 112], le3(126), [224]], 16e3: [ae3, [255, 192], le3(268), [55, 255, 128], le3(268), [111, 255], le3(269), [223, 108], le3(195), [1, 192]], 12e3: [oe3, le3(268), [3, 127, 248], le3(268), [6, 255, 240], le3(268), [13, 255, 224], le3(268), [27, 253, 128], le3(259), [56]], 11025: [oe3, le3(268), [3, 127, 248], le3(268), [6, 255, 240], le3(268), [13, 255, 224], le3(268), [27, 255, 192], le3(268), [55, 175, 128], le3(108), [112]], 8e3: [oe3, le3(268), [3, 121, 16], le3(47), [7]] };
      W2 = he2(e11);
    }
    return W2;
  }, de2 = 9e4;
  Q2 = function(e11, t4) {
    return G2(Y2(e11, t4));
  }, J2 = function(e11, t4) {
    return X2(K2(e11), t4);
  }, Z2 = function(e11, t4, i6) {
    return K2(i6 ? e11 : e11 - t4);
  };
  var ce2 = { ONE_SECOND_IN_TS: de2, secondsToVideoTs: G2 = function(e11) {
    return e11 * de2;
  }, secondsToAudioTs: X2 = function(e11, t4) {
    return e11 * t4;
  }, videoTsToSeconds: K2 = function(e11) {
    return e11 / de2;
  }, audioTsToSeconds: Y2 = function(e11, t4) {
    return e11 / t4;
  }, audioTsToVideoTs: Q2, videoTsToAudioTs: J2, metadataTsToSeconds: Z2 }, pe3 = ue3, me3 = ce2, ge2 = function(e11) {
    var t4, i6 = 0;
    for (t4 = 0; t4 < e11.length; t4++) i6 += e11[t4].data.byteLength;
    return i6;
  }, fe2 = function(e11) {
    var t4, i6, s6 = [];
    for (t4 = 0; t4 < e11.length; t4++) i6 = e11[t4], s6.push({ size: i6.data.byteLength, duration: 1024 });
    return s6;
  }, ye3 = { prefixWithSilence: function(e11, t4, i6, s6) {
    var n5, r6, a10, o5, l8 = 0, h4 = 0, u7 = 0, d3 = 0;
    if (t4.length && (n5 = me3.audioTsToVideoTs(e11.baseMediaDecodeTime, e11.samplerate), l8 = Math.ceil(me3.ONE_SECOND_IN_TS / (e11.samplerate / 1024)), i6 && s6 && (h4 = n5 - Math.max(i6, s6), d3 = (u7 = Math.floor(h4 / l8)) * l8), !(u7 < 1 || d3 > me3.ONE_SECOND_IN_TS / 2))) {
      for ((r6 = pe3()[e11.samplerate]) || (r6 = t4[0].data), a10 = 0; a10 < u7; a10++) o5 = t4[0], t4.splice(0, 0, { data: r6, dts: o5.dts - l8, pts: o5.pts - l8 });
      return e11.baseMediaDecodeTime -= Math.floor(me3.videoTsToAudioTs(d3, e11.samplerate)), d3;
    }
  }, trimAdtsFramesByEarliestDts: function(e11, t4, i6) {
    return t4.minSegmentDts >= i6 ? e11 : (t4.minSegmentDts = 1 / 0, e11.filter(function(e12) {
      return e12.dts >= i6 && (t4.minSegmentDts = Math.min(t4.minSegmentDts, e12.dts), t4.minSegmentPts = t4.minSegmentDts, true);
    }));
  }, generateSampleTable: fe2, concatenateFrameData: function(e11) {
    var t4, i6, s6 = 0, n5 = new Uint8Array(ge2(e11));
    for (t4 = 0; t4 < e11.length; t4++) i6 = e11[t4], n5.set(i6.data, s6), s6 += i6.data.byteLength;
    return n5;
  } }, _e2 = ce2.ONE_SECOND_IN_TS, ve2 = { clearDtsInfo: function(e11) {
    delete e11.minSegmentDts, delete e11.maxSegmentDts, delete e11.minSegmentPts, delete e11.maxSegmentPts;
  }, calculateTrackBaseMediaDecodeTime: function(e11, t4) {
    var i6, s6 = e11.minSegmentDts;
    return t4 || (s6 -= e11.timelineStartInfo.dts), i6 = e11.timelineStartInfo.baseMediaDecodeTime, i6 += s6, i6 = Math.max(0, i6), "audio" === e11.type && (i6 *= e11.samplerate / _e2, i6 = Math.floor(i6)), i6;
  }, collectDtsInfo: function(e11, t4) {
    "number" == typeof t4.pts && (void 0 === e11.timelineStartInfo.pts && (e11.timelineStartInfo.pts = t4.pts), void 0 === e11.minSegmentPts ? e11.minSegmentPts = t4.pts : e11.minSegmentPts = Math.min(e11.minSegmentPts, t4.pts), void 0 === e11.maxSegmentPts ? e11.maxSegmentPts = t4.pts : e11.maxSegmentPts = Math.max(e11.maxSegmentPts, t4.pts)), "number" == typeof t4.dts && (void 0 === e11.timelineStartInfo.dts && (e11.timelineStartInfo.dts = t4.dts), void 0 === e11.minSegmentDts ? e11.minSegmentDts = t4.dts : e11.minSegmentDts = Math.min(e11.minSegmentDts, t4.dts), void 0 === e11.maxSegmentDts ? e11.maxSegmentDts = t4.dts : e11.maxSegmentDts = Math.max(e11.maxSegmentDts, t4.dts));
  } }, be2 = 4, Te2 = 128, Se2 = { parseSei: function(e11) {
    for (var t4 = 0, i6 = { payloadType: -1, payloadSize: 0 }, s6 = 0, n5 = 0; t4 < e11.byteLength && e11[t4] !== Te2; ) {
      for (; 255 === e11[t4]; ) s6 += 255, t4++;
      for (s6 += e11[t4++]; 255 === e11[t4]; ) n5 += 255, t4++;
      if (n5 += e11[t4++], !i6.payload && s6 === be2) {
        if ("GA94" === String.fromCharCode(e11[t4 + 3], e11[t4 + 4], e11[t4 + 5], e11[t4 + 6])) {
          i6.payloadType = s6, i6.payloadSize = n5, i6.payload = e11.subarray(t4, t4 + n5);
          break;
        }
        i6.payload = void 0;
      }
      t4 += n5, s6 = 0, n5 = 0;
    }
    return i6;
  }, parseUserData: function(e11) {
    return 181 !== e11.payload[0] || 49 != (e11.payload[1] << 8 | e11.payload[2]) || "GA94" !== String.fromCharCode(e11.payload[3], e11.payload[4], e11.payload[5], e11.payload[6]) || 3 !== e11.payload[7] ? null : e11.payload.subarray(8, e11.payload.length - 1);
  }, parseCaptionPackets: function(e11, t4) {
    var i6, s6, n5, r6, a10 = [];
    if (!(64 & t4[0])) return a10;
    for (s6 = 31 & t4[0], i6 = 0; i6 < s6; i6++) r6 = { type: 3 & t4[(n5 = 3 * i6) + 2], pts: e11 }, 4 & t4[n5 + 2] && (r6.ccData = t4[n5 + 3] << 8 | t4[n5 + 4], a10.push(r6));
    return a10;
  }, discardEmulationPreventionBytes: function(e11) {
    for (var t4, i6, s6 = e11.byteLength, n5 = [], r6 = 1; r6 < s6 - 2; ) 0 === e11[r6] && 0 === e11[r6 + 1] && 3 === e11[r6 + 2] ? (n5.push(r6 + 2), r6 += 2) : r6++;
    if (0 === n5.length) return e11;
    t4 = s6 - n5.length, i6 = new Uint8Array(t4);
    var a10 = 0;
    for (r6 = 0; r6 < t4; a10++, r6++) a10 === n5[0] && (a10++, n5.shift()), i6[r6] = e11[a10];
    return i6;
  }, USER_DATA_REGISTERED_ITU_T_T35: be2 }, Ee2 = $2, we2 = Se2, Ce2 = function(e11) {
    e11 = e11 || {}, Ce2.prototype.init.call(this), this.parse708captions_ = "boolean" != typeof e11.parse708captions || e11.parse708captions, this.captionPackets_ = [], this.ccStreams_ = [new Ue2(0, 0), new Ue2(0, 1), new Ue2(1, 0), new Ue2(1, 1)], this.parse708captions_ && (this.cc708Stream_ = new Pe2({ captionServices: e11.captionServices })), this.reset(), this.ccStreams_.forEach(function(e12) {
      e12.on("data", this.trigger.bind(this, "data")), e12.on("partialdone", this.trigger.bind(this, "partialdone")), e12.on("done", this.trigger.bind(this, "done"));
    }, this), this.parse708captions_ && (this.cc708Stream_.on("data", this.trigger.bind(this, "data")), this.cc708Stream_.on("partialdone", this.trigger.bind(this, "partialdone")), this.cc708Stream_.on("done", this.trigger.bind(this, "done")));
  };
  Ce2.prototype = new Ee2(), Ce2.prototype.push = function(e11) {
    var t4, i6, s6;
    if ("sei_rbsp" === e11.nalUnitType && (t4 = we2.parseSei(e11.escapedRBSP)).payload && t4.payloadType === we2.USER_DATA_REGISTERED_ITU_T_T35 && (i6 = we2.parseUserData(t4))) if (e11.dts < this.latestDts_) this.ignoreNextEqualDts_ = true;
    else {
      if (e11.dts === this.latestDts_ && this.ignoreNextEqualDts_) return this.numSameDts_--, void (this.numSameDts_ || (this.ignoreNextEqualDts_ = false));
      s6 = we2.parseCaptionPackets(e11.pts, i6), this.captionPackets_ = this.captionPackets_.concat(s6), this.latestDts_ !== e11.dts && (this.numSameDts_ = 0), this.numSameDts_++, this.latestDts_ = e11.dts;
    }
  }, Ce2.prototype.flushCCStreams = function(e11) {
    this.ccStreams_.forEach(function(t4) {
      return "flush" === e11 ? t4.flush() : t4.partialFlush();
    }, this);
  }, Ce2.prototype.flushStream = function(e11) {
    this.captionPackets_.length ? (this.captionPackets_.forEach(function(e12, t4) {
      e12.presortIndex = t4;
    }), this.captionPackets_.sort(function(e12, t4) {
      return e12.pts === t4.pts ? e12.presortIndex - t4.presortIndex : e12.pts - t4.pts;
    }), this.captionPackets_.forEach(function(e12) {
      e12.type < 2 ? this.dispatchCea608Packet(e12) : this.dispatchCea708Packet(e12);
    }, this), this.captionPackets_.length = 0, this.flushCCStreams(e11)) : this.flushCCStreams(e11);
  }, Ce2.prototype.flush = function() {
    return this.flushStream("flush");
  }, Ce2.prototype.partialFlush = function() {
    return this.flushStream("partialFlush");
  }, Ce2.prototype.reset = function() {
    this.latestDts_ = null, this.ignoreNextEqualDts_ = false, this.numSameDts_ = 0, this.activeCea608Channel_ = [null, null], this.ccStreams_.forEach(function(e11) {
      e11.reset();
    });
  }, Ce2.prototype.dispatchCea608Packet = function(e11) {
    this.setsTextOrXDSActive(e11) ? this.activeCea608Channel_[e11.type] = null : this.setsChannel1Active(e11) ? this.activeCea608Channel_[e11.type] = 0 : this.setsChannel2Active(e11) && (this.activeCea608Channel_[e11.type] = 1), null !== this.activeCea608Channel_[e11.type] && this.ccStreams_[(e11.type << 1) + this.activeCea608Channel_[e11.type]].push(e11);
  }, Ce2.prototype.setsChannel1Active = function(e11) {
    return 4096 == (30720 & e11.ccData);
  }, Ce2.prototype.setsChannel2Active = function(e11) {
    return 6144 == (30720 & e11.ccData);
  }, Ce2.prototype.setsTextOrXDSActive = function(e11) {
    return 256 == (28928 & e11.ccData) || 4138 == (30974 & e11.ccData) || 6186 == (30974 & e11.ccData);
  }, Ce2.prototype.dispatchCea708Packet = function(e11) {
    this.parse708captions_ && this.cc708Stream_.push(e11);
  };
  var ke2 = { 127: 9834, 4128: 32, 4129: 160, 4133: 8230, 4138: 352, 4140: 338, 4144: 9608, 4145: 8216, 4146: 8217, 4147: 8220, 4148: 8221, 4149: 8226, 4153: 8482, 4154: 353, 4156: 339, 4157: 8480, 4159: 376, 4214: 8539, 4215: 8540, 4216: 8541, 4217: 8542, 4218: 9168, 4219: 9124, 4220: 9123, 4221: 9135, 4222: 9126, 4223: 9121, 4256: 12600 }, Ie2 = function(e11) {
    var t4 = ke2[e11] || e11;
    return 4096 & e11 && e11 === t4 ? "" : String.fromCharCode(t4);
  }, xe2 = function(e11) {
    return 32 <= e11 && e11 <= 127 || 160 <= e11 && e11 <= 255;
  }, Ae2 = function(e11) {
    this.windowNum = e11, this.reset();
  };
  Ae2.prototype.reset = function() {
    this.clearText(), this.pendingNewLine = false, this.winAttr = {}, this.penAttr = {}, this.penLoc = {}, this.penColor = {}, this.visible = 0, this.rowLock = 0, this.columnLock = 0, this.priority = 0, this.relativePositioning = 0, this.anchorVertical = 0, this.anchorHorizontal = 0, this.anchorPoint = 0, this.rowCount = 1, this.virtualRowCount = this.rowCount + 1, this.columnCount = 41, this.windowStyle = 0, this.penStyle = 0;
  }, Ae2.prototype.getText = function() {
    return this.rows.join("\n");
  }, Ae2.prototype.clearText = function() {
    this.rows = [""], this.rowIdx = 0;
  }, Ae2.prototype.newLine = function(e11) {
    for (this.rows.length >= this.virtualRowCount && "function" == typeof this.beforeRowOverflow && this.beforeRowOverflow(e11), this.rows.length > 0 && (this.rows.push(""), this.rowIdx++); this.rows.length > this.virtualRowCount; ) this.rows.shift(), this.rowIdx--;
  }, Ae2.prototype.isEmpty = function() {
    return 0 === this.rows.length || 1 === this.rows.length && "" === this.rows[0];
  }, Ae2.prototype.addText = function(e11) {
    this.rows[this.rowIdx] += e11;
  }, Ae2.prototype.backspace = function() {
    if (!this.isEmpty()) {
      var e11 = this.rows[this.rowIdx];
      this.rows[this.rowIdx] = e11.substr(0, e11.length - 1);
    }
  };
  var De2 = function(e11, t4, i6) {
    this.serviceNum = e11, this.text = "", this.currentWindow = new Ae2(-1), this.windows = [], this.stream = i6, "string" == typeof t4 && this.createTextDecoder(t4);
  };
  De2.prototype.init = function(e11, t4) {
    this.startPts = e11;
    for (var i6 = 0; i6 < 8; i6++) this.windows[i6] = new Ae2(i6), "function" == typeof t4 && (this.windows[i6].beforeRowOverflow = t4);
  }, De2.prototype.setCurrentWindow = function(e11) {
    this.currentWindow = this.windows[e11];
  }, De2.prototype.createTextDecoder = function(e11) {
    if ("undefined" == typeof TextDecoder) this.stream.trigger("log", { level: "warn", message: "The `encoding` option is unsupported without TextDecoder support" });
    else try {
      this.textDecoder_ = new TextDecoder(e11);
    } catch (t4) {
      this.stream.trigger("log", { level: "warn", message: "TextDecoder could not be created with " + e11 + " encoding. " + t4 });
    }
  };
  var Pe2 = function(e11) {
    e11 = e11 || {}, Pe2.prototype.init.call(this);
    var t4, i6 = this, s6 = e11.captionServices || {}, n5 = {};
    Object.keys(s6).forEach((e12) => {
      t4 = s6[e12], /^SERVICE/.test(e12) && (n5[e12] = t4.encoding);
    }), this.serviceEncodings = n5, this.current708Packet = null, this.services = {}, this.push = function(e12) {
      3 === e12.type ? (i6.new708Packet(), i6.add708Bytes(e12)) : (null === i6.current708Packet && i6.new708Packet(), i6.add708Bytes(e12));
    };
  };
  Pe2.prototype = new Ee2(), Pe2.prototype.new708Packet = function() {
    null !== this.current708Packet && this.push708Packet(), this.current708Packet = { data: [], ptsVals: [] };
  }, Pe2.prototype.add708Bytes = function(e11) {
    var t4 = e11.ccData, i6 = t4 >>> 8, s6 = 255 & t4;
    this.current708Packet.ptsVals.push(e11.pts), this.current708Packet.data.push(i6), this.current708Packet.data.push(s6);
  }, Pe2.prototype.push708Packet = function() {
    var e11 = this.current708Packet, t4 = e11.data, i6 = null, s6 = null, n5 = 0, r6 = t4[n5++];
    for (e11.seq = r6 >> 6, e11.sizeCode = 63 & r6; n5 < t4.length; n5++) s6 = 31 & (r6 = t4[n5++]), 7 === (i6 = r6 >> 5) && s6 > 0 && (i6 = r6 = t4[n5++]), this.pushServiceBlock(i6, n5, s6), s6 > 0 && (n5 += s6 - 1);
  }, Pe2.prototype.pushServiceBlock = function(e11, t4, i6) {
    var s6, n5 = t4, r6 = this.current708Packet.data, a10 = this.services[e11];
    for (a10 || (a10 = this.initService(e11, n5)); n5 < t4 + i6 && n5 < r6.length; n5++) s6 = r6[n5], xe2(s6) ? n5 = this.handleText(n5, a10) : 24 === s6 ? n5 = this.multiByteCharacter(n5, a10) : 16 === s6 ? n5 = this.extendedCommands(n5, a10) : 128 <= s6 && s6 <= 135 ? n5 = this.setCurrentWindow(n5, a10) : 152 <= s6 && s6 <= 159 ? n5 = this.defineWindow(n5, a10) : 136 === s6 ? n5 = this.clearWindows(n5, a10) : 140 === s6 ? n5 = this.deleteWindows(n5, a10) : 137 === s6 ? n5 = this.displayWindows(n5, a10) : 138 === s6 ? n5 = this.hideWindows(n5, a10) : 139 === s6 ? n5 = this.toggleWindows(n5, a10) : 151 === s6 ? n5 = this.setWindowAttributes(n5, a10) : 144 === s6 ? n5 = this.setPenAttributes(n5, a10) : 145 === s6 ? n5 = this.setPenColor(n5, a10) : 146 === s6 ? n5 = this.setPenLocation(n5, a10) : 143 === s6 ? a10 = this.reset(n5, a10) : 8 === s6 ? a10.currentWindow.backspace() : 12 === s6 ? a10.currentWindow.clearText() : 13 === s6 ? a10.currentWindow.pendingNewLine = true : 14 === s6 ? a10.currentWindow.clearText() : 141 === s6 && n5++;
  }, Pe2.prototype.extendedCommands = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11];
    return xe2(i6) && (e11 = this.handleText(e11, t4, { isExtended: true })), e11;
  }, Pe2.prototype.getPts = function(e11) {
    return this.current708Packet.ptsVals[Math.floor(e11 / 2)];
  }, Pe2.prototype.initService = function(e11, t4) {
    var i6, s6, n5 = this;
    return (i6 = "SERVICE" + e11) in this.serviceEncodings && (s6 = this.serviceEncodings[i6]), this.services[e11] = new De2(e11, s6, n5), this.services[e11].init(this.getPts(t4), function(t5) {
      n5.flushDisplayed(t5, n5.services[e11]);
    }), this.services[e11];
  }, Pe2.prototype.handleText = function(e11, t4, i6) {
    var s6, n5, r6 = i6 && i6.isExtended, a10 = i6 && i6.isMultiByte, o5 = this.current708Packet.data, l8 = r6 ? 4096 : 0, h4 = o5[e11], u7 = o5[e11 + 1], d3 = t4.currentWindow;
    function c6(e12) {
      return e12.map((e13) => ("0" + (255 & e13).toString(16)).slice(-2)).join("");
    }
    if (a10 ? (n5 = [h4, u7], e11++) : n5 = [h4], t4.textDecoder_ && !r6) s6 = t4.textDecoder_.decode(new Uint8Array(n5));
    else if (a10) {
      const e12 = c6(n5);
      s6 = String.fromCharCode(parseInt(e12, 16));
    } else s6 = Ie2(l8 | h4);
    return d3.pendingNewLine && !d3.isEmpty() && d3.newLine(this.getPts(e11)), d3.pendingNewLine = false, d3.addText(s6), e11;
  }, Pe2.prototype.multiByteCharacter = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11 + 1], n5 = i6[e11 + 2];
    return xe2(s6) && xe2(n5) && (e11 = this.handleText(++e11, t4, { isMultiByte: true })), e11;
  }, Pe2.prototype.setCurrentWindow = function(e11, t4) {
    var i6 = 7 & this.current708Packet.data[e11];
    return t4.setCurrentWindow(i6), e11;
  }, Pe2.prototype.defineWindow = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11], n5 = 7 & s6;
    t4.setCurrentWindow(n5);
    var r6 = t4.currentWindow;
    return s6 = i6[++e11], r6.visible = (32 & s6) >> 5, r6.rowLock = (16 & s6) >> 4, r6.columnLock = (8 & s6) >> 3, r6.priority = 7 & s6, s6 = i6[++e11], r6.relativePositioning = (128 & s6) >> 7, r6.anchorVertical = 127 & s6, s6 = i6[++e11], r6.anchorHorizontal = s6, s6 = i6[++e11], r6.anchorPoint = (240 & s6) >> 4, r6.rowCount = 15 & s6, s6 = i6[++e11], r6.columnCount = 63 & s6, s6 = i6[++e11], r6.windowStyle = (56 & s6) >> 3, r6.penStyle = 7 & s6, r6.virtualRowCount = r6.rowCount + 1, e11;
  }, Pe2.prototype.setWindowAttributes = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11], n5 = t4.currentWindow.winAttr;
    return s6 = i6[++e11], n5.fillOpacity = (192 & s6) >> 6, n5.fillRed = (48 & s6) >> 4, n5.fillGreen = (12 & s6) >> 2, n5.fillBlue = 3 & s6, s6 = i6[++e11], n5.borderType = (192 & s6) >> 6, n5.borderRed = (48 & s6) >> 4, n5.borderGreen = (12 & s6) >> 2, n5.borderBlue = 3 & s6, s6 = i6[++e11], n5.borderType += (128 & s6) >> 5, n5.wordWrap = (64 & s6) >> 6, n5.printDirection = (48 & s6) >> 4, n5.scrollDirection = (12 & s6) >> 2, n5.justify = 3 & s6, s6 = i6[++e11], n5.effectSpeed = (240 & s6) >> 4, n5.effectDirection = (12 & s6) >> 2, n5.displayEffect = 3 & s6, e11;
  }, Pe2.prototype.flushDisplayed = function(e11, t4) {
    for (var i6 = [], s6 = 0; s6 < 8; s6++) t4.windows[s6].visible && !t4.windows[s6].isEmpty() && i6.push(t4.windows[s6].getText());
    t4.endPts = e11, t4.text = i6.join("\n\n"), this.pushCaption(t4), t4.startPts = e11;
  }, Pe2.prototype.pushCaption = function(e11) {
    "" !== e11.text && (this.trigger("data", { startPts: e11.startPts, endPts: e11.endPts, text: e11.text, stream: "cc708_" + e11.serviceNum }), e11.text = "", e11.startPts = e11.endPts);
  }, Pe2.prototype.displayWindows = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11], s6 = this.getPts(e11);
    this.flushDisplayed(s6, t4);
    for (var n5 = 0; n5 < 8; n5++) i6 & 1 << n5 && (t4.windows[n5].visible = 1);
    return e11;
  }, Pe2.prototype.hideWindows = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11], s6 = this.getPts(e11);
    this.flushDisplayed(s6, t4);
    for (var n5 = 0; n5 < 8; n5++) i6 & 1 << n5 && (t4.windows[n5].visible = 0);
    return e11;
  }, Pe2.prototype.toggleWindows = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11], s6 = this.getPts(e11);
    this.flushDisplayed(s6, t4);
    for (var n5 = 0; n5 < 8; n5++) i6 & 1 << n5 && (t4.windows[n5].visible ^= 1);
    return e11;
  }, Pe2.prototype.clearWindows = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11], s6 = this.getPts(e11);
    this.flushDisplayed(s6, t4);
    for (var n5 = 0; n5 < 8; n5++) i6 & 1 << n5 && t4.windows[n5].clearText();
    return e11;
  }, Pe2.prototype.deleteWindows = function(e11, t4) {
    var i6 = this.current708Packet.data[++e11], s6 = this.getPts(e11);
    this.flushDisplayed(s6, t4);
    for (var n5 = 0; n5 < 8; n5++) i6 & 1 << n5 && t4.windows[n5].reset();
    return e11;
  }, Pe2.prototype.setPenAttributes = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11], n5 = t4.currentWindow.penAttr;
    return s6 = i6[++e11], n5.textTag = (240 & s6) >> 4, n5.offset = (12 & s6) >> 2, n5.penSize = 3 & s6, s6 = i6[++e11], n5.italics = (128 & s6) >> 7, n5.underline = (64 & s6) >> 6, n5.edgeType = (56 & s6) >> 3, n5.fontStyle = 7 & s6, e11;
  }, Pe2.prototype.setPenColor = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11], n5 = t4.currentWindow.penColor;
    return s6 = i6[++e11], n5.fgOpacity = (192 & s6) >> 6, n5.fgRed = (48 & s6) >> 4, n5.fgGreen = (12 & s6) >> 2, n5.fgBlue = 3 & s6, s6 = i6[++e11], n5.bgOpacity = (192 & s6) >> 6, n5.bgRed = (48 & s6) >> 4, n5.bgGreen = (12 & s6) >> 2, n5.bgBlue = 3 & s6, s6 = i6[++e11], n5.edgeRed = (48 & s6) >> 4, n5.edgeGreen = (12 & s6) >> 2, n5.edgeBlue = 3 & s6, e11;
  }, Pe2.prototype.setPenLocation = function(e11, t4) {
    var i6 = this.current708Packet.data, s6 = i6[e11], n5 = t4.currentWindow.penLoc;
    return t4.currentWindow.pendingNewLine = true, s6 = i6[++e11], n5.row = 15 & s6, s6 = i6[++e11], n5.column = 63 & s6, e11;
  }, Pe2.prototype.reset = function(e11, t4) {
    var i6 = this.getPts(e11);
    return this.flushDisplayed(i6, t4), this.initService(t4.serviceNum, e11);
  };
  var Le2 = { 42: 225, 92: 233, 94: 237, 95: 243, 96: 250, 123: 231, 124: 247, 125: 209, 126: 241, 127: 9608, 304: 174, 305: 176, 306: 189, 307: 191, 308: 8482, 309: 162, 310: 163, 311: 9834, 312: 224, 313: 160, 314: 232, 315: 226, 316: 234, 317: 238, 318: 244, 319: 251, 544: 193, 545: 201, 546: 211, 547: 218, 548: 220, 549: 252, 550: 8216, 551: 161, 552: 42, 553: 39, 554: 8212, 555: 169, 556: 8480, 557: 8226, 558: 8220, 559: 8221, 560: 192, 561: 194, 562: 199, 563: 200, 564: 202, 565: 203, 566: 235, 567: 206, 568: 207, 569: 239, 570: 212, 571: 217, 572: 249, 573: 219, 574: 171, 575: 187, 800: 195, 801: 227, 802: 205, 803: 204, 804: 236, 805: 210, 806: 242, 807: 213, 808: 245, 809: 123, 810: 125, 811: 92, 812: 94, 813: 95, 814: 124, 815: 126, 816: 196, 817: 228, 818: 214, 819: 246, 820: 223, 821: 165, 822: 164, 823: 9474, 824: 197, 825: 229, 826: 216, 827: 248, 828: 9484, 829: 9488, 830: 9492, 831: 9496 }, Oe2 = function(e11) {
    return null === e11 ? "" : (e11 = Le2[e11] || e11, String.fromCharCode(e11));
  }, Ne2 = 14, Re2 = [4352, 4384, 4608, 4640, 5376, 5408, 5632, 5664, 5888, 5920, 4096, 4864, 4896, 5120, 5152], Me2 = function() {
    for (var e11 = [], t4 = Ne2 + 1; t4--; ) e11.push({ text: "", indent: 0, offset: 0 });
    return e11;
  }, Ue2 = function(e11, t4) {
    Ue2.prototype.init.call(this), this.field_ = e11 || 0, this.dataChannel_ = t4 || 0, this.name_ = "CC" + (1 + (this.field_ << 1 | this.dataChannel_)), this.setConstants(), this.reset(), this.push = function(e12) {
      var t5, i6, s6, n5, r6;
      if ((t5 = 32639 & e12.ccData) !== this.lastControlCode_) {
        if (4096 == (61440 & t5) ? this.lastControlCode_ = t5 : t5 !== this.PADDING_ && (this.lastControlCode_ = null), s6 = t5 >>> 8, n5 = 255 & t5, t5 !== this.PADDING_) if (t5 === this.RESUME_CAPTION_LOADING_) this.mode_ = "popOn";
        else if (t5 === this.END_OF_CAPTION_) this.mode_ = "popOn", this.clearFormatting(e12.pts), this.flushDisplayed(e12.pts), i6 = this.displayed_, this.displayed_ = this.nonDisplayed_, this.nonDisplayed_ = i6, this.startPts_ = e12.pts;
        else if (t5 === this.ROLL_UP_2_ROWS_) this.rollUpRows_ = 2, this.setRollUp(e12.pts);
        else if (t5 === this.ROLL_UP_3_ROWS_) this.rollUpRows_ = 3, this.setRollUp(e12.pts);
        else if (t5 === this.ROLL_UP_4_ROWS_) this.rollUpRows_ = 4, this.setRollUp(e12.pts);
        else if (t5 === this.CARRIAGE_RETURN_) this.clearFormatting(e12.pts), this.flushDisplayed(e12.pts), this.shiftRowsUp_(), this.startPts_ = e12.pts;
        else if (t5 === this.BACKSPACE_) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1) : this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1);
        else if (t5 === this.ERASE_DISPLAYED_MEMORY_) this.flushDisplayed(e12.pts), this.displayed_ = Me2();
        else if (t5 === this.ERASE_NON_DISPLAYED_MEMORY_) this.nonDisplayed_ = Me2();
        else if (t5 === this.RESUME_DIRECT_CAPTIONING_) "paintOn" !== this.mode_ && (this.flushDisplayed(e12.pts), this.displayed_ = Me2()), this.mode_ = "paintOn", this.startPts_ = e12.pts;
        else if (this.isSpecialCharacter(s6, n5)) r6 = Oe2((s6 = (3 & s6) << 8) | n5), this[this.mode_](e12.pts, r6), this.column_++;
        else if (this.isExtCharacter(s6, n5)) "popOn" === this.mode_ ? this.nonDisplayed_[this.row_].text = this.nonDisplayed_[this.row_].text.slice(0, -1) : this.displayed_[this.row_].text = this.displayed_[this.row_].text.slice(0, -1), r6 = Oe2((s6 = (3 & s6) << 8) | n5), this[this.mode_](e12.pts, r6), this.column_++;
        else if (this.isMidRowCode(s6, n5)) this.clearFormatting(e12.pts), this[this.mode_](e12.pts, " "), this.column_++, 14 & ~n5 || this.addFormatting(e12.pts, ["i"]), 1 & ~n5 || this.addFormatting(e12.pts, ["u"]);
        else if (this.isOffsetControlCode(s6, n5)) {
          const e13 = 3 & n5;
          this.nonDisplayed_[this.row_].offset = e13, this.column_ += e13;
        } else if (this.isPAC(s6, n5)) {
          var a10 = Re2.indexOf(7968 & t5);
          if ("rollUp" === this.mode_ && (a10 - this.rollUpRows_ + 1 < 0 && (a10 = this.rollUpRows_ - 1), this.setRollUp(e12.pts, a10)), a10 !== this.row_ && a10 >= 0 && a10 <= 14 && (this.clearFormatting(e12.pts), this.row_ = a10), 1 & n5 && -1 === this.formatting_.indexOf("u") && this.addFormatting(e12.pts, ["u"]), !(16 & ~t5)) {
            const e13 = (14 & t5) >> 1;
            this.column_ = 4 * e13, this.nonDisplayed_[this.row_].indent += e13;
          }
          this.isColorPAC(n5) && (14 & ~n5 || this.addFormatting(e12.pts, ["i"]));
        } else this.isNormalChar(s6) && (0 === n5 && (n5 = null), r6 = Oe2(s6), r6 += Oe2(n5), this[this.mode_](e12.pts, r6), this.column_ += r6.length);
      } else this.lastControlCode_ = null;
    };
  };
  Ue2.prototype = new Ee2(), Ue2.prototype.flushDisplayed = function(e11) {
    const t4 = (e12) => {
      this.trigger("log", { level: "warn", message: "Skipping a malformed 608 caption at index " + e12 + "." });
    }, i6 = [];
    this.displayed_.forEach((e12, s6) => {
      if (e12 && e12.text && e12.text.length) {
        try {
          e12.text = e12.text.trim();
        } catch (n5) {
          t4(s6);
        }
        e12.text.length && i6.push({ text: e12.text, line: s6 + 1, position: 10 + Math.min(70, 10 * e12.indent) + 2.5 * e12.offset });
      } else null == e12 && t4(s6);
    }), i6.length && this.trigger("data", { startPts: this.startPts_, endPts: e11, content: i6, stream: this.name_ });
  }, Ue2.prototype.reset = function() {
    this.mode_ = "popOn", this.topRow_ = 0, this.startPts_ = 0, this.displayed_ = Me2(), this.nonDisplayed_ = Me2(), this.lastControlCode_ = null, this.column_ = 0, this.row_ = Ne2, this.rollUpRows_ = 2, this.formatting_ = [];
  }, Ue2.prototype.setConstants = function() {
    0 === this.dataChannel_ ? (this.BASE_ = 16, this.EXT_ = 17, this.CONTROL_ = (20 | this.field_) << 8, this.OFFSET_ = 23) : 1 === this.dataChannel_ && (this.BASE_ = 24, this.EXT_ = 25, this.CONTROL_ = (28 | this.field_) << 8, this.OFFSET_ = 31), this.PADDING_ = 0, this.RESUME_CAPTION_LOADING_ = 32 | this.CONTROL_, this.END_OF_CAPTION_ = 47 | this.CONTROL_, this.ROLL_UP_2_ROWS_ = 37 | this.CONTROL_, this.ROLL_UP_3_ROWS_ = 38 | this.CONTROL_, this.ROLL_UP_4_ROWS_ = 39 | this.CONTROL_, this.CARRIAGE_RETURN_ = 45 | this.CONTROL_, this.RESUME_DIRECT_CAPTIONING_ = 41 | this.CONTROL_, this.BACKSPACE_ = 33 | this.CONTROL_, this.ERASE_DISPLAYED_MEMORY_ = 44 | this.CONTROL_, this.ERASE_NON_DISPLAYED_MEMORY_ = 46 | this.CONTROL_;
  }, Ue2.prototype.isSpecialCharacter = function(e11, t4) {
    return e11 === this.EXT_ && t4 >= 48 && t4 <= 63;
  }, Ue2.prototype.isExtCharacter = function(e11, t4) {
    return (e11 === this.EXT_ + 1 || e11 === this.EXT_ + 2) && t4 >= 32 && t4 <= 63;
  }, Ue2.prototype.isMidRowCode = function(e11, t4) {
    return e11 === this.EXT_ && t4 >= 32 && t4 <= 47;
  }, Ue2.prototype.isOffsetControlCode = function(e11, t4) {
    return e11 === this.OFFSET_ && t4 >= 33 && t4 <= 35;
  }, Ue2.prototype.isPAC = function(e11, t4) {
    return e11 >= this.BASE_ && e11 < this.BASE_ + 8 && t4 >= 64 && t4 <= 127;
  }, Ue2.prototype.isColorPAC = function(e11) {
    return e11 >= 64 && e11 <= 79 || e11 >= 96 && e11 <= 127;
  }, Ue2.prototype.isNormalChar = function(e11) {
    return e11 >= 32 && e11 <= 127;
  }, Ue2.prototype.setRollUp = function(e11, t4) {
    if ("rollUp" !== this.mode_ && (this.row_ = Ne2, this.mode_ = "rollUp", this.flushDisplayed(e11), this.nonDisplayed_ = Me2(), this.displayed_ = Me2()), void 0 !== t4 && t4 !== this.row_) for (var i6 = 0; i6 < this.rollUpRows_; i6++) this.displayed_[t4 - i6] = this.displayed_[this.row_ - i6], this.displayed_[this.row_ - i6] = { text: "", indent: 0, offset: 0 };
    void 0 === t4 && (t4 = this.row_), this.topRow_ = t4 - this.rollUpRows_ + 1;
  }, Ue2.prototype.addFormatting = function(e11, t4) {
    this.formatting_ = this.formatting_.concat(t4);
    var i6 = t4.reduce(function(e12, t5) {
      return e12 + "<" + t5 + ">";
    }, "");
    this[this.mode_](e11, i6);
  }, Ue2.prototype.clearFormatting = function(e11) {
    if (this.formatting_.length) {
      var t4 = this.formatting_.reverse().reduce(function(e12, t5) {
        return e12 + "</" + t5 + ">";
      }, "");
      this.formatting_ = [], this[this.mode_](e11, t4);
    }
  }, Ue2.prototype.popOn = function(e11, t4) {
    var i6 = this.nonDisplayed_[this.row_].text;
    i6 += t4, this.nonDisplayed_[this.row_].text = i6;
  }, Ue2.prototype.rollUp = function(e11, t4) {
    var i6 = this.displayed_[this.row_].text;
    i6 += t4, this.displayed_[this.row_].text = i6;
  }, Ue2.prototype.shiftRowsUp_ = function() {
    var e11;
    for (e11 = 0; e11 < this.topRow_; e11++) this.displayed_[e11] = { text: "", indent: 0, offset: 0 };
    for (e11 = this.row_ + 1; e11 < Ne2 + 1; e11++) this.displayed_[e11] = { text: "", indent: 0, offset: 0 };
    for (e11 = this.topRow_; e11 < this.row_; e11++) this.displayed_[e11] = this.displayed_[e11 + 1];
    this.displayed_[this.row_] = { text: "", indent: 0, offset: 0 };
  }, Ue2.prototype.paintOn = function(e11, t4) {
    var i6 = this.displayed_[this.row_].text;
    i6 += t4, this.displayed_[this.row_].text = i6;
  };
  var Be2 = { CaptionStream: Ce2, Cea608Stream: Ue2, Cea708Stream: Pe2 }, Fe2 = { H264_STREAM_TYPE: 27, ADTS_STREAM_TYPE: 15, METADATA_STREAM_TYPE: 21 }, qe2 = $2, je2 = 8589934592, $e2 = 4294967296, He2 = "shared", Ve2 = function(e11, t4) {
    var i6 = 1;
    for (e11 > t4 && (i6 = -1); Math.abs(t4 - e11) > $e2; ) e11 += i6 * je2;
    return e11;
  }, ze2 = function(e11) {
    var t4, i6;
    ze2.prototype.init.call(this), this.type_ = e11 || He2, this.push = function(e12) {
      "metadata" !== e12.type ? this.type_ !== He2 && e12.type !== this.type_ || (void 0 === i6 && (i6 = e12.dts), e12.dts = Ve2(e12.dts, i6), e12.pts = Ve2(e12.pts, i6), t4 = e12.dts, this.trigger("data", e12)) : this.trigger("data", e12);
    }, this.flush = function() {
      i6 = t4, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.discontinuity = function() {
      i6 = void 0, t4 = void 0;
    }, this.reset = function() {
      this.discontinuity(), this.trigger("reset");
    };
  };
  ze2.prototype = new qe2();
  var We2, Ge2 = { TimestampRolloverStream: ze2, handleRollover: Ve2 }, Xe2 = (e11, t4, i6) => {
    if (!e11) return -1;
    for (var s6 = i6; s6 < e11.length; s6++) if (e11[s6] === t4) return s6;
    return -1;
  }, Ke2 = { typedArrayIndexOf: Xe2 }.typedArrayIndexOf, Ye2 = { Utf8: 3 }, Qe2 = function(e11, t4, i6) {
    var s6, n5 = "";
    for (s6 = t4; s6 < i6; s6++) n5 += "%" + ("00" + e11[s6].toString(16)).slice(-2);
    return n5;
  }, Je2 = function(e11, t4, i6) {
    return decodeURIComponent(Qe2(e11, t4, i6));
  }, Ze2 = function(e11, t4, i6) {
    return unescape(Qe2(e11, t4, i6));
  }, et2 = function(e11) {
    return e11[0] << 21 | e11[1] << 14 | e11[2] << 7 | e11[3];
  }, tt2 = { APIC: function(e11) {
    var t4, i6, s6 = 1, n5 = "-->";
    e11.data[0] === Ye2.Utf8 && ((t4 = Ke2(e11.data, 0, s6)) < 0 || (e11.mimeType = Ze2(e11.data, s6, t4), s6 = t4 + 1, e11.pictureType = e11.data[s6], s6++, (i6 = Ke2(e11.data, 0, s6)) < 0 || (e11.description = Je2(e11.data, s6, i6), s6 = i6 + 1, e11.mimeType === n5 ? e11.url = Ze2(e11.data, s6, e11.data.length) : e11.pictureData = e11.data.subarray(s6, e11.data.length))));
  }, "T*": function(e11) {
    e11.data[0] === Ye2.Utf8 && (e11.value = Je2(e11.data, 1, e11.data.length).replace(/\0*$/, ""), e11.values = e11.value.split("\0"));
  }, TXXX: function(e11) {
    var t4;
    e11.data[0] === Ye2.Utf8 && -1 !== (t4 = Ke2(e11.data, 0, 1)) && (e11.description = Je2(e11.data, 1, t4), e11.value = Je2(e11.data, t4 + 1, e11.data.length).replace(/\0*$/, ""), e11.data = e11.value);
  }, "W*": function(e11) {
    e11.url = Ze2(e11.data, 0, e11.data.length).replace(/\0.*$/, "");
  }, WXXX: function(e11) {
    var t4;
    e11.data[0] === Ye2.Utf8 && -1 !== (t4 = Ke2(e11.data, 0, 1)) && (e11.description = Je2(e11.data, 1, t4), e11.url = Ze2(e11.data, t4 + 1, e11.data.length).replace(/\0.*$/, ""));
  }, PRIV: function(e11) {
    var t4;
    for (t4 = 0; t4 < e11.data.length; t4++) if (0 === e11.data[t4]) {
      e11.owner = Ze2(e11.data, 0, t4);
      break;
    }
    e11.privateData = e11.data.subarray(t4 + 1), e11.data = e11.privateData;
  } }, it2 = { parseId3Frames: function(e11) {
    var t4, i6 = 10, s6 = 0, n5 = [];
    if (!(e11.length < 10 || e11[0] !== "I".charCodeAt(0) || e11[1] !== "D".charCodeAt(0) || e11[2] !== "3".charCodeAt(0))) {
      s6 = et2(e11.subarray(6, 10)), s6 += 10, 64 & e11[5] && (i6 += 4, i6 += et2(e11.subarray(10, 14)), s6 -= et2(e11.subarray(16, 20)));
      do {
        if ((t4 = et2(e11.subarray(i6 + 4, i6 + 8))) < 1) break;
        var r6 = { id: String.fromCharCode(e11[i6], e11[i6 + 1], e11[i6 + 2], e11[i6 + 3]), data: e11.subarray(i6 + 10, i6 + t4 + 10) };
        r6.key = r6.id, tt2[r6.id] ? tt2[r6.id](r6) : "T" === r6.id[0] ? tt2["T*"](r6) : "W" === r6.id[0] && tt2["W*"](r6), n5.push(r6), i6 += 10, i6 += t4;
      } while (i6 < s6);
      return n5;
    }
  }, parseSyncSafeInteger: et2, frameParsers: tt2 }, st2 = Fe2, nt2 = it2;
  (We2 = function(e11) {
    var t4, i6 = { descriptor: e11 && e11.descriptor }, s6 = 0, n5 = [], r6 = 0;
    if (We2.prototype.init.call(this), this.dispatchType = st2.METADATA_STREAM_TYPE.toString(16), i6.descriptor) for (t4 = 0; t4 < i6.descriptor.length; t4++) this.dispatchType += ("00" + i6.descriptor[t4].toString(16)).slice(-2);
    this.push = function(e12) {
      var t5, i7, a10, o5, l8;
      if ("timed-metadata" === e12.type) {
        if (e12.dataAlignmentIndicator && (r6 = 0, n5.length = 0), 0 === n5.length && (e12.data.length < 10 || e12.data[0] !== "I".charCodeAt(0) || e12.data[1] !== "D".charCodeAt(0) || e12.data[2] !== "3".charCodeAt(0))) this.trigger("log", { level: "warn", message: "Skipping unrecognized metadata packet" });
        else if (n5.push(e12), r6 += e12.data.byteLength, 1 === n5.length && (s6 = nt2.parseSyncSafeInteger(e12.data.subarray(6, 10)), s6 += 10), !(r6 < s6)) {
          for (t5 = { data: new Uint8Array(s6), frames: [], pts: n5[0].pts, dts: n5[0].dts }, l8 = 0; l8 < s6; ) t5.data.set(n5[0].data.subarray(0, s6 - l8), l8), l8 += n5[0].data.byteLength, r6 -= n5[0].data.byteLength, n5.shift();
          i7 = 10, 64 & t5.data[5] && (i7 += 4, i7 += nt2.parseSyncSafeInteger(t5.data.subarray(10, 14)), s6 -= nt2.parseSyncSafeInteger(t5.data.subarray(16, 20)));
          do {
            if ((a10 = nt2.parseSyncSafeInteger(t5.data.subarray(i7 + 4, i7 + 8))) < 1) {
              this.trigger("log", { level: "warn", message: "Malformed ID3 frame encountered. Skipping remaining metadata parsing." });
              break;
            }
            if ((o5 = { id: String.fromCharCode(t5.data[i7], t5.data[i7 + 1], t5.data[i7 + 2], t5.data[i7 + 3]), data: t5.data.subarray(i7 + 10, i7 + a10 + 10) }).key = o5.id, nt2.frameParsers[o5.id] ? nt2.frameParsers[o5.id](o5) : "T" === o5.id[0] ? nt2.frameParsers["T*"](o5) : "W" === o5.id[0] && nt2.frameParsers["W*"](o5), "com.apple.streaming.transportStreamTimestamp" === o5.owner) {
              var h4 = o5.data, u7 = (1 & h4[3]) << 30 | h4[4] << 22 | h4[5] << 14 | h4[6] << 6 | h4[7] >>> 2;
              u7 *= 4, u7 += 3 & h4[7], o5.timeStamp = u7, void 0 === t5.pts && void 0 === t5.dts && (t5.pts = o5.timeStamp, t5.dts = o5.timeStamp), this.trigger("timestamp", o5);
            }
            t5.frames.push(o5), i7 += 10, i7 += a10;
          } while (i7 < s6);
          this.trigger("data", t5);
        }
      }
    };
  }).prototype = new $2();
  var rt2, at2, ot2, lt2 = We2, ht2 = $2, ut2 = Be2, dt2 = Fe2, ct2 = Ge2.TimestampRolloverStream, pt2 = 188, mt2 = 71;
  (rt2 = function() {
    var e11 = new Uint8Array(pt2), t4 = 0;
    rt2.prototype.init.call(this), this.push = function(i6) {
      var s6, n5 = 0, r6 = pt2;
      for (t4 ? ((s6 = new Uint8Array(i6.byteLength + t4)).set(e11.subarray(0, t4)), s6.set(i6, t4), t4 = 0) : s6 = i6; r6 < s6.byteLength; ) s6[n5] !== mt2 || s6[r6] !== mt2 ? (n5++, r6++) : (this.trigger("data", s6.subarray(n5, r6)), n5 += pt2, r6 += pt2);
      n5 < s6.byteLength && (e11.set(s6.subarray(n5), 0), t4 = s6.byteLength - n5);
    }, this.flush = function() {
      t4 === pt2 && e11[0] === mt2 && (this.trigger("data", e11), t4 = 0), this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    }, this.reset = function() {
      t4 = 0, this.trigger("reset");
    };
  }).prototype = new ht2(), at2 = function() {
    var e11, t4, i6, s6;
    at2.prototype.init.call(this), s6 = this, this.packetsWaitingForPmt = [], this.programMapTable = void 0, e11 = function(e12, s7) {
      var n5 = 0;
      s7.payloadUnitStartIndicator && (n5 += e12[n5] + 1), "pat" === s7.type ? t4(e12.subarray(n5), s7) : i6(e12.subarray(n5), s7);
    }, t4 = function(e12, t5) {
      t5.section_number = e12[7], t5.last_section_number = e12[8], s6.pmtPid = (31 & e12[10]) << 8 | e12[11], t5.pmtPid = s6.pmtPid;
    }, i6 = function(e12, t5) {
      var i7, n5;
      if (1 & e12[5]) {
        for (s6.programMapTable = { video: null, audio: null, "timed-metadata": {} }, i7 = 3 + ((15 & e12[1]) << 8 | e12[2]) - 4, n5 = 12 + ((15 & e12[10]) << 8 | e12[11]); n5 < i7; ) {
          var r6 = e12[n5], a10 = (31 & e12[n5 + 1]) << 8 | e12[n5 + 2];
          r6 === dt2.H264_STREAM_TYPE && null === s6.programMapTable.video ? s6.programMapTable.video = a10 : r6 === dt2.ADTS_STREAM_TYPE && null === s6.programMapTable.audio ? s6.programMapTable.audio = a10 : r6 === dt2.METADATA_STREAM_TYPE && (s6.programMapTable["timed-metadata"][a10] = r6), n5 += 5 + ((15 & e12[n5 + 3]) << 8 | e12[n5 + 4]);
        }
        t5.programMapTable = s6.programMapTable;
      }
    }, this.push = function(t5) {
      var i7 = {}, s7 = 4;
      if (i7.payloadUnitStartIndicator = !!(64 & t5[1]), i7.pid = 31 & t5[1], i7.pid <<= 8, i7.pid |= t5[2], (48 & t5[3]) >>> 4 > 1 && (s7 += t5[s7] + 1), 0 === i7.pid) i7.type = "pat", e11(t5.subarray(s7), i7), this.trigger("data", i7);
      else if (i7.pid === this.pmtPid) for (i7.type = "pmt", e11(t5.subarray(s7), i7), this.trigger("data", i7); this.packetsWaitingForPmt.length; ) this.processPes_.apply(this, this.packetsWaitingForPmt.shift());
      else void 0 === this.programMapTable ? this.packetsWaitingForPmt.push([t5, s7, i7]) : this.processPes_(t5, s7, i7);
    }, this.processPes_ = function(e12, t5, i7) {
      i7.pid === this.programMapTable.video ? i7.streamType = dt2.H264_STREAM_TYPE : i7.pid === this.programMapTable.audio ? i7.streamType = dt2.ADTS_STREAM_TYPE : i7.streamType = this.programMapTable["timed-metadata"][i7.pid], i7.type = "pes", i7.data = e12.subarray(t5), this.trigger("data", i7);
    };
  }, at2.prototype = new ht2(), at2.STREAM_TYPES = { h264: 27, adts: 15 }, ot2 = function() {
    var e11, t4 = this, i6 = false, s6 = { data: [], size: 0 }, n5 = { data: [], size: 0 }, r6 = { data: [], size: 0 }, a10 = function(e12, t5) {
      var i7;
      const s7 = e12[0] << 16 | e12[1] << 8 | e12[2];
      t5.data = new Uint8Array(), 1 === s7 && (t5.packetLength = 6 + (e12[4] << 8 | e12[5]), t5.dataAlignmentIndicator = !!(4 & e12[6]), 192 & (i7 = e12[7]) && (t5.pts = (14 & e12[9]) << 27 | (255 & e12[10]) << 20 | (254 & e12[11]) << 12 | (255 & e12[12]) << 5 | (254 & e12[13]) >>> 3, t5.pts *= 4, t5.pts += (6 & e12[13]) >>> 1, t5.dts = t5.pts, 64 & i7 && (t5.dts = (14 & e12[14]) << 27 | (255 & e12[15]) << 20 | (254 & e12[16]) << 12 | (255 & e12[17]) << 5 | (254 & e12[18]) >>> 3, t5.dts *= 4, t5.dts += (6 & e12[18]) >>> 1)), t5.data = e12.subarray(9 + e12[8]));
    }, o5 = function(e12, i7, s7) {
      var n6, r7 = new Uint8Array(e12.size), o6 = { type: i7 }, l8 = 0, h4 = 0, u7 = false;
      if (e12.data.length && !(e12.size < 9)) {
        for (o6.trackId = e12.data[0].pid, l8 = 0; l8 < e12.data.length; l8++) n6 = e12.data[l8], r7.set(n6.data, h4), h4 += n6.data.byteLength;
        a10(r7, o6), u7 = "video" === i7 || o6.packetLength <= e12.size, (s7 || u7) && (e12.size = 0, e12.data.length = 0), u7 && t4.trigger("data", o6);
      }
    };
    ot2.prototype.init.call(this), this.push = function(a11) {
      ({ pat: function() {
      }, pes: function() {
        var e12, t5;
        switch (a11.streamType) {
          case dt2.H264_STREAM_TYPE:
            e12 = s6, t5 = "video";
            break;
          case dt2.ADTS_STREAM_TYPE:
            e12 = n5, t5 = "audio";
            break;
          case dt2.METADATA_STREAM_TYPE:
            e12 = r6, t5 = "timed-metadata";
            break;
          default:
            return;
        }
        a11.payloadUnitStartIndicator && o5(e12, t5, true), e12.data.push(a11), e12.size += a11.data.byteLength;
      }, pmt: function() {
        var s7 = { type: "metadata", tracks: [] };
        null !== (e11 = a11.programMapTable).video && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e11.video, codec: "avc", type: "video" }), null !== e11.audio && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e11.audio, codec: "adts", type: "audio" }), i6 = true, t4.trigger("data", s7);
      } })[a11.type]();
    }, this.reset = function() {
      s6.size = 0, s6.data.length = 0, n5.size = 0, n5.data.length = 0, this.trigger("reset");
    }, this.flushStreams_ = function() {
      o5(s6, "video"), o5(n5, "audio"), o5(r6, "timed-metadata");
    }, this.flush = function() {
      if (!i6 && e11) {
        var s7 = { type: "metadata", tracks: [] };
        null !== e11.video && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e11.video, codec: "avc", type: "video" }), null !== e11.audio && s7.tracks.push({ timelineStartInfo: { baseMediaDecodeTime: 0 }, id: +e11.audio, codec: "adts", type: "audio" }), t4.trigger("data", s7);
      }
      i6 = false, this.flushStreams_(), this.trigger("done");
    };
  }, ot2.prototype = new ht2();
  var gt2 = { PAT_PID: 0, MP2T_PACKET_LENGTH: pt2, TransportPacketStream: rt2, TransportParseStream: at2, ElementaryStream: ot2, TimestampRolloverStream: ct2, CaptionStream: ut2.CaptionStream, Cea608Stream: ut2.Cea608Stream, Cea708Stream: ut2.Cea708Stream, MetadataStream: lt2 };
  for (var ft2 in dt2) dt2.hasOwnProperty(ft2) && (gt2[ft2] = dt2[ft2]);
  var yt2, _t2 = gt2, vt2 = $2, bt2 = ce2.ONE_SECOND_IN_TS, Tt2 = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
  (yt2 = function(e11) {
    var t4, i6 = 0;
    yt2.prototype.init.call(this), this.skipWarn_ = function(e12, t5) {
      this.trigger("log", { level: "warn", message: `adts skiping bytes ${e12} to ${t5} in frame ${i6} outside syncword` });
    }, this.push = function(s6) {
      var n5, r6, a10, o5, l8, h4 = 0;
      if (e11 || (i6 = 0), "audio" === s6.type) {
        var u7;
        for (t4 && t4.length ? (a10 = t4, (t4 = new Uint8Array(a10.byteLength + s6.data.byteLength)).set(a10), t4.set(s6.data, a10.byteLength)) : t4 = s6.data; h4 + 7 < t4.length; ) if (255 === t4[h4] && 240 == (246 & t4[h4 + 1])) {
          if ("number" == typeof u7 && (this.skipWarn_(u7, h4), u7 = null), r6 = 2 * (1 & ~t4[h4 + 1]), n5 = (3 & t4[h4 + 3]) << 11 | t4[h4 + 4] << 3 | (224 & t4[h4 + 5]) >> 5, l8 = (o5 = 1024 * (1 + (3 & t4[h4 + 6]))) * bt2 / Tt2[(60 & t4[h4 + 2]) >>> 2], t4.byteLength - h4 < n5) break;
          this.trigger("data", { pts: s6.pts + i6 * l8, dts: s6.dts + i6 * l8, sampleCount: o5, audioobjecttype: 1 + (t4[h4 + 2] >>> 6 & 3), channelcount: (1 & t4[h4 + 2]) << 2 | (192 & t4[h4 + 3]) >>> 6, samplerate: Tt2[(60 & t4[h4 + 2]) >>> 2], samplingfrequencyindex: (60 & t4[h4 + 2]) >>> 2, samplesize: 16, data: t4.subarray(h4 + 7 + r6, h4 + n5) }), i6++, h4 += n5;
        } else "number" != typeof u7 && (u7 = h4), h4++;
        "number" == typeof u7 && (this.skipWarn_(u7, h4), u7 = null), t4 = t4.subarray(h4);
      }
    }, this.flush = function() {
      i6 = 0, this.trigger("done");
    }, this.reset = function() {
      t4 = void 0, this.trigger("reset");
    }, this.endTimeline = function() {
      t4 = void 0, this.trigger("endedtimeline");
    };
  }).prototype = new vt2();
  var St2, Et2, wt2, Ct2 = yt2, kt2 = $2, It2 = function(e11) {
    var t4 = e11.byteLength, i6 = 0, s6 = 0;
    this.length = function() {
      return 8 * t4;
    }, this.bitsAvailable = function() {
      return 8 * t4 + s6;
    }, this.loadWord = function() {
      var n5 = e11.byteLength - t4, r6 = new Uint8Array(4), a10 = Math.min(4, t4);
      if (0 === a10) throw new Error("no bytes available");
      r6.set(e11.subarray(n5, n5 + a10)), i6 = new DataView(r6.buffer).getUint32(0), s6 = 8 * a10, t4 -= a10;
    }, this.skipBits = function(e12) {
      var n5;
      s6 > e12 ? (i6 <<= e12, s6 -= e12) : (e12 -= s6, e12 -= 8 * (n5 = Math.floor(e12 / 8)), t4 -= n5, this.loadWord(), i6 <<= e12, s6 -= e12);
    }, this.readBits = function(e12) {
      var n5 = Math.min(s6, e12), r6 = i6 >>> 32 - n5;
      return (s6 -= n5) > 0 ? i6 <<= n5 : t4 > 0 && this.loadWord(), (n5 = e12 - n5) > 0 ? r6 << n5 | this.readBits(n5) : r6;
    }, this.skipLeadingZeros = function() {
      var e12;
      for (e12 = 0; e12 < s6; ++e12) if (i6 & 2147483648 >>> e12) return i6 <<= e12, s6 -= e12, e12;
      return this.loadWord(), e12 + this.skipLeadingZeros();
    }, this.skipUnsignedExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.skipExpGolomb = function() {
      this.skipBits(1 + this.skipLeadingZeros());
    }, this.readUnsignedExpGolomb = function() {
      var e12 = this.skipLeadingZeros();
      return this.readBits(e12 + 1) - 1;
    }, this.readExpGolomb = function() {
      var e12 = this.readUnsignedExpGolomb();
      return 1 & e12 ? 1 + e12 >>> 1 : -1 * (e12 >>> 1);
    }, this.readBoolean = function() {
      return 1 === this.readBits(1);
    }, this.readUnsignedByte = function() {
      return this.readBits(8);
    }, this.loadWord();
  };
  (Et2 = function() {
    var e11, t4, i6 = 0;
    Et2.prototype.init.call(this), this.push = function(s6) {
      var n5;
      t4 ? ((n5 = new Uint8Array(t4.byteLength + s6.data.byteLength)).set(t4), n5.set(s6.data, t4.byteLength), t4 = n5) : t4 = s6.data;
      for (var r6 = t4.byteLength; i6 < r6 - 3; i6++) if (1 === t4[i6 + 2]) {
        e11 = i6 + 5;
        break;
      }
      for (; e11 < r6; ) switch (t4[e11]) {
        case 0:
          if (0 !== t4[e11 - 1]) {
            e11 += 2;
            break;
          }
          if (0 !== t4[e11 - 2]) {
            e11++;
            break;
          }
          i6 + 3 !== e11 - 2 && this.trigger("data", t4.subarray(i6 + 3, e11 - 2));
          do {
            e11++;
          } while (1 !== t4[e11] && e11 < r6);
          i6 = e11 - 2, e11 += 3;
          break;
        case 1:
          if (0 !== t4[e11 - 1] || 0 !== t4[e11 - 2]) {
            e11 += 3;
            break;
          }
          this.trigger("data", t4.subarray(i6 + 3, e11 - 2)), i6 = e11 - 2, e11 += 3;
          break;
        default:
          e11 += 3;
      }
      t4 = t4.subarray(i6), e11 -= i6, i6 = 0;
    }, this.reset = function() {
      t4 = null, i6 = 0, this.trigger("reset");
    }, this.flush = function() {
      t4 && t4.byteLength > 3 && this.trigger("data", t4.subarray(i6 + 3)), t4 = null, i6 = 0, this.trigger("done");
    }, this.endTimeline = function() {
      this.flush(), this.trigger("endedtimeline");
    };
  }).prototype = new kt2(), wt2 = { 100: true, 110: true, 122: true, 244: true, 44: true, 83: true, 86: true, 118: true, 128: true, 138: true, 139: true, 134: true }, St2 = function() {
    var e11, t4, i6, s6, n5, r6, a10, o5 = new Et2();
    St2.prototype.init.call(this), e11 = this, this.push = function(e12) {
      "video" === e12.type && (t4 = e12.trackId, i6 = e12.pts, s6 = e12.dts, o5.push(e12));
    }, o5.on("data", function(a11) {
      var o6 = { trackId: t4, pts: i6, dts: s6, data: a11, nalUnitTypeCode: 31 & a11[0] };
      switch (o6.nalUnitTypeCode) {
        case 5:
          o6.nalUnitType = "slice_layer_without_partitioning_rbsp_idr";
          break;
        case 6:
          o6.nalUnitType = "sei_rbsp", o6.escapedRBSP = n5(a11.subarray(1));
          break;
        case 7:
          o6.nalUnitType = "seq_parameter_set_rbsp", o6.escapedRBSP = n5(a11.subarray(1)), o6.config = r6(o6.escapedRBSP);
          break;
        case 8:
          o6.nalUnitType = "pic_parameter_set_rbsp";
          break;
        case 9:
          o6.nalUnitType = "access_unit_delimiter_rbsp";
      }
      e11.trigger("data", o6);
    }), o5.on("done", function() {
      e11.trigger("done");
    }), o5.on("partialdone", function() {
      e11.trigger("partialdone");
    }), o5.on("reset", function() {
      e11.trigger("reset");
    }), o5.on("endedtimeline", function() {
      e11.trigger("endedtimeline");
    }), this.flush = function() {
      o5.flush();
    }, this.partialFlush = function() {
      o5.partialFlush();
    }, this.reset = function() {
      o5.reset();
    }, this.endTimeline = function() {
      o5.endTimeline();
    }, a10 = function(e12, t5) {
      var i7, s7 = 8, n6 = 8;
      for (i7 = 0; i7 < e12; i7++) 0 !== n6 && (n6 = (s7 + t5.readExpGolomb() + 256) % 256), s7 = 0 === n6 ? s7 : n6;
    }, n5 = function(e12) {
      for (var t5, i7, s7 = e12.byteLength, n6 = [], r7 = 1; r7 < s7 - 2; ) 0 === e12[r7] && 0 === e12[r7 + 1] && 3 === e12[r7 + 2] ? (n6.push(r7 + 2), r7 += 2) : r7++;
      if (0 === n6.length) return e12;
      t5 = s7 - n6.length, i7 = new Uint8Array(t5);
      var a11 = 0;
      for (r7 = 0; r7 < t5; a11++, r7++) a11 === n6[0] && (a11++, n6.shift()), i7[r7] = e12[a11];
      return i7;
    }, r6 = function(e12) {
      var t5, i7, s7, n6, r7, o6, l8, h4, u7, d3, c6, p6, m8 = 0, g3 = 0, f4 = 0, y5 = 0, _4 = [1, 1];
      if (i7 = (t5 = new It2(e12)).readUnsignedByte(), n6 = t5.readUnsignedByte(), s7 = t5.readUnsignedByte(), t5.skipUnsignedExpGolomb(), wt2[i7] && (3 === (r7 = t5.readUnsignedExpGolomb()) && t5.skipBits(1), t5.skipUnsignedExpGolomb(), t5.skipUnsignedExpGolomb(), t5.skipBits(1), t5.readBoolean())) for (c6 = 3 !== r7 ? 8 : 12, p6 = 0; p6 < c6; p6++) t5.readBoolean() && a10(p6 < 6 ? 16 : 64, t5);
      if (t5.skipUnsignedExpGolomb(), 0 === (o6 = t5.readUnsignedExpGolomb())) t5.readUnsignedExpGolomb();
      else if (1 === o6) for (t5.skipBits(1), t5.skipExpGolomb(), t5.skipExpGolomb(), l8 = t5.readUnsignedExpGolomb(), p6 = 0; p6 < l8; p6++) t5.skipExpGolomb();
      if (t5.skipUnsignedExpGolomb(), t5.skipBits(1), h4 = t5.readUnsignedExpGolomb(), u7 = t5.readUnsignedExpGolomb(), 0 === (d3 = t5.readBits(1)) && t5.skipBits(1), t5.skipBits(1), t5.readBoolean() && (m8 = t5.readUnsignedExpGolomb(), g3 = t5.readUnsignedExpGolomb(), f4 = t5.readUnsignedExpGolomb(), y5 = t5.readUnsignedExpGolomb()), t5.readBoolean() && t5.readBoolean()) {
        switch (t5.readUnsignedByte()) {
          case 1:
            _4 = [1, 1];
            break;
          case 2:
            _4 = [12, 11];
            break;
          case 3:
            _4 = [10, 11];
            break;
          case 4:
            _4 = [16, 11];
            break;
          case 5:
            _4 = [40, 33];
            break;
          case 6:
            _4 = [24, 11];
            break;
          case 7:
            _4 = [20, 11];
            break;
          case 8:
            _4 = [32, 11];
            break;
          case 9:
            _4 = [80, 33];
            break;
          case 10:
            _4 = [18, 11];
            break;
          case 11:
            _4 = [15, 11];
            break;
          case 12:
            _4 = [64, 33];
            break;
          case 13:
            _4 = [160, 99];
            break;
          case 14:
            _4 = [4, 3];
            break;
          case 15:
            _4 = [3, 2];
            break;
          case 16:
            _4 = [2, 1];
            break;
          case 255:
            _4 = [t5.readUnsignedByte() << 8 | t5.readUnsignedByte(), t5.readUnsignedByte() << 8 | t5.readUnsignedByte()];
        }
        _4 && (_4[0], _4[1]);
      }
      return { profileIdc: i7, levelIdc: s7, profileCompatibility: n6, width: 16 * (h4 + 1) - 2 * m8 - 2 * g3, height: (2 - d3) * (u7 + 1) * 16 - 2 * f4 - 2 * y5, sarRatio: _4 };
    };
  }, St2.prototype = new kt2();
  var xt2, At2 = { H264Stream: St2 }, Dt2 = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], Pt2 = function(e11, t4) {
    var i6 = e11[t4 + 6] << 21 | e11[t4 + 7] << 14 | e11[t4 + 8] << 7 | e11[t4 + 9];
    return i6 = i6 >= 0 ? i6 : 0, (16 & e11[t4 + 5]) >> 4 ? i6 + 20 : i6 + 10;
  }, Lt2 = function(e11, t4) {
    return e11.length - t4 < 10 || e11[t4] !== "I".charCodeAt(0) || e11[t4 + 1] !== "D".charCodeAt(0) || e11[t4 + 2] !== "3".charCodeAt(0) ? t4 : (t4 += Pt2(e11, t4), Lt2(e11, t4));
  }, Ot2 = function(e11) {
    return e11[0] << 21 | e11[1] << 14 | e11[2] << 7 | e11[3];
  }, Nt2 = function(e11, t4, i6) {
    var s6, n5 = "";
    for (s6 = t4; s6 < i6; s6++) n5 += "%" + ("00" + e11[s6].toString(16)).slice(-2);
    return n5;
  }, Rt2 = function(e11, t4, i6) {
    return unescape(Nt2(e11, t4, i6));
  }, Mt2 = { isLikelyAacData: function(e11) {
    var t4 = Lt2(e11, 0);
    return e11.length >= t4 + 2 && !(255 & ~e11[t4]) && !(240 & ~e11[t4 + 1]) && 16 == (22 & e11[t4 + 1]);
  }, parseId3TagSize: Pt2, parseAdtsSize: function(e11, t4) {
    var i6 = (224 & e11[t4 + 5]) >> 5, s6 = e11[t4 + 4] << 3;
    return 6144 & e11[t4 + 3] | s6 | i6;
  }, parseType: function(e11, t4) {
    return e11[t4] === "I".charCodeAt(0) && e11[t4 + 1] === "D".charCodeAt(0) && e11[t4 + 2] === "3".charCodeAt(0) ? "timed-metadata" : true & e11[t4] && !(240 & ~e11[t4 + 1]) ? "audio" : null;
  }, parseSampleRate: function(e11) {
    for (var t4 = 0; t4 + 5 < e11.length; ) {
      if (255 === e11[t4] && 240 == (246 & e11[t4 + 1])) return Dt2[(60 & e11[t4 + 2]) >>> 2];
      t4++;
    }
    return null;
  }, parseAacTimestamp: function(e11) {
    var t4, i6, s6;
    t4 = 10, 64 & e11[5] && (t4 += 4, t4 += Ot2(e11.subarray(10, 14)));
    do {
      if ((i6 = Ot2(e11.subarray(t4 + 4, t4 + 8))) < 1) return null;
      if ("PRIV" === String.fromCharCode(e11[t4], e11[t4 + 1], e11[t4 + 2], e11[t4 + 3])) {
        s6 = e11.subarray(t4 + 10, t4 + i6 + 10);
        for (var n5 = 0; n5 < s6.byteLength; n5++) if (0 === s6[n5]) {
          if ("com.apple.streaming.transportStreamTimestamp" === Rt2(s6, 0, n5)) {
            var r6 = s6.subarray(n5 + 1), a10 = (1 & r6[3]) << 30 | r6[4] << 22 | r6[5] << 14 | r6[6] << 6 | r6[7] >>> 2;
            return a10 *= 4, a10 += 3 & r6[7];
          }
          break;
        }
      }
      t4 += 10, t4 += i6;
    } while (t4 < e11.byteLength);
    return null;
  } }, Ut2 = Mt2;
  (xt2 = function() {
    var e11 = new Uint8Array(), t4 = 0;
    xt2.prototype.init.call(this), this.setTimestamp = function(e12) {
      t4 = e12;
    }, this.push = function(i6) {
      var s6, n5, r6, a10, o5 = 0, l8 = 0;
      for (e11.length ? (a10 = e11.length, (e11 = new Uint8Array(i6.byteLength + a10)).set(e11.subarray(0, a10)), e11.set(i6, a10)) : e11 = i6; e11.length - l8 >= 3; ) if (e11[l8] !== "I".charCodeAt(0) || e11[l8 + 1] !== "D".charCodeAt(0) || e11[l8 + 2] !== "3".charCodeAt(0)) if (255 & ~e11[l8] || 240 & ~e11[l8 + 1]) l8++;
      else {
        if (e11.length - l8 < 7) break;
        if (l8 + (o5 = Ut2.parseAdtsSize(e11, l8)) > e11.length) break;
        r6 = { type: "audio", data: e11.subarray(l8, l8 + o5), pts: t4, dts: t4 }, this.trigger("data", r6), l8 += o5;
      }
      else {
        if (e11.length - l8 < 10) break;
        if (l8 + (o5 = Ut2.parseId3TagSize(e11, l8)) > e11.length) break;
        n5 = { type: "timed-metadata", data: e11.subarray(l8, l8 + o5) }, this.trigger("data", n5), l8 += o5;
      }
      s6 = e11.length - l8, e11 = s6 > 0 ? e11.subarray(l8) : new Uint8Array();
    }, this.reset = function() {
      e11 = new Uint8Array(), this.trigger("reset");
    }, this.endTimeline = function() {
      e11 = new Uint8Array(), this.trigger("endedtimeline");
    };
  }).prototype = new $2();
  var Bt2, Ft2, qt2, jt2, $t2 = xt2, Ht2 = ["audioobjecttype", "channelcount", "samplerate", "samplingfrequencyindex", "samplesize"], Vt2 = ["width", "height", "profileIdc", "levelIdc", "profileCompatibility", "sarRatio"], zt2 = $2, Wt2 = ee3, Gt2 = re3, Xt2 = ye3, Kt2 = ve2, Yt2 = _t2, Qt2 = ce2, Jt2 = Ct2, Zt2 = At2.H264Stream, ei2 = $t2, ti2 = Mt2.isLikelyAacData, ii2 = ce2.ONE_SECOND_IN_TS, si2 = Ht2, ni2 = Vt2, ri2 = function(e11, t4) {
    t4.stream = e11, this.trigger("log", t4);
  }, ai2 = function(e11, t4) {
    for (var i6 = Object.keys(t4), s6 = 0; s6 < i6.length; s6++) {
      var n5 = i6[s6];
      "headOfPipeline" !== n5 && t4[n5].on && t4[n5].on("log", ri2.bind(e11, n5));
    }
  }, oi2 = function(e11, t4) {
    var i6;
    if (e11.length !== t4.length) return false;
    for (i6 = 0; i6 < e11.length; i6++) if (e11[i6] !== t4[i6]) return false;
    return true;
  }, li2 = function(e11, t4, i6, s6, n5, r6) {
    return { start: { dts: e11, pts: e11 + (i6 - t4) }, end: { dts: e11 + (s6 - t4), pts: e11 + (n5 - i6) }, prependedContentDuration: r6, baseMediaDecodeTime: e11 };
  };
  Ft2 = function(e11, t4) {
    var i6, s6 = [], n5 = 0, r6 = 0, a10 = 1 / 0;
    i6 = (t4 = t4 || {}).firstSequenceNumber || 0, Ft2.prototype.init.call(this), this.push = function(t5) {
      Kt2.collectDtsInfo(e11, t5), e11 && si2.forEach(function(i7) {
        e11[i7] = t5[i7];
      }), s6.push(t5);
    }, this.setEarliestDts = function(e12) {
      n5 = e12;
    }, this.setVideoBaseMediaDecodeTime = function(e12) {
      a10 = e12;
    }, this.setAudioAppendStart = function(e12) {
      r6 = e12;
    }, this.flush = function() {
      var o5, l8, h4, u7, d3, c6, p6;
      0 !== s6.length ? (o5 = Xt2.trimAdtsFramesByEarliestDts(s6, e11, n5), e11.baseMediaDecodeTime = Kt2.calculateTrackBaseMediaDecodeTime(e11, t4.keepOriginalTimestamps), p6 = Xt2.prefixWithSilence(e11, o5, r6, a10), e11.samples = Xt2.generateSampleTable(o5), h4 = Wt2.mdat(Xt2.concatenateFrameData(o5)), s6 = [], l8 = Wt2.moof(i6, [e11]), u7 = new Uint8Array(l8.byteLength + h4.byteLength), i6++, u7.set(l8), u7.set(h4, l8.byteLength), Kt2.clearDtsInfo(e11), d3 = Math.ceil(1024 * ii2 / e11.samplerate), o5.length && (c6 = o5.length * d3, this.trigger("segmentTimingInfo", li2(Qt2.audioTsToVideoTs(e11.baseMediaDecodeTime, e11.samplerate), o5[0].dts, o5[0].pts, o5[0].dts + c6, o5[0].pts + c6, p6 || 0)), this.trigger("timingInfo", { start: o5[0].pts, end: o5[0].pts + c6 })), this.trigger("data", { track: e11, boxes: u7 }), this.trigger("done", "AudioSegmentStream")) : this.trigger("done", "AudioSegmentStream");
    }, this.reset = function() {
      Kt2.clearDtsInfo(e11), s6 = [], this.trigger("reset");
    };
  }, Ft2.prototype = new zt2(), Bt2 = function(e11, t4) {
    var i6, s6, n5, r6 = [], a10 = [];
    i6 = (t4 = t4 || {}).firstSequenceNumber || 0, Bt2.prototype.init.call(this), delete e11.minPTS, this.gopCache_ = [], this.push = function(t5) {
      Kt2.collectDtsInfo(e11, t5), "seq_parameter_set_rbsp" !== t5.nalUnitType || s6 || (s6 = t5.config, e11.sps = [t5.data], ni2.forEach(function(t6) {
        e11[t6] = s6[t6];
      }, this)), "pic_parameter_set_rbsp" !== t5.nalUnitType || n5 || (n5 = t5.data, e11.pps = [t5.data]), r6.push(t5);
    }, this.flush = function() {
      for (var s7, n6, o5, l8, h4, u7, d3, c6, p6 = 0; r6.length && "access_unit_delimiter_rbsp" !== r6[0].nalUnitType; ) r6.shift();
      if (0 === r6.length) return this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
      if (s7 = Gt2.groupNalsIntoFrames(r6), (o5 = Gt2.groupFramesIntoGops(s7))[0][0].keyFrame || ((n6 = this.getGopForFusion_(r6[0], e11)) ? (p6 = n6.duration, o5.unshift(n6), o5.byteLength += n6.byteLength, o5.nalCount += n6.nalCount, o5.pts = n6.pts, o5.dts = n6.dts, o5.duration += n6.duration) : o5 = Gt2.extendFirstKeyFrame(o5)), a10.length) {
        var m8;
        if (!(m8 = t4.alignGopsAtEnd ? this.alignGopsAtEnd_(o5) : this.alignGopsAtStart_(o5))) return this.gopCache_.unshift({ gop: o5.pop(), pps: e11.pps, sps: e11.sps }), this.gopCache_.length = Math.min(6, this.gopCache_.length), r6 = [], this.resetStream_(), void this.trigger("done", "VideoSegmentStream");
        Kt2.clearDtsInfo(e11), o5 = m8;
      }
      Kt2.collectDtsInfo(e11, o5), e11.samples = Gt2.generateSampleTable(o5), h4 = Wt2.mdat(Gt2.concatenateNalData(o5)), e11.baseMediaDecodeTime = Kt2.calculateTrackBaseMediaDecodeTime(e11, t4.keepOriginalTimestamps), this.trigger("processedGopsInfo", o5.map(function(e12) {
        return { pts: e12.pts, dts: e12.dts, byteLength: e12.byteLength };
      })), d3 = o5[0], c6 = o5[o5.length - 1], this.trigger("segmentTimingInfo", li2(e11.baseMediaDecodeTime, d3.dts, d3.pts, c6.dts + c6.duration, c6.pts + c6.duration, p6)), this.trigger("timingInfo", { start: o5[0].pts, end: o5[o5.length - 1].pts + o5[o5.length - 1].duration }), this.gopCache_.unshift({ gop: o5.pop(), pps: e11.pps, sps: e11.sps }), this.gopCache_.length = Math.min(6, this.gopCache_.length), r6 = [], this.trigger("baseMediaDecodeTime", e11.baseMediaDecodeTime), this.trigger("timelineStartInfo", e11.timelineStartInfo), l8 = Wt2.moof(i6, [e11]), u7 = new Uint8Array(l8.byteLength + h4.byteLength), i6++, u7.set(l8), u7.set(h4, l8.byteLength), this.trigger("data", { track: e11, boxes: u7 }), this.resetStream_(), this.trigger("done", "VideoSegmentStream");
    }, this.reset = function() {
      this.resetStream_(), r6 = [], this.gopCache_.length = 0, a10.length = 0, this.trigger("reset");
    }, this.resetStream_ = function() {
      Kt2.clearDtsInfo(e11), s6 = void 0, n5 = void 0;
    }, this.getGopForFusion_ = function(t5) {
      var i7, s7, n6, r7, a11, o5 = 45e3, l8 = 1 / 0;
      for (a11 = 0; a11 < this.gopCache_.length; a11++) n6 = (r7 = this.gopCache_[a11]).gop, e11.pps && oi2(e11.pps[0], r7.pps[0]) && e11.sps && oi2(e11.sps[0], r7.sps[0]) && (n6.dts < e11.timelineStartInfo.dts || (i7 = t5.dts - n6.dts - n6.duration) >= -1e4 && i7 <= o5 && (!s7 || l8 > i7) && (s7 = r7, l8 = i7));
      return s7 ? s7.gop : null;
    }, this.alignGopsAtStart_ = function(e12) {
      var t5, i7, s7, n6, r7, o5, l8, h4;
      for (r7 = e12.byteLength, o5 = e12.nalCount, l8 = e12.duration, t5 = i7 = 0; t5 < a10.length && i7 < e12.length && (s7 = a10[t5], n6 = e12[i7], s7.pts !== n6.pts); ) n6.pts > s7.pts ? t5++ : (i7++, r7 -= n6.byteLength, o5 -= n6.nalCount, l8 -= n6.duration);
      return 0 === i7 ? e12 : i7 === e12.length ? null : ((h4 = e12.slice(i7)).byteLength = r7, h4.duration = l8, h4.nalCount = o5, h4.pts = h4[0].pts, h4.dts = h4[0].dts, h4);
    }, this.alignGopsAtEnd_ = function(e12) {
      var t5, i7, s7, n6, r7, o5, l8;
      for (t5 = a10.length - 1, i7 = e12.length - 1, r7 = null, o5 = false; t5 >= 0 && i7 >= 0; ) {
        if (s7 = a10[t5], n6 = e12[i7], s7.pts === n6.pts) {
          o5 = true;
          break;
        }
        s7.pts > n6.pts ? t5-- : (t5 === a10.length - 1 && (r7 = i7), i7--);
      }
      if (!o5 && null === r7) return null;
      if (0 === (l8 = o5 ? i7 : r7)) return e12;
      var h4 = e12.slice(l8), u7 = h4.reduce(function(e13, t6) {
        return e13.byteLength += t6.byteLength, e13.duration += t6.duration, e13.nalCount += t6.nalCount, e13;
      }, { byteLength: 0, duration: 0, nalCount: 0 });
      return h4.byteLength = u7.byteLength, h4.duration = u7.duration, h4.nalCount = u7.nalCount, h4.pts = h4[0].pts, h4.dts = h4[0].dts, h4;
    }, this.alignGopsWith = function(e12) {
      a10 = e12;
    };
  }, Bt2.prototype = new zt2(), jt2 = function(e11, t4) {
    this.numberOfTracks = 0, this.metadataStream = t4, void 0 !== (e11 = e11 || {}).remux ? this.remuxTracks = !!e11.remux : this.remuxTracks = true, "boolean" == typeof e11.keepOriginalTimestamps ? this.keepOriginalTimestamps = e11.keepOriginalTimestamps : this.keepOriginalTimestamps = false, this.pendingTracks = [], this.videoTrack = null, this.pendingBoxes = [], this.pendingCaptions = [], this.pendingMetadata = [], this.pendingBytes = 0, this.emittedTracks = 0, jt2.prototype.init.call(this), this.push = function(e12) {
      return e12.content || e12.text ? this.pendingCaptions.push(e12) : e12.frames ? this.pendingMetadata.push(e12) : (this.pendingTracks.push(e12.track), this.pendingBytes += e12.boxes.byteLength, "video" === e12.track.type && (this.videoTrack = e12.track, this.pendingBoxes.push(e12.boxes)), void ("audio" === e12.track.type && (this.audioTrack = e12.track, this.pendingBoxes.unshift(e12.boxes))));
    };
  }, jt2.prototype = new zt2(), jt2.prototype.flush = function(e11) {
    var t4, i6, s6, n5, r6 = 0, a10 = { captions: [], captionStreams: {}, metadata: [], info: {} }, o5 = 0;
    if (this.pendingTracks.length < this.numberOfTracks) {
      if ("VideoSegmentStream" !== e11 && "AudioSegmentStream" !== e11) return;
      if (this.remuxTracks) return;
      if (0 === this.pendingTracks.length) return this.emittedTracks++, void (this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0));
    }
    if (this.videoTrack ? (o5 = this.videoTrack.timelineStartInfo.pts, ni2.forEach(function(e12) {
      a10.info[e12] = this.videoTrack[e12];
    }, this)) : this.audioTrack && (o5 = this.audioTrack.timelineStartInfo.pts, si2.forEach(function(e12) {
      a10.info[e12] = this.audioTrack[e12];
    }, this)), this.videoTrack || this.audioTrack) {
      for (1 === this.pendingTracks.length ? a10.type = this.pendingTracks[0].type : a10.type = "combined", this.emittedTracks += this.pendingTracks.length, s6 = Wt2.initSegment(this.pendingTracks), a10.initSegment = new Uint8Array(s6.byteLength), a10.initSegment.set(s6), a10.data = new Uint8Array(this.pendingBytes), n5 = 0; n5 < this.pendingBoxes.length; n5++) a10.data.set(this.pendingBoxes[n5], r6), r6 += this.pendingBoxes[n5].byteLength;
      for (n5 = 0; n5 < this.pendingCaptions.length; n5++) (t4 = this.pendingCaptions[n5]).startTime = Qt2.metadataTsToSeconds(t4.startPts, o5, this.keepOriginalTimestamps), t4.endTime = Qt2.metadataTsToSeconds(t4.endPts, o5, this.keepOriginalTimestamps), a10.captionStreams[t4.stream] = true, a10.captions.push(t4);
      for (n5 = 0; n5 < this.pendingMetadata.length; n5++) (i6 = this.pendingMetadata[n5]).cueTime = Qt2.metadataTsToSeconds(i6.pts, o5, this.keepOriginalTimestamps), a10.metadata.push(i6);
      for (a10.metadata.dispatchType = this.metadataStream.dispatchType, this.pendingTracks.length = 0, this.videoTrack = null, this.pendingBoxes.length = 0, this.pendingCaptions.length = 0, this.pendingBytes = 0, this.pendingMetadata.length = 0, this.trigger("data", a10), n5 = 0; n5 < a10.captions.length; n5++) t4 = a10.captions[n5], this.trigger("caption", t4);
      for (n5 = 0; n5 < a10.metadata.length; n5++) i6 = a10.metadata[n5], this.trigger("id3Frame", i6);
    }
    this.emittedTracks >= this.numberOfTracks && (this.trigger("done"), this.emittedTracks = 0);
  }, jt2.prototype.setRemux = function(e11) {
    this.remuxTracks = e11;
  }, qt2 = function(e11) {
    var t4, i6, s6 = this, n5 = true;
    qt2.prototype.init.call(this), e11 = e11 || {}, this.baseMediaDecodeTime = e11.baseMediaDecodeTime || 0, this.transmuxPipeline_ = {}, this.setupAacPipeline = function() {
      var n6 = {};
      this.transmuxPipeline_ = n6, n6.type = "aac", n6.metadataStream = new Yt2.MetadataStream(), n6.aacStream = new ei2(), n6.audioTimestampRolloverStream = new Yt2.TimestampRolloverStream("audio"), n6.timedMetadataTimestampRolloverStream = new Yt2.TimestampRolloverStream("timed-metadata"), n6.adtsStream = new Jt2(), n6.coalesceStream = new jt2(e11, n6.metadataStream), n6.headOfPipeline = n6.aacStream, n6.aacStream.pipe(n6.audioTimestampRolloverStream).pipe(n6.adtsStream), n6.aacStream.pipe(n6.timedMetadataTimestampRolloverStream).pipe(n6.metadataStream).pipe(n6.coalesceStream), n6.metadataStream.on("timestamp", function(e12) {
        n6.aacStream.setTimestamp(e12.timeStamp);
      }), n6.aacStream.on("data", function(r6) {
        "timed-metadata" !== r6.type && "audio" !== r6.type || n6.audioSegmentStream || (i6 = i6 || { timelineStartInfo: { baseMediaDecodeTime: s6.baseMediaDecodeTime }, codec: "adts", type: "audio" }, n6.coalesceStream.numberOfTracks++, n6.audioSegmentStream = new Ft2(i6, e11), n6.audioSegmentStream.on("log", s6.getLogTrigger_("audioSegmentStream")), n6.audioSegmentStream.on("timingInfo", s6.trigger.bind(s6, "audioTimingInfo")), n6.adtsStream.pipe(n6.audioSegmentStream).pipe(n6.coalesceStream), s6.trigger("trackinfo", { hasAudio: !!i6, hasVideo: !!t4 }));
      }), n6.coalesceStream.on("data", this.trigger.bind(this, "data")), n6.coalesceStream.on("done", this.trigger.bind(this, "done")), ai2(this, n6);
    }, this.setupTsPipeline = function() {
      var n6 = {};
      this.transmuxPipeline_ = n6, n6.type = "ts", n6.metadataStream = new Yt2.MetadataStream(), n6.packetStream = new Yt2.TransportPacketStream(), n6.parseStream = new Yt2.TransportParseStream(), n6.elementaryStream = new Yt2.ElementaryStream(), n6.timestampRolloverStream = new Yt2.TimestampRolloverStream(), n6.adtsStream = new Jt2(), n6.h264Stream = new Zt2(), n6.captionStream = new Yt2.CaptionStream(e11), n6.coalesceStream = new jt2(e11, n6.metadataStream), n6.headOfPipeline = n6.packetStream, n6.packetStream.pipe(n6.parseStream).pipe(n6.elementaryStream).pipe(n6.timestampRolloverStream), n6.timestampRolloverStream.pipe(n6.h264Stream), n6.timestampRolloverStream.pipe(n6.adtsStream), n6.timestampRolloverStream.pipe(n6.metadataStream).pipe(n6.coalesceStream), n6.h264Stream.pipe(n6.captionStream).pipe(n6.coalesceStream), n6.elementaryStream.on("data", function(r6) {
        var a10;
        if ("metadata" === r6.type) {
          for (a10 = r6.tracks.length; a10--; ) t4 || "video" !== r6.tracks[a10].type ? i6 || "audio" !== r6.tracks[a10].type || ((i6 = r6.tracks[a10]).timelineStartInfo.baseMediaDecodeTime = s6.baseMediaDecodeTime) : (t4 = r6.tracks[a10]).timelineStartInfo.baseMediaDecodeTime = s6.baseMediaDecodeTime;
          t4 && !n6.videoSegmentStream && (n6.coalesceStream.numberOfTracks++, n6.videoSegmentStream = new Bt2(t4, e11), n6.videoSegmentStream.on("log", s6.getLogTrigger_("videoSegmentStream")), n6.videoSegmentStream.on("timelineStartInfo", function(t5) {
            i6 && !e11.keepOriginalTimestamps && (i6.timelineStartInfo = t5, n6.audioSegmentStream.setEarliestDts(t5.dts - s6.baseMediaDecodeTime));
          }), n6.videoSegmentStream.on("processedGopsInfo", s6.trigger.bind(s6, "gopInfo")), n6.videoSegmentStream.on("segmentTimingInfo", s6.trigger.bind(s6, "videoSegmentTimingInfo")), n6.videoSegmentStream.on("baseMediaDecodeTime", function(e12) {
            i6 && n6.audioSegmentStream.setVideoBaseMediaDecodeTime(e12);
          }), n6.videoSegmentStream.on("timingInfo", s6.trigger.bind(s6, "videoTimingInfo")), n6.h264Stream.pipe(n6.videoSegmentStream).pipe(n6.coalesceStream)), i6 && !n6.audioSegmentStream && (n6.coalesceStream.numberOfTracks++, n6.audioSegmentStream = new Ft2(i6, e11), n6.audioSegmentStream.on("log", s6.getLogTrigger_("audioSegmentStream")), n6.audioSegmentStream.on("timingInfo", s6.trigger.bind(s6, "audioTimingInfo")), n6.audioSegmentStream.on("segmentTimingInfo", s6.trigger.bind(s6, "audioSegmentTimingInfo")), n6.adtsStream.pipe(n6.audioSegmentStream).pipe(n6.coalesceStream)), s6.trigger("trackinfo", { hasAudio: !!i6, hasVideo: !!t4 });
        }
      }), n6.coalesceStream.on("data", this.trigger.bind(this, "data")), n6.coalesceStream.on("id3Frame", function(e12) {
        e12.dispatchType = n6.metadataStream.dispatchType, s6.trigger("id3Frame", e12);
      }), n6.coalesceStream.on("caption", this.trigger.bind(this, "caption")), n6.coalesceStream.on("done", this.trigger.bind(this, "done")), ai2(this, n6);
    }, this.setBaseMediaDecodeTime = function(s7) {
      var n6 = this.transmuxPipeline_;
      e11.keepOriginalTimestamps || (this.baseMediaDecodeTime = s7), i6 && (i6.timelineStartInfo.dts = void 0, i6.timelineStartInfo.pts = void 0, Kt2.clearDtsInfo(i6), n6.audioTimestampRolloverStream && n6.audioTimestampRolloverStream.discontinuity()), t4 && (n6.videoSegmentStream && (n6.videoSegmentStream.gopCache_ = []), t4.timelineStartInfo.dts = void 0, t4.timelineStartInfo.pts = void 0, Kt2.clearDtsInfo(t4), n6.captionStream.reset()), n6.timestampRolloverStream && n6.timestampRolloverStream.discontinuity();
    }, this.setAudioAppendStart = function(e12) {
      i6 && this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e12);
    }, this.setRemux = function(t5) {
      var i7 = this.transmuxPipeline_;
      e11.remux = t5, i7 && i7.coalesceStream && i7.coalesceStream.setRemux(t5);
    }, this.alignGopsWith = function(e12) {
      t4 && this.transmuxPipeline_.videoSegmentStream && this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e12);
    }, this.getLogTrigger_ = function(e12) {
      var t5 = this;
      return function(i7) {
        i7.stream = e12, t5.trigger("log", i7);
      };
    }, this.push = function(e12) {
      if (n5) {
        var t5 = ti2(e12);
        t5 && "aac" !== this.transmuxPipeline_.type ? this.setupAacPipeline() : t5 || "ts" === this.transmuxPipeline_.type || this.setupTsPipeline(), n5 = false;
      }
      this.transmuxPipeline_.headOfPipeline.push(e12);
    }, this.flush = function() {
      n5 = true, this.transmuxPipeline_.headOfPipeline.flush();
    }, this.endTimeline = function() {
      this.transmuxPipeline_.headOfPipeline.endTimeline();
    }, this.reset = function() {
      this.transmuxPipeline_.headOfPipeline && this.transmuxPipeline_.headOfPipeline.reset();
    }, this.resetCaptions = function() {
      this.transmuxPipeline_.captionStream && this.transmuxPipeline_.captionStream.reset();
    };
  }, qt2.prototype = new zt2();
  var hi2, ui2, di2, ci2, pi2, mi2, gi2, fi2 = { Transmuxer: qt2 }, yi2 = { toUnsigned: function(e11) {
    return e11 >>> 0;
  }, toHexString: function(e11) {
    return ("00" + e11.toString(16)).slice(-2);
  } }, _i2 = function(e11) {
    var t4 = "";
    return t4 += String.fromCharCode(e11[0]), t4 += String.fromCharCode(e11[1]), t4 += String.fromCharCode(e11[2]), t4 += String.fromCharCode(e11[3]);
  }, vi2 = yi2.toUnsigned, bi2 = _i2, Ti2 = function(e11, t4) {
    var i6, s6, n5, r6, a10, o5 = [];
    if (!t4.length) return null;
    for (i6 = 0; i6 < e11.byteLength; ) s6 = vi2(e11[i6] << 24 | e11[i6 + 1] << 16 | e11[i6 + 2] << 8 | e11[i6 + 3]), n5 = bi2(e11.subarray(i6 + 4, i6 + 8)), r6 = s6 > 1 ? i6 + s6 : e11.byteLength, n5 === t4[0] && (1 === t4.length ? o5.push(e11.subarray(i6 + 8, r6)) : (a10 = Ti2(e11.subarray(i6 + 8, r6), t4.slice(1))).length && (o5 = o5.concat(a10))), i6 = r6;
    return o5;
  }, Si2 = Ti2, Ei2 = yi2.toUnsigned, wi2 = V4.getUint64, Ci2 = function(e11) {
    var t4 = { version: e11[0], flags: new Uint8Array(e11.subarray(1, 4)) };
    return 1 === t4.version ? t4.baseMediaDecodeTime = wi2(e11.subarray(4)) : t4.baseMediaDecodeTime = Ei2(e11[4] << 24 | e11[5] << 16 | e11[6] << 8 | e11[7]), t4;
  }, ki2 = function(e11) {
    var t4, i6 = new DataView(e11.buffer, e11.byteOffset, e11.byteLength), s6 = { version: e11[0], flags: new Uint8Array(e11.subarray(1, 4)), trackId: i6.getUint32(4) }, n5 = 1 & s6.flags[2], r6 = 2 & s6.flags[2], a10 = 8 & s6.flags[2], o5 = 16 & s6.flags[2], l8 = 32 & s6.flags[2], h4 = 65536 & s6.flags[0], u7 = 131072 & s6.flags[0];
    return t4 = 8, n5 && (t4 += 4, s6.baseDataOffset = i6.getUint32(12), t4 += 4), r6 && (s6.sampleDescriptionIndex = i6.getUint32(t4), t4 += 4), a10 && (s6.defaultSampleDuration = i6.getUint32(t4), t4 += 4), o5 && (s6.defaultSampleSize = i6.getUint32(t4), t4 += 4), l8 && (s6.defaultSampleFlags = i6.getUint32(t4)), h4 && (s6.durationIsEmpty = true), !n5 && u7 && (s6.baseDataOffsetIsMoof = true), s6;
  }, Ii2 = function(e11) {
    return { isLeading: (12 & e11[0]) >>> 2, dependsOn: 3 & e11[0], isDependedOn: (192 & e11[1]) >>> 6, hasRedundancy: (48 & e11[1]) >>> 4, paddingValue: (14 & e11[1]) >>> 1, isNonSyncSample: 1 & e11[1], degradationPriority: e11[2] << 8 | e11[3] };
  }, xi2 = function(e11) {
    var t4, i6 = { version: e11[0], flags: new Uint8Array(e11.subarray(1, 4)), samples: [] }, s6 = new DataView(e11.buffer, e11.byteOffset, e11.byteLength), n5 = 1 & i6.flags[2], r6 = 4 & i6.flags[2], a10 = 1 & i6.flags[1], o5 = 2 & i6.flags[1], l8 = 4 & i6.flags[1], h4 = 8 & i6.flags[1], u7 = s6.getUint32(4), d3 = 8;
    for (n5 && (i6.dataOffset = s6.getInt32(d3), d3 += 4), r6 && u7 && (t4 = { flags: Ii2(e11.subarray(d3, d3 + 4)) }, d3 += 4, a10 && (t4.duration = s6.getUint32(d3), d3 += 4), o5 && (t4.size = s6.getUint32(d3), d3 += 4), h4 && (1 === i6.version ? t4.compositionTimeOffset = s6.getInt32(d3) : t4.compositionTimeOffset = s6.getUint32(d3), d3 += 4), i6.samples.push(t4), u7--); u7--; ) t4 = {}, a10 && (t4.duration = s6.getUint32(d3), d3 += 4), o5 && (t4.size = s6.getUint32(d3), d3 += 4), l8 && (t4.flags = Ii2(e11.subarray(d3, d3 + 4)), d3 += 4), h4 && (1 === i6.version ? t4.compositionTimeOffset = s6.getInt32(d3) : t4.compositionTimeOffset = s6.getUint32(d3), d3 += 4), i6.samples.push(t4);
    return i6;
  }, Ai2 = { tfdt: Ci2, trun: xi2 }, Di2 = { parseTfdt: Ai2.tfdt, parseTrun: Ai2.trun }, Pi2 = { uint8ToCString: function(e11) {
    for (var t4 = 0, i6 = String.fromCharCode(e11[t4]), s6 = ""; "\0" !== i6; ) s6 += i6, t4++, i6 = String.fromCharCode(e11[t4]);
    return s6 += i6;
  } }.uint8ToCString, Li2 = V4.getUint64, Oi2 = function(e11) {
    var t4, i6, s6, n5, r6, a10, o5, l8 = 4, h4 = e11[0];
    if (0 === h4) l8 += (t4 = Pi2(e11.subarray(l8))).length, l8 += (i6 = Pi2(e11.subarray(l8))).length, s6 = (u7 = new DataView(e11.buffer)).getUint32(l8), l8 += 4, r6 = u7.getUint32(l8), l8 += 4, a10 = u7.getUint32(l8), l8 += 4, o5 = u7.getUint32(l8), l8 += 4;
    else if (1 === h4) {
      var u7;
      s6 = (u7 = new DataView(e11.buffer)).getUint32(l8), l8 += 4, n5 = Li2(e11.subarray(l8)), l8 += 8, a10 = u7.getUint32(l8), l8 += 4, o5 = u7.getUint32(l8), l8 += 4, l8 += (t4 = Pi2(e11.subarray(l8))).length, l8 += (i6 = Pi2(e11.subarray(l8))).length;
    }
    var d3 = { scheme_id_uri: t4, value: i6, timescale: s6 || 1, presentation_time: n5, presentation_time_delta: r6, event_duration: a10, id: o5, message_data: new Uint8Array(e11.subarray(l8, e11.byteLength)) };
    return Ri2(h4, d3) ? d3 : void 0;
  }, Ni2 = function(e11, t4, i6, s6) {
    return e11 || 0 === e11 ? e11 / t4 : s6 + i6 / t4;
  }, Ri2 = function(e11, t4) {
    var i6 = "\0" !== t4.scheme_id_uri, s6 = 0 === e11 && Mi2(t4.presentation_time_delta) && i6, n5 = 1 === e11 && Mi2(t4.presentation_time) && i6;
    return !(e11 > 1) && s6 || n5;
  }, Mi2 = function(e11) {
    return void 0 !== e11 || null !== e11;
  }, Ui2 = { parseEmsgBox: Oi2, scaleTime: Ni2 }, Bi2 = "undefined" != typeof window ? window : void 0 !== e10 ? e10 : "undefined" != typeof self ? self : {}, Fi2 = yi2.toUnsigned, qi2 = yi2.toHexString, ji2 = Si2, $i2 = _i2, Hi2 = Ui2, Vi2 = ki2, zi2 = xi2, Wi2 = Ci2, Gi2 = V4.getUint64, Xi2 = Bi2, Ki2 = it2.parseId3Frames;
  hi2 = function(e11) {
    var t4 = {};
    return ji2(e11, ["moov", "trak"]).reduce(function(e12, t5) {
      var i6, s6, n5, r6, a10;
      return (i6 = ji2(t5, ["tkhd"])[0]) ? (s6 = i6[0], r6 = Fi2(i6[n5 = 0 === s6 ? 12 : 20] << 24 | i6[n5 + 1] << 16 | i6[n5 + 2] << 8 | i6[n5 + 3]), (a10 = ji2(t5, ["mdia", "mdhd"])[0]) ? (n5 = 0 === (s6 = a10[0]) ? 12 : 20, e12[r6] = Fi2(a10[n5] << 24 | a10[n5 + 1] << 16 | a10[n5 + 2] << 8 | a10[n5 + 3]), e12) : null) : null;
    }, t4);
  }, ui2 = function(e11, t4) {
    var i6 = ji2(t4, ["moof", "traf"]).reduce(function(t5, i7) {
      var s6, n5 = ji2(i7, ["tfhd"])[0], r6 = Fi2(n5[4] << 24 | n5[5] << 16 | n5[6] << 8 | n5[7]), a10 = e11[r6] || 9e4, o5 = ji2(i7, ["tfdt"])[0], l8 = new DataView(o5.buffer, o5.byteOffset, o5.byteLength);
      let h4;
      return "bigint" == typeof (s6 = 1 === o5[0] ? Gi2(o5.subarray(4, 12)) : l8.getUint32(4)) ? h4 = s6 / Xi2.BigInt(a10) : "number" != typeof s6 || isNaN(s6) || (h4 = s6 / a10), h4 < Number.MAX_SAFE_INTEGER && (h4 = Number(h4)), h4 < t5 && (t5 = h4), t5;
    }, 1 / 0);
    return "bigint" == typeof i6 || isFinite(i6) ? i6 : 0;
  }, di2 = function(e11, t4) {
    var i6, s6 = ji2(t4, ["moof", "traf"]), n5 = 0, r6 = 0;
    if (s6 && s6.length) {
      var a10 = ji2(s6[0], ["tfhd"])[0], o5 = ji2(s6[0], ["trun"])[0], l8 = ji2(s6[0], ["tfdt"])[0];
      if (a10) i6 = Vi2(a10).trackId;
      if (l8) n5 = Wi2(l8).baseMediaDecodeTime;
      if (o5) {
        var h4 = zi2(o5);
        h4.samples && h4.samples.length && (r6 = h4.samples[0].compositionTimeOffset || 0);
      }
    }
    var u7 = e11[i6] || 9e4;
    "bigint" == typeof n5 && (r6 = Xi2.BigInt(r6), u7 = Xi2.BigInt(u7));
    var d3 = (n5 + r6) / u7;
    return "bigint" == typeof d3 && d3 < Number.MAX_SAFE_INTEGER && (d3 = Number(d3)), d3;
  }, ci2 = function(e11) {
    var t4 = ji2(e11, ["moov", "trak"]), i6 = [];
    return t4.forEach(function(e12) {
      var t5 = ji2(e12, ["mdia", "hdlr"]), s6 = ji2(e12, ["tkhd"]);
      t5.forEach(function(e13, t6) {
        var n5, r6, a10 = $i2(e13.subarray(8, 12)), o5 = s6[t6];
        "vide" === a10 && (r6 = 0 === (n5 = new DataView(o5.buffer, o5.byteOffset, o5.byteLength)).getUint8(0) ? n5.getUint32(12) : n5.getUint32(20), i6.push(r6));
      });
    }), i6;
  }, mi2 = function(e11) {
    var t4 = 0 === e11[0] ? 12 : 20;
    return Fi2(e11[t4] << 24 | e11[t4 + 1] << 16 | e11[t4 + 2] << 8 | e11[t4 + 3]);
  }, pi2 = function(e11) {
    var t4 = ji2(e11, ["moov", "trak"]), i6 = [];
    return t4.forEach(function(e12) {
      var t5, s6, n5 = {}, r6 = ji2(e12, ["tkhd"])[0];
      r6 && (s6 = (t5 = new DataView(r6.buffer, r6.byteOffset, r6.byteLength)).getUint8(0), n5.id = 0 === s6 ? t5.getUint32(12) : t5.getUint32(20));
      var a10 = ji2(e12, ["mdia", "hdlr"])[0];
      if (a10) {
        var o5 = $i2(a10.subarray(8, 12));
        n5.type = "vide" === o5 ? "video" : "soun" === o5 ? "audio" : o5;
      }
      var l8 = ji2(e12, ["mdia", "minf", "stbl", "stsd"])[0];
      if (l8) {
        var h4 = l8.subarray(8);
        n5.codec = $i2(h4.subarray(4, 8));
        var u7, d3 = ji2(h4, [n5.codec])[0];
        d3 && (/^[asm]vc[1-9]$/i.test(n5.codec) ? (u7 = d3.subarray(78), "avcC" === $i2(u7.subarray(4, 8)) && u7.length > 11 ? (n5.codec += ".", n5.codec += qi2(u7[9]), n5.codec += qi2(u7[10]), n5.codec += qi2(u7[11])) : n5.codec = "avc1.4d400d") : /^mp4[a,v]$/i.test(n5.codec) ? (u7 = d3.subarray(28), "esds" === $i2(u7.subarray(4, 8)) && u7.length > 20 && 0 !== u7[19] ? (n5.codec += "." + qi2(u7[19]), n5.codec += "." + qi2(u7[20] >>> 2 & 63).replace(/^0/, "")) : n5.codec = "mp4a.40.2") : n5.codec = n5.codec.toLowerCase());
      }
      var c6 = ji2(e12, ["mdia", "mdhd"])[0];
      c6 && (n5.timescale = mi2(c6)), i6.push(n5);
    }), i6;
  }, gi2 = function(e11, t4 = 0) {
    return ji2(e11, ["emsg"]).map((e12) => {
      var i6 = Hi2.parseEmsgBox(new Uint8Array(e12)), s6 = Ki2(i6.message_data);
      return { cueTime: Hi2.scaleTime(i6.presentation_time, i6.timescale, i6.presentation_time_delta, t4), duration: Hi2.scaleTime(i6.event_duration, i6.timescale), frames: s6 };
    });
  };
  var Yi2 = { findBox: ji2, parseType: $i2, timescale: hi2, startTime: ui2, compositionStartTime: di2, videoTrackIds: ci2, tracks: pi2, getTimescaleFromMediaHeader: mi2, getEmsgID3: gi2 };
  const { parseTrun: Qi2 } = Di2, { findBox: Ji2 } = Yi2;
  var Zi2 = Bi2, es2 = function(e11) {
    var t4 = Ji2(e11, ["moof", "traf"]), i6 = Ji2(e11, ["mdat"]), s6 = [];
    return i6.forEach(function(e12, i7) {
      var n5 = t4[i7];
      s6.push({ mdat: e12, traf: n5 });
    }), s6;
  }, ts2 = function(e11, t4, i6) {
    var s6 = t4, n5 = i6.defaultSampleDuration || 0, r6 = i6.defaultSampleSize || 0, a10 = i6.trackId, o5 = [];
    return e11.forEach(function(e12) {
      var t5 = Qi2(e12).samples;
      t5.forEach(function(e13) {
        void 0 === e13.duration && (e13.duration = n5), void 0 === e13.size && (e13.size = r6), e13.trackId = a10, e13.dts = s6, void 0 === e13.compositionTimeOffset && (e13.compositionTimeOffset = 0), "bigint" == typeof s6 ? (e13.pts = s6 + Zi2.BigInt(e13.compositionTimeOffset), s6 += Zi2.BigInt(e13.duration)) : (e13.pts = s6 + e13.compositionTimeOffset, s6 += e13.duration);
      }), o5 = o5.concat(t5);
    }), o5;
  }, is2 = { getMdatTrafPairs: es2, parseSamples: ts2 }, ss2 = Se2.discardEmulationPreventionBytes, ns2 = Be2.CaptionStream, rs2 = Si2, as2 = Ci2, os2 = ki2, { getMdatTrafPairs: ls2, parseSamples: hs2 } = is2, us2 = function(e11, t4) {
    for (var i6 = e11, s6 = 0; s6 < t4.length; s6++) {
      var n5 = t4[s6];
      if (i6 < n5.size) return n5;
      i6 -= n5.size;
    }
    return null;
  }, ds2 = function(e11, t4, i6) {
    var s6, n5, r6, a10, o5 = new DataView(e11.buffer, e11.byteOffset, e11.byteLength), l8 = { logs: [], seiNals: [] };
    for (n5 = 0; n5 + 4 < e11.length; n5 += r6) if (r6 = o5.getUint32(n5), n5 += 4, !(r6 <= 0)) switch (31 & e11[n5]) {
      case 6:
        var h4 = e11.subarray(n5 + 1, n5 + 1 + r6), u7 = us2(n5, t4);
        if (s6 = { nalUnitType: "sei_rbsp", size: r6, data: h4, escapedRBSP: ss2(h4), trackId: i6 }, u7) s6.pts = u7.pts, s6.dts = u7.dts, a10 = u7;
        else {
          if (!a10) {
            l8.logs.push({ level: "warn", message: "We've encountered a nal unit without data at " + n5 + " for trackId " + i6 + ". See mux.js#223." });
            break;
          }
          s6.pts = a10.pts, s6.dts = a10.dts;
        }
        l8.seiNals.push(s6);
    }
    return l8;
  }, cs2 = function(e11, t4) {
    var i6 = {};
    return ls2(e11).forEach(function(e12) {
      var s6, n5, r6 = e12.mdat, a10 = e12.traf, o5 = rs2(a10, ["tfhd"]), l8 = os2(o5[0]), h4 = l8.trackId, u7 = rs2(a10, ["tfdt"]), d3 = u7.length > 0 ? as2(u7[0]).baseMediaDecodeTime : 0, c6 = rs2(a10, ["trun"]);
      t4 === h4 && c6.length > 0 && (s6 = hs2(c6, d3, l8), n5 = ds2(r6, s6, h4), i6[h4] || (i6[h4] = { seiNals: [], logs: [] }), i6[h4].seiNals = i6[h4].seiNals.concat(n5.seiNals), i6[h4].logs = i6[h4].logs.concat(n5.logs));
    }), i6;
  }, ps2 = function(e11, t4, i6) {
    if (null === t4) return null;
    var s6 = cs2(e11, t4)[t4] || {};
    return { seiNals: s6.seiNals, logs: s6.logs, timescale: i6 };
  }, ms2 = function() {
    var e11, t4, i6, s6, n5, r6, a10 = false;
    this.isInitialized = function() {
      return a10;
    }, this.init = function(t5) {
      e11 = new ns2(), a10 = true, r6 = !!t5 && t5.isPartial, e11.on("data", function(e12) {
        e12.startTime = e12.startPts / s6, e12.endTime = e12.endPts / s6, n5.captions.push(e12), n5.captionStreams[e12.stream] = true;
      }), e11.on("log", function(e12) {
        n5.logs.push(e12);
      });
    }, this.isNewInit = function(e12, t5) {
      return !(e12 && 0 === e12.length || t5 && "object" == typeof t5 && 0 === Object.keys(t5).length) && (i6 !== e12[0] || s6 !== t5[i6]);
    }, this.parse = function(e12, r7, a11) {
      var o5;
      if (!this.isInitialized()) return null;
      if (!r7 || !a11) return null;
      if (this.isNewInit(r7, a11)) i6 = r7[0], s6 = a11[i6];
      else if (null === i6 || !s6) return t4.push(e12), null;
      for (; t4.length > 0; ) {
        var l8 = t4.shift();
        this.parse(l8, r7, a11);
      }
      return (o5 = ps2(e12, i6, s6)) && o5.logs && (n5.logs = n5.logs.concat(o5.logs)), null !== o5 && o5.seiNals ? (this.pushNals(o5.seiNals), this.flushStream(), n5) : n5.logs.length ? { logs: n5.logs, captions: [], captionStreams: [] } : null;
    }, this.pushNals = function(t5) {
      if (!this.isInitialized() || !t5 || 0 === t5.length) return null;
      t5.forEach(function(t6) {
        e11.push(t6);
      });
    }, this.flushStream = function() {
      if (!this.isInitialized()) return null;
      r6 ? e11.partialFlush() : e11.flush();
    }, this.clearParsedCaptions = function() {
      n5.captions = [], n5.captionStreams = {}, n5.logs = [];
    }, this.resetCaptionStream = function() {
      if (!this.isInitialized()) return null;
      e11.reset();
    }, this.clearAllCaptions = function() {
      this.clearParsedCaptions(), this.resetCaptionStream();
    }, this.reset = function() {
      t4 = [], i6 = null, s6 = null, n5 ? this.clearParsedCaptions() : n5 = { captions: [], captionStreams: {}, logs: [] }, this.resetCaptionStream();
    }, this.reset();
  }, gs2 = ms2;
  const { parseTfdt: fs2 } = Di2, ys2 = Si2, { getTimescaleFromMediaHeader: _s3 } = Yi2, { parseSamples: vs2, getMdatTrafPairs: bs2 } = is2, Ts2 = function() {
    let e11 = 9e4;
    this.init = function(t4) {
      const i6 = ys2(t4, ["moov", "trak", "mdia", "mdhd"])[0];
      i6 && (e11 = _s3(i6));
    }, this.parseSegment = function(t4) {
      const i6 = [], s6 = bs2(t4);
      let n5 = 0;
      return s6.forEach(function(t5) {
        const s7 = t5.mdat, r6 = t5.traf, a10 = ys2(r6, ["tfdt"])[0], o5 = ys2(r6, ["tfhd"])[0], l8 = ys2(r6, ["trun"]);
        if (a10) {
          const e12 = fs2(a10);
          n5 = e12.baseMediaDecodeTime;
        }
        if (l8.length && o5) {
          const t6 = vs2(l8, n5, o5);
          let r7 = 0;
          t6.forEach(function(t7) {
            const n6 = new TextDecoder("utf-8"), a11 = s7.slice(r7, r7 + t7.size);
            if (ys2(a11, ["vtte"])[0]) return void (r7 += t7.size);
            ys2(a11, ["vttc"]).forEach(function(s8) {
              const r8 = ys2(s8, ["payl"])[0], a12 = ys2(s8, ["sttg"])[0], o6 = t7.pts / e11, l9 = (t7.pts + t7.duration) / e11;
              let h4, u7;
              if (r8) try {
                h4 = n6.decode(r8);
              } catch (d3) {
                console.error(d3);
              }
              if (a12) try {
                u7 = n6.decode(a12);
              } catch (d3) {
                console.error(d3);
              }
              t7.duration && h4 && i6.push({ cueText: h4, start: o6, end: l9, settings: u7 });
            }), r7 += t7.size;
          });
        }
      }), i6;
    };
  };
  var Ss2 = Ts2, Es2 = Fe2, ws2 = function(e11) {
    var t4 = 31 & e11[1];
    return t4 <<= 8, t4 |= e11[2];
  }, Cs2 = function(e11) {
    return !!(64 & e11[1]);
  }, ks2 = function(e11) {
    var t4 = 0;
    return (48 & e11[3]) >>> 4 > 1 && (t4 += e11[4] + 1), t4;
  }, Is2 = function(e11) {
    if (!Cs2(e11)) return null;
    var t4 = 4 + ks2(e11);
    if (t4 >= e11.byteLength) return null;
    var i6, s6 = null;
    return 192 & (i6 = e11[t4 + 7]) && ((s6 = {}).pts = (14 & e11[t4 + 9]) << 27 | (255 & e11[t4 + 10]) << 20 | (254 & e11[t4 + 11]) << 12 | (255 & e11[t4 + 12]) << 5 | (254 & e11[t4 + 13]) >>> 3, s6.pts *= 4, s6.pts += (6 & e11[t4 + 13]) >>> 1, s6.dts = s6.pts, 64 & i6 && (s6.dts = (14 & e11[t4 + 14]) << 27 | (255 & e11[t4 + 15]) << 20 | (254 & e11[t4 + 16]) << 12 | (255 & e11[t4 + 17]) << 5 | (254 & e11[t4 + 18]) >>> 3, s6.dts *= 4, s6.dts += (6 & e11[t4 + 18]) >>> 1)), s6;
  }, xs2 = function(e11) {
    switch (e11) {
      case 5:
        return "slice_layer_without_partitioning_rbsp_idr";
      case 6:
        return "sei_rbsp";
      case 7:
        return "seq_parameter_set_rbsp";
      case 8:
        return "pic_parameter_set_rbsp";
      case 9:
        return "access_unit_delimiter_rbsp";
      default:
        return null;
    }
  }, As2 = { parseType: function(e11, t4) {
    var i6 = ws2(e11);
    return 0 === i6 ? "pat" : i6 === t4 ? "pmt" : t4 ? "pes" : null;
  }, parsePat: function(e11) {
    var t4 = Cs2(e11), i6 = 4 + ks2(e11);
    return t4 && (i6 += e11[i6] + 1), (31 & e11[i6 + 10]) << 8 | e11[i6 + 11];
  }, parsePmt: function(e11) {
    var t4 = {}, i6 = Cs2(e11), s6 = 4 + ks2(e11);
    if (i6 && (s6 += e11[s6] + 1), 1 & e11[s6 + 5]) {
      var n5;
      n5 = 3 + ((15 & e11[s6 + 1]) << 8 | e11[s6 + 2]) - 4;
      for (var r6 = 12 + ((15 & e11[s6 + 10]) << 8 | e11[s6 + 11]); r6 < n5; ) {
        var a10 = s6 + r6;
        t4[(31 & e11[a10 + 1]) << 8 | e11[a10 + 2]] = e11[a10], r6 += 5 + ((15 & e11[a10 + 3]) << 8 | e11[a10 + 4]);
      }
      return t4;
    }
  }, parsePayloadUnitStartIndicator: Cs2, parsePesType: function(e11, t4) {
    switch (t4[ws2(e11)]) {
      case Es2.H264_STREAM_TYPE:
        return "video";
      case Es2.ADTS_STREAM_TYPE:
        return "audio";
      case Es2.METADATA_STREAM_TYPE:
        return "timed-metadata";
      default:
        return null;
    }
  }, parsePesTime: Is2, videoPacketContainsKeyFrame: function(e11) {
    for (var t4 = 4 + ks2(e11), i6 = e11.subarray(t4), s6 = 0, n5 = 0, r6 = false; n5 < i6.byteLength - 3; n5++) if (1 === i6[n5 + 2]) {
      s6 = n5 + 5;
      break;
    }
    for (; s6 < i6.byteLength; ) switch (i6[s6]) {
      case 0:
        if (0 !== i6[s6 - 1]) {
          s6 += 2;
          break;
        }
        if (0 !== i6[s6 - 2]) {
          s6++;
          break;
        }
        n5 + 3 !== s6 - 2 && "slice_layer_without_partitioning_rbsp_idr" === xs2(31 & i6[n5 + 3]) && (r6 = true);
        do {
          s6++;
        } while (1 !== i6[s6] && s6 < i6.length);
        n5 = s6 - 2, s6 += 3;
        break;
      case 1:
        if (0 !== i6[s6 - 1] || 0 !== i6[s6 - 2]) {
          s6 += 3;
          break;
        }
        "slice_layer_without_partitioning_rbsp_idr" === xs2(31 & i6[n5 + 3]) && (r6 = true), n5 = s6 - 2, s6 += 3;
        break;
      default:
        s6 += 3;
    }
    return i6 = i6.subarray(n5), s6 -= n5, n5 = 0, i6 && i6.byteLength > 3 && "slice_layer_without_partitioning_rbsp_idr" === xs2(31 & i6[n5 + 3]) && (r6 = true), r6;
  } }, Ds2 = Fe2, Ps2 = Ge2.handleRollover, Ls2 = {};
  Ls2.ts = As2, Ls2.aac = Mt2;
  var Os2 = ce2.ONE_SECOND_IN_TS, Ns2 = 188, Rs2 = 71, Ms2 = function(e11, t4) {
    for (var i6, s6 = 0, n5 = Ns2; n5 < e11.byteLength; ) if (e11[s6] !== Rs2 || e11[n5] !== Rs2) s6++, n5++;
    else {
      switch (i6 = e11.subarray(s6, n5), Ls2.ts.parseType(i6, t4.pid)) {
        case "pat":
          t4.pid = Ls2.ts.parsePat(i6);
          break;
        case "pmt":
          var r6 = Ls2.ts.parsePmt(i6);
          t4.table = t4.table || {}, Object.keys(r6).forEach(function(e12) {
            t4.table[e12] = r6[e12];
          });
      }
      s6 += Ns2, n5 += Ns2;
    }
  }, Us2 = function(e11, t4, i6) {
    for (var s6, n5, r6, a10, o5 = 0, l8 = Ns2, h4 = false; l8 <= e11.byteLength; ) if (e11[o5] !== Rs2 || e11[l8] !== Rs2 && l8 !== e11.byteLength) o5++, l8++;
    else {
      if (s6 = e11.subarray(o5, l8), "pes" === Ls2.ts.parseType(s6, t4.pid)) n5 = Ls2.ts.parsePesType(s6, t4.table), r6 = Ls2.ts.parsePayloadUnitStartIndicator(s6), "audio" === n5 && r6 && (a10 = Ls2.ts.parsePesTime(s6)) && (a10.type = "audio", i6.audio.push(a10), h4 = true);
      if (h4) break;
      o5 += Ns2, l8 += Ns2;
    }
    for (o5 = (l8 = e11.byteLength) - Ns2, h4 = false; o5 >= 0; ) if (e11[o5] !== Rs2 || e11[l8] !== Rs2 && l8 !== e11.byteLength) o5--, l8--;
    else {
      if (s6 = e11.subarray(o5, l8), "pes" === Ls2.ts.parseType(s6, t4.pid)) n5 = Ls2.ts.parsePesType(s6, t4.table), r6 = Ls2.ts.parsePayloadUnitStartIndicator(s6), "audio" === n5 && r6 && (a10 = Ls2.ts.parsePesTime(s6)) && (a10.type = "audio", i6.audio.push(a10), h4 = true);
      if (h4) break;
      o5 -= Ns2, l8 -= Ns2;
    }
  }, Bs2 = function(e11, t4, i6) {
    for (var s6, n5, r6, a10, o5, l8, h4, u7 = 0, d3 = Ns2, c6 = false, p6 = { data: [], size: 0 }; d3 < e11.byteLength; ) if (e11[u7] !== Rs2 || e11[d3] !== Rs2) u7++, d3++;
    else {
      if (s6 = e11.subarray(u7, d3), "pes" === Ls2.ts.parseType(s6, t4.pid)) {
        if (n5 = Ls2.ts.parsePesType(s6, t4.table), r6 = Ls2.ts.parsePayloadUnitStartIndicator(s6), "video" === n5 && (r6 && !c6 && (a10 = Ls2.ts.parsePesTime(s6)) && (a10.type = "video", i6.video.push(a10), c6 = true), !i6.firstKeyFrame)) {
          if (r6 && 0 !== p6.size) {
            for (o5 = new Uint8Array(p6.size), l8 = 0; p6.data.length; ) h4 = p6.data.shift(), o5.set(h4, l8), l8 += h4.byteLength;
            if (Ls2.ts.videoPacketContainsKeyFrame(o5)) {
              var m8 = Ls2.ts.parsePesTime(o5);
              m8 ? (i6.firstKeyFrame = m8, i6.firstKeyFrame.type = "video") : console.warn("Failed to extract PTS/DTS from PES at first keyframe. This could be an unusual TS segment, or else mux.js did not parse your TS segment correctly. If you know your TS segments do contain PTS/DTS on keyframes please file a bug report! You can try ffprobe to double check for yourself.");
            }
            p6.size = 0;
          }
          p6.data.push(s6), p6.size += s6.byteLength;
        }
      }
      if (c6 && i6.firstKeyFrame) break;
      u7 += Ns2, d3 += Ns2;
    }
    for (u7 = (d3 = e11.byteLength) - Ns2, c6 = false; u7 >= 0; ) if (e11[u7] !== Rs2 || e11[d3] !== Rs2) u7--, d3--;
    else {
      if (s6 = e11.subarray(u7, d3), "pes" === Ls2.ts.parseType(s6, t4.pid)) n5 = Ls2.ts.parsePesType(s6, t4.table), r6 = Ls2.ts.parsePayloadUnitStartIndicator(s6), "video" === n5 && r6 && (a10 = Ls2.ts.parsePesTime(s6)) && (a10.type = "video", i6.video.push(a10), c6 = true);
      if (c6) break;
      u7 -= Ns2, d3 -= Ns2;
    }
  }, Fs2 = function(e11, t4) {
    if (e11.audio && e11.audio.length) {
      var i6 = t4;
      (void 0 === i6 || isNaN(i6)) && (i6 = e11.audio[0].dts), e11.audio.forEach(function(e12) {
        e12.dts = Ps2(e12.dts, i6), e12.pts = Ps2(e12.pts, i6), e12.dtsTime = e12.dts / Os2, e12.ptsTime = e12.pts / Os2;
      });
    }
    if (e11.video && e11.video.length) {
      var s6 = t4;
      if ((void 0 === s6 || isNaN(s6)) && (s6 = e11.video[0].dts), e11.video.forEach(function(e12) {
        e12.dts = Ps2(e12.dts, s6), e12.pts = Ps2(e12.pts, s6), e12.dtsTime = e12.dts / Os2, e12.ptsTime = e12.pts / Os2;
      }), e11.firstKeyFrame) {
        var n5 = e11.firstKeyFrame;
        n5.dts = Ps2(n5.dts, s6), n5.pts = Ps2(n5.pts, s6), n5.dtsTime = n5.dts / Os2, n5.ptsTime = n5.pts / Os2;
      }
    }
  }, qs2 = function(e11) {
    for (var t4, i6 = false, s6 = 0, n5 = null, r6 = null, a10 = 0, o5 = 0; e11.length - o5 >= 3; ) {
      switch (Ls2.aac.parseType(e11, o5)) {
        case "timed-metadata":
          if (e11.length - o5 < 10) {
            i6 = true;
            break;
          }
          if ((a10 = Ls2.aac.parseId3TagSize(e11, o5)) > e11.length) {
            i6 = true;
            break;
          }
          null === r6 && (t4 = e11.subarray(o5, o5 + a10), r6 = Ls2.aac.parseAacTimestamp(t4)), o5 += a10;
          break;
        case "audio":
          if (e11.length - o5 < 7) {
            i6 = true;
            break;
          }
          if ((a10 = Ls2.aac.parseAdtsSize(e11, o5)) > e11.length) {
            i6 = true;
            break;
          }
          null === n5 && (t4 = e11.subarray(o5, o5 + a10), n5 = Ls2.aac.parseSampleRate(t4)), s6++, o5 += a10;
          break;
        default:
          o5++;
      }
      if (i6) return null;
    }
    if (null === n5 || null === r6) return null;
    var l8 = Os2 / n5;
    return { audio: [{ type: "audio", dts: r6, pts: r6 }, { type: "audio", dts: r6 + 1024 * s6 * l8, pts: r6 + 1024 * s6 * l8 }] };
  }, js2 = function(e11) {
    var t4 = { pid: null, table: null }, i6 = {};
    for (var s6 in Ms2(e11, t4), t4.table) {
      if (t4.table.hasOwnProperty(s6)) switch (t4.table[s6]) {
        case Ds2.H264_STREAM_TYPE:
          i6.video = [], Bs2(e11, t4, i6), 0 === i6.video.length && delete i6.video;
          break;
        case Ds2.ADTS_STREAM_TYPE:
          i6.audio = [], Us2(e11, t4, i6), 0 === i6.audio.length && delete i6.audio;
      }
    }
    return i6;
  }, $s2 = { inspect: function(e11, t4) {
    var i6;
    return (i6 = Ls2.aac.isLikelyAacData(e11) ? qs2(e11) : js2(e11)) && (i6.audio || i6.video) ? (Fs2(i6, t4), i6) : null;
  }, parseAudioPes_: Us2 };
  const Hs2 = function(e11, t4) {
    t4.on("data", function(t5) {
      const i6 = t5.initSegment;
      t5.initSegment = { data: i6.buffer, byteOffset: i6.byteOffset, byteLength: i6.byteLength };
      const s6 = t5.data;
      t5.data = s6.buffer, e11.postMessage({ action: "data", segment: t5, byteOffset: s6.byteOffset, byteLength: s6.byteLength }, [t5.data]);
    }), t4.on("done", function(t5) {
      e11.postMessage({ action: "done" });
    }), t4.on("gopInfo", function(t5) {
      e11.postMessage({ action: "gopInfo", gopInfo: t5 });
    }), t4.on("videoSegmentTimingInfo", function(t5) {
      const i6 = { start: { decode: ce2.videoTsToSeconds(t5.start.dts), presentation: ce2.videoTsToSeconds(t5.start.pts) }, end: { decode: ce2.videoTsToSeconds(t5.end.dts), presentation: ce2.videoTsToSeconds(t5.end.pts) }, baseMediaDecodeTime: ce2.videoTsToSeconds(t5.baseMediaDecodeTime) };
      t5.prependedContentDuration && (i6.prependedContentDuration = ce2.videoTsToSeconds(t5.prependedContentDuration)), e11.postMessage({ action: "videoSegmentTimingInfo", videoSegmentTimingInfo: i6 });
    }), t4.on("audioSegmentTimingInfo", function(t5) {
      const i6 = { start: { decode: ce2.videoTsToSeconds(t5.start.dts), presentation: ce2.videoTsToSeconds(t5.start.pts) }, end: { decode: ce2.videoTsToSeconds(t5.end.dts), presentation: ce2.videoTsToSeconds(t5.end.pts) }, baseMediaDecodeTime: ce2.videoTsToSeconds(t5.baseMediaDecodeTime) };
      t5.prependedContentDuration && (i6.prependedContentDuration = ce2.videoTsToSeconds(t5.prependedContentDuration)), e11.postMessage({ action: "audioSegmentTimingInfo", audioSegmentTimingInfo: i6 });
    }), t4.on("id3Frame", function(t5) {
      e11.postMessage({ action: "id3Frame", id3Frame: t5 });
    }), t4.on("caption", function(t5) {
      e11.postMessage({ action: "caption", caption: t5 });
    }), t4.on("trackinfo", function(t5) {
      e11.postMessage({ action: "trackinfo", trackInfo: t5 });
    }), t4.on("audioTimingInfo", function(t5) {
      e11.postMessage({ action: "audioTimingInfo", audioTimingInfo: { start: ce2.videoTsToSeconds(t5.start), end: ce2.videoTsToSeconds(t5.end) } });
    }), t4.on("videoTimingInfo", function(t5) {
      e11.postMessage({ action: "videoTimingInfo", videoTimingInfo: { start: ce2.videoTsToSeconds(t5.start), end: ce2.videoTsToSeconds(t5.end) } });
    }), t4.on("log", function(t5) {
      e11.postMessage({ action: "log", log: t5 });
    });
  };
  class Vs2 {
    constructor(e11, t4) {
      this.options = t4 || {}, this.self = e11, this.init();
    }
    init() {
      this.transmuxer && this.transmuxer.dispose(), this.transmuxer = new fi2.Transmuxer(this.options), Hs2(this.self, this.transmuxer);
    }
    pushMp4Captions(e11) {
      this.captionParser || (this.captionParser = new gs2(), this.captionParser.init());
      const t4 = new Uint8Array(e11.data, e11.byteOffset, e11.byteLength), i6 = this.captionParser.parse(t4, e11.trackIds, e11.timescales);
      this.self.postMessage({ action: "mp4Captions", captions: i6 && i6.captions || [], logs: i6 && i6.logs || [], data: t4.buffer }, [t4.buffer]);
    }
    initMp4WebVttParser(e11) {
      this.webVttParser || (this.webVttParser = new Ss2());
      const t4 = new Uint8Array(e11.data, e11.byteOffset, e11.byteLength);
      this.webVttParser.init(t4);
    }
    getMp4WebVttText(e11) {
      this.webVttParser || (this.webVttParser = new Ss2());
      const t4 = new Uint8Array(e11.data, e11.byteOffset, e11.byteLength), i6 = this.webVttParser.parseSegment(t4);
      this.self.postMessage({ action: "getMp4WebVttText", mp4VttCues: i6 || [], data: t4.buffer }, [t4.buffer]);
    }
    probeMp4StartTime({ timescales: e11, data: t4 }) {
      const i6 = Yi2.startTime(e11, t4);
      this.self.postMessage({ action: "probeMp4StartTime", startTime: i6, data: t4 }, [t4.buffer]);
    }
    probeMp4Tracks({ data: e11 }) {
      const t4 = Yi2.tracks(e11);
      this.self.postMessage({ action: "probeMp4Tracks", tracks: t4, data: e11 }, [e11.buffer]);
    }
    probeEmsgID3({ data: e11, offset: t4 }) {
      const i6 = Yi2.getEmsgID3(e11, t4);
      this.self.postMessage({ action: "probeEmsgID3", id3Frames: i6, emsgData: e11 }, [e11.buffer]);
    }
    probeTs({ data: e11, baseStartTime: t4 }) {
      const i6 = "number" != typeof t4 || isNaN(t4) ? void 0 : t4 * ce2.ONE_SECOND_IN_TS, s6 = $s2.inspect(e11, i6);
      let n5 = null;
      s6 && (n5 = { hasVideo: s6.video && 2 === s6.video.length || false, hasAudio: s6.audio && 2 === s6.audio.length || false }, n5.hasVideo && (n5.videoStart = s6.video[0].ptsTime), n5.hasAudio && (n5.audioStart = s6.audio[0].ptsTime)), this.self.postMessage({ action: "probeTs", result: n5, data: e11 }, [e11.buffer]);
    }
    clearAllMp4Captions() {
      this.captionParser && this.captionParser.clearAllCaptions();
    }
    clearParsedMp4Captions() {
      this.captionParser && this.captionParser.clearParsedCaptions();
    }
    push(e11) {
      const t4 = new Uint8Array(e11.data, e11.byteOffset, e11.byteLength);
      this.transmuxer.push(t4);
    }
    reset() {
      this.transmuxer.reset();
    }
    setTimestampOffset(e11) {
      const t4 = e11.timestampOffset || 0;
      this.transmuxer.setBaseMediaDecodeTime(Math.round(ce2.secondsToVideoTs(t4)));
    }
    setAudioAppendStart(e11) {
      this.transmuxer.setAudioAppendStart(Math.ceil(ce2.secondsToVideoTs(e11.appendStart)));
    }
    setRemux(e11) {
      this.transmuxer.setRemux(e11.remux);
    }
    flush(e11) {
      this.transmuxer.flush(), self.postMessage({ action: "done", type: "transmuxed" });
    }
    endTimeline() {
      this.transmuxer.endTimeline(), self.postMessage({ action: "endedtimeline", type: "transmuxed" });
    }
    alignGopsWith(e11) {
      this.transmuxer.alignGopsWith(e11.gopsToAlignWith.slice());
    }
  }
  self.onmessage = function(e11) {
    "init" === e11.data.action && e11.data.options ? this.messageHandlers = new Vs2(self, e11.data.options) : (this.messageHandlers || (this.messageHandlers = new Vs2(self)), e11.data && e11.data.action && "init" !== e11.data.action && this.messageHandlers[e11.data.action] && this.messageHandlers[e11.data.action](e11.data));
  };
}));
var Cc = Tc(wc);
var kc = (e10, t3, i5) => {
  const { type: s5, initSegment: n4, captions: r5, captionStreams: a9, metadata: o4, videoFrameDtsTime: l7, videoFramePtsTime: h3 } = e10.data.segment;
  t3.buffer.push({ captions: r5, captionStreams: a9, metadata: o4 });
  const u6 = e10.data.segment.boxes || { data: e10.data.segment.data }, d2 = { type: s5, data: new Uint8Array(u6.data, u6.data.byteOffset, u6.data.byteLength), initSegment: new Uint8Array(n4.data, n4.byteOffset, n4.byteLength) };
  void 0 !== l7 && (d2.videoFrameDtsTime = l7), void 0 !== h3 && (d2.videoFramePtsTime = h3), i5(d2);
};
var Ic = ({ transmuxedData: e10, callback: t3 }) => {
  e10.buffer = [], t3(e10);
};
var xc = (e10, t3) => {
  t3.gopInfo = e10.data.gopInfo;
};
var Ac = (e10) => {
  const { transmuxer: t3, bytes: i5, audioAppendStart: s5, gopsToAlignWith: n4, remux: r5, onData: a9, onTrackInfo: o4, onAudioTimingInfo: l7, onVideoTimingInfo: h3, onVideoSegmentTimingInfo: u6, onAudioSegmentTimingInfo: d2, onId3: c5, onCaptions: p5, onDone: m7, onEndedTimeline: g2, onTransmuxerLog: f3, isEndOfTimeline: y4, segment: _3, triggerSegmentEventFn: v3 } = e10, b4 = { buffer: [] };
  let T2 = y4;
  const S4 = (i6) => {
    t3.currentTransmux === e10 && ("data" === i6.data.action && kc(i6, b4, a9), "trackinfo" === i6.data.action && o4(i6.data.trackInfo), "gopInfo" === i6.data.action && xc(i6, b4), "audioTimingInfo" === i6.data.action && l7(i6.data.audioTimingInfo), "videoTimingInfo" === i6.data.action && h3(i6.data.videoTimingInfo), "videoSegmentTimingInfo" === i6.data.action && u6(i6.data.videoSegmentTimingInfo), "audioSegmentTimingInfo" === i6.data.action && d2(i6.data.audioSegmentTimingInfo), "id3Frame" === i6.data.action && c5([i6.data.id3Frame], i6.data.id3Frame.dispatchType), "caption" === i6.data.action && p5(i6.data.caption), "endedtimeline" === i6.data.action && (T2 = false, g2()), "log" === i6.data.action && f3(i6.data.log), "transmuxed" === i6.data.type && (T2 || (t3.onmessage = null, Ic({ transmuxedData: b4, callback: m7 }), Dc(t3))));
  }, E3 = () => {
    const e11 = { message: "Received an error message from the transmuxer worker", metadata: { errorType: du.Error.StreamingFailedToTransmuxSegment, segmentInfo: Wp({ segment: _3 }) } };
    m7(null, e11);
  };
  if (t3.onmessage = S4, t3.onerror = E3, s5 && t3.postMessage({ action: "setAudioAppendStart", appendStart: s5 }), Array.isArray(n4) && t3.postMessage({ action: "alignGopsWith", gopsToAlignWith: n4 }), void 0 !== r5 && t3.postMessage({ action: "setRemux", remux: r5 }), i5.byteLength) {
    const e11 = i5 instanceof ArrayBuffer ? i5 : i5.buffer, s6 = i5 instanceof ArrayBuffer ? 0 : i5.byteOffset;
    v3({ type: "segmenttransmuxingstart", segment: _3 }), t3.postMessage({ action: "push", data: e11, byteOffset: s6, byteLength: i5.byteLength }, [e11]);
  }
  y4 && t3.postMessage({ action: "endTimeline" }), t3.postMessage({ action: "flush" });
};
var Dc = (e10) => {
  e10.currentTransmux = null, e10.transmuxQueue.length && (e10.currentTransmux = e10.transmuxQueue.shift(), "function" == typeof e10.currentTransmux ? e10.currentTransmux() : Ac(e10.currentTransmux));
};
var Pc = (e10, t3) => {
  e10.postMessage({ action: t3 }), Dc(e10);
};
var Lc = (e10, t3) => {
  if (!t3.currentTransmux) return t3.currentTransmux = e10, void Pc(t3, e10);
  t3.transmuxQueue.push(Pc.bind(null, t3, e10));
};
var Oc = (e10) => {
  if (!e10.transmuxer.currentTransmux) return e10.transmuxer.currentTransmux = e10, void Ac(e10);
  e10.transmuxer.transmuxQueue.push(e10);
};
var Nc = { reset: (e10) => {
  Lc("reset", e10);
}, endTimeline: (e10) => {
  Lc("endTimeline", e10);
}, transmux: Oc, createTransmuxer: (e10) => {
  const t3 = new Cc();
  t3.currentTransmux = null, t3.transmuxQueue = [];
  const i5 = t3.terminate;
  return t3.terminate = () => (t3.currentTransmux = null, t3.transmuxQueue.length = 0, i5.call(t3)), t3.postMessage({ action: "init", options: e10 }), t3;
} };
var Rc = function(e10) {
  const t3 = e10.transmuxer, i5 = e10.endAction || e10.action, s5 = e10.callback, n4 = Fe({}, e10, { endAction: null, transmuxer: null, callback: null }), r5 = (n5) => {
    n5.data.action === i5 && (t3.removeEventListener("message", r5), n5.data.data && (n5.data.data = new Uint8Array(n5.data.data, e10.byteOffset || 0, e10.byteLength || n5.data.data.byteLength), e10.data && (e10.data = n5.data.data)), s5(n5.data));
  };
  if (t3.addEventListener("message", r5), e10.data) {
    const i6 = e10.data instanceof ArrayBuffer;
    n4.byteOffset = i6 ? 0 : e10.data.byteOffset, n4.byteLength = e10.data.byteLength;
    const s6 = [i6 ? e10.data : e10.data.buffer];
    t3.postMessage(n4, s6);
  } else t3.postMessage(n4);
};
var Mc = { FAILURE: 2, TIMEOUT: -101, ABORTED: -102 };
var Uc = "wvtt";
var Bc = (e10) => {
  e10.forEach((e11) => {
    e11.abort();
  });
};
var Fc = (e10) => ({ bandwidth: e10.bandwidth, bytesReceived: e10.bytesReceived || 0, roundTripTime: e10.roundTripTime || 0 });
var qc = (e10) => {
  const t3 = e10.target, i5 = { bandwidth: 1 / 0, bytesReceived: 0, roundTripTime: Date.now() - t3.requestTime || 0 };
  return i5.bytesReceived = e10.loaded, i5.bandwidth = Math.floor(i5.bytesReceived / i5.roundTripTime * 8 * 1e3), i5;
};
var jc = (e10, t3) => {
  const { requestType: i5 } = t3, s5 = gd({ requestType: i5, request: t3, error: e10 });
  return t3.timedout ? { status: t3.status, message: "HLS request timed-out at URL: " + t3.uri, code: Mc.TIMEOUT, xhr: t3, metadata: s5 } : t3.aborted ? { status: t3.status, message: "HLS request aborted at URL: " + t3.uri, code: Mc.ABORTED, xhr: t3, metadata: s5 } : e10 ? { status: t3.status, message: "HLS request errored at URL: " + t3.uri, code: Mc.FAILURE, xhr: t3, metadata: s5 } : "arraybuffer" === t3.responseType && 0 === t3.response.byteLength ? { status: t3.status, message: "Empty HLS response at URL: " + t3.uri, code: Mc.FAILURE, xhr: t3, metadata: s5 } : null;
};
var $c = (e10, t3, i5, s5) => (n4, r5) => {
  const a9 = r5.response, o4 = jc(n4, r5);
  if (o4) return i5(o4, e10);
  if (16 !== a9.byteLength) return i5({ status: r5.status, message: "Invalid HLS key at URL: " + r5.uri, code: Mc.FAILURE, xhr: r5 }, e10);
  const l7 = new DataView(a9), h3 = new Uint32Array([l7.getUint32(0), l7.getUint32(4), l7.getUint32(8), l7.getUint32(12)]);
  for (let e11 = 0; e11 < t3.length; e11++) t3[e11].bytes = h3;
  const u6 = { uri: r5.uri };
  return s5({ type: "segmentkeyloadcomplete", segment: e10, keyInfo: u6 }), i5(null, e10);
};
var Hc = (e10, t3) => {
  t3 === Uc && e10.transmuxer.postMessage({ action: "initMp4WebVttParser", data: e10.map.bytes });
};
var Vc = (e10, t3, i5) => {
  t3 === Uc && Rc({ action: "getMp4WebVttText", data: e10.bytes, transmuxer: e10.transmuxer, callback: ({ data: t4, mp4VttCues: s5 }) => {
    e10.bytes = t4, i5(null, e10, { mp4VttCues: s5 });
  } });
};
var zc = (e10, t3) => {
  const i5 = Zs(e10.map.bytes);
  if ("mp4" !== i5) {
    const s5 = e10.map.resolvedUri || e10.map.uri, n4 = i5 || "unknown";
    return t3({ internal: true, message: `Found unsupported ${n4} container for initialization segment at URL: ${s5}`, code: Mc.FAILURE, metadata: { mediaType: n4 } });
  }
  Rc({ action: "probeMp4Tracks", data: e10.map.bytes, transmuxer: e10.transmuxer, callback: ({ tracks: i6, data: s5 }) => (e10.map.bytes = s5, i6.forEach(function(t4) {
    e10.map.tracks = e10.map.tracks || {}, e10.map.tracks[t4.type] || (e10.map.tracks[t4.type] = t4, "number" == typeof t4.id && t4.timescale && (e10.map.timescales = e10.map.timescales || {}, e10.map.timescales[t4.id] = t4.timescale), "text" === t4.type && Hc(e10, t4.codec));
  }), t3(null)) });
};
var Wc = ({ segment: e10, finishProcessingFn: t3, triggerSegmentEventFn: i5 }) => (s5, n4) => {
  const r5 = jc(s5, n4);
  if (r5) return t3(r5, e10);
  const a9 = new Uint8Array(n4.response);
  if (i5({ type: "segmentloaded", segment: e10 }), e10.map.key) return e10.map.encryptedBytes = a9, t3(null, e10);
  e10.map.bytes = a9, zc(e10, function(i6) {
    if (i6) return i6.xhr = n4, i6.status = n4.status, t3(i6, e10);
    t3(null, e10);
  });
};
var Gc = ({ segment: e10, finishProcessingFn: t3, responseType: i5, triggerSegmentEventFn: s5 }) => (n4, r5) => {
  const a9 = jc(n4, r5);
  if (a9) return t3(a9, e10);
  s5({ type: "segmentloaded", segment: e10 });
  const o4 = "arraybuffer" !== i5 && r5.responseText ? _c(r5.responseText.substring(e10.lastReachedChar || 0)) : r5.response;
  return e10.stats = Fc(r5), e10.key ? e10.encryptedBytes = new Uint8Array(o4) : e10.bytes = new Uint8Array(o4), t3(null, e10);
};
var Xc = ({ segment: e10, bytes: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 }) => {
  const m7 = e10.map && e10.map.tracks || {}, g2 = Boolean(m7.audio && m7.video);
  let f3 = s5.bind(null, e10, "audio", "start");
  const y4 = s5.bind(null, e10, "audio", "end");
  let _3 = s5.bind(null, e10, "video", "start");
  const v3 = s5.bind(null, e10, "video", "end"), b4 = () => Oc({ bytes: t3, transmuxer: e10.transmuxer, audioAppendStart: e10.audioAppendStart, gopsToAlignWith: e10.gopsToAlignWith, remux: g2, onData: (t4) => {
    t4.type = "combined" === t4.type ? "video" : t4.type, u6(e10, t4);
  }, onTrackInfo: (t4) => {
    i5 && (g2 && (t4.isMuxed = true), i5(e10, t4));
  }, onAudioTimingInfo: (e11) => {
    f3 && void 0 !== e11.start && (f3(e11.start), f3 = null), y4 && void 0 !== e11.end && y4(e11.end);
  }, onVideoTimingInfo: (e11) => {
    _3 && void 0 !== e11.start && (_3(e11.start), _3 = null), v3 && void 0 !== e11.end && v3(e11.end);
  }, onVideoSegmentTimingInfo: (t4) => {
    const i6 = { pts: { start: t4.start.presentation, end: t4.end.presentation }, dts: { start: t4.start.decode, end: t4.end.decode } };
    p5({ type: "segmenttransmuxingtiminginfoavailable", segment: e10, timingInfo: i6 }), n4(t4);
  }, onAudioSegmentTimingInfo: (t4) => {
    const i6 = { pts: { start: t4.start.pts, end: t4.end.pts }, dts: { start: t4.start.dts, end: t4.end.dts } };
    p5({ type: "segmenttransmuxingtiminginfoavailable", segment: e10, timingInfo: i6 }), r5(t4);
  }, onId3: (t4, i6) => {
    a9(e10, t4, i6);
  }, onCaptions: (t4) => {
    o4(e10, [t4]);
  }, isEndOfTimeline: l7, onEndedTimeline: () => {
    h3();
  }, onTransmuxerLog: c5, onDone: (t4, i6) => {
    d2 && (t4.type = "combined" === t4.type ? "video" : t4.type, p5({ type: "segmenttransmuxingcomplete", segment: e10 }), d2(i6, e10, t4));
  }, segment: e10, triggerSegmentEventFn: p5 });
  Rc({ action: "probeTs", transmuxer: e10.transmuxer, data: t3, baseStartTime: e10.baseStartTime, callback: (s6) => {
    e10.bytes = t3 = s6.data;
    const n5 = s6.result;
    n5 && (i5(e10, { hasAudio: n5.hasAudio, hasVideo: n5.hasVideo, isMuxed: g2 }), i5 = null), b4();
  } });
};
var Kc = ({ segment: e10, bytes: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 }) => {
  let m7 = new Uint8Array(t3);
  if (en(m7)) {
    e10.isFmp4 = true;
    const { tracks: n5 } = e10.map;
    if (n5.text && (!n5.audio || !n5.video)) return u6(e10, { data: m7, type: "text" }), void Vc(e10, n5.text.codec, d2);
    const r6 = { isFmp4: true, hasVideo: !!n5.video, hasAudio: !!n5.audio };
    n5.audio && n5.audio.codec && "enca" !== n5.audio.codec && (r6.audioCodec = n5.audio.codec), n5.video && n5.video.codec && "encv" !== n5.video.codec && (r6.videoCodec = n5.video.codec), n5.video && n5.audio && (r6.isMuxed = true), i5(e10, r6);
    const l8 = (t4, i6) => {
      u6(e10, { data: m7, type: r6.hasAudio && !r6.isMuxed ? "audio" : "video" }), i6 && i6.length && a9(e10, i6), t4 && t4.length && o4(e10, t4), d2(null, e10, {});
    };
    Rc({ action: "probeMp4StartTime", timescales: e10.map.timescales, data: m7, transmuxer: e10.transmuxer, callback: ({ data: i6, startTime: a10 }) => {
      t3 = i6.buffer, e10.bytes = m7 = i6, r6.hasAudio && !r6.isMuxed && s5(e10, "audio", "start", a10), r6.hasVideo && s5(e10, "video", "start", a10), Rc({ action: "probeEmsgID3", data: m7, transmuxer: e10.transmuxer, offset: a10, callback: ({ emsgData: i7, id3Frames: s6 }) => {
        t3 = i7.buffer, e10.bytes = m7 = i7, n5.video && i7.byteLength && e10.transmuxer ? Rc({ action: "pushMp4Captions", endAction: "mp4Captions", transmuxer: e10.transmuxer, data: m7, timescales: e10.map.timescales, trackIds: [n5.video.id], callback: (i8) => {
          t3 = i8.data.buffer, e10.bytes = m7 = i8.data, i8.logs.forEach(function(e11) {
            c5(bu(e11, { stream: "mp4CaptionParser" }));
          }), l8(i8.captions, s6);
        } }) : l8(void 0, s6);
      } });
    } });
  } else if (e10.transmuxer) {
    if (void 0 === e10.container && (e10.container = Zs(m7)), "ts" !== e10.container && "aac" !== e10.container) return i5(e10, { hasAudio: false, hasVideo: false }), void d2(null, e10, {});
    Xc({ segment: e10, bytes: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 });
  } else d2(null, e10, {});
};
var Yc = function({ id: e10, key: t3, encryptedBytes: i5, decryptionWorker: s5, segment: n4, doneFn: r5 }, a9) {
  const o4 = (t4) => {
    if (t4.data.source === e10) {
      s5.removeEventListener("message", o4);
      const e11 = t4.data.decrypted;
      a9(new Uint8Array(e11.bytes, e11.byteOffset, e11.byteLength));
    }
  };
  let l7;
  s5.onerror = () => {
    const e11 = "An error occurred in the decryption worker", t4 = Wp({ segment: n4 }), i6 = { message: e11, metadata: { error: new Error(e11), errorType: du.Error.StreamingFailedToDecryptSegment, segmentInfo: t4, keyInfo: { uri: n4.key.resolvedUri || n4.map.key.resolvedUri } } };
    r5(i6, n4);
  }, s5.addEventListener("message", o4), l7 = t3.bytes.slice ? t3.bytes.slice() : new Uint32Array(Array.prototype.slice.call(t3.bytes)), s5.postMessage(Hd({ source: e10, encrypted: i5, key: l7, iv: t3.iv }), [i5.buffer, l7.buffer]);
};
var Qc = ({ decryptionWorker: e10, segment: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 }) => {
  p5({ type: "segmentdecryptionstart" }), Yc({ id: t3.requestId, key: t3.key, encryptedBytes: t3.encryptedBytes, decryptionWorker: e10, segment: t3, doneFn: d2 }, (e11) => {
    t3.bytes = e11, p5({ type: "segmentdecryptioncomplete", segment: t3 }), Kc({ segment: t3, bytes: t3.bytes, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 });
  });
};
var Jc = ({ activeXhrs: e10, decryptionWorker: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 }) => {
  let m7 = 0, g2 = false;
  return (f3, y4) => {
    if (!g2) {
      if (f3) return g2 = true, Bc(e10), d2(f3, y4);
      if (m7 += 1, m7 === e10.length) {
        const m8 = function() {
          if (y4.encryptedBytes) return Qc({ decryptionWorker: t3, segment: y4, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 });
          Kc({ segment: y4, bytes: y4.bytes, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6, doneFn: d2, onTransmuxerLog: c5, triggerSegmentEventFn: p5 });
        };
        if (y4.endOfAllRequests = Date.now(), y4.map && y4.map.encryptedBytes && !y4.map.bytes) return p5({ type: "segmentdecryptionstart", segment: y4 }), Yc({ decryptionWorker: t3, id: y4.requestId + "-init", encryptedBytes: y4.map.encryptedBytes, key: y4.map.key, segment: y4, doneFn: d2 }, (t4) => {
          y4.map.bytes = t4, p5({ type: "segmentdecryptioncomplete", segment: y4 }), zc(y4, (t5) => {
            if (t5) return Bc(e10), d2(t5, y4);
            m8();
          });
        });
        m8();
      }
    }
  };
};
var Zc = ({ loadendState: e10, abortFn: t3 }) => (i5) => {
  i5.target.aborted && t3 && !e10.calledAbortFn && (t3(), e10.calledAbortFn = true);
};
var ep = ({ segment: e10, progressFn: t3, trackInfoFn: i5, timingInfoFn: s5, videoSegmentTimingInfoFn: n4, audioSegmentTimingInfoFn: r5, id3Fn: a9, captionsFn: o4, isEndOfTimeline: l7, endedTimelineFn: h3, dataFn: u6 }) => (i6) => {
  if (!i6.target.aborted) return e10.stats = bu(e10.stats, qc(i6)), !e10.stats.firstBytesReceivedAt && e10.stats.bytesReceived && (e10.stats.firstBytesReceivedAt = Date.now()), t3(i6, e10);
};
var tp = ({ xhr: e10, xhrOptions: t3, decryptionWorker: i5, segment: s5, abortFn: n4, progressFn: r5, trackInfoFn: a9, timingInfoFn: o4, videoSegmentTimingInfoFn: l7, audioSegmentTimingInfoFn: h3, id3Fn: u6, captionsFn: d2, isEndOfTimeline: c5, endedTimelineFn: p5, dataFn: m7, doneFn: g2, onTransmuxerLog: f3, triggerSegmentEventFn: y4 }) => {
  const _3 = [], v3 = Jc({ activeXhrs: _3, decryptionWorker: i5, trackInfoFn: a9, timingInfoFn: o4, videoSegmentTimingInfoFn: l7, audioSegmentTimingInfoFn: h3, id3Fn: u6, captionsFn: d2, isEndOfTimeline: c5, endedTimelineFn: p5, dataFn: m7, doneFn: g2, onTransmuxerLog: f3, triggerSegmentEventFn: y4 });
  if (s5.key && !s5.key.bytes) {
    const i6 = [s5.key];
    s5.map && !s5.map.bytes && s5.map.key && s5.map.key.resolvedUri === s5.key.resolvedUri && i6.push(s5.map.key);
    const n5 = bu(t3, { uri: s5.key.resolvedUri, responseType: "arraybuffer", requestType: "segment-key" }), r6 = $c(s5, i6, v3, y4);
    y4({ type: "segmentkeyloadstart", segment: s5, keyInfo: { uri: s5.key.resolvedUri } });
    const a10 = e10(n5, r6);
    _3.push(a10);
  }
  if (s5.map && !s5.map.bytes) {
    if (s5.map.key && (!s5.key || s5.key.resolvedUri !== s5.map.key.resolvedUri)) {
      const i7 = bu(t3, { uri: s5.map.key.resolvedUri, responseType: "arraybuffer", requestType: "segment-key" }), n6 = $c(s5, [s5.map.key], v3, y4);
      y4({ type: "segmentkeyloadstart", segment: s5, keyInfo: { uri: s5.map.key.resolvedUri } });
      const r7 = e10(i7, n6);
      _3.push(r7);
    }
    const i6 = bu(t3, { uri: s5.map.resolvedUri, responseType: "arraybuffer", headers: Fd(s5.map), requestType: "segment-media-initialization" }), n5 = Wc({ segment: s5, finishProcessingFn: v3, triggerSegmentEventFn: y4 });
    y4({ type: "segmentloadstart", segment: s5 });
    const r6 = e10(i6, n5);
    _3.push(r6);
  }
  const b4 = bu(t3, { uri: s5.part && s5.part.resolvedUri || s5.resolvedUri, responseType: "arraybuffer", headers: Fd(s5), requestType: "segment" }), T2 = Gc({ segment: s5, finishProcessingFn: v3, responseType: b4.responseType, triggerSegmentEventFn: y4 });
  y4({ type: "segmentloadstart", segment: s5 });
  const S4 = e10(b4, T2);
  S4.addEventListener("progress", ep({ segment: s5, progressFn: r5, trackInfoFn: a9, timingInfoFn: o4, videoSegmentTimingInfoFn: l7, audioSegmentTimingInfoFn: h3, id3Fn: u6, captionsFn: d2, isEndOfTimeline: c5, endedTimelineFn: p5, dataFn: m7 })), _3.push(S4);
  const E3 = {};
  return _3.forEach((e11) => {
    e11.addEventListener("loadend", Zc({ loadendState: E3, abortFn: n4 }));
  }), () => Bc(_3);
};
var ip = vu("PlaylistSelector");
var sp = function(e10) {
  if (!e10 || !e10.playlist) return;
  const t3 = e10.playlist;
  return JSON.stringify({ id: t3.id, bandwidth: e10.bandwidth, width: e10.width, height: e10.height, codecs: t3.attributes && t3.attributes.CODECS || "" });
};
var np = function(e10, t3) {
  if (!e10) return "";
  const i5 = b3.getComputedStyle(e10);
  return i5 ? i5[t3] : "";
};
var rp = function(e10, t3) {
  const i5 = e10.slice();
  e10.sort(function(e11, s5) {
    const n4 = t3(e11, s5);
    return 0 === n4 ? i5.indexOf(e11) - i5.indexOf(s5) : n4;
  });
};
var ap = function(e10, t3) {
  let i5, s5;
  return e10.attributes.BANDWIDTH && (i5 = e10.attributes.BANDWIDTH), i5 = i5 || b3.Number.MAX_VALUE, t3.attributes.BANDWIDTH && (s5 = t3.attributes.BANDWIDTH), s5 = s5 || b3.Number.MAX_VALUE, i5 - s5;
};
var op = function(e10, t3) {
  let i5, s5;
  return e10.attributes.RESOLUTION && e10.attributes.RESOLUTION.width && (i5 = e10.attributes.RESOLUTION.width), i5 = i5 || b3.Number.MAX_VALUE, t3.attributes.RESOLUTION && t3.attributes.RESOLUTION.width && (s5 = t3.attributes.RESOLUTION.width), s5 = s5 || b3.Number.MAX_VALUE, i5 === s5 && e10.attributes.BANDWIDTH && t3.attributes.BANDWIDTH ? e10.attributes.BANDWIDTH - t3.attributes.BANDWIDTH : i5 - s5;
};
var lp = function(e10) {
  const { main: t3, bandwidth: i5, playerWidth: s5, playerHeight: n4, playerObjectFit: r5, limitRenditionByPlayerDimensions: a9, playlistController: o4 } = e10;
  if (!t3) return;
  const l7 = { bandwidth: i5, width: s5, height: n4, limitRenditionByPlayerDimensions: a9 };
  let h3 = t3.playlists;
  id.isAudioOnly(t3) && (h3 = o4.getAudioTrackPlaylists_(), l7.audioOnly = true);
  let u6 = h3.map((e11) => {
    let t4;
    const i6 = e11.attributes && e11.attributes.RESOLUTION && e11.attributes.RESOLUTION.width, s6 = e11.attributes && e11.attributes.RESOLUTION && e11.attributes.RESOLUTION.height;
    return t4 = e11.attributes && e11.attributes.BANDWIDTH, t4 = t4 || b3.Number.MAX_VALUE, { bandwidth: t4, width: i6, height: s6, playlist: e11 };
  });
  rp(u6, (e11, t4) => e11.bandwidth - t4.bandwidth), u6 = u6.filter((e11) => !id.isIncompatible(e11.playlist));
  let d2 = u6.filter((e11) => id.isEnabled(e11.playlist));
  d2.length || (d2 = u6.filter((e11) => !id.isDisabled(e11.playlist)));
  const c5 = d2.filter((e11) => e11.bandwidth * yc.BANDWIDTH_VARIANCE < i5);
  let p5 = c5[c5.length - 1];
  const m7 = c5.filter((e11) => e11.bandwidth === p5.bandwidth)[0];
  if (false === a9) {
    const e11 = m7 || d2[0] || u6[0];
    if (e11 && e11.playlist) {
      let t4 = "sortedPlaylistReps";
      return m7 && (t4 = "bandwidthBestRep"), d2[0] && (t4 = "enabledPlaylistReps"), ip(`choosing ${sp(e11)} using ${t4} with options`, l7), e11.playlist;
    }
    return ip("could not choose a playlist with options", l7), null;
  }
  const g2 = c5.filter((e11) => e11.width && e11.height);
  rp(g2, (e11, t4) => e11.width - t4.width);
  const f3 = g2.filter((e11) => e11.width === s5 && e11.height === n4);
  p5 = f3[f3.length - 1];
  const y4 = f3.filter((e11) => e11.bandwidth === p5.bandwidth)[0];
  let _3, v3, T2, S4;
  if (y4 || (_3 = g2.filter((e11) => "cover" === r5 ? e11.width > s5 && e11.height > n4 : e11.width > s5 || e11.height > n4), v3 = _3.filter((e11) => e11.width === _3[0].width && e11.height === _3[0].height), p5 = v3[v3.length - 1], T2 = v3.filter((e11) => e11.bandwidth === p5.bandwidth)[0]), o4.leastPixelDiffSelector) {
    const e11 = g2.map((e12) => (e12.pixelDiff = Math.abs(e12.width - s5) + Math.abs(e12.height - n4), e12));
    rp(e11, (e12, t4) => e12.pixelDiff === t4.pixelDiff ? t4.bandwidth - e12.bandwidth : e12.pixelDiff - t4.pixelDiff), S4 = e11[0];
  }
  const E3 = S4 || T2 || y4 || m7 || d2[0] || u6[0];
  if (E3 && E3.playlist) {
    let e11 = "sortedPlaylistReps";
    return S4 ? e11 = "leastPixelDiffRep" : T2 ? e11 = "resolutionPlusOneRep" : y4 ? e11 = "resolutionBestRep" : m7 ? e11 = "bandwidthBestRep" : d2[0] && (e11 = "enabledPlaylistReps"), ip(`choosing ${sp(E3)} using ${e11} with options`, l7), E3.playlist;
  }
  return ip("could not choose a playlist with options", l7), null;
};
var hp = function() {
  let e10 = this.useDevicePixelRatio && b3.devicePixelRatio || 1;
  return isNaN(this.customPixelRatio) || (e10 = this.customPixelRatio), lp({ main: this.playlists.main, bandwidth: this.systemBandwidth, playerWidth: parseInt(np(this.tech_.el(), "width"), 10) * e10, playerHeight: parseInt(np(this.tech_.el(), "height"), 10) * e10, playerObjectFit: this.usePlayerObjectFit ? np(this.tech_.el(), "objectFit") : "", limitRenditionByPlayerDimensions: this.limitRenditionByPlayerDimensions, playlistController: this.playlistController_ });
};
var up = function(e10) {
  let t3 = -1, i5 = -1;
  if (e10 < 0 || e10 > 1) throw new Error("Moving average bandwidth decay must be between 0 and 1.");
  return function() {
    let s5 = this.useDevicePixelRatio && b3.devicePixelRatio || 1;
    return isNaN(this.customPixelRatio) || (s5 = this.customPixelRatio), t3 < 0 && (t3 = this.systemBandwidth, i5 = this.systemBandwidth), this.systemBandwidth > 0 && this.systemBandwidth !== i5 && (t3 = e10 * this.systemBandwidth + (1 - e10) * t3, i5 = this.systemBandwidth), lp({ main: this.playlists.main, bandwidth: t3, playerWidth: parseInt(np(this.tech_.el(), "width"), 10) * s5, playerHeight: parseInt(np(this.tech_.el(), "height"), 10) * s5, playerObjectFit: this.usePlayerObjectFit ? np(this.tech_.el(), "objectFit") : "", limitRenditionByPlayerDimensions: this.limitRenditionByPlayerDimensions, playlistController: this.playlistController_ });
  };
};
var dp = function(e10) {
  const { main: t3, currentTime: i5, bandwidth: s5, duration: n4, segmentDuration: r5, timeUntilRebuffer: a9, currentTimeline: o4, syncController: l7 } = e10, h3 = t3.playlists.filter((e11) => !id.isIncompatible(e11));
  let u6 = h3.filter(id.isEnabled);
  u6.length || (u6 = h3.filter((e11) => !id.isDisabled(e11)));
  const d2 = u6.filter(id.hasAttribute.bind(null, "BANDWIDTH")).map((e11) => {
    const t4 = l7.getSyncPoint(e11, n4, o4, i5) ? 1 : 2;
    return { playlist: e11, rebufferingImpact: id.estimateSegmentRequestTime(r5, s5, e11) * t4 - a9 };
  }), c5 = d2.filter((e11) => e11.rebufferingImpact <= 0);
  return rp(c5, (e11, t4) => ap(t4.playlist, e11.playlist)), c5.length ? c5[0] : (rp(d2, (e11, t4) => e11.rebufferingImpact - t4.rebufferingImpact), d2[0] || null);
};
var cp = function() {
  const e10 = this.playlists.main.playlists.filter(id.isEnabled);
  rp(e10, (e11, t3) => ap(e11, t3));
  return e10.filter((e11) => !!Sd(this.playlists.main, e11).video)[0] || null;
};
var pp = (e10) => {
  let t3, i5 = 0;
  return e10.bytes && (t3 = new Uint8Array(e10.bytes), e10.segments.forEach((e11) => {
    t3.set(e11, i5), i5 += e11.byteLength;
  })), t3;
};
function mp(e10) {
  try {
    return new URL(e10).pathname.split("/").slice(-2).join("/");
  } catch (t3) {
    return "";
  }
}
var gp = function(e10, t3, i5) {
  if (!e10[i5]) {
    t3.trigger({ type: "usage", name: "vhs-608" });
    let s5 = i5;
    /^cc708_/.test(i5) && (s5 = "SERVICE" + i5.split("_")[1]);
    const n4 = t3.textTracks().getTrackById(s5);
    if (n4) e10[i5] = n4;
    else {
      let n5 = i5, r5 = i5, a9 = false;
      const o4 = (t3.options_.vhs && t3.options_.vhs.captionServices || {})[s5];
      o4 && (n5 = o4.label, r5 = o4.language, a9 = o4.default), e10[i5] = t3.addRemoteTextTrack({ kind: "captions", id: s5, default: a9, label: n5, language: r5 }, false).track;
    }
  }
};
var fp = function({ inbandTextTracks: e10, captionArray: t3, timestampOffset: i5 }) {
  if (!t3) return;
  const s5 = b3.WebKitDataCue || b3.VTTCue;
  t3.forEach((t4) => {
    const n4 = t4.stream;
    t4.content ? t4.content.forEach((r5) => {
      const a9 = new s5(t4.startTime + i5, t4.endTime + i5, r5.text);
      a9.line = r5.line, a9.align = "left", a9.position = r5.position, a9.positionAlign = "line-left", e10[n4].addCue(a9);
    }) : e10[n4].addCue(new s5(t4.startTime + i5, t4.endTime + i5, t4.text));
  });
};
var yp = function(e10) {
  Object.defineProperties(e10.frame, { id: { get: () => (du.log.warn("cue.frame.id is deprecated. Use cue.value.key instead."), e10.value.key) }, value: { get: () => (du.log.warn("cue.frame.value is deprecated. Use cue.value.data instead."), e10.value.data) }, privateData: { get: () => (du.log.warn("cue.frame.privateData is deprecated. Use cue.value.data instead."), e10.value.data) } });
};
var _p = ({ inbandTextTracks: e10, metadataArray: t3, timestampOffset: i5, videoDuration: s5 }) => {
  if (!t3) return;
  const n4 = b3.WebKitDataCue || b3.VTTCue, r5 = e10.metadataTrack_;
  if (!r5) return;
  if (t3.forEach((e11) => {
    const t4 = e11.cueTime + i5;
    !("number" != typeof t4 || b3.isNaN(t4) || t4 < 0) && t4 < 1 / 0 && e11.frames && e11.frames.length && e11.frames.forEach((e12) => {
      const i6 = new n4(t4, t4, e12.value || e12.url || e12.data || "");
      i6.frame = e12, i6.value = e12, yp(i6), r5.addCue(i6);
    });
  }), !r5.cues || !r5.cues.length) return;
  const a9 = r5.cues, o4 = [];
  for (let u6 = 0; u6 < a9.length; u6++) a9[u6] && o4.push(a9[u6]);
  const l7 = o4.reduce((e11, t4) => {
    const i6 = e11[t4.startTime] || [];
    return i6.push(t4), e11[t4.startTime] = i6, e11;
  }, {}), h3 = Object.keys(l7).sort((e11, t4) => Number(e11) - Number(t4));
  h3.forEach((e11, t4) => {
    const i6 = l7[e11], n5 = isFinite(s5) ? s5 : e11, r6 = Number(h3[t4 + 1]) || n5;
    i6.forEach((e12) => {
      e12.endTime = r6;
    });
  });
};
var vp = { id: "ID", class: "CLASS", startDate: "START-DATE", duration: "DURATION", endDate: "END-DATE", endOnNext: "END-ON-NEXT", plannedDuration: "PLANNED-DURATION", scte35Out: "SCTE35-OUT", scte35In: "SCTE35-IN" };
var bp = /* @__PURE__ */ new Set(["id", "class", "startDate", "duration", "endDate", "endOnNext", "startTime", "endTime", "processDateRange"]);
var Tp = ({ inbandTextTracks: e10, dateRanges: t3 }) => {
  const i5 = e10.metadataTrack_;
  if (!i5) return;
  const s5 = b3.WebKitDataCue || b3.VTTCue;
  t3.forEach((e11) => {
    for (const t4 of Object.keys(e11)) {
      if (bp.has(t4)) continue;
      const n4 = new s5(e11.startTime, e11.endTime, "");
      n4.id = e11.id, n4.type = "com.apple.quicktime.HLS", n4.value = { key: vp[t4], data: e11[t4] }, "scte35Out" !== t4 && "scte35In" !== t4 || (n4.value.data = new Uint8Array(n4.value.data.match(/[\da-f]{2}/gi)).buffer), i5.addCue(n4);
    }
    e11.processDateRange();
  });
};
var Sp = (e10, t3, i5) => {
  e10.metadataTrack_ || (e10.metadataTrack_ = i5.addRemoteTextTrack({ kind: "metadata", label: "Timed Metadata" }, false).track, du.browser.IS_ANY_SAFARI || (e10.metadataTrack_.inBandMetadataTrackDispatchType = t3));
};
var Ep = function(e10, t3, i5) {
  let s5, n4;
  if (i5 && i5.cues) for (s5 = i5.cues.length; s5--; ) n4 = i5.cues[s5], n4.startTime >= e10 && n4.endTime <= t3 && i5.removeCue(n4);
};
var wp = function(e10) {
  const t3 = e10.cues;
  if (!t3) return;
  const i5 = {};
  for (let s5 = t3.length - 1; s5 >= 0; s5--) {
    const n4 = t3[s5], r5 = `${n4.startTime}-${n4.endTime}-${n4.text}`;
    i5[r5] ? e10.removeCue(n4) : i5[r5] = n4;
  }
};
var Cp = (e10, t3, i5) => {
  if (null == t3 || !e10.length) return [];
  const s5 = Math.ceil((t3 - i5 + 3) * sn.ONE_SECOND_IN_TS);
  let n4;
  for (n4 = 0; n4 < e10.length && !(e10[n4].pts > s5); n4++) ;
  return e10.slice(n4);
};
var kp = (e10, t3, i5) => {
  if (!t3.length) return e10;
  if (i5) return t3.slice();
  const s5 = t3[0].pts;
  let n4 = 0;
  for (; n4 < e10.length && !(e10[n4].pts >= s5); n4++) ;
  return e10.slice(0, n4).concat(t3);
};
var Ip = (e10, t3, i5, s5) => {
  const n4 = Math.ceil((t3 - s5) * sn.ONE_SECOND_IN_TS), r5 = Math.ceil((i5 - s5) * sn.ONE_SECOND_IN_TS), a9 = e10.slice();
  let o4 = e10.length;
  for (; o4-- && !(e10[o4].pts <= r5); ) ;
  if (-1 === o4) return a9;
  let l7 = o4 + 1;
  for (; l7-- && !(e10[l7].pts <= n4); ) ;
  return l7 = Math.max(l7, 0), a9.splice(l7, o4 - l7 + 1), a9;
};
var xp = function(e10, t3) {
  if (!e10 && !t3 || !e10 && t3 || e10 && !t3) return false;
  if (e10 === t3) return true;
  const i5 = Object.keys(e10).sort(), s5 = Object.keys(t3).sort();
  if (i5.length !== s5.length) return false;
  for (let n4 = 0; n4 < i5.length; n4++) {
    const r5 = i5[n4];
    if (r5 !== s5[n4]) return false;
    if (e10[r5] !== t3[r5]) return false;
  }
  return true;
};
var Ap = function(e10, t3, i5) {
  t3 = t3 || [];
  const s5 = [];
  let n4 = 0;
  for (let r5 = 0; r5 < t3.length; r5++) {
    const a9 = t3[r5];
    if (e10 === a9.timeline && (s5.push(r5), n4 += a9.duration, n4 > i5)) return r5;
  }
  return 0 === s5.length ? 0 : s5[s5.length - 1];
};
var Dp = 1;
var Pp = 500;
var Lp = (e10) => "number" == typeof e10 && isFinite(e10);
var Op = 1 / 60;
var Np = (e10, t3, i5) => "main" === e10 && t3 && i5 ? i5.hasAudio || i5.hasVideo ? t3.hasVideo && !i5.hasVideo ? "Only audio found in segment when we expected video. We can't switch to audio only from a stream that had video. To get rid of this message, please add codec information to the manifest." : !t3.hasVideo && i5.hasVideo ? "Video found in segment when we expected only audio. We can't switch to a stream with video from an audio only stream. To get rid of this message, please add codec information to the manifest." : null : "Neither audio nor video found in segment." : null;
var Rp = (e10, t3, i5) => {
  let s5 = t3 - yc.BACK_BUFFER_LENGTH;
  e10.length && (s5 = Math.max(s5, e10.start(0)));
  const n4 = t3 - i5;
  return Math.min(n4, s5);
};
var Mp = (e10) => {
  const { startOfSegment: t3, duration: i5, segment: s5, part: n4, playlist: { mediaSequence: r5, id: a9, segments: o4 = [] }, mediaIndex: l7, partIndex: h3, timeline: u6 } = e10, d2 = o4.length - 1;
  let c5 = "mediaIndex/partIndex increment";
  e10.getMediaInfoForTime ? c5 = `getMediaInfoForTime (${e10.getMediaInfoForTime})` : e10.isSyncRequest && (c5 = "getSyncSegmentCandidate (isSyncRequest)"), e10.independent && (c5 += ` with independent ${e10.independent}`);
  const p5 = "number" == typeof h3, m7 = e10.segment.uri ? "segment" : "pre-segment", g2 = p5 ? Fu({ preloadSegment: s5 }) - 1 : 0;
  return `${m7} [${r5 + l7}/${r5 + d2}]` + (p5 ? ` part [${h3}/${g2}]` : "") + ` segment start/end [${s5.start} => ${s5.end}]` + (p5 ? ` part start/end [${n4.start} => ${n4.end}]` : "") + ` startOfSegment [${t3}] duration [${i5}] timeline [${u6}] selected by [${c5}] playlist [${a9}]`;
};
var Up = (e10) => `${e10}TimingInfo`;
var Bp = ({ segmentTimeline: e10, currentTimeline: t3, startOfSegment: i5, buffered: s5, overrideCheck: n4 }) => n4 || e10 !== t3 ? e10 < t3 ? i5 : s5.length ? s5.end(s5.length - 1) : i5 : null;
var Fp = ({ timelineChangeController: e10, currentTimeline: t3, segmentTimeline: i5, loaderType: s5, audioDisabled: n4 }) => {
  if (t3 === i5) return false;
  if ("audio" === s5) {
    const t4 = e10.lastTimelineChange({ type: "main" });
    return !t4 || t4.to !== i5;
  }
  if ("main" === s5 && n4) {
    const t4 = e10.pendingTimelineChange({ type: "audio" });
    return !t4 || t4.to !== i5;
  }
  return false;
};
var qp = (e10) => {
  if (!e10) return false;
  const t3 = e10.pendingTimelineChange({ type: "audio" }), i5 = e10.pendingTimelineChange({ type: "main" }), s5 = t3 && i5, n4 = s5 && t3.to !== i5.to;
  return !(!s5 || -1 === t3.from || -1 === i5.from || !n4);
};
var jp = (e10) => {
  const t3 = e10.timelineChangeController_.pendingTimelineChange({ type: "audio" }), i5 = e10.timelineChangeController_.pendingTimelineChange({ type: "main" });
  return t3 && i5 && t3.to < i5.to;
};
var $p = (e10) => {
  const t3 = e10.pendingSegment_;
  if (!t3) return;
  if (Fp({ timelineChangeController: e10.timelineChangeController_, currentTimeline: e10.currentTimeline_, segmentTimeline: t3.timeline, loaderType: e10.loaderType_, audioDisabled: e10.audioDisabled_ }) && qp(e10.timelineChangeController_)) {
    if (jp(e10)) return void e10.timelineChangeController_.trigger("audioTimelineBehind");
    e10.timelineChangeController_.trigger("fixBadTimelineChange");
  }
};
var Hp = (e10) => {
  let t3 = 0;
  return ["video", "audio"].forEach(function(i5) {
    const s5 = e10[`${i5}TimingInfo`];
    if (!s5) return;
    const { start: n4, end: r5 } = s5;
    let a9;
    "bigint" == typeof n4 || "bigint" == typeof r5 ? a9 = b3.BigInt(r5) - b3.BigInt(n4) : "number" == typeof n4 && "number" == typeof r5 && (a9 = r5 - n4), void 0 !== a9 && a9 > t3 && (t3 = a9);
  }), "bigint" == typeof t3 && t3 < Number.MAX_SAFE_INTEGER && (t3 = Number(t3)), t3;
};
var Vp = ({ segmentDuration: e10, maxDuration: t3 }) => !!e10 && Math.round(e10) > t3 + Eu;
var zp = (e10, t3) => {
  if ("hls" !== t3) return null;
  const i5 = Hp({ audioTimingInfo: e10.audioTimingInfo, videoTimingInfo: e10.videoTimingInfo });
  if (!i5) return null;
  const s5 = e10.playlist.targetDuration, n4 = Vp({ segmentDuration: i5, maxDuration: 2 * s5 }), r5 = Vp({ segmentDuration: i5, maxDuration: s5 }), a9 = `Segment with index ${e10.mediaIndex} from playlist ${e10.playlist.id} has a duration of ${i5} when the reported duration is ${e10.duration} and the target duration is ${s5}. For HLS content, a duration in excess of the target duration may result in playback issues. See the HLS specification section on EXT-X-TARGETDURATION for more details: https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1`;
  return n4 || r5 ? { severity: n4 ? "warn" : "info", message: a9 } : null;
};
var Wp = ({ type: e10, segment: t3 }) => {
  if (!t3) return;
  const i5 = Boolean(t3.key || t3.map && t3.map.ke), s5 = Boolean(t3.map && !t3.map.bytes), n4 = void 0 === t3.startOfSegment ? t3.start : t3.startOfSegment;
  return { type: e10 || t3.type, uri: t3.resolvedUri || t3.uri, start: n4, duration: t3.duration, isEncrypted: i5, isMediaInitialization: s5 };
};
var Gp = class extends du.EventTarget {
  constructor(e10, t3 = {}) {
    if (super(), !e10) throw new TypeError("Initialization settings are required");
    if ("function" != typeof e10.currentTime) throw new TypeError("No currentTime getter specified");
    if (!e10.mediaSource) throw new TypeError("No MediaSource specified");
    this.bandwidth = e10.bandwidth, this.throughput = { rate: 0, count: 0 }, this.roundTrip = NaN, this.resetStats_(), this.mediaIndex = null, this.partIndex = null, this.hasPlayed_ = e10.hasPlayed, this.currentTime_ = e10.currentTime, this.seekable_ = e10.seekable, this.seeking_ = e10.seeking, this.duration_ = e10.duration, this.mediaSource_ = e10.mediaSource, this.vhs_ = e10.vhs, this.loaderType_ = e10.loaderType, this.currentMediaInfo_ = void 0, this.startingMediaInfo_ = void 0, this.segmentMetadataTrack_ = e10.segmentMetadataTrack, this.goalBufferLength_ = e10.goalBufferLength, this.sourceType_ = e10.sourceType, this.sourceUpdater_ = e10.sourceUpdater, this.inbandTextTracks_ = e10.inbandTextTracks, this.state_ = "INIT", this.timelineChangeController_ = e10.timelineChangeController, this.shouldSaveSegmentTimingInfo_ = true, this.parse708captions_ = e10.parse708captions, this.useDtsForTimestampOffset_ = e10.useDtsForTimestampOffset, this.captionServices_ = e10.captionServices, this.exactManifestTimings = e10.exactManifestTimings, this.addMetadataToTextTrack = e10.addMetadataToTextTrack, this.checkBufferTimeout_ = null, this.error_ = void 0, this.currentTimeline_ = -1, this.shouldForceTimestampOffsetAfterResync_ = false, this.pendingSegment_ = null, this.xhrOptions_ = null, this.pendingSegments_ = [], this.audioDisabled_ = false, this.isPendingTimestampOffset_ = false, this.gopBuffer_ = [], this.timeMapping_ = 0, this.safeAppend_ = false, this.appendInitSegment_ = { audio: true, video: true }, this.playlistOfLastInitSegment_ = { audio: null, video: null }, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_ = { id3: [], caption: [] }, this.waitingOnRemove_ = false, this.quotaExceededErrorRetryTimeout_ = null, this.activeInitSegmentId_ = null, this.initSegments_ = {}, this.cacheEncryptionKeys_ = e10.cacheEncryptionKeys, this.keyCache_ = {}, this.decrypter_ = e10.decrypter, this.syncController_ = e10.syncController, this.syncPoint_ = { segmentIndex: 0, time: 0 }, this.transmuxer_ = this.createTransmuxer_(), this.triggerSyncInfoUpdate_ = () => this.trigger("syncinfoupdate"), this.syncController_.on("syncinfoupdate", this.triggerSyncInfoUpdate_), this.mediaSource_.addEventListener("sourceopen", () => {
      this.isEndOfStream_() || (this.ended_ = false);
    }), this.fetchAtBuffer_ = false, this.logger_ = vu(`SegmentLoader[${this.loaderType_}]`), Object.defineProperty(this, "state", { get() {
      return this.state_;
    }, set(e11) {
      e11 !== this.state_ && (this.logger_(`${this.state_} -> ${e11}`), this.state_ = e11, this.trigger("statechange"));
    } }), this.sourceUpdater_.on("ready", () => {
      this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : $p(this);
    }), this.sourceUpdater_.on("codecschange", (e11) => {
      this.trigger(Fe({ type: "codecschange" }, e11));
    }), "main" === this.loaderType_ && this.timelineChangeController_.on("pendingtimelinechange", () => {
      this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : $p(this);
    }), "audio" === this.loaderType_ && this.timelineChangeController_.on("timelinechange", (e11) => {
      this.trigger(Fe({ type: "timelinechange" }, e11)), this.hasEnoughInfoToLoad_() ? this.processLoadQueue_() : $p(this), this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : $p(this);
    });
  }
  get mediaSequenceSync_() {
    return this.syncController_.getMediaSequenceSync(this.loaderType_);
  }
  createTransmuxer_() {
    return Nc.createTransmuxer({ remux: false, alignGopsAtEnd: this.safeAppend_, keepOriginalTimestamps: true, parse708captions: this.parse708captions_, captionServices: this.captionServices_ });
  }
  resetStats_() {
    this.mediaBytesTransferred = 0, this.mediaRequests = 0, this.mediaRequestsAborted = 0, this.mediaRequestsTimedout = 0, this.mediaRequestsErrored = 0, this.mediaTransferDuration = 0, this.mediaSecondsLoaded = 0, this.mediaAppends = 0;
  }
  dispose() {
    this.trigger("dispose"), this.state = "DISPOSED", this.pause(), this.abort_(), this.transmuxer_ && this.transmuxer_.terminate(), this.resetStats_(), this.checkBufferTimeout_ && b3.clearTimeout(this.checkBufferTimeout_), this.syncController_ && this.triggerSyncInfoUpdate_ && this.syncController_.off("syncinfoupdate", this.triggerSyncInfoUpdate_), this.off();
  }
  setAudio(e10) {
    this.audioDisabled_ = !e10, e10 ? this.appendInitSegment_.audio = true : this.sourceUpdater_.removeAudio(0, this.duration_());
  }
  abort() {
    if ("WAITING" !== this.state) return this.pendingSegment_ && (this.pendingSegment_ = null), void this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);
    this.abort_(), this.state = "READY", this.paused() || this.monitorBuffer_();
  }
  abort_() {
    this.pendingSegment_ && this.pendingSegment_.abortRequests && this.pendingSegment_.abortRequests(), this.pendingSegment_ = null, this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_), this.waitingOnRemove_ = false, b3.clearTimeout(this.quotaExceededErrorRetryTimeout_), this.quotaExceededErrorRetryTimeout_ = null;
  }
  checkForAbort_(e10) {
    return "APPENDING" !== this.state || this.pendingSegment_ ? !this.pendingSegment_ || this.pendingSegment_.requestId !== e10 : (this.state = "READY", true);
  }
  error(e10) {
    return void 0 !== e10 && (this.logger_("error occurred:", e10), this.error_ = e10), this.pendingSegment_ = null, this.error_;
  }
  endOfStream() {
    this.ended_ = true, this.transmuxer_ && Nc.reset(this.transmuxer_), this.gopBuffer_.length = 0, this.pause(), this.trigger("ended");
  }
  buffered_() {
    const e10 = this.getMediaInfo_();
    if (!this.sourceUpdater_ || !e10) return Tu();
    if ("main" === this.loaderType_) {
      const { hasAudio: t3, hasVideo: i5, isMuxed: s5 } = e10;
      if (i5 && t3 && !this.audioDisabled_ && !s5) return this.sourceUpdater_.buffered();
      if (i5) return this.sourceUpdater_.videoBuffered();
    }
    return this.sourceUpdater_.audioBuffered();
  }
  initSegmentForMap(e10, t3 = false) {
    if (!e10) return null;
    const i5 = Vd(e10);
    let s5 = this.initSegments_[i5];
    return t3 && !s5 && e10.bytes && (this.initSegments_[i5] = s5 = { resolvedUri: e10.resolvedUri, byterange: e10.byterange, bytes: e10.bytes, tracks: e10.tracks, timescales: e10.timescales }), s5 || e10;
  }
  segmentKey(e10, t3 = false) {
    if (!e10) return null;
    const i5 = zd(e10);
    let s5 = this.keyCache_[i5];
    this.cacheEncryptionKeys_ && t3 && !s5 && e10.bytes && (this.keyCache_[i5] = s5 = { resolvedUri: e10.resolvedUri, bytes: e10.bytes });
    const n4 = { resolvedUri: (s5 || e10).resolvedUri };
    return s5 && (n4.bytes = s5.bytes), n4;
  }
  couldBeginLoading_() {
    return this.playlist_ && !this.paused();
  }
  load() {
    if (this.monitorBuffer_(), this.playlist_) return "INIT" === this.state && this.couldBeginLoading_() ? this.init_() : void (!this.couldBeginLoading_() || "READY" !== this.state && "INIT" !== this.state || (this.state = "READY"));
  }
  init_() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }
  playlist(e10, t3 = {}) {
    if (!e10) return;
    if (this.playlist_ && this.playlist_.endList && e10.endList && this.playlist_.uri === e10.uri) return;
    const i5 = this.playlist_, s5 = this.pendingSegment_;
    this.playlist_ = e10, this.xhrOptions_ = t3, "INIT" === this.state && (e10.syncInfo = { mediaSequence: e10.mediaSequence, time: 0 }, "main" === this.loaderType_ && this.syncController_.setDateTimeMappingForStart(e10));
    let n4 = null;
    if (i5 && (i5.id ? n4 = i5.id : i5.uri && (n4 = i5.uri)), this.logger_(`playlist update [${n4} => ${e10.id || e10.uri}]`), this.mediaSequenceSync_ && (this.mediaSequenceSync_.update(e10, this.currentTime_()), this.logger_(`Playlist update:
currentTime: ${this.currentTime_()}
bufferedEnd: ${Nu(this.buffered_())}
`, this.mediaSequenceSync_.diagnostics)), this.trigger("syncinfoupdate"), "INIT" === this.state && this.couldBeginLoading_()) return this.init_();
    if (!i5 || i5.uri !== e10.uri) {
      if (null !== this.mediaIndex) {
        !e10.endList && "number" == typeof e10.partTargetDuration ? this.resetLoader() : this.resyncLoader();
      }
      return this.currentMediaInfo_ = void 0, void this.trigger("playlistupdate");
    }
    const r5 = e10.mediaSequence - i5.mediaSequence;
    if (this.logger_(`live window shift [${r5}]`), null !== this.mediaIndex) if (this.mediaIndex -= r5, this.mediaIndex < 0) this.mediaIndex = null, this.partIndex = null;
    else {
      const e11 = this.playlist_.segments[this.mediaIndex];
      if (this.partIndex && (!e11.parts || !e11.parts.length || !e11.parts[this.partIndex])) {
        const e12 = this.mediaIndex;
        this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`), this.resetLoader(), this.mediaIndex = e12;
      }
    }
    s5 && (s5.mediaIndex -= r5, s5.mediaIndex < 0 ? (s5.mediaIndex = null, s5.partIndex = null) : (s5.mediaIndex >= 0 && (s5.segment = e10.segments[s5.mediaIndex]), s5.partIndex >= 0 && s5.segment.parts && (s5.part = s5.segment.parts[s5.partIndex]))), this.syncController_.saveExpiredSegmentInfo(i5, e10);
  }
  pause() {
    this.checkBufferTimeout_ && (b3.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = null);
  }
  paused() {
    return null === this.checkBufferTimeout_;
  }
  resetEverything(e10) {
    this.ended_ = false, this.activeInitSegmentId_ = null, this.appendInitSegment_ = { audio: true, video: true }, this.resetLoader(), this.remove(0, 1 / 0, e10), this.transmuxer_ && (this.transmuxer_.postMessage({ action: "clearAllMp4Captions" }), this.transmuxer_.postMessage({ action: "reset" }));
  }
  resetLoader() {
    this.fetchAtBuffer_ = false, this.mediaSequenceSync_ && this.mediaSequenceSync_.resetAppendedStatus(), this.resyncLoader();
  }
  resyncLoader() {
    this.transmuxer_ && Nc.reset(this.transmuxer_), this.mediaIndex = null, this.partIndex = null, this.syncPoint_ = null, this.isPendingTimestampOffset_ = false;
    const e10 = this.currentMediaInfo_ && this.currentMediaInfo_.isFmp4;
    "hls" === this.sourceType_ && !e10 && (this.shouldForceTimestampOffsetAfterResync_ = true), this.callQueue_ = [], this.loadQueue_ = [], this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [], this.abort(), this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearParsedMp4Captions" });
  }
  remove(e10, t3, i5 = () => {
  }, s5 = false) {
    if (t3 === 1 / 0 && (t3 = this.duration_()), t3 <= e10) return void this.logger_("skipping remove because end ${end} is <= start ${start}");
    if (!this.sourceUpdater_ || !this.getMediaInfo_()) return void this.logger_("skipping remove because no source updater or starting media info");
    let n4 = 1;
    const r5 = () => {
      n4--, 0 === n4 && i5();
    };
    !s5 && this.audioDisabled_ || (n4++, this.sourceUpdater_.removeAudio(e10, t3, r5)), (s5 || "main" === this.loaderType_) && (this.gopBuffer_ = Ip(this.gopBuffer_, e10, t3, this.timeMapping_), n4++, this.sourceUpdater_.removeVideo(e10, t3, r5));
    for (const a9 in this.inbandTextTracks_) Ep(e10, t3, this.inbandTextTracks_[a9]);
    Ep(e10, t3, this.segmentMetadataTrack_), r5();
  }
  monitorBuffer_() {
    this.checkBufferTimeout_ && b3.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = b3.setTimeout(this.monitorBufferTick_.bind(this), 1);
  }
  monitorBufferTick_() {
    "READY" === this.state && this.fillBuffer_(), this.checkBufferTimeout_ && b3.clearTimeout(this.checkBufferTimeout_), this.checkBufferTimeout_ = b3.setTimeout(this.monitorBufferTick_.bind(this), Pp);
  }
  fillBuffer_() {
    if (this.sourceUpdater_.updating()) return;
    const e10 = this.chooseNextRequest_();
    if (!e10) return;
    const t3 = { segmentInfo: Wp({ type: this.loaderType_, segment: e10 }) };
    this.trigger({ type: "segmentselected", metadata: t3 }), "number" == typeof e10.timestampOffset && (this.isPendingTimestampOffset_ = false, this.timelineChangeController_.pendingTimelineChange({ type: this.loaderType_, from: this.currentTimeline_, to: e10.timeline })), this.loadSegment_(e10);
  }
  isEndOfStream_(e10 = this.mediaIndex, t3 = this.playlist_, i5 = this.partIndex) {
    if (!t3 || !this.mediaSource_) return false;
    const s5 = "number" == typeof e10 && t3.segments[e10], n4 = e10 + 1 === t3.segments.length, r5 = !s5 || !s5.parts || i5 + 1 === s5.parts.length;
    return t3.endList && "open" === this.mediaSource_.readyState && n4 && r5;
  }
  chooseNextRequest_() {
    const e10 = this.buffered_(), t3 = Nu(e10) || 0, i5 = Ru(e10, this.currentTime_()), s5 = !this.hasPlayed_() && i5 >= 1, n4 = i5 >= this.goalBufferLength_(), r5 = this.playlist_.segments;
    if (!r5.length || s5 || n4) return null;
    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_(), this.loaderType_);
    const a9 = { partIndex: null, mediaIndex: null, startOfSegment: null, playlist: this.playlist_, isSyncRequest: Boolean(!this.syncPoint_) };
    if (a9.isSyncRequest) a9.mediaIndex = Ap(this.currentTimeline_, r5, t3), this.logger_(`choose next request. Can not find sync point. Fallback to media Index: ${a9.mediaIndex}`);
    else if (null !== this.mediaIndex) {
      const e11 = r5[this.mediaIndex], i6 = "number" == typeof this.partIndex ? this.partIndex : -1;
      a9.startOfSegment = e11.end ? e11.end : t3, e11.parts && e11.parts[i6 + 1] ? (a9.mediaIndex = this.mediaIndex, a9.partIndex = i6 + 1) : a9.mediaIndex = this.mediaIndex + 1;
    } else {
      let e11, i6, s6;
      const n5 = this.fetchAtBuffer_ ? t3 : this.currentTime_();
      if (this.mediaSequenceSync_ && this.logger_(`chooseNextRequest_ request after Quality Switch:
For TargetTime: ${n5}.
CurrentTime: ${this.currentTime_()}
BufferedEnd: ${t3}
Fetch At Buffer: ${this.fetchAtBuffer_}
`, this.mediaSequenceSync_.diagnostics), this.mediaSequenceSync_ && this.mediaSequenceSync_.isReliable) {
        const t4 = this.getSyncInfoFromMediaSequenceSync_(n5);
        if (!t4) {
          const e12 = "No sync info found while using media sequence sync";
          return this.error({ message: e12, metadata: { errorType: du.Error.StreamingFailedToSelectNextSegment, error: new Error(e12) } }), this.logger_("chooseNextRequest_ - no sync info found using media sequence sync"), null;
        }
        this.logger_(`chooseNextRequest_ mediaSequence syncInfo (${t4.start} --> ${t4.end})`), e11 = t4.segmentIndex, i6 = t4.partIndex, s6 = t4.start;
      } else {
        this.logger_("chooseNextRequest_ - fallback to a regular segment selection algorithm, based on a syncPoint.");
        const t4 = id.getMediaInfoForTime({ exactManifestTimings: this.exactManifestTimings, playlist: this.playlist_, currentTime: n5, startingPartIndex: this.syncPoint_.partIndex, startingSegmentIndex: this.syncPoint_.segmentIndex, startTime: this.syncPoint_.time });
        e11 = t4.segmentIndex, i6 = t4.partIndex, s6 = t4.startTime;
      }
      a9.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${n5}` : `currentTime ${n5}`, a9.mediaIndex = e11, a9.startOfSegment = s6, a9.partIndex = i6, this.logger_(`choose next request. Playlist switched and we have a sync point. Media Index: ${a9.mediaIndex} `);
    }
    const o4 = r5[a9.mediaIndex];
    let l7 = o4 && "number" == typeof a9.partIndex && o4.parts && o4.parts[a9.partIndex];
    if (!o4 || "number" == typeof a9.partIndex && !l7) return null;
    "number" != typeof a9.partIndex && o4.parts && (a9.partIndex = 0, l7 = o4.parts[0]);
    const h3 = this.vhs_.playlists && this.vhs_.playlists.main && this.vhs_.playlists.main.independentSegments || this.playlist_.independentSegments;
    if (!i5 && l7 && !h3 && !l7.independent) if (0 === a9.partIndex) {
      const e11 = r5[a9.mediaIndex - 1], t4 = e11.parts && e11.parts.length && e11.parts[e11.parts.length - 1];
      t4 && t4.independent && (a9.mediaIndex -= 1, a9.partIndex = e11.parts.length - 1, a9.independent = "previous segment");
    } else o4.parts[a9.partIndex - 1].independent && (a9.partIndex -= 1, a9.independent = "previous part");
    const u6 = this.mediaSource_ && "ended" === this.mediaSource_.readyState;
    return a9.mediaIndex >= r5.length - 1 && u6 && !this.seeking_() ? null : (this.shouldForceTimestampOffsetAfterResync_ && (this.shouldForceTimestampOffsetAfterResync_ = false, a9.forceTimestampOffset = true, this.logger_("choose next request. Force timestamp offset after loader resync")), this.generateSegmentInfo_(a9));
  }
  getSyncInfoFromMediaSequenceSync_(e10) {
    if (!this.mediaSequenceSync_) return null;
    const t3 = Math.max(e10, this.mediaSequenceSync_.start);
    e10 !== t3 && this.logger_(`getSyncInfoFromMediaSequenceSync_. Pulled target time from ${e10} to ${t3}`);
    const i5 = this.mediaSequenceSync_.getSyncInfoForTime(t3);
    if (!i5) return null;
    if (!i5.isAppended) return i5;
    const s5 = this.mediaSequenceSync_.getSyncInfoForTime(i5.end);
    return s5 ? (s5.isAppended && this.logger_("getSyncInfoFromMediaSequenceSync_: We encounter unexpected scenario where next media sequence sync info is also appended!"), s5) : null;
  }
  generateSegmentInfo_(e10) {
    const { independent: t3, playlist: i5, mediaIndex: s5, startOfSegment: n4, isSyncRequest: r5, partIndex: a9, forceTimestampOffset: o4, getMediaInfoForTime: l7 } = e10, h3 = i5.segments[s5], u6 = "number" == typeof a9 && h3.parts[a9], d2 = { requestId: "segment-loader-" + Math.random(), uri: u6 && u6.resolvedUri || h3.resolvedUri, mediaIndex: s5, partIndex: u6 ? a9 : null, isSyncRequest: r5, startOfSegment: n4, playlist: i5, bytes: null, encryptedBytes: null, timestampOffset: null, timeline: h3.timeline, duration: u6 && u6.duration || h3.duration, segment: h3, part: u6, byteLength: 0, transmuxer: this.transmuxer_, getMediaInfoForTime: l7, independent: t3 }, c5 = void 0 !== o4 ? o4 : this.isPendingTimestampOffset_;
    d2.timestampOffset = this.timestampOffsetForSegment_({ segmentTimeline: h3.timeline, currentTimeline: this.currentTimeline_, startOfSegment: n4, buffered: this.buffered_(), overrideCheck: c5 });
    const p5 = Nu(this.sourceUpdater_.audioBuffered());
    return "number" == typeof p5 && (d2.audioAppendStart = p5 - this.sourceUpdater_.audioTimestampOffset()), this.sourceUpdater_.videoBuffered().length && (d2.gopsToAlignWith = Cp(this.gopBuffer_, this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_)), d2;
  }
  timestampOffsetForSegment_(e10) {
    return Bp(e10);
  }
  earlyAbortWhenNeeded_(e10) {
    if (this.vhs_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) return;
    if (Date.now() - (e10.firstBytesReceivedAt || Date.now()) < 1e3) return;
    const t3 = this.currentTime_(), i5 = e10.bandwidth, s5 = this.pendingSegment_.duration, n4 = id.estimateSegmentRequestTime(s5, i5, this.playlist_, e10.bytesReceived), r5 = Pu(this.buffered_(), t3, this.vhs_.tech_.playbackRate()) - 1;
    if (n4 <= r5) return;
    const a9 = dp({ main: this.vhs_.playlists.main, currentTime: t3, bandwidth: i5, duration: this.duration_(), segmentDuration: s5, timeUntilRebuffer: r5, currentTimeline: this.currentTimeline_, syncController: this.syncController_ });
    if (!a9) return;
    const o4 = n4 - r5 - a9.rebufferingImpact;
    let l7 = 0.5;
    r5 <= Eu && (l7 = 1), !a9.playlist || a9.playlist.uri === this.playlist_.uri || o4 < l7 || (this.bandwidth = a9.playlist.attributes.BANDWIDTH * yc.BANDWIDTH_VARIANCE + 1, this.trigger("earlyabort"));
  }
  handleAbort_(e10) {
    this.logger_(`Aborting ${Mp(e10)}`), this.mediaRequestsAborted += 1;
  }
  handleProgress_(e10, t3) {
    this.earlyAbortWhenNeeded_(t3.stats), this.checkForAbort_(t3.requestId) || this.trigger("progress");
  }
  handleTrackInfo_(e10, t3) {
    const { hasAudio: i5, hasVideo: s5 } = t3, n4 = { segmentInfo: Wp({ type: this.loaderType_, segment: e10 }), trackInfo: { hasAudio: i5, hasVideo: s5 } };
    this.trigger({ type: "segmenttransmuxingtrackinfoavailable", metadata: n4 }), this.earlyAbortWhenNeeded_(e10.stats), this.checkForAbort_(e10.requestId) || this.checkForIllegalMediaSwitch(t3) || (t3 = t3 || {}, xp(this.currentMediaInfo_, t3) || (this.appendInitSegment_ = { audio: true, video: true }, this.startingMediaInfo_ = t3, this.currentMediaInfo_ = t3, this.logger_("trackinfo update", t3), this.trigger("trackinfo")), this.checkForAbort_(e10.requestId) || (this.pendingSegment_.trackInfo = t3, this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : $p(this)));
  }
  handleTimingInfo_(e10, t3, i5, s5) {
    if (this.earlyAbortWhenNeeded_(e10.stats), this.checkForAbort_(e10.requestId)) return;
    const n4 = this.pendingSegment_, r5 = Up(t3);
    n4[r5] = n4[r5] || {}, n4[r5][i5] = s5, this.logger_(`timinginfo: ${t3} - ${i5} - ${s5}`), this.hasEnoughInfoToAppend_() ? this.processCallQueue_() : $p(this);
  }
  handleCaptions_(e10, t3) {
    if (this.earlyAbortWhenNeeded_(e10.stats), this.checkForAbort_(e10.requestId)) return;
    if (0 === t3.length) return void this.logger_("SegmentLoader received no captions from a caption event");
    if (!this.pendingSegment_.hasAppendedData_) return void this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, e10, t3));
    const i5 = null === this.sourceUpdater_.videoTimestampOffset() ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(), s5 = {};
    t3.forEach((e11) => {
      s5[e11.stream] = s5[e11.stream] || { startTime: 1 / 0, captions: [], endTime: 0 };
      const t4 = s5[e11.stream];
      t4.startTime = Math.min(t4.startTime, e11.startTime + i5), t4.endTime = Math.max(t4.endTime, e11.endTime + i5), t4.captions.push(e11);
    }), Object.keys(s5).forEach((e11) => {
      const { startTime: t4, endTime: n4, captions: r5 } = s5[e11], a9 = this.inbandTextTracks_;
      this.logger_(`adding cues from ${t4} -> ${n4} for ${e11}`), gp(a9, this.vhs_.tech_, e11), Ep(t4, n4, a9[e11]), fp({ captionArray: r5, inbandTextTracks: a9, timestampOffset: i5 });
    }), this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearParsedMp4Captions" });
  }
  handleId3_(e10, t3, i5) {
    if (this.earlyAbortWhenNeeded_(e10.stats), this.checkForAbort_(e10.requestId)) return;
    this.pendingSegment_.hasAppendedData_ ? this.addMetadataToTextTrack(i5, t3, this.duration_()) : this.metadataQueue_.id3.push(this.handleId3_.bind(this, e10, t3, i5));
  }
  processMetadataQueue_() {
    this.metadataQueue_.id3.forEach((e10) => e10()), this.metadataQueue_.caption.forEach((e10) => e10()), this.metadataQueue_.id3 = [], this.metadataQueue_.caption = [];
  }
  processCallQueue_() {
    const e10 = this.callQueue_;
    this.callQueue_ = [], e10.forEach((e11) => e11());
  }
  processLoadQueue_() {
    const e10 = this.loadQueue_;
    this.loadQueue_ = [], e10.forEach((e11) => e11());
  }
  hasEnoughInfoToLoad_() {
    if ("audio" !== this.loaderType_) return true;
    const e10 = this.pendingSegment_;
    return !!e10 && (!this.getCurrentMediaInfo_() || !Fp({ timelineChangeController: this.timelineChangeController_, currentTimeline: this.currentTimeline_, segmentTimeline: e10.timeline, loaderType: this.loaderType_, audioDisabled: this.audioDisabled_ }));
  }
  getCurrentMediaInfo_(e10 = this.pendingSegment_) {
    return e10 && e10.trackInfo || this.currentMediaInfo_;
  }
  getMediaInfo_(e10 = this.pendingSegment_) {
    return this.getCurrentMediaInfo_(e10) || this.startingMediaInfo_;
  }
  getPendingSegmentPlaylist() {
    return this.pendingSegment_ ? this.pendingSegment_.playlist : null;
  }
  hasEnoughInfoToAppend_() {
    if (!this.sourceUpdater_.ready()) return false;
    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) return false;
    const e10 = this.pendingSegment_, t3 = this.getCurrentMediaInfo_();
    if (!e10 || !t3) return false;
    const { hasAudio: i5, hasVideo: s5, isMuxed: n4 } = t3;
    return !(s5 && !e10.videoTimingInfo) && (!(i5 && !this.audioDisabled_ && !n4 && !e10.audioTimingInfo) && !Fp({ timelineChangeController: this.timelineChangeController_, currentTimeline: this.currentTimeline_, segmentTimeline: e10.timeline, loaderType: this.loaderType_, audioDisabled: this.audioDisabled_ }));
  }
  handleData_(e10, t3) {
    if (this.earlyAbortWhenNeeded_(e10.stats), this.checkForAbort_(e10.requestId)) return;
    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) return $p(this), void this.callQueue_.push(this.handleData_.bind(this, e10, t3));
    const i5 = this.pendingSegment_;
    if (this.setTimeMapping_(i5.timeline), this.updateMediaSecondsLoaded_(i5.part || i5.segment), "closed" !== this.mediaSource_.readyState) {
      if (e10.map && (e10.map = this.initSegmentForMap(e10.map, true), i5.segment.map = e10.map), e10.key && this.segmentKey(e10.key, true), i5.isFmp4 = e10.isFmp4, i5.timingInfo = i5.timingInfo || {}, i5.isFmp4) this.trigger("fmp4"), i5.timingInfo.start = i5[Up(t3.type)].start;
      else {
        const e11 = this.getCurrentMediaInfo_(), t4 = "main" === this.loaderType_ && e11 && e11.hasVideo;
        let s5;
        t4 && (s5 = i5.videoTimingInfo.start), i5.timingInfo.start = this.trueSegmentStart_({ currentStart: i5.timingInfo.start, playlist: i5.playlist, mediaIndex: i5.mediaIndex, currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(), useVideoTimingInfo: t4, firstVideoFrameTimeForData: s5, videoTimingInfo: i5.videoTimingInfo, audioTimingInfo: i5.audioTimingInfo });
      }
      if (this.updateAppendInitSegmentStatus(i5, t3.type), this.updateSourceBufferTimestampOffset_(i5), i5.isSyncRequest) {
        this.updateTimingInfoEnd_(i5), this.syncController_.saveSegmentTimingInfo({ segmentInfo: i5, shouldSaveTimelineMapping: "main" === this.loaderType_ });
        const e11 = this.chooseNextRequest_();
        if (e11.mediaIndex !== i5.mediaIndex || e11.partIndex !== i5.partIndex) return void this.logger_("sync segment was incorrect, not appending");
        this.logger_("sync segment was correct, appending");
      }
      i5.hasAppendedData_ = true, this.processMetadataQueue_(), this.appendData_(i5, t3);
    }
  }
  updateAppendInitSegmentStatus(e10, t3) {
    "main" !== this.loaderType_ || "number" != typeof e10.timestampOffset || e10.changedTimestampOffset || (this.appendInitSegment_ = { audio: true, video: true }), this.playlistOfLastInitSegment_[t3] !== e10.playlist && (this.appendInitSegment_[t3] = true);
  }
  getInitSegmentAndUpdateState_({ type: e10, initSegment: t3, map: i5, playlist: s5 }) {
    if (i5) {
      const e11 = Vd(i5);
      if (this.activeInitSegmentId_ === e11) return null;
      t3 = this.initSegmentForMap(i5, true).bytes, this.activeInitSegmentId_ = e11;
    }
    return t3 && this.appendInitSegment_[e10] ? (this.playlistOfLastInitSegment_[e10] = s5, this.appendInitSegment_[e10] = false, this.activeInitSegmentId_ = null, t3) : null;
  }
  handleQuotaExceededError_({ segmentInfo: e10, type: t3, bytes: i5 }, s5) {
    const n4 = this.sourceUpdater_.audioBuffered(), r5 = this.sourceUpdater_.videoBuffered();
    n4.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: " + Lu(n4).join(", ")), r5.length > 1 && this.logger_("On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: " + Lu(r5).join(", "));
    const a9 = n4.length ? n4.start(0) : 0, o4 = n4.length ? n4.end(n4.length - 1) : 0, l7 = r5.length ? r5.start(0) : 0, h3 = r5.length ? r5.end(r5.length - 1) : 0;
    if (o4 - a9 <= Dp && h3 - l7 <= Dp) return this.logger_(`On QUOTA_EXCEEDED_ERR, single segment too large to append to buffer, triggering an error. Appended byte length: ${i5.byteLength}, audio buffer: ${Lu(n4).join(", ")}, video buffer: ${Lu(r5).join(", ")}, `), this.error({ message: "Quota exceeded error with append of a single segment of content", excludeUntil: 1 / 0 }), void this.trigger("error");
    this.waitingOnRemove_ = true, this.callQueue_.push(this.appendToSourceBuffer_.bind(this, { segmentInfo: e10, type: t3, bytes: i5 }));
    const u6 = this.currentTime_() - Dp;
    this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${u6}`), this.remove(0, u6, () => {
      this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${Dp}s`), this.waitingOnRemove_ = false, this.quotaExceededErrorRetryTimeout_ = b3.setTimeout(() => {
        this.logger_("On QUOTA_EXCEEDED_ERR, re-processing call queue"), this.quotaExceededErrorRetryTimeout_ = null, this.processCallQueue_();
      }, 1e3 * Dp);
    }, true);
  }
  handleAppendError_({ segmentInfo: e10, type: t3, bytes: i5 }, s5) {
    s5 && (s5.code !== md ? (this.logger_("Received non QUOTA_EXCEEDED_ERR on append", s5), this.error({ message: `${t3} append of ${i5.length}b failed for segment #${e10.mediaIndex} in playlist ${e10.playlist.id}`, metadata: { errorType: du.Error.StreamingFailedToAppendSegment } }), this.trigger("appenderror")) : this.handleQuotaExceededError_({ segmentInfo: e10, type: t3, bytes: i5 }));
  }
  appendToSourceBuffer_({ segmentInfo: e10, type: t3, initSegment: i5, data: s5, bytes: n4 }) {
    if (!n4) {
      const e11 = [s5];
      let t4 = s5.byteLength;
      i5 && (e11.unshift(i5), t4 += i5.byteLength), n4 = pp({ bytes: t4, segments: e11 });
    }
    const r5 = { segmentInfo: Wp({ type: this.loaderType_, segment: e10 }) };
    this.trigger({ type: "segmentappendstart", metadata: r5 }), this.sourceUpdater_.appendBuffer({ segmentInfo: e10, type: t3, bytes: n4 }, this.handleAppendError_.bind(this, { segmentInfo: e10, type: t3, bytes: n4 }));
  }
  handleSegmentTimingInfo_(e10, t3, i5) {
    if (!this.pendingSegment_ || t3 !== this.pendingSegment_.requestId) return;
    const s5 = this.pendingSegment_.segment, n4 = `${e10}TimingInfo`;
    s5[n4] || (s5[n4] = {}), s5[n4].transmuxerPrependedSeconds = i5.prependedContentDuration || 0, s5[n4].transmuxedPresentationStart = i5.start.presentation, s5[n4].transmuxedDecodeStart = i5.start.decode, s5[n4].transmuxedPresentationEnd = i5.end.presentation, s5[n4].transmuxedDecodeEnd = i5.end.decode, s5[n4].baseMediaDecodeTime = i5.baseMediaDecodeTime;
  }
  appendData_(e10, t3) {
    const { type: i5, data: s5 } = t3;
    if (!s5 || !s5.byteLength) return;
    if ("audio" === i5 && this.audioDisabled_) return;
    const n4 = this.getInitSegmentAndUpdateState_({ type: i5, initSegment: t3.initSegment, playlist: e10.playlist, map: e10.isFmp4 ? e10.segment.map : null });
    this.appendToSourceBuffer_({ segmentInfo: e10, type: i5, initSegment: n4, data: s5 });
  }
  loadSegment_(e10) {
    if (this.state = "WAITING", this.pendingSegment_ = e10, this.trimBackBuffer_(e10), "number" == typeof e10.timestampOffset && this.transmuxer_ && this.transmuxer_.postMessage({ action: "clearAllMp4Captions" }), !this.hasEnoughInfoToLoad_()) return $p(this), void this.loadQueue_.push(() => {
      const t3 = Fe({}, e10, { forceTimestampOffset: true });
      Fe(e10, this.generateSegmentInfo_(t3)), this.isPendingTimestampOffset_ = false, this.updateTransmuxerAndRequestSegment_(e10);
    });
    this.updateTransmuxerAndRequestSegment_(e10);
  }
  updateTransmuxerAndRequestSegment_(e10) {
    this.shouldUpdateTransmuxerTimestampOffset_(e10.timestampOffset) && (this.gopBuffer_.length = 0, e10.gopsToAlignWith = [], this.timeMapping_ = 0, this.transmuxer_.postMessage({ action: "reset" }), this.transmuxer_.postMessage({ action: "setTimestampOffset", timestampOffset: e10.timestampOffset }));
    const t3 = this.createSimplifiedSegmentObj_(e10), i5 = this.isEndOfStream_(e10.mediaIndex, e10.playlist, e10.partIndex), s5 = null !== this.mediaIndex, n4 = e10.timeline !== this.currentTimeline_ && e10.timeline > 0, r5 = i5 || s5 && n4;
    this.logger_(`Requesting
${mp(e10.uri)}
${Mp(e10)}`), t3.map && !t3.map.bytes && (this.logger_("going to request init segment."), this.appendInitSegment_ = { video: true, audio: true }), e10.abortRequests = tp({ xhr: this.vhs_.xhr, xhrOptions: this.xhrOptions_, decryptionWorker: this.decrypter_, segment: t3, abortFn: this.handleAbort_.bind(this, e10), progressFn: this.handleProgress_.bind(this), trackInfoFn: this.handleTrackInfo_.bind(this), timingInfoFn: this.handleTimingInfo_.bind(this), videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "video", e10.requestId), audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, "audio", e10.requestId), captionsFn: this.handleCaptions_.bind(this), isEndOfTimeline: r5, endedTimelineFn: () => {
      this.logger_("received endedtimeline callback");
    }, id3Fn: this.handleId3_.bind(this), dataFn: this.handleData_.bind(this), doneFn: this.segmentRequestFinished_.bind(this), onTransmuxerLog: ({ message: t4, level: i6, stream: s6 }) => {
      this.logger_(`${Mp(e10)} logged from transmuxer stream ${s6} as a ${i6}: ${t4}`);
    }, triggerSegmentEventFn: ({ type: e11, segment: t4, keyInfo: i6, trackInfo: s6, timingInfo: n5 }) => {
      const r6 = { segmentInfo: Wp({ segment: t4 }) };
      i6 && (r6.keyInfo = i6), s6 && (r6.trackInfo = s6), n5 && (r6.timingInfo = n5), this.trigger({ type: e11, metadata: r6 });
    } });
  }
  trimBackBuffer_(e10) {
    const t3 = Rp(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
    t3 > 0 && this.remove(0, t3);
  }
  createSimplifiedSegmentObj_(e10) {
    const t3 = e10.segment, i5 = e10.part, s5 = e10.segment.key || e10.segment.map && e10.segment.map.key, n4 = e10.segment.map && !e10.segment.map.bytes, r5 = { resolvedUri: i5 ? i5.resolvedUri : t3.resolvedUri, byterange: i5 ? i5.byterange : t3.byterange, requestId: e10.requestId, transmuxer: e10.transmuxer, audioAppendStart: e10.audioAppendStart, gopsToAlignWith: e10.gopsToAlignWith, part: e10.part, type: this.loaderType_, start: e10.startOfSegment, duration: e10.duration, isEncrypted: s5, isMediaInitialization: n4 }, a9 = e10.playlist.segments[e10.mediaIndex - 1];
    if (a9 && a9.timeline === t3.timeline && (a9.videoTimingInfo ? r5.baseStartTime = a9.videoTimingInfo.transmuxedDecodeEnd : a9.audioTimingInfo && (r5.baseStartTime = a9.audioTimingInfo.transmuxedDecodeEnd)), t3.key) {
      const i6 = t3.key.iv || new Uint32Array([0, 0, 0, e10.mediaIndex + e10.playlist.mediaSequence]);
      r5.key = this.segmentKey(t3.key), r5.key.iv = i6;
    }
    return t3.map && (r5.map = this.initSegmentForMap(t3.map)), r5;
  }
  saveTransferStats_(e10) {
    this.mediaRequests += 1, e10 && (this.mediaBytesTransferred += e10.bytesReceived, this.mediaTransferDuration += e10.roundTripTime);
  }
  saveBandwidthRelatedStats_(e10, t3) {
    if (this.pendingSegment_.byteLength = t3.bytesReceived, e10 < Op) return void this.logger_(`Ignoring segment's bandwidth because its duration of ${e10} is less than the min to record ${Op}`);
    const i5 = { bandwidthInfo: { from: this.bandwidth, to: t3.bandwidth } };
    this.trigger({ type: "bandwidthupdated", metadata: i5 }), this.bandwidth = t3.bandwidth, this.roundTrip = t3.roundTripTime;
  }
  handleTimeout_() {
    this.mediaRequestsTimedout += 1, this.bandwidth = 1, this.roundTrip = NaN, this.trigger("bandwidthupdate"), this.trigger("timeout");
  }
  segmentRequestFinished_(e10, t3, i5) {
    if (this.callQueue_.length) return void this.callQueue_.push(this.segmentRequestFinished_.bind(this, e10, t3, i5));
    if (this.saveTransferStats_(t3.stats), !this.pendingSegment_) return;
    if (t3.requestId !== this.pendingSegment_.requestId) return;
    if (e10) {
      if (this.pendingSegment_ = null, this.state = "READY", e10.code === Mc.ABORTED) return;
      return this.pause(), e10.code === Mc.TIMEOUT ? void this.handleTimeout_() : (this.mediaRequestsErrored += 1, this.error(e10), void this.trigger("error"));
    }
    const s5 = this.pendingSegment_;
    this.saveBandwidthRelatedStats_(s5.duration, t3.stats), s5.endOfAllRequests = t3.endOfAllRequests, i5.gopInfo && (this.gopBuffer_ = kp(this.gopBuffer_, i5.gopInfo, this.safeAppend_)), this.state = "APPENDING", this.trigger("appending"), this.waitForAppendsToComplete_(s5);
  }
  setTimeMapping_(e10) {
    const t3 = this.syncController_.mappingForTimeline(e10);
    null !== t3 && (this.timeMapping_ = t3);
  }
  updateMediaSecondsLoaded_(e10) {
    "number" == typeof e10.start && "number" == typeof e10.end ? this.mediaSecondsLoaded += e10.end - e10.start : this.mediaSecondsLoaded += e10.duration;
  }
  shouldUpdateTransmuxerTimestampOffset_(e10) {
    return null !== e10 && ("main" === this.loaderType_ && e10 !== this.sourceUpdater_.videoTimestampOffset() || !this.audioDisabled_ && e10 !== this.sourceUpdater_.audioTimestampOffset());
  }
  trueSegmentStart_({ currentStart: e10, playlist: t3, mediaIndex: i5, firstVideoFrameTimeForData: s5, currentVideoTimestampOffset: n4, useVideoTimingInfo: r5, videoTimingInfo: a9, audioTimingInfo: o4 }) {
    if (void 0 !== e10) return e10;
    if (!r5) return o4.start;
    const l7 = t3.segments[i5 - 1];
    return 0 !== i5 && l7 && void 0 !== l7.start && l7.end === s5 + n4 ? a9.start : s5;
  }
  waitForAppendsToComplete_(e10) {
    const t3 = this.getCurrentMediaInfo_(e10);
    if (!t3) return this.error({ message: "No starting media returned, likely due to an unsupported media format.", playlistExclusionDuration: 1 / 0 }), void this.trigger("error");
    const { hasAudio: i5, hasVideo: s5, isMuxed: n4 } = t3, r5 = "main" === this.loaderType_ && s5, a9 = !this.audioDisabled_ && i5 && !n4;
    if (e10.waitingOnAppends = 0, !e10.hasAppendedData_) return e10.timingInfo || "number" != typeof e10.timestampOffset || (this.isPendingTimestampOffset_ = true), e10.timingInfo = { start: 0 }, e10.waitingOnAppends++, this.isPendingTimestampOffset_ || (this.updateSourceBufferTimestampOffset_(e10), this.processMetadataQueue_()), void this.checkAppendsDone_(e10);
    r5 && e10.waitingOnAppends++, a9 && e10.waitingOnAppends++, r5 && this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, e10)), a9 && this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, e10));
  }
  checkAppendsDone_(e10) {
    this.checkForAbort_(e10.requestId) || (e10.waitingOnAppends--, 0 === e10.waitingOnAppends && this.handleAppendsDone_());
  }
  checkForIllegalMediaSwitch(e10) {
    const t3 = Np(this.loaderType_, this.getCurrentMediaInfo_(), e10);
    return !!t3 && (this.error({ message: t3, playlistExclusionDuration: 1 / 0 }), this.trigger("error"), true);
  }
  updateSourceBufferTimestampOffset_(e10) {
    if (null === e10.timestampOffset || "number" != typeof e10.timingInfo.start || e10.changedTimestampOffset || "main" !== this.loaderType_) return;
    let t3 = false;
    e10.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({ videoTimingInfo: e10.segment.videoTimingInfo, audioTimingInfo: e10.segment.audioTimingInfo, timingInfo: e10.timingInfo }), e10.changedTimestampOffset = true, e10.timestampOffset !== this.sourceUpdater_.videoTimestampOffset() && (this.sourceUpdater_.videoTimestampOffset(e10.timestampOffset), t3 = true), e10.timestampOffset !== this.sourceUpdater_.audioTimestampOffset() && (this.sourceUpdater_.audioTimestampOffset(e10.timestampOffset), t3 = true), t3 && this.trigger("timestampoffset");
  }
  getSegmentStartTimeForTimestampOffsetCalculation_({ videoTimingInfo: e10, audioTimingInfo: t3, timingInfo: i5 }) {
    return this.useDtsForTimestampOffset_ ? e10 && "number" == typeof e10.transmuxedDecodeStart ? e10.transmuxedDecodeStart : t3 && "number" == typeof t3.transmuxedDecodeStart ? t3.transmuxedDecodeStart : i5.start : i5.start;
  }
  updateTimingInfoEnd_(e10) {
    e10.timingInfo = e10.timingInfo || {};
    const t3 = this.getMediaInfo_(), i5 = "main" === this.loaderType_ && t3 && t3.hasVideo && e10.videoTimingInfo ? e10.videoTimingInfo : e10.audioTimingInfo;
    i5 && (e10.timingInfo.end = "number" == typeof i5.end ? i5.end : i5.start + e10.duration);
  }
  handleAppendsDone_() {
    if (this.pendingSegment_) {
      const e11 = { segmentInfo: Wp({ type: this.loaderType_, segment: this.pendingSegment_ }) };
      this.trigger({ type: "appendsdone", metadata: e11 });
    }
    if (!this.pendingSegment_) return this.state = "READY", void (this.paused() || this.monitorBuffer_());
    const e10 = this.pendingSegment_;
    e10.part && e10.part.syncInfo ? e10.part.syncInfo.markAppended() : e10.segment.syncInfo && e10.segment.syncInfo.markAppended(), this.updateTimingInfoEnd_(e10), this.shouldSaveSegmentTimingInfo_ && this.syncController_.saveSegmentTimingInfo({ segmentInfo: e10, shouldSaveTimelineMapping: "main" === this.loaderType_ });
    const t3 = zp(e10, this.sourceType_);
    if (t3 && ("warn" === t3.severity ? du.log.warn(t3.message) : this.logger_(t3.message)), this.recordThroughput_(e10), this.pendingSegment_ = null, this.state = "READY", e10.isSyncRequest && (this.trigger("syncinfoupdate"), !e10.hasAppendedData_)) return void this.logger_(`Throwing away un-appended sync request ${Mp(e10)}`);
    this.logger_(`Appended ${Mp(e10)}`), this.addSegmentMetadataCue_(e10), this.fetchAtBuffer_ = true, this.currentTimeline_ !== e10.timeline && (this.timelineChangeController_.lastTimelineChange({ type: this.loaderType_, from: this.currentTimeline_, to: e10.timeline }), "main" !== this.loaderType_ || this.audioDisabled_ || this.timelineChangeController_.lastTimelineChange({ type: "audio", from: this.currentTimeline_, to: e10.timeline })), this.currentTimeline_ = e10.timeline, this.trigger("syncinfoupdate");
    const i5 = e10.segment, s5 = e10.part, n4 = i5.end && this.currentTime_() - i5.end > 3 * e10.playlist.targetDuration, r5 = s5 && s5.end && this.currentTime_() - s5.end > 3 * e10.playlist.partTargetDuration;
    if (n4 || r5) return this.logger_(`bad ${n4 ? "segment" : "part"} ${Mp(e10)}`), void this.resetEverything();
    null !== this.mediaIndex && this.trigger("bandwidthupdate"), this.trigger("progress"), this.mediaIndex = e10.mediaIndex, this.partIndex = e10.partIndex, this.isEndOfStream_(e10.mediaIndex, e10.playlist, e10.partIndex) && this.endOfStream(), this.trigger("appended"), e10.hasAppendedData_ && this.mediaAppends++, this.paused() || this.monitorBuffer_();
  }
  recordThroughput_(e10) {
    if (e10.duration < Op) return void this.logger_(`Ignoring segment's throughput because its duration of ${e10.duration} is less than the min to record ${Op}`);
    const t3 = this.throughput.rate, i5 = Date.now() - e10.endOfAllRequests + 1, s5 = Math.floor(e10.byteLength / i5 * 8 * 1e3);
    this.throughput.rate += (s5 - t3) / ++this.throughput.count;
  }
  addSegmentMetadataCue_(e10) {
    if (!this.segmentMetadataTrack_) return;
    const t3 = e10.segment, i5 = t3.start, s5 = t3.end;
    if (!Lp(i5) || !Lp(s5)) return;
    Ep(i5, s5, this.segmentMetadataTrack_);
    const n4 = b3.WebKitDataCue || b3.VTTCue, r5 = { custom: t3.custom, dateTimeObject: t3.dateTimeObject, dateTimeString: t3.dateTimeString, programDateTime: t3.programDateTime, bandwidth: e10.playlist.attributes.BANDWIDTH, resolution: e10.playlist.attributes.RESOLUTION, codecs: e10.playlist.attributes.CODECS, byteLength: e10.byteLength, uri: e10.uri, timeline: e10.timeline, playlist: e10.playlist.id, start: i5, end: s5 }, a9 = new n4(i5, s5, JSON.stringify(r5));
    a9.value = r5, this.segmentMetadataTrack_.addCue(a9);
  }
};
function Xp() {
}
var Kp = function(e10) {
  return "string" != typeof e10 ? e10 : e10.replace(/./, (e11) => e11.toUpperCase());
};
var Yp = ["video", "audio"];
var Qp = (e10, t3) => {
  const i5 = t3[`${e10}Buffer`];
  return i5 && i5.updating || t3.queuePending[e10];
};
var Jp = (e10, t3) => {
  for (let i5 = 0; i5 < t3.length; i5++) {
    const s5 = t3[i5];
    if ("mediaSource" === s5.type) return null;
    if (s5.type === e10) return i5;
  }
  return null;
};
var Zp = (e10, t3) => {
  if (0 === t3.queue.length) return;
  let i5 = 0, s5 = t3.queue[i5];
  if ("mediaSource" !== s5.type) {
    if ("mediaSource" !== e10 && t3.ready() && "closed" !== t3.mediaSource.readyState && !Qp(e10, t3)) {
      if (s5.type !== e10) {
        if (i5 = Jp(e10, t3.queue), null === i5) return;
        s5 = t3.queue[i5];
      }
      return t3.queue.splice(i5, 1), t3.queuePending[e10] = s5, s5.action(e10, t3), s5.doneFn ? void 0 : (t3.queuePending[e10] = null, void Zp(e10, t3));
    }
  } else t3.updating() || "closed" === t3.mediaSource.readyState || (t3.queue.shift(), s5.action(t3), s5.doneFn && s5.doneFn(), Zp("audio", t3), Zp("video", t3));
};
var em = (e10, t3) => {
  const i5 = t3[`${e10}Buffer`], s5 = Kp(e10);
  i5 && (i5.removeEventListener("updateend", t3[`on${s5}UpdateEnd_`]), i5.removeEventListener("error", t3[`on${s5}Error_`]), t3.codecs[e10] = null, t3[`${e10}Buffer`] = null);
};
var tm = (e10, t3) => e10 && t3 && -1 !== Array.prototype.indexOf.call(e10.sourceBuffers, t3);
var im = { appendBuffer: (e10, t3, i5) => (s5, n4) => {
  const r5 = n4[`${s5}Buffer`];
  if (tm(n4.mediaSource, r5)) {
    n4.logger_(`Appending segment ${t3.mediaIndex}'s ${e10.length} bytes to ${s5}Buffer`);
    try {
      r5.appendBuffer(e10);
    } catch (a9) {
      n4.logger_(`Error with code ${a9.code} ` + (a9.code === md ? "(QUOTA_EXCEEDED_ERR) " : "") + `when appending segment ${t3.mediaIndex} to ${s5}Buffer`), n4.queuePending[s5] = null, i5(a9);
    }
  }
}, remove: (e10, t3) => (i5, s5) => {
  const n4 = s5[`${i5}Buffer`];
  if (tm(s5.mediaSource, n4)) {
    s5.logger_(`Removing ${e10} to ${t3} from ${i5}Buffer`);
    try {
      n4.remove(e10, t3);
    } catch (r5) {
      s5.logger_(`Remove ${e10} to ${t3} from ${i5}Buffer failed`);
    }
  }
}, timestampOffset: (e10) => (t3, i5) => {
  const s5 = i5[`${t3}Buffer`];
  tm(i5.mediaSource, s5) && (i5.logger_(`Setting ${t3}timestampOffset to ${e10}`), s5.timestampOffset = e10);
}, callback: (e10) => (t3, i5) => {
  e10();
}, endOfStream: (e10) => (t3) => {
  if ("open" === t3.mediaSource.readyState) {
    t3.logger_(`Calling mediaSource endOfStream(${e10 || ""})`);
    try {
      t3.mediaSource.endOfStream(e10);
    } catch (i5) {
      du.log.warn("Failed to call media source endOfStream", i5);
    }
  }
}, duration: (e10) => (t3) => {
  t3.logger_(`Setting mediaSource duration to ${e10}`);
  try {
    t3.mediaSource.duration = e10;
  } catch (i5) {
    du.log.warn("Failed to set media source duration", i5);
  }
}, abort: () => (e10, t3) => {
  if ("open" !== t3.mediaSource.readyState) return;
  const i5 = t3[`${e10}Buffer`];
  if (tm(t3.mediaSource, i5)) {
    t3.logger_(`calling abort on ${e10}Buffer`);
    try {
      i5.abort();
    } catch (s5) {
      du.log.warn(`Failed to abort on ${e10}Buffer`, s5);
    }
  }
}, addSourceBuffer: (e10, t3) => (i5) => {
  const s5 = Kp(e10), n4 = ct(t3);
  i5.logger_(`Adding ${e10}Buffer with codec ${t3} to mediaSource`);
  const r5 = i5.mediaSource.addSourceBuffer(n4);
  r5.addEventListener("updateend", i5[`on${s5}UpdateEnd_`]), r5.addEventListener("error", i5[`on${s5}Error_`]), i5.codecs[e10] = t3, i5[`${e10}Buffer`] = r5;
}, removeSourceBuffer: (e10) => (t3) => {
  const i5 = t3[`${e10}Buffer`];
  if (em(e10, t3), tm(t3.mediaSource, i5)) {
    t3.logger_(`Removing ${e10}Buffer with codec ${t3.codecs[e10]} from mediaSource`);
    try {
      t3.mediaSource.removeSourceBuffer(i5);
    } catch (s5) {
      du.log.warn(`Failed to removeSourceBuffer ${e10}Buffer`, s5);
    }
  }
}, changeType: (e10) => (t3, i5) => {
  const s5 = i5[`${t3}Buffer`], n4 = ct(e10);
  if (!tm(i5.mediaSource, s5)) return;
  const r5 = e10.substring(0, e10.indexOf(".")), a9 = i5.codecs[t3];
  if (a9.substring(0, a9.indexOf(".")) === r5) return;
  const o4 = { codecsChangeInfo: { from: a9, to: e10 } };
  i5.trigger({ type: "codecschange", metadata: o4 }), i5.logger_(`changing ${t3}Buffer codec from ${a9} to ${e10}`);
  try {
    s5.changeType(n4), i5.codecs[t3] = e10;
  } catch (l7) {
    o4.errorType = du.Error.StreamingCodecsChangeError, o4.error = l7, l7.metadata = o4, i5.error_ = l7, i5.trigger("error"), du.log.warn(`Failed to changeType on ${t3}Buffer`, l7);
  }
} };
var sm = ({ type: e10, sourceUpdater: t3, action: i5, doneFn: s5, name: n4 }) => {
  t3.queue.push({ type: e10, action: i5, doneFn: s5, name: n4 }), Zp(e10, t3);
};
var nm = (e10, t3) => (i5) => {
  const s5 = Su(t3[`${e10}Buffered`]());
  if (t3.logger_(`received "updateend" event for ${e10} Source Buffer: `, s5), t3.queuePending[e10]) {
    const i6 = t3.queuePending[e10].doneFn;
    t3.queuePending[e10] = null, i6 && i6(t3[`${e10}Error_`]);
  }
  Zp(e10, t3);
};
var rm = class extends du.EventTarget {
  constructor(e10) {
    super(), this.mediaSource = e10, this.sourceopenListener_ = () => Zp("mediaSource", this), this.mediaSource.addEventListener("sourceopen", this.sourceopenListener_), this.logger_ = vu("SourceUpdater"), this.audioTimestampOffset_ = 0, this.videoTimestampOffset_ = 0, this.queue = [], this.queuePending = { audio: null, video: null }, this.delayedAudioAppendQueue_ = [], this.videoAppendQueued_ = false, this.codecs = {}, this.onVideoUpdateEnd_ = nm("video", this), this.onAudioUpdateEnd_ = nm("audio", this), this.onVideoError_ = (e11) => {
      this.videoError_ = e11;
    }, this.onAudioError_ = (e11) => {
      this.audioError_ = e11;
    }, this.createdSourceBuffers_ = false, this.initializedEme_ = false, this.triggeredReady_ = false;
  }
  initializedEme() {
    this.initializedEme_ = true, this.triggerReady();
  }
  hasCreatedSourceBuffers() {
    return this.createdSourceBuffers_;
  }
  hasInitializedAnyEme() {
    return this.initializedEme_;
  }
  ready() {
    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();
  }
  createSourceBuffers(e10) {
    this.hasCreatedSourceBuffers() || (this.addOrChangeSourceBuffers(e10), this.createdSourceBuffers_ = true, this.trigger("createdsourcebuffers"), this.triggerReady());
  }
  triggerReady() {
    this.ready() && !this.triggeredReady_ && (this.triggeredReady_ = true, this.trigger("ready"));
  }
  addSourceBuffer(e10, t3) {
    sm({ type: "mediaSource", sourceUpdater: this, action: im.addSourceBuffer(e10, t3), name: "addSourceBuffer" });
  }
  abort(e10) {
    sm({ type: e10, sourceUpdater: this, action: im.abort(e10), name: "abort" });
  }
  removeSourceBuffer(e10) {
    this.canRemoveSourceBuffer() ? sm({ type: "mediaSource", sourceUpdater: this, action: im.removeSourceBuffer(e10), name: "removeSourceBuffer" }) : du.log.error("removeSourceBuffer is not supported!");
  }
  canRemoveSourceBuffer() {
    return !du.browser.IS_FIREFOX && b3.MediaSource && b3.MediaSource.prototype && "function" == typeof b3.MediaSource.prototype.removeSourceBuffer;
  }
  static canChangeType() {
    return b3.SourceBuffer && b3.SourceBuffer.prototype && "function" == typeof b3.SourceBuffer.prototype.changeType;
  }
  canChangeType() {
    return this.constructor.canChangeType();
  }
  changeType(e10, t3) {
    this.canChangeType() ? sm({ type: e10, sourceUpdater: this, action: im.changeType(t3), name: "changeType" }) : du.log.error("changeType is not supported!");
  }
  addOrChangeSourceBuffers(e10) {
    if (!e10 || "object" != typeof e10 || 0 === Object.keys(e10).length) throw new Error("Cannot addOrChangeSourceBuffers to undefined codecs");
    Object.keys(e10).forEach((t3) => {
      const i5 = e10[t3];
      if (!this.hasCreatedSourceBuffers()) return this.addSourceBuffer(t3, i5);
      this.canChangeType() && this.changeType(t3, i5);
    });
  }
  appendBuffer(e10, t3) {
    const { segmentInfo: i5, type: s5, bytes: n4 } = e10;
    if (this.processedAppend_ = true, "audio" === s5 && this.videoBuffer && !this.videoAppendQueued_) return this.delayedAudioAppendQueue_.push([e10, t3]), void this.logger_(`delayed audio append of ${n4.length} until video append`);
    const r5 = t3;
    if (sm({ type: s5, sourceUpdater: this, action: im.appendBuffer(n4, i5 || { mediaIndex: -1 }, r5), doneFn: t3, name: "appendBuffer" }), "video" === s5) {
      if (this.videoAppendQueued_ = true, !this.delayedAudioAppendQueue_.length) return;
      const e11 = this.delayedAudioAppendQueue_.slice();
      this.logger_(`queuing delayed audio ${e11.length} appendBuffers`), this.delayedAudioAppendQueue_.length = 0, e11.forEach((e12) => {
        this.appendBuffer.apply(this, e12);
      });
    }
  }
  audioBuffered() {
    return tm(this.mediaSource, this.audioBuffer) && this.audioBuffer.buffered ? this.audioBuffer.buffered : Tu();
  }
  videoBuffered() {
    return tm(this.mediaSource, this.videoBuffer) && this.videoBuffer.buffered ? this.videoBuffer.buffered : Tu();
  }
  buffered() {
    const e10 = tm(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null, t3 = tm(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;
    return t3 && !e10 ? this.audioBuffered() : e10 && !t3 ? this.videoBuffered() : Au(this.audioBuffered(), this.videoBuffered());
  }
  setDuration(e10, t3 = Xp) {
    sm({ type: "mediaSource", sourceUpdater: this, action: im.duration(e10), name: "duration", doneFn: t3 });
  }
  endOfStream(e10 = null, t3 = Xp) {
    "string" != typeof e10 && (e10 = void 0), sm({ type: "mediaSource", sourceUpdater: this, action: im.endOfStream(e10), name: "endOfStream", doneFn: t3 });
  }
  removeAudio(e10, t3, i5 = Xp) {
    this.audioBuffered().length && 0 !== this.audioBuffered().end(0) ? sm({ type: "audio", sourceUpdater: this, action: im.remove(e10, t3), doneFn: i5, name: "remove" }) : i5();
  }
  removeVideo(e10, t3, i5 = Xp) {
    this.videoBuffered().length && 0 !== this.videoBuffered().end(0) ? sm({ type: "video", sourceUpdater: this, action: im.remove(e10, t3), doneFn: i5, name: "remove" }) : i5();
  }
  updating() {
    return !(!Qp("audio", this) && !Qp("video", this));
  }
  audioTimestampOffset(e10) {
    return void 0 !== e10 && this.audioBuffer && this.audioTimestampOffset_ !== e10 && (sm({ type: "audio", sourceUpdater: this, action: im.timestampOffset(e10), name: "timestampOffset" }), this.audioTimestampOffset_ = e10), this.audioTimestampOffset_;
  }
  videoTimestampOffset(e10) {
    return void 0 !== e10 && this.videoBuffer && this.videoTimestampOffset_ !== e10 && (sm({ type: "video", sourceUpdater: this, action: im.timestampOffset(e10), name: "timestampOffset" }), this.videoTimestampOffset_ = e10), this.videoTimestampOffset_;
  }
  audioQueueCallback(e10) {
    this.audioBuffer && sm({ type: "audio", sourceUpdater: this, action: im.callback(e10), name: "callback" });
  }
  videoQueueCallback(e10) {
    this.videoBuffer && sm({ type: "video", sourceUpdater: this, action: im.callback(e10), name: "callback" });
  }
  dispose() {
    this.trigger("dispose"), Yp.forEach((e10) => {
      this.abort(e10), this.canRemoveSourceBuffer() ? this.removeSourceBuffer(e10) : this[`${e10}QueueCallback`](() => em(e10, this));
    }), this.videoAppendQueued_ = false, this.delayedAudioAppendQueue_.length = 0, this.sourceopenListener_ && this.mediaSource.removeEventListener("sourceopen", this.sourceopenListener_), this.off();
  }
};
var am = (e10) => decodeURIComponent(escape(String.fromCharCode.apply(null, e10)));
var om = (e10) => {
  const t3 = new Uint8Array(e10);
  return Array.from(t3).map((e11) => e11.toString(16).padStart(2, "0")).join("");
};
var lm = new Uint8Array("\n\n".split("").map((e10) => e10.charCodeAt(0)));
var hm = class extends Error {
  constructor() {
    super("Trying to parse received VTT cues, but there is no WebVTT. Make sure vtt.js is loaded.");
  }
};
var um = class extends Gp {
  constructor(e10, t3 = {}) {
    super(e10, t3), this.mediaSource_ = null, this.subtitlesTrack_ = null, this.featuresNativeTextTracks_ = e10.featuresNativeTextTracks, this.loadVttJs = e10.loadVttJs, this.shouldSaveSegmentTimingInfo_ = false;
  }
  buffered_() {
    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) return Tu();
    const e10 = this.subtitlesTrack_.cues;
    return Tu([[e10[0].startTime, e10[e10.length - 1].startTime]]);
  }
  initSegmentForMap(e10, t3 = false) {
    if (!e10) return null;
    const i5 = Vd(e10);
    let s5 = this.initSegments_[i5];
    if (t3 && !s5 && e10.bytes) {
      const t4 = lm.byteLength + e10.bytes.byteLength, n4 = new Uint8Array(t4);
      n4.set(e10.bytes), n4.set(lm, e10.bytes.byteLength), this.initSegments_[i5] = s5 = { resolvedUri: e10.resolvedUri, byterange: e10.byterange, bytes: n4 };
    }
    return s5 || e10;
  }
  couldBeginLoading_() {
    return this.playlist_ && this.subtitlesTrack_ && !this.paused();
  }
  init_() {
    return this.state = "READY", this.resetEverything(), this.monitorBuffer_();
  }
  track(e10) {
    return void 0 === e10 || (this.subtitlesTrack_ = e10, "INIT" === this.state && this.couldBeginLoading_() && this.init_()), this.subtitlesTrack_;
  }
  remove(e10, t3) {
    Ep(e10, t3, this.subtitlesTrack_);
  }
  fillBuffer_() {
    const e10 = this.chooseNextRequest_();
    if (e10) {
      if (null === this.syncController_.timestampOffsetForTimeline(e10.timeline)) {
        const e11 = () => {
          this.state = "READY", this.paused() || this.monitorBuffer_();
        };
        return this.syncController_.one("timestampoffset", e11), void (this.state = "WAITING_ON_TIMELINE");
      }
      this.loadSegment_(e10);
    }
  }
  timestampOffsetForSegment_() {
    return null;
  }
  chooseNextRequest_() {
    return this.skipEmptySegments_(super.chooseNextRequest_());
  }
  skipEmptySegments_(e10) {
    for (; e10 && e10.segment.empty; ) {
      if (e10.mediaIndex + 1 >= e10.playlist.segments.length) {
        e10 = null;
        break;
      }
      e10 = this.generateSegmentInfo_({ playlist: e10.playlist, mediaIndex: e10.mediaIndex + 1, startOfSegment: e10.startOfSegment + e10.duration, isSyncRequest: e10.isSyncRequest });
    }
    return e10;
  }
  stopForError(e10) {
    this.error(e10), this.state = "READY", this.pause(), this.trigger("error");
  }
  segmentRequestFinished_(e10, t3, i5) {
    if (!this.subtitlesTrack_) return void (this.state = "READY");
    if (this.saveTransferStats_(t3.stats), !this.pendingSegment_) return this.state = "READY", void (this.mediaRequestsAborted += 1);
    if (e10) return e10.code === Mc.TIMEOUT && this.handleTimeout_(), e10.code === Mc.ABORTED ? this.mediaRequestsAborted += 1 : this.mediaRequestsErrored += 1, void this.stopForError(e10);
    const s5 = this.pendingSegment_, n4 = i5.mp4VttCues && i5.mp4VttCues.length;
    n4 && (s5.mp4VttCues = i5.mp4VttCues), this.saveBandwidthRelatedStats_(s5.duration, t3.stats), t3.key && this.segmentKey(t3.key, true), this.state = "APPENDING", this.trigger("appending");
    const r5 = s5.segment;
    if (r5.map && (r5.map.bytes = t3.map.bytes), s5.bytes = t3.bytes, "function" != typeof b3.WebVTT && "function" == typeof this.loadVttJs) return this.state = "WAITING_ON_VTTJS", void this.loadVttJs().then(() => this.segmentRequestFinished_(e10, t3, i5), () => this.stopForError({ message: "Error loading vtt.js" }));
    r5.requested = true;
    try {
      this.parseVTTCues_(s5);
    } catch (a9) {
      return void this.stopForError({ message: a9.message, metadata: { errorType: du.Error.StreamingVttParserError, error: a9 } });
    }
    if (n4 || this.updateTimeMapping_(s5, this.syncController_.timelines[s5.timeline], this.playlist_), s5.cues.length ? s5.timingInfo = { start: s5.cues[0].startTime, end: s5.cues[s5.cues.length - 1].endTime } : s5.timingInfo = { start: s5.startOfSegment, end: s5.startOfSegment + s5.duration }, s5.isSyncRequest) return this.trigger("syncinfoupdate"), this.pendingSegment_ = null, void (this.state = "READY");
    s5.byteLength = s5.bytes.byteLength, this.mediaSecondsLoaded += r5.duration, s5.cues.forEach((e11) => {
      this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new b3.VTTCue(e11.startTime, e11.endTime, e11.text) : e11);
    }), wp(this.subtitlesTrack_), this.handleAppendsDone_();
  }
  handleData_(e10, t3) {
    const i5 = e10 && "vtt" === e10.type, s5 = t3 && "text" === t3.type;
    i5 && s5 && super.handleData_(e10, t3);
  }
  updateTimingInfoEnd_() {
  }
  parseMp4VttCues_(e10) {
    const t3 = null === this.sourceUpdater_.videoTimestampOffset() ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();
    e10.mp4VttCues.forEach((i5) => {
      const s5 = i5.start + t3, n4 = i5.end + t3, r5 = new b3.VTTCue(s5, n4, i5.cueText);
      i5.settings && i5.settings.split(" ").forEach((e11) => {
        const t4 = e11.split(":"), i6 = t4[0], s6 = t4[1];
        r5[i6] = isNaN(s6) ? s6 : Number(s6);
      }), e10.cues.push(r5);
    });
  }
  parseVTTCues_(e10) {
    let t3, i5 = false;
    if ("function" != typeof b3.WebVTT) throw new hm();
    if (e10.cues = [], e10.timestampmap = { MPEGTS: 0, LOCAL: 0 }, e10.mp4VttCues) return void this.parseMp4VttCues_(e10);
    "function" == typeof b3.TextDecoder ? t3 = new b3.TextDecoder("utf8") : (t3 = b3.WebVTT.StringDecoder(), i5 = true);
    const s5 = new b3.WebVTT.Parser(b3, b3.vttjs, t3);
    if (s5.oncue = e10.cues.push.bind(e10.cues), s5.ontimestampmap = (t4) => {
      e10.timestampmap = t4;
    }, s5.onparsingerror = (e11) => {
      du.log.warn("Error encountered when parsing cues: " + e11.message);
    }, e10.segment.map) {
      let t4 = e10.segment.map.bytes;
      i5 && (t4 = am(t4)), s5.parse(t4);
    }
    let n4 = e10.bytes;
    i5 && (n4 = am(n4)), s5.parse(n4), s5.flush();
  }
  updateTimeMapping_(e10, t3, i5) {
    const s5 = e10.segment;
    if (!t3) return;
    if (!e10.cues.length) return void (s5.empty = true);
    const { MPEGTS: n4, LOCAL: r5 } = e10.timestampmap, a9 = n4 / sn.ONE_SECOND_IN_TS - r5 + t3.mapping;
    if (e10.cues.forEach((e11) => {
      const i6 = e11.endTime - e11.startTime, s6 = this.handleRollover_(e11.startTime + a9, t3.time);
      e11.startTime = Math.max(s6, 0), e11.endTime = Math.max(s6 + i6, 0);
    }), !i5.syncInfo) {
      const t4 = e10.cues[0].startTime, n5 = e10.cues[e10.cues.length - 1].startTime;
      i5.syncInfo = { mediaSequence: i5.mediaSequence + e10.mediaIndex, time: Math.min(t4, n5 - s5.duration) };
    }
  }
  handleRollover_(e10, t3) {
    if (null === t3) return e10;
    let i5 = e10 * sn.ONE_SECOND_IN_TS;
    const s5 = t3 * sn.ONE_SECOND_IN_TS;
    let n4;
    for (n4 = s5 < i5 ? -8589934592 : 8589934592; Math.abs(i5 - s5) > 4294967296; ) i5 += n4;
    return i5 / sn.ONE_SECOND_IN_TS;
  }
};
var dm = function(e10, t3) {
  const i5 = e10.cues;
  for (let s5 = 0; s5 < i5.length; s5++) {
    const e11 = i5[s5];
    if (t3 >= e11.adStartTime && t3 <= e11.adEndTime) return e11;
  }
  return null;
};
var cm = function(e10, t3, i5 = 0) {
  if (!e10.segments) return;
  let s5, n4 = i5;
  for (let r5 = 0; r5 < e10.segments.length; r5++) {
    const i6 = e10.segments[r5];
    if (s5 || (s5 = dm(t3, n4 + i6.duration / 2)), s5) {
      if ("cueIn" in i6) {
        s5.endTime = n4, s5.adEndTime = n4, n4 += i6.duration, s5 = null;
        continue;
      }
      if (n4 < s5.endTime) {
        n4 += i6.duration;
        continue;
      }
      s5.endTime += i6.duration;
    } else if ("cueOut" in i6 && (s5 = new b3.VTTCue(n4, n4 + i6.duration, i6.cueOut), s5.adStartTime = n4, s5.adEndTime = n4 + parseFloat(i6.cueOut), t3.addCue(s5)), "cueOutCont" in i6) {
      const [e11, r6] = i6.cueOutCont.split("/").map(parseFloat);
      s5 = new b3.VTTCue(n4, n4 + i6.duration, ""), s5.adStartTime = n4 - e11, s5.adEndTime = s5.adStartTime + r6, t3.addCue(s5);
    }
    n4 += i6.duration;
  }
};
var pm = class {
  constructor({ start: e10, end: t3, segmentIndex: i5, partIndex: s5 = null, appended: n4 = false }) {
    this.start_ = e10, this.end_ = t3, this.segmentIndex_ = i5, this.partIndex_ = s5, this.appended_ = n4;
  }
  isInRange(e10) {
    return e10 >= this.start && e10 < this.end;
  }
  markAppended() {
    this.appended_ = true;
  }
  resetAppendedStatus() {
    this.appended_ = false;
  }
  get isAppended() {
    return this.appended_;
  }
  get start() {
    return this.start_;
  }
  get end() {
    return this.end_;
  }
  get segmentIndex() {
    return this.segmentIndex_;
  }
  get partIndex() {
    return this.partIndex_;
  }
};
var mm = class {
  constructor(e10, t3 = []) {
    this.segmentSyncInfo_ = e10, this.partsSyncInfo_ = t3;
  }
  get segmentSyncInfo() {
    return this.segmentSyncInfo_;
  }
  get partsSyncInfo() {
    return this.partsSyncInfo_;
  }
  get hasPartsSyncInfo() {
    return this.partsSyncInfo_.length > 0;
  }
  resetAppendStatus() {
    this.segmentSyncInfo_.resetAppendedStatus(), this.partsSyncInfo_.forEach((e10) => e10.resetAppendedStatus());
  }
};
var gm = class {
  constructor() {
    this.storage_ = /* @__PURE__ */ new Map(), this.diagnostics_ = "", this.isReliable_ = false, this.start_ = -1 / 0, this.end_ = 1 / 0;
  }
  get start() {
    return this.start_;
  }
  get end() {
    return this.end_;
  }
  get diagnostics() {
    return this.diagnostics_;
  }
  get isReliable() {
    return this.isReliable_;
  }
  resetAppendedStatus() {
    this.storage_.forEach((e10) => e10.resetAppendStatus());
  }
  update(e10, t3) {
    const { mediaSequence: i5, segments: s5 } = e10;
    if (this.isReliable_ = this.isReliablePlaylist_(i5, s5), this.isReliable_) return this.updateStorage_(s5, i5, this.calculateBaseTime_(i5, s5, t3));
  }
  getSyncInfoForTime(e10) {
    for (const { segmentSyncInfo: t3, partsSyncInfo: i5 } of this.storage_.values()) if (i5.length) {
      for (const s5 of i5) if (s5.isInRange(e10)) return s5;
    } else if (t3.isInRange(e10)) return t3;
    return null;
  }
  getSyncInfoForMediaSequence(e10) {
    return this.storage_.get(e10);
  }
  updateStorage_(e10, t3, i5) {
    const s5 = /* @__PURE__ */ new Map();
    let n4 = "\n", r5 = i5, a9 = t3;
    this.start_ = r5, e10.forEach((e11, t4) => {
      const i6 = this.storage_.get(a9), o4 = r5, l7 = o4 + e11.duration, h3 = Boolean(i6 && i6.segmentSyncInfo && i6.segmentSyncInfo.isAppended), u6 = new pm({ start: o4, end: l7, appended: h3, segmentIndex: t4 });
      e11.syncInfo = u6;
      let d2 = r5;
      const c5 = (e11.parts || []).map((e12, s6) => {
        const r6 = d2, o5 = d2 + e12.duration, l8 = Boolean(i6 && i6.partsSyncInfo && i6.partsSyncInfo[s6] && i6.partsSyncInfo[s6].isAppended), h4 = new pm({ start: r6, end: o5, appended: l8, segmentIndex: t4, partIndex: s6 });
        return d2 = o5, n4 += `Media Sequence: ${a9}.${s6} | Range: ${r6} --> ${o5} | Appended: ${l8}
`, e12.syncInfo = h4, h4;
      });
      s5.set(a9, new mm(u6, c5)), n4 += `${mp(e11.resolvedUri)} | Media Sequence: ${a9} | Range: ${o4} --> ${l7} | Appended: ${h3}
`, a9++, r5 = l7;
    }), this.end_ = r5, this.storage_ = s5, this.diagnostics_ = n4;
  }
  calculateBaseTime_(e10, t3, i5) {
    if (!this.storage_.size) return 0;
    if (this.storage_.has(e10)) return this.storage_.get(e10).segmentSyncInfo.start;
    const s5 = Math.min(...this.storage_.keys());
    if (e10 < s5) {
      const i6 = s5 - e10;
      let n4 = this.storage_.get(s5).segmentSyncInfo.start;
      for (let e11 = 0; e11 < i6; e11++) {
        n4 -= t3[e11].duration;
      }
      return n4;
    }
    return i5;
  }
  isReliablePlaylist_(e10, t3) {
    return null != e10 && Array.isArray(t3) && t3.length;
  }
};
var fm = class extends gm {
  constructor(e10) {
    super(), this.parent_ = e10;
  }
  calculateBaseTime_(e10, t3, i5) {
    if (!this.storage_.size) {
      const t4 = this.parent_.getSyncInfoForMediaSequence(e10);
      return t4 ? t4.segmentSyncInfo.start : 0;
    }
    return super.calculateBaseTime_(e10, t3, i5);
  }
};
var ym = 86400;
var _m = [{ name: "VOD", run: (e10, t3, i5, s5, n4) => {
  if (i5 !== 1 / 0) {
    return { time: 0, segmentIndex: 0, partIndex: null };
  }
  return null;
} }, { name: "MediaSequence", run: (e10, t3, i5, s5, n4, r5) => {
  const a9 = e10.getMediaSequenceSync(r5);
  if (!a9) return null;
  if (!a9.isReliable) return null;
  const o4 = a9.getSyncInfoForTime(n4);
  return o4 ? { time: o4.start, partIndex: o4.partIndex, segmentIndex: o4.segmentIndex } : null;
} }, { name: "ProgramDateTime", run: (e10, t3, i5, s5, n4) => {
  if (!Object.keys(e10.timelineToDatetimeMappings).length) return null;
  let r5 = null, a9 = null;
  const o4 = Uu(t3);
  n4 = n4 || 0;
  for (let l7 = 0; l7 < o4.length; l7++) {
    const i6 = o4[t3.endList || 0 === n4 ? l7 : o4.length - (l7 + 1)], s6 = i6.segment, h3 = e10.timelineToDatetimeMappings[s6.timeline];
    if (!h3 || !s6.dateTimeObject) continue;
    let u6 = s6.dateTimeObject.getTime() / 1e3 + h3;
    if (s6.parts && "number" == typeof i6.partIndex) for (let e11 = 0; e11 < i6.partIndex; e11++) u6 += s6.parts[e11].duration;
    const d2 = Math.abs(n4 - u6);
    if (null !== a9 && (0 === d2 || a9 < d2)) break;
    a9 = d2, r5 = { time: u6, segmentIndex: i6.segmentIndex, partIndex: i6.partIndex };
  }
  return r5;
} }, { name: "Segment", run: (e10, t3, i5, s5, n4) => {
  let r5 = null, a9 = null;
  n4 = n4 || 0;
  const o4 = Uu(t3);
  for (let l7 = 0; l7 < o4.length; l7++) {
    const e11 = o4[t3.endList || 0 === n4 ? l7 : o4.length - (l7 + 1)], i6 = e11.segment, h3 = e11.part && e11.part.start || i6 && i6.start;
    if (i6.timeline === s5 && void 0 !== h3) {
      const t4 = Math.abs(n4 - h3);
      if (null !== a9 && a9 < t4) break;
      (!r5 || null === a9 || a9 >= t4) && (a9 = t4, r5 = { time: h3, segmentIndex: e11.segmentIndex, partIndex: e11.partIndex });
    }
  }
  return r5;
} }, { name: "Discontinuity", run: (e10, t3, i5, s5, n4) => {
  let r5 = null;
  if (n4 = n4 || 0, t3.discontinuityStarts && t3.discontinuityStarts.length) {
    let i6 = null;
    for (let s6 = 0; s6 < t3.discontinuityStarts.length; s6++) {
      const a9 = t3.discontinuityStarts[s6], o4 = t3.discontinuitySequence + s6 + 1, l7 = e10.discontinuities[o4];
      if (l7) {
        const e11 = Math.abs(n4 - l7.time);
        if (null !== i6 && i6 < e11) break;
        (!r5 || null === i6 || i6 >= e11) && (i6 = e11, r5 = { time: l7.time, segmentIndex: a9, partIndex: null });
      }
    }
  }
  return r5;
} }, { name: "Playlist", run: (e10, t3, i5, s5, n4) => {
  if (t3.syncInfo) {
    return { time: t3.syncInfo.time, segmentIndex: t3.syncInfo.mediaSequence - t3.mediaSequence, partIndex: null };
  }
  return null;
} }];
var vm = class extends du.EventTarget {
  constructor(e10 = {}) {
    super(), this.timelines = [], this.discontinuities = [], this.timelineToDatetimeMappings = {};
    const t3 = new gm(), i5 = new fm(t3), s5 = new fm(t3);
    this.mediaSequenceStorage_ = { main: t3, audio: i5, vtt: s5 }, this.logger_ = vu("SyncController");
  }
  getMediaSequenceSync(e10) {
    return this.mediaSequenceStorage_[e10] || null;
  }
  getSyncPoint(e10, t3, i5, s5, n4) {
    if (t3 !== 1 / 0) {
      return _m.find(({ name: e11 }) => "VOD" === e11).run(this, e10, t3);
    }
    const r5 = this.runStrategies_(e10, t3, i5, s5, n4);
    if (!r5.length) return null;
    for (const a9 of r5) {
      const { syncPoint: t4, strategy: i6 } = a9, { segmentIndex: n5, time: r6 } = t4;
      if (n5 < 0) continue;
      const o4 = r6, l7 = o4 + e10.segments[n5].duration;
      if (this.logger_(`Strategy: ${i6}. Current time: ${s5}. selected segment: ${n5}. Time: [${o4} -> ${l7}]}`), s5 >= o4 && s5 < l7) return this.logger_("Found sync point with exact match: ", t4), t4;
    }
    return this.selectSyncPoint_(r5, { key: "time", value: s5 });
  }
  getExpiredTime(e10, t3) {
    if (!e10 || !e10.segments) return null;
    const i5 = this.runStrategies_(e10, t3, e10.discontinuitySequence, 0);
    if (!i5.length) return null;
    const s5 = this.selectSyncPoint_(i5, { key: "segmentIndex", value: 0 });
    return s5.segmentIndex > 0 && (s5.time *= -1), Math.abs(s5.time + zu({ defaultDuration: e10.targetDuration, durationList: e10.segments, startIndex: s5.segmentIndex, endIndex: 0 }));
  }
  runStrategies_(e10, t3, i5, s5, n4) {
    const r5 = [];
    for (let a9 = 0; a9 < _m.length; a9++) {
      const o4 = _m[a9], l7 = o4.run(this, e10, t3, i5, s5, n4);
      l7 && (l7.strategy = o4.name, r5.push({ strategy: o4.name, syncPoint: l7 }));
    }
    return r5;
  }
  selectSyncPoint_(e10, t3) {
    let i5 = e10[0].syncPoint, s5 = Math.abs(e10[0].syncPoint[t3.key] - t3.value), n4 = e10[0].strategy;
    for (let r5 = 1; r5 < e10.length; r5++) {
      const a9 = Math.abs(e10[r5].syncPoint[t3.key] - t3.value);
      a9 < s5 && (s5 = a9, i5 = e10[r5].syncPoint, n4 = e10[r5].strategy);
    }
    return this.logger_(`syncPoint for [${t3.key}: ${t3.value}] chosen with strategy [${n4}]: [time:${i5.time}, segmentIndex:${i5.segmentIndex}` + ("number" == typeof i5.partIndex ? `,partIndex:${i5.partIndex}` : "") + "]"), i5;
  }
  saveExpiredSegmentInfo(e10, t3) {
    const i5 = t3.mediaSequence - e10.mediaSequence;
    if (i5 > ym) du.log.warn(`Not saving expired segment info. Media sequence gap ${i5} is too large.`);
    else for (let s5 = i5 - 1; s5 >= 0; s5--) {
      const i6 = e10.segments[s5];
      if (i6 && void 0 !== i6.start) {
        t3.syncInfo = { mediaSequence: e10.mediaSequence + s5, time: i6.start }, this.logger_(`playlist refresh sync: [time:${t3.syncInfo.time}, mediaSequence: ${t3.syncInfo.mediaSequence}]`), this.trigger("syncinfoupdate");
        break;
      }
    }
  }
  setDateTimeMappingForStart(e10) {
    if (this.timelineToDatetimeMappings = {}, e10.segments && e10.segments.length && e10.segments[0].dateTimeObject) {
      const t3 = e10.segments[0], i5 = t3.dateTimeObject.getTime() / 1e3;
      this.timelineToDatetimeMappings[t3.timeline] = -i5;
    }
  }
  saveSegmentTimingInfo({ segmentInfo: e10, shouldSaveTimelineMapping: t3 }) {
    const i5 = this.calculateSegmentTimeMapping_(e10, e10.timingInfo, t3), s5 = e10.segment;
    i5 && (this.saveDiscontinuitySyncInfo_(e10), e10.playlist.syncInfo || (e10.playlist.syncInfo = { mediaSequence: e10.playlist.mediaSequence + e10.mediaIndex, time: s5.start }));
    const n4 = s5.dateTimeObject;
    s5.discontinuity && t3 && n4 && (this.timelineToDatetimeMappings[s5.timeline] = -n4.getTime() / 1e3);
  }
  timestampOffsetForTimeline(e10) {
    return void 0 === this.timelines[e10] ? null : this.timelines[e10].time;
  }
  mappingForTimeline(e10) {
    return void 0 === this.timelines[e10] ? null : this.timelines[e10].mapping;
  }
  calculateSegmentTimeMapping_(e10, t3, i5) {
    const s5 = e10.segment, n4 = e10.part;
    let r5, a9, o4 = this.timelines[e10.timeline];
    if ("number" == typeof e10.timestampOffset) o4 = { time: e10.startOfSegment, mapping: e10.startOfSegment - t3.start }, i5 && (this.timelines[e10.timeline] = o4, this.trigger("timestampoffset"), this.logger_(`time mapping for timeline ${e10.timeline}: [time: ${o4.time}] [mapping: ${o4.mapping}]`)), r5 = e10.startOfSegment, a9 = t3.end + o4.mapping;
    else {
      if (!o4) return false;
      r5 = t3.start + o4.mapping, a9 = t3.end + o4.mapping;
    }
    return n4 && (n4.start = r5, n4.end = a9), (!s5.start || r5 < s5.start) && (s5.start = r5), s5.end = a9, true;
  }
  saveDiscontinuitySyncInfo_(e10) {
    const t3 = e10.playlist, i5 = e10.segment;
    if (i5.discontinuity) this.discontinuities[i5.timeline] = { time: i5.start, accuracy: 0 };
    else if (t3.discontinuityStarts && t3.discontinuityStarts.length) for (let s5 = 0; s5 < t3.discontinuityStarts.length; s5++) {
      const n4 = t3.discontinuityStarts[s5], r5 = t3.discontinuitySequence + s5 + 1, a9 = n4 - e10.mediaIndex, o4 = Math.abs(a9);
      if (!this.discontinuities[r5] || this.discontinuities[r5].accuracy > o4) {
        let s6;
        s6 = a9 < 0 ? i5.start - zu({ defaultDuration: t3.targetDuration, durationList: t3.segments, startIndex: e10.mediaIndex, endIndex: n4 }) : i5.end + zu({ defaultDuration: t3.targetDuration, durationList: t3.segments, startIndex: e10.mediaIndex + 1, endIndex: n4 }), this.discontinuities[r5] = { time: s6, accuracy: o4 };
      }
    }
  }
  dispose() {
    this.trigger("dispose"), this.off();
  }
};
var bm = class extends du.EventTarget {
  constructor() {
    super(), this.pendingTimelineChanges_ = {}, this.lastTimelineChanges_ = {};
  }
  clearPendingTimelineChange(e10) {
    this.pendingTimelineChanges_[e10] = null, this.trigger("pendingtimelinechange");
  }
  pendingTimelineChange({ type: e10, from: t3, to: i5 }) {
    return "number" == typeof t3 && "number" == typeof i5 && (this.pendingTimelineChanges_[e10] = { type: e10, from: t3, to: i5 }, this.trigger("pendingtimelinechange")), this.pendingTimelineChanges_[e10];
  }
  lastTimelineChange({ type: e10, from: t3, to: i5 }) {
    if ("number" == typeof t3 && "number" == typeof i5) {
      this.lastTimelineChanges_[e10] = { type: e10, from: t3, to: i5 }, delete this.pendingTimelineChanges_[e10];
      const s5 = { timelineChangeInfo: { from: t3, to: i5 } };
      this.trigger({ type: "timelinechange", metadata: s5 });
    }
    return this.lastTimelineChanges_[e10];
  }
  dispose() {
    this.trigger("dispose"), this.pendingTimelineChanges_ = {}, this.lastTimelineChanges_ = {}, this.off();
  }
};
var Tm = Sc(Ec(function() {
  var e10 = function() {
    function e11() {
      this.listeners = {};
    }
    var t4 = e11.prototype;
    return t4.on = function(e12, t5) {
      this.listeners[e12] || (this.listeners[e12] = []), this.listeners[e12].push(t5);
    }, t4.off = function(e12, t5) {
      if (!this.listeners[e12]) return false;
      var i6 = this.listeners[e12].indexOf(t5);
      return this.listeners[e12] = this.listeners[e12].slice(0), this.listeners[e12].splice(i6, 1), i6 > -1;
    }, t4.trigger = function(e12) {
      var t5 = this.listeners[e12];
      if (t5) if (2 === arguments.length) for (var i6 = t5.length, s6 = 0; s6 < i6; ++s6) t5[s6].call(this, arguments[1]);
      else for (var n5 = Array.prototype.slice.call(arguments, 1), r6 = t5.length, a10 = 0; a10 < r6; ++a10) t5[a10].apply(this, n5);
    }, t4.dispose = function() {
      this.listeners = {};
    }, t4.pipe = function(e12) {
      this.on("data", function(t5) {
        e12.push(t5);
      });
    }, e11;
  }();
  function t3(e11) {
    return e11.subarray(0, e11.byteLength - e11[e11.byteLength - 1]);
  }
  const i5 = function() {
    const e11 = [[[], [], [], [], []], [[], [], [], [], []]], t4 = e11[0], i6 = e11[1], s6 = t4[4], n5 = i6[4];
    let r6, a10, o5;
    const l8 = [], h4 = [];
    let u7, d3, c6, p6, m7, g2;
    for (r6 = 0; r6 < 256; r6++) h4[(l8[r6] = r6 << 1 ^ 283 * (r6 >> 7)) ^ r6] = r6;
    for (a10 = o5 = 0; !s6[a10]; a10 ^= u7 || 1, o5 = h4[o5] || 1) for (p6 = o5 ^ o5 << 1 ^ o5 << 2 ^ o5 << 3 ^ o5 << 4, p6 = p6 >> 8 ^ 255 & p6 ^ 99, s6[a10] = p6, n5[p6] = a10, c6 = l8[d3 = l8[u7 = l8[a10]]], g2 = 16843009 * c6 ^ 65537 * d3 ^ 257 * u7 ^ 16843008 * a10, m7 = 257 * l8[p6] ^ 16843008 * p6, r6 = 0; r6 < 4; r6++) t4[r6][a10] = m7 = m7 << 24 ^ m7 >>> 8, i6[r6][p6] = g2 = g2 << 24 ^ g2 >>> 8;
    for (r6 = 0; r6 < 5; r6++) t4[r6] = t4[r6].slice(0), i6[r6] = i6[r6].slice(0);
    return e11;
  };
  let s5 = null;
  class n4 {
    constructor(e11) {
      let t4, n5, r6;
      s5 || (s5 = i5()), this._tables = [[s5[0][0].slice(), s5[0][1].slice(), s5[0][2].slice(), s5[0][3].slice(), s5[0][4].slice()], [s5[1][0].slice(), s5[1][1].slice(), s5[1][2].slice(), s5[1][3].slice(), s5[1][4].slice()]];
      const a10 = this._tables[0][4], o5 = this._tables[1], l8 = e11.length;
      let h4 = 1;
      if (4 !== l8 && 6 !== l8 && 8 !== l8) throw new Error("Invalid aes key size");
      const u7 = e11.slice(0), d3 = [];
      for (this._key = [u7, d3], t4 = l8; t4 < 4 * l8 + 28; t4++) r6 = u7[t4 - 1], (t4 % l8 === 0 || 8 === l8 && t4 % l8 === 4) && (r6 = a10[r6 >>> 24] << 24 ^ a10[r6 >> 16 & 255] << 16 ^ a10[r6 >> 8 & 255] << 8 ^ a10[255 & r6], t4 % l8 === 0 && (r6 = r6 << 8 ^ r6 >>> 24 ^ h4 << 24, h4 = h4 << 1 ^ 283 * (h4 >> 7))), u7[t4] = u7[t4 - l8] ^ r6;
      for (n5 = 0; t4; n5++, t4--) r6 = u7[3 & n5 ? t4 : t4 - 4], d3[n5] = t4 <= 4 || n5 < 4 ? r6 : o5[0][a10[r6 >>> 24]] ^ o5[1][a10[r6 >> 16 & 255]] ^ o5[2][a10[r6 >> 8 & 255]] ^ o5[3][a10[255 & r6]];
    }
    decrypt(e11, t4, i6, s6, n5, r6) {
      const a10 = this._key[1];
      let o5, l8, h4, u7 = e11 ^ a10[0], d3 = s6 ^ a10[1], c6 = i6 ^ a10[2], p6 = t4 ^ a10[3];
      const m7 = a10.length / 4 - 2;
      let g2, f3 = 4;
      const y4 = this._tables[1], _3 = y4[0], v3 = y4[1], b4 = y4[2], T2 = y4[3], S4 = y4[4];
      for (g2 = 0; g2 < m7; g2++) o5 = _3[u7 >>> 24] ^ v3[d3 >> 16 & 255] ^ b4[c6 >> 8 & 255] ^ T2[255 & p6] ^ a10[f3], l8 = _3[d3 >>> 24] ^ v3[c6 >> 16 & 255] ^ b4[p6 >> 8 & 255] ^ T2[255 & u7] ^ a10[f3 + 1], h4 = _3[c6 >>> 24] ^ v3[p6 >> 16 & 255] ^ b4[u7 >> 8 & 255] ^ T2[255 & d3] ^ a10[f3 + 2], p6 = _3[p6 >>> 24] ^ v3[u7 >> 16 & 255] ^ b4[d3 >> 8 & 255] ^ T2[255 & c6] ^ a10[f3 + 3], f3 += 4, u7 = o5, d3 = l8, c6 = h4;
      for (g2 = 0; g2 < 4; g2++) n5[(3 & -g2) + r6] = S4[u7 >>> 24] << 24 ^ S4[d3 >> 16 & 255] << 16 ^ S4[c6 >> 8 & 255] << 8 ^ S4[255 & p6] ^ a10[f3++], o5 = u7, u7 = d3, d3 = c6, c6 = p6, p6 = o5;
    }
  }
  class r5 extends e10 {
    constructor() {
      super(e10), this.jobs = [], this.delay = 1, this.timeout_ = null;
    }
    processJob_() {
      this.jobs.shift()(), this.jobs.length ? this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay) : this.timeout_ = null;
    }
    push(e11) {
      this.jobs.push(e11), this.timeout_ || (this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay));
    }
  }
  const a9 = function(e11) {
    return e11 << 24 | (65280 & e11) << 8 | (16711680 & e11) >> 8 | e11 >>> 24;
  }, o4 = function(e11, t4, i6) {
    const s6 = new Int32Array(e11.buffer, e11.byteOffset, e11.byteLength >> 2), r6 = new n4(Array.prototype.slice.call(t4)), o5 = new Uint8Array(e11.byteLength), l8 = new Int32Array(o5.buffer);
    let h4, u7, d3, c6, p6, m7, g2, f3, y4;
    for (h4 = i6[0], u7 = i6[1], d3 = i6[2], c6 = i6[3], y4 = 0; y4 < s6.length; y4 += 4) p6 = a9(s6[y4]), m7 = a9(s6[y4 + 1]), g2 = a9(s6[y4 + 2]), f3 = a9(s6[y4 + 3]), r6.decrypt(p6, m7, g2, f3, l8, y4), l8[y4] = a9(l8[y4] ^ h4), l8[y4 + 1] = a9(l8[y4 + 1] ^ u7), l8[y4 + 2] = a9(l8[y4 + 2] ^ d3), l8[y4 + 3] = a9(l8[y4 + 3] ^ c6), h4 = p6, u7 = m7, d3 = g2, c6 = f3;
    return o5;
  };
  class l7 {
    constructor(e11, i6, s6, n5) {
      const o5 = l7.STEP, h4 = new Int32Array(e11.buffer), u7 = new Uint8Array(e11.byteLength);
      let d3 = 0;
      for (this.asyncStream_ = new r5(), this.asyncStream_.push(this.decryptChunk_(h4.subarray(d3, d3 + o5), i6, s6, u7)), d3 = o5; d3 < h4.length; d3 += o5) s6 = new Uint32Array([a9(h4[d3 - 4]), a9(h4[d3 - 3]), a9(h4[d3 - 2]), a9(h4[d3 - 1])]), this.asyncStream_.push(this.decryptChunk_(h4.subarray(d3, d3 + o5), i6, s6, u7));
      this.asyncStream_.push(function() {
        n5(null, t3(u7));
      });
    }
    static get STEP() {
      return 32e3;
    }
    decryptChunk_(e11, t4, i6, s6) {
      return function() {
        const n5 = o4(e11, t4, i6);
        s6.set(n5, e11.byteOffset);
      };
    }
  }
  var h3, u6 = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
  h3 = "undefined" != typeof window ? window : void 0 !== u6 ? u6 : "undefined" != typeof self ? self : {};
  var d2 = function(e11) {
    return "function" === ArrayBuffer.isView ? ArrayBuffer.isView(e11) : e11 && e11.buffer instanceof ArrayBuffer;
  }, c5 = h3.BigInt || Number;
  c5("0x1"), c5("0x100"), c5("0x10000"), c5("0x1000000"), c5("0x100000000"), c5("0x10000000000"), c5("0x1000000000000"), c5("0x100000000000000"), c5("0x10000000000000000"), function() {
    var e11 = new Uint16Array([65484]), t4 = new Uint8Array(e11.buffer, e11.byteOffset, e11.byteLength);
    255 === t4[0] || t4[0];
  }();
  const p5 = function(e11) {
    const t4 = {};
    return Object.keys(e11).forEach((i6) => {
      const s6 = e11[i6];
      d2(s6) ? t4[i6] = { bytes: s6.buffer, byteOffset: s6.byteOffset, byteLength: s6.byteLength } : t4[i6] = s6;
    }), t4;
  };
  self.onmessage = function(e11) {
    const t4 = e11.data, i6 = new Uint8Array(t4.encrypted.bytes, t4.encrypted.byteOffset, t4.encrypted.byteLength), s6 = new Uint32Array(t4.key.bytes, t4.key.byteOffset, t4.key.byteLength / 4), n5 = new Uint32Array(t4.iv.bytes, t4.iv.byteOffset, t4.iv.byteLength / 4);
    new l7(i6, s6, n5, function(e12, i7) {
      self.postMessage(p5({ source: t4.source, decrypted: i7 }), [i7.buffer]);
    });
  };
}));
var Sm = Tc(Tm);
var Em = (e10) => {
  let t3 = e10.default ? "main" : "alternative";
  return e10.characteristics && e10.characteristics.indexOf("public.accessibility.describes-video") >= 0 && (t3 = "main-desc"), t3;
};
var wm = (e10, t3) => {
  e10.abort(), e10.pause(), t3 && t3.activePlaylistLoader && (t3.activePlaylistLoader.pause(), t3.activePlaylistLoader = null);
};
var Cm = (e10, t3) => {
  t3.activePlaylistLoader = e10, e10.load();
};
var km = (e10, t3) => () => {
  const { segmentLoaders: { [e10]: i5, main: s5 }, mediaTypes: { [e10]: n4 } } = t3, r5 = n4.activeTrack(), a9 = n4.getActiveGroup(), o4 = n4.activePlaylistLoader, l7 = n4.lastGroup_;
  a9 && l7 && a9.id === l7.id || (n4.lastGroup_ = a9, n4.lastTrack_ = r5, wm(i5, n4), a9 && !a9.isMainPlaylist && (a9.playlistLoader ? (i5.resyncLoader(), Cm(a9.playlistLoader, n4)) : o4 && s5.resetEverything()));
};
var Im = (e10, t3) => () => {
  const { segmentLoaders: { [e10]: i5 }, mediaTypes: { [e10]: s5 } } = t3;
  s5.lastGroup_ = null, i5.abort(), i5.pause();
};
var xm = (e10, t3) => () => {
  const { mainPlaylistLoader: i5, segmentLoaders: { [e10]: s5, main: n4 }, mediaTypes: { [e10]: r5 } } = t3, a9 = r5.activeTrack(), o4 = r5.getActiveGroup(), l7 = r5.activePlaylistLoader, h3 = r5.lastTrack_;
  if ((!h3 || !a9 || h3.id !== a9.id) && (r5.lastGroup_ = o4, r5.lastTrack_ = a9, wm(s5, r5), o4)) {
    if (o4.isMainPlaylist) {
      if (!a9 || !h3 || a9.id === h3.id) return;
      const e11 = t3.vhs.playlistController_, s6 = e11.selectPlaylist();
      if (e11.media() === s6) return;
      return r5.logger_(`track change. Switching main audio from ${h3.id} to ${a9.id}`), i5.pause(), n4.resetEverything(), void e11.fastQualityChange_(s6);
    }
    if ("AUDIO" === e10) {
      if (!o4.playlistLoader) return n4.setAudio(true), void n4.resetEverything();
      s5.setAudio(true), n4.setAudio(false);
    }
    l7 !== o4.playlistLoader ? (s5.track && s5.track(a9), s5.resetEverything(), Cm(o4.playlistLoader, r5)) : Cm(o4.playlistLoader, r5);
  }
};
var Am = { AUDIO: (e10, t3) => () => {
  const { mediaTypes: { [e10]: i5 }, excludePlaylist: s5 } = t3, n4 = i5.activeTrack(), r5 = i5.activeGroup(), a9 = (r5.filter((e11) => e11.default)[0] || r5[0]).id, o4 = i5.tracks[a9];
  if (n4 !== o4) {
    du.log.warn("Problem encountered loading the alternate audio track.Switching back to default.");
    for (const e11 in i5.tracks) i5.tracks[e11].enabled = i5.tracks[e11] === o4;
    i5.onTrackChanged();
  } else s5({ error: { message: "Problem encountered loading the default audio track." } });
}, SUBTITLES: (e10, t3) => () => {
  const { mediaTypes: { [e10]: i5 } } = t3;
  du.log.warn("Problem encountered loading the subtitle track.Disabling subtitle track.");
  const s5 = i5.activeTrack();
  s5 && (s5.mode = "disabled"), i5.onTrackChanged();
} };
var Dm = { AUDIO: (e10, t3, i5) => {
  if (!t3) return;
  const { tech: s5, requestOptions: n4, segmentLoaders: { [e10]: r5 } } = i5;
  t3.on("loadedmetadata", () => {
    const e11 = t3.media();
    r5.playlist(e11, n4), (!s5.paused() || e11.endList && "none" !== s5.preload()) && r5.load();
  }), t3.on("loadedplaylist", () => {
    r5.playlist(t3.media(), n4), s5.paused() || r5.load();
  }), t3.on("error", Am[e10](e10, i5));
}, SUBTITLES: (e10, t3, i5) => {
  const { tech: s5, requestOptions: n4, segmentLoaders: { [e10]: r5 }, mediaTypes: { [e10]: a9 } } = i5;
  t3.on("loadedmetadata", () => {
    const e11 = t3.media();
    r5.playlist(e11, n4), r5.track(a9.activeTrack()), (!s5.paused() || e11.endList && "none" !== s5.preload()) && r5.load();
  }), t3.on("loadedplaylist", () => {
    r5.playlist(t3.media(), n4), s5.paused() || r5.load();
  }), t3.on("error", Am[e10](e10, i5));
} };
var Pm = { AUDIO: (e10, t3) => {
  const { vhs: i5, sourceType: s5, segmentLoaders: { [e10]: n4 }, requestOptions: r5, main: { mediaGroups: a9 }, mediaTypes: { [e10]: { groups: o4, tracks: l7, logger_: h3 } }, mainPlaylistLoader: u6 } = t3, d2 = td(u6.main);
  a9[e10] && 0 !== Object.keys(a9[e10]).length || (a9[e10] = { main: { default: { default: true } } }, d2 && (a9[e10].main.default.playlists = u6.main.playlists));
  for (const c5 in a9[e10]) {
    o4[c5] || (o4[c5] = []);
    for (const n5 in a9[e10][c5]) {
      let p5, m7 = a9[e10][c5][n5];
      if (d2 ? (h3(`AUDIO group '${c5}' label '${n5}' is a main playlist`), m7.isMainPlaylist = true, p5 = null) : p5 = "vhs-json" === s5 && m7.playlists ? new Od(m7.playlists[0], i5, r5) : m7.resolvedUri ? new Od(m7.resolvedUri, i5, r5) : m7.playlists && "dash" === s5 ? new fc(m7.playlists[0], i5, r5, u6) : null, m7 = bu({ id: n5, playlistLoader: p5 }, m7), Dm[e10](e10, m7.playlistLoader, t3), o4[c5].push(m7), void 0 === l7[n5]) {
        const e11 = new du.AudioTrack({ id: n5, kind: Em(m7), enabled: false, language: m7.language, default: m7.default, label: n5 });
        l7[n5] = e11;
      }
    }
  }
  n4.on("error", Am[e10](e10, t3));
}, SUBTITLES: (e10, t3) => {
  const { tech: i5, vhs: s5, sourceType: n4, segmentLoaders: { [e10]: r5 }, requestOptions: a9, main: { mediaGroups: o4 }, mediaTypes: { [e10]: { groups: l7, tracks: h3 } }, mainPlaylistLoader: u6 } = t3;
  for (const d2 in o4[e10]) {
    l7[d2] || (l7[d2] = []);
    for (const r6 in o4[e10][d2]) {
      if (!s5.options_.useForcedSubtitles && o4[e10][d2][r6].forced) continue;
      let c5, p5 = o4[e10][d2][r6];
      if ("hls" === n4) c5 = new Od(p5.resolvedUri, s5, a9);
      else if ("dash" === n4) {
        if (!p5.playlists.filter((e11) => e11.excludeUntil !== 1 / 0).length) return;
        c5 = new fc(p5.playlists[0], s5, a9, u6);
      } else "vhs-json" === n4 && (c5 = new Od(p5.playlists ? p5.playlists[0] : p5.resolvedUri, s5, a9));
      if (p5 = bu({ id: r6, playlistLoader: c5 }, p5), Dm[e10](e10, p5.playlistLoader, t3), l7[d2].push(p5), void 0 === h3[r6]) {
        const e11 = i5.addRemoteTextTrack({ id: r6, kind: "subtitles", default: p5.default && p5.autoselect, language: p5.language, label: r6 }, false).track;
        h3[r6] = e11;
      }
    }
  }
  r5.on("error", Am[e10](e10, t3));
}, "CLOSED-CAPTIONS": (e10, t3) => {
  const { tech: i5, main: { mediaGroups: s5 }, mediaTypes: { [e10]: { groups: n4, tracks: r5 } } } = t3;
  for (const a9 in s5[e10]) {
    n4[a9] || (n4[a9] = []);
    for (const t4 in s5[e10][a9]) {
      const o4 = s5[e10][a9][t4];
      if (!/^(?:CC|SERVICE)/.test(o4.instreamId)) continue;
      const l7 = i5.options_.vhs && i5.options_.vhs.captionServices || {};
      let h3 = { label: t4, language: o4.language, instreamId: o4.instreamId, default: o4.default && o4.autoselect };
      if (l7[h3.instreamId] && (h3 = bu(h3, l7[h3.instreamId])), void 0 === h3.default && delete h3.default, n4[a9].push(bu({ id: t4 }, o4)), void 0 === r5[t4]) {
        const e11 = i5.addRemoteTextTrack({ id: h3.instreamId, kind: "captions", default: h3.default, language: h3.language, label: h3.label }, false).track;
        r5[t4] = e11;
      }
    }
  }
} };
var Lm = (e10, t3) => {
  for (let i5 = 0; i5 < e10.length; i5++) {
    if (Zu(t3, e10[i5])) return true;
    if (e10[i5].playlists && Lm(e10[i5].playlists, t3)) return true;
  }
  return false;
};
var Om = (e10, t3) => (i5) => {
  const { mainPlaylistLoader: s5, mediaTypes: { [e10]: { groups: n4 } } } = t3, r5 = s5.media();
  if (!r5) return null;
  let a9 = null;
  r5.attributes[e10] && (a9 = n4[r5.attributes[e10]]);
  const o4 = Object.keys(n4);
  if (!a9) if ("AUDIO" === e10 && o4.length > 1 && td(t3.main)) for (let e11 = 0; e11 < o4.length; e11++) {
    const t4 = n4[o4[e11]];
    if (Lm(t4, r5)) {
      a9 = t4;
      break;
    }
  }
  else n4.main ? a9 = n4.main : 1 === o4.length && (a9 = n4[o4[0]]);
  return void 0 === i5 ? a9 : null !== i5 && a9 && a9.filter((e11) => e11.id === i5.id)[0] || null;
};
var Nm = { AUDIO: (e10, t3) => () => {
  const { mediaTypes: { [e10]: { tracks: i5 } } } = t3;
  for (const e11 in i5) if (i5[e11].enabled) return i5[e11];
  return null;
}, SUBTITLES: (e10, t3) => () => {
  const { mediaTypes: { [e10]: { tracks: i5 } } } = t3;
  for (const e11 in i5) if ("showing" === i5[e11].mode || "hidden" === i5[e11].mode) return i5[e11];
  return null;
} };
var Rm = (e10, { mediaTypes: t3 }) => () => {
  const i5 = t3[e10].activeTrack();
  return i5 ? t3[e10].activeGroup(i5) : null;
};
var Mm = (e10) => {
  ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((t4) => {
    Pm[t4](t4, e10);
  });
  const { mediaTypes: t3, mainPlaylistLoader: i5, tech: s5, vhs: n4, segmentLoaders: { AUDIO: r5, main: a9 } } = e10;
  ["AUDIO", "SUBTITLES"].forEach((i6) => {
    t3[i6].activeGroup = Om(i6, e10), t3[i6].activeTrack = Nm[i6](i6, e10), t3[i6].onGroupChanged = km(i6, e10), t3[i6].onGroupChanging = Im(i6, e10), t3[i6].onTrackChanged = xm(i6, e10), t3[i6].getActiveGroup = Rm(i6, e10);
  });
  const o4 = t3.AUDIO.activeGroup();
  if (o4) {
    const e11 = (o4.filter((e12) => e12.default)[0] || o4[0]).id;
    t3.AUDIO.tracks[e11].enabled = true, t3.AUDIO.onGroupChanged(), t3.AUDIO.onTrackChanged();
    t3.AUDIO.getActiveGroup().playlistLoader ? (a9.setAudio(false), r5.setAudio(true)) : a9.setAudio(true);
  }
  i5.on("mediachange", () => {
    ["AUDIO", "SUBTITLES"].forEach((e11) => t3[e11].onGroupChanged());
  }), i5.on("mediachanging", () => {
    ["AUDIO", "SUBTITLES"].forEach((e11) => t3[e11].onGroupChanging());
  });
  const l7 = () => {
    t3.AUDIO.onTrackChanged(), s5.trigger({ type: "usage", name: "vhs-audio-change" });
  };
  s5.audioTracks().addEventListener("change", l7), s5.remoteTextTracks().addEventListener("change", t3.SUBTITLES.onTrackChanged), n4.on("dispose", () => {
    s5.audioTracks().removeEventListener("change", l7), s5.remoteTextTracks().removeEventListener("change", t3.SUBTITLES.onTrackChanged);
  }), s5.clearTracks("audio");
  for (const h3 in t3.AUDIO.tracks) s5.audioTracks().addTrack(t3.AUDIO.tracks[h3]);
};
var Um = () => {
  const e10 = {};
  return ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((t3) => {
    e10[t3] = { groups: {}, tracks: {}, activePlaylistLoader: null, activeGroup: Xp, activeTrack: Xp, getActiveGroup: Xp, onGroupChanged: Xp, onTrackChanged: Xp, lastTrack_: null, logger_: vu(`MediaGroups[${t3}]`) };
  }), e10;
};
var Bm = class {
  constructor() {
    this.priority_ = [], this.pathwayClones_ = /* @__PURE__ */ new Map();
  }
  set version(e10) {
    1 === e10 && (this.version_ = e10);
  }
  set ttl(e10) {
    this.ttl_ = e10 || 300;
  }
  set reloadUri(e10) {
    e10 && (this.reloadUri_ = yu(this.reloadUri_, e10));
  }
  set priority(e10) {
    e10 && e10.length && (this.priority_ = e10);
  }
  set pathwayClones(e10) {
    e10 && e10.length && (this.pathwayClones_ = new Map(e10.map((e11) => [e11.ID, e11])));
  }
  get version() {
    return this.version_;
  }
  get ttl() {
    return this.ttl_;
  }
  get reloadUri() {
    return this.reloadUri_;
  }
  get priority() {
    return this.priority_;
  }
  get pathwayClones() {
    return this.pathwayClones_;
  }
};
var Fm = class extends du.EventTarget {
  constructor(e10, t3) {
    super(), this.currentPathway = null, this.defaultPathway = null, this.queryBeforeStart = false, this.availablePathways_ = /* @__PURE__ */ new Set(), this.steeringManifest = new Bm(), this.proxyServerUrl_ = null, this.manifestType_ = null, this.ttlTimeout_ = null, this.request_ = null, this.currentPathwayClones = /* @__PURE__ */ new Map(), this.nextPathwayClones = /* @__PURE__ */ new Map(), this.excludedSteeringManifestURLs = /* @__PURE__ */ new Set(), this.logger_ = vu("Content Steering"), this.xhr_ = e10, this.getBandwidth_ = t3;
  }
  assignTagProperties(e10, t3) {
    this.manifestType_ = t3.serverUri ? "HLS" : "DASH";
    const i5 = t3.serverUri || t3.serverURL;
    if (!i5) return this.logger_(`steering manifest URL is ${i5}, cannot request steering manifest.`), void this.trigger("error");
    i5.startsWith("data:") ? this.decodeDataUriManifest_(i5.substring(i5.indexOf(",") + 1)) : (this.steeringManifest.reloadUri = yu(e10, i5), this.defaultPathway = t3.pathwayId || t3.defaultServiceLocation, this.queryBeforeStart = t3.queryBeforeStart, this.proxyServerUrl_ = t3.proxyServerURL, this.defaultPathway && !this.queryBeforeStart && this.trigger("content-steering"));
  }
  requestSteeringManifest(e10) {
    const t3 = this.steeringManifest.reloadUri;
    if (!t3) return;
    const i5 = e10 ? t3 : this.getRequestURI(t3);
    if (!i5) return this.logger_("No valid content steering manifest URIs. Stopping content steering."), this.trigger("error"), void this.dispose();
    const s5 = { contentSteeringInfo: { uri: i5 } };
    this.trigger({ type: "contentsteeringloadstart", metadata: s5 }), this.request_ = this.xhr_({ uri: i5, requestType: "content-steering-manifest" }, (e11, t4) => {
      if (e11) {
        if (410 === t4.status) return this.logger_(`manifest request 410 ${e11}.`), this.logger_(`There will be no more content steering requests to ${i5} this session.`), void this.excludedSteeringManifestURLs.add(i5);
        if (429 === t4.status) {
          const i6 = t4.responseHeaders["retry-after"];
          return this.logger_(`manifest request 429 ${e11}.`), this.logger_(`content steering will retry in ${i6} seconds.`), void this.startTTLTimeout_(parseInt(i6, 10));
        }
        return this.logger_(`manifest failed to load ${e11}.`), void this.startTTLTimeout_();
      }
      let n4;
      this.trigger({ type: "contentsteeringloadcomplete", metadata: s5 });
      try {
        n4 = JSON.parse(this.request_.responseText);
      } catch (a9) {
        const e12 = { errorType: du.Error.StreamingContentSteeringParserError, error: a9 };
        this.trigger({ type: "error", metadata: e12 });
      }
      this.assignSteeringProperties_(n4);
      const r5 = { contentSteeringInfo: s5.contentSteeringInfo, contentSteeringManifest: { version: this.steeringManifest.version, reloadUri: this.steeringManifest.reloadUri, priority: this.steeringManifest.priority } };
      this.trigger({ type: "contentsteeringparsed", metadata: r5 }), this.startTTLTimeout_();
    });
  }
  setProxyServerUrl_(e10) {
    const t3 = new b3.URL(e10), i5 = new b3.URL(this.proxyServerUrl_);
    return i5.searchParams.set("url", encodeURI(t3.toString())), this.setSteeringParams_(i5.toString());
  }
  decodeDataUriManifest_(e10) {
    const t3 = JSON.parse(b3.atob(e10));
    this.assignSteeringProperties_(t3);
  }
  setSteeringParams_(e10) {
    const t3 = new b3.URL(e10), i5 = this.getPathway(), s5 = this.getBandwidth_();
    if (i5) {
      const e11 = `_${this.manifestType_}_pathway`;
      t3.searchParams.set(e11, i5);
    }
    if (s5) {
      const e11 = `_${this.manifestType_}_throughput`;
      t3.searchParams.set(e11, s5);
    }
    return t3.toString();
  }
  assignSteeringProperties_(e10) {
    if (this.steeringManifest.version = e10.VERSION, !this.steeringManifest.version) return this.logger_(`manifest version is ${e10.VERSION}, which is not supported.`), void this.trigger("error");
    this.steeringManifest.ttl = e10.TTL, this.steeringManifest.reloadUri = e10["RELOAD-URI"], this.steeringManifest.priority = e10["PATHWAY-PRIORITY"] || e10["SERVICE-LOCATION-PRIORITY"], this.steeringManifest.pathwayClones = e10["PATHWAY-CLONES"], this.nextPathwayClones = this.steeringManifest.pathwayClones, this.availablePathways_.size || (this.logger_("There are no available pathways for content steering. Ending content steering."), this.trigger("error"), this.dispose());
    const t3 = ((e11) => {
      for (const t4 of e11) if (this.availablePathways_.has(t4)) return t4;
      return [...this.availablePathways_][0];
    })(this.steeringManifest.priority);
    this.currentPathway !== t3 && (this.currentPathway = t3, this.trigger("content-steering"));
  }
  getPathway() {
    return this.currentPathway || this.defaultPathway;
  }
  getRequestURI(e10) {
    if (!e10) return null;
    const t3 = (e11) => this.excludedSteeringManifestURLs.has(e11);
    if (this.proxyServerUrl_) {
      const i6 = this.setProxyServerUrl_(e10);
      if (!t3(i6)) return i6;
    }
    const i5 = this.setSteeringParams_(e10);
    return t3(i5) ? null : i5;
  }
  startTTLTimeout_(e10 = this.steeringManifest.ttl) {
    const t3 = 1e3 * e10;
    this.ttlTimeout_ = b3.setTimeout(() => {
      this.requestSteeringManifest();
    }, t3);
  }
  clearTTLTimeout_() {
    b3.clearTimeout(this.ttlTimeout_), this.ttlTimeout_ = null;
  }
  abort() {
    this.request_ && this.request_.abort(), this.request_ = null;
  }
  dispose() {
    this.off("content-steering"), this.off("error"), this.abort(), this.clearTTLTimeout_(), this.currentPathway = null, this.defaultPathway = null, this.queryBeforeStart = null, this.proxyServerUrl_ = null, this.manifestType_ = null, this.ttlTimeout_ = null, this.request_ = null, this.excludedSteeringManifestURLs = /* @__PURE__ */ new Set(), this.availablePathways_ = /* @__PURE__ */ new Set(), this.steeringManifest = new Bm();
  }
  addAvailablePathway(e10) {
    e10 && this.availablePathways_.add(e10);
  }
  clearAvailablePathways() {
    this.availablePathways_.clear();
  }
  excludePathway(e10) {
    return this.availablePathways_.delete(e10);
  }
  didDASHTagChange(e10, t3) {
    return !t3 && this.steeringManifest.reloadUri || t3 && (yu(e10, t3.serverURL) !== this.steeringManifest.reloadUri || t3.defaultServiceLocation !== this.defaultPathway || t3.queryBeforeStart !== this.queryBeforeStart || t3.proxyServerURL !== this.proxyServerUrl_);
  }
  getAvailablePathways() {
    return this.availablePathways_;
  }
};
var qm = (e10, t3) => {
  let i5 = null;
  return (...s5) => {
    clearTimeout(i5), i5 = setTimeout(() => {
      e10.apply(null, s5);
    }, t3);
  };
};
var jm = 10;
var $m;
var Hm = ["mediaRequests", "mediaRequestsAborted", "mediaRequestsTimedout", "mediaRequestsErrored", "mediaTransferDuration", "mediaBytesTransferred", "mediaAppends"];
var Vm = function(e10) {
  return this.audioSegmentLoader_[e10] + this.mainSegmentLoader_[e10];
};
var zm = function({ currentPlaylist: e10, buffered: t3, currentTime: i5, nextPlaylist: s5, bufferLowWaterLine: n4, bufferHighWaterLine: r5, duration: a9, bufferBasedABR: o4, log: l7 }) {
  if (!s5) return du.log.warn("We received no playlist to switch to. Please check your stream."), false;
  const h3 = `allowing switch ${e10 && e10.id || "null"} -> ${s5.id}`;
  if (!e10) return l7(`${h3} as current playlist is not set`), true;
  if (s5.id === e10.id) return false;
  const u6 = Boolean(ku(t3, i5).length);
  if (!e10.endList) return u6 || "number" != typeof e10.partTargetDuration ? (l7(`${h3} as current playlist is live`), true) : (l7(`not ${h3} as current playlist is live llhls, but currentTime isn't in buffered.`), false);
  const d2 = Ru(t3, i5), c5 = o4 ? yc.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : yc.MAX_BUFFER_LOW_WATER_LINE;
  if (a9 < c5) return l7(`${h3} as duration < max low water line (${a9} < ${c5})`), true;
  const p5 = s5.attributes.BANDWIDTH, m7 = e10.attributes.BANDWIDTH;
  if (p5 < m7 && (!o4 || d2 < r5)) {
    let e11 = `${h3} as next bandwidth < current bandwidth (${p5} < ${m7})`;
    return o4 && (e11 += ` and forwardBuffer < bufferHighWaterLine (${d2} < ${r5})`), l7(e11), true;
  }
  if ((!o4 || p5 > m7) && d2 >= n4) {
    let e11 = `${h3} as forwardBuffer >= bufferLowWaterLine (${d2} >= ${n4})`;
    return o4 && (e11 += ` and next bandwidth > current bandwidth (${p5} > ${m7})`), l7(e11), true;
  }
  return l7(`not ${h3} as no switching criteria met`), false;
};
var Wm = class extends du.EventTarget {
  constructor(e10) {
    super(), this.fastQualityChange_ = qm(this.fastQualityChange_.bind(this), 100);
    const { src: t3, withCredentials: i5, tech: s5, bandwidth: n4, externVhs: r5, useCueTags: a9, playlistExclusionDuration: o4, enableLowInitialPlaylist: l7, sourceType: h3, cacheEncryptionKeys: u6, bufferBasedABR: d2, leastPixelDiffSelector: c5, captionServices: p5, experimentalUseMMS: m7 } = e10;
    if (!t3) throw new Error("A non-empty playlist URL or JSON manifest string is required");
    let { maxPlaylistRetries: g2 } = e10;
    null == g2 && (g2 = 1 / 0), $m = r5, this.bufferBasedABR = Boolean(d2), this.leastPixelDiffSelector = Boolean(c5), this.withCredentials = i5, this.tech_ = s5, this.vhs_ = s5.vhs, this.player_ = e10.player_, this.sourceType_ = h3, this.useCueTags_ = a9, this.playlistExclusionDuration = o4, this.maxPlaylistRetries = g2, this.enableLowInitialPlaylist = l7, this.usingManagedMediaSource_ = false, this.useCueTags_ && (this.cueTagsTrack_ = this.tech_.addTextTrack("metadata", "ad-cues"), this.cueTagsTrack_.inBandMetadataTrackDispatchType = ""), this.requestOptions_ = { withCredentials: i5, maxPlaylistRetries: g2, timeout: null }, this.on("error", this.pauseLoading), this.mediaTypes_ = Um(), m7 && b3.ManagedMediaSource ? (this.tech_.el_.disableRemotePlayback = true, this.mediaSource = new b3.ManagedMediaSource(), this.usingManagedMediaSource_ = true, du.log("Using ManagedMediaSource")) : b3.MediaSource && (this.mediaSource = new b3.MediaSource()), this.handleDurationChange_ = this.handleDurationChange_.bind(this), this.handleSourceOpen_ = this.handleSourceOpen_.bind(this), this.handleSourceEnded_ = this.handleSourceEnded_.bind(this), this.load = this.load.bind(this), this.pause = this.pause.bind(this), this.mediaSource.addEventListener("durationchange", this.handleDurationChange_), this.mediaSource.addEventListener("sourceopen", this.handleSourceOpen_), this.mediaSource.addEventListener("sourceended", this.handleSourceEnded_), this.mediaSource.addEventListener("startstreaming", this.load), this.mediaSource.addEventListener("endstreaming", this.pause), this.seekable_ = Tu(), this.hasPlayed_ = false, this.syncController_ = new vm(e10), this.segmentMetadataTrack_ = s5.addRemoteTextTrack({ kind: "metadata", label: "segment-metadata" }, false).track, this.segmentMetadataTrack_.mode = "hidden", this.decrypter_ = new Sm(), this.sourceUpdater_ = new rm(this.mediaSource), this.inbandTextTracks_ = {}, this.timelineChangeController_ = new bm(), this.keyStatusMap_ = /* @__PURE__ */ new Map();
    const f3 = { vhs: this.vhs_, parse708captions: e10.parse708captions, useDtsForTimestampOffset: e10.useDtsForTimestampOffset, captionServices: p5, mediaSource: this.mediaSource, currentTime: this.tech_.currentTime.bind(this.tech_), seekable: () => this.seekable(), seeking: () => this.tech_.seeking(), duration: () => this.duration(), hasPlayed: () => this.hasPlayed_, goalBufferLength: () => this.goalBufferLength(), bandwidth: n4, syncController: this.syncController_, decrypter: this.decrypter_, sourceType: this.sourceType_, inbandTextTracks: this.inbandTextTracks_, cacheEncryptionKeys: u6, sourceUpdater: this.sourceUpdater_, timelineChangeController: this.timelineChangeController_, exactManifestTimings: e10.exactManifestTimings, addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this) };
    this.mainPlaylistLoader_ = "dash" === this.sourceType_ ? new fc(t3, this.vhs_, bu(this.requestOptions_, { addMetadataToTextTrack: this.addMetadataToTextTrack.bind(this) })) : new Od(t3, this.vhs_, bu(this.requestOptions_, { addDateRangesToTextTrack: this.addDateRangesToTextTrack_.bind(this) })), this.setupMainPlaylistLoaderListeners_(), this.mainSegmentLoader_ = new Gp(bu(f3, { segmentMetadataTrack: this.segmentMetadataTrack_, loaderType: "main" }), e10), this.audioSegmentLoader_ = new Gp(bu(f3, { loaderType: "audio" }), e10), this.subtitleSegmentLoader_ = new um(bu(f3, { loaderType: "vtt", featuresNativeTextTracks: this.tech_.featuresNativeTextTracks, loadVttJs: () => new Promise((e11, t4) => {
      function i6() {
        s5.off("vttjserror", n5), e11();
      }
      function n5() {
        s5.off("vttjsloaded", i6), t4();
      }
      s5.one("vttjsloaded", i6), s5.one("vttjserror", n5), s5.addWebVttScript_();
    }) }), e10);
    const y4 = () => this.mainSegmentLoader_.bandwidth;
    this.contentSteeringController_ = new Fm(this.vhs_.xhr, y4), this.setupSegmentLoaderListeners_(), this.bufferBasedABR && (this.mainPlaylistLoader_.one("loadedplaylist", () => this.startABRTimer_()), this.tech_.on("pause", () => this.stopABRTimer_()), this.tech_.on("play", () => this.startABRTimer_())), Hm.forEach((e11) => {
      this[e11 + "_"] = Vm.bind(this, e11);
    }), this.logger_ = vu("pc"), this.triggeredFmp4Usage = false, "none" === this.tech_.preload() ? (this.loadOnPlay_ = () => {
      this.loadOnPlay_ = null, this.mainPlaylistLoader_.load();
    }, this.tech_.one("play", this.loadOnPlay_)) : this.mainPlaylistLoader_.load(), this.timeToLoadedData__ = -1, this.mainAppendsToLoadedData__ = -1, this.audioAppendsToLoadedData__ = -1;
    const _3 = "none" === this.tech_.preload() ? "play" : "loadstart";
    this.tech_.one(_3, () => {
      const e11 = Date.now();
      this.tech_.one("loadeddata", () => {
        this.timeToLoadedData__ = Date.now() - e11, this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends, this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;
      });
    });
  }
  mainAppendsToLoadedData_() {
    return this.mainAppendsToLoadedData__;
  }
  audioAppendsToLoadedData_() {
    return this.audioAppendsToLoadedData__;
  }
  appendsToLoadedData_() {
    const e10 = this.mainAppendsToLoadedData_(), t3 = this.audioAppendsToLoadedData_();
    return -1 === e10 || -1 === t3 ? -1 : e10 + t3;
  }
  timeToLoadedData_() {
    return this.timeToLoadedData__;
  }
  checkABR_(e10 = "abr") {
    const t3 = this.selectPlaylist();
    t3 && this.shouldSwitchToMedia_(t3) && this.switchMedia_(t3, e10);
  }
  switchMedia_(e10, t3, i5) {
    const s5 = this.media(), n4 = s5 && (s5.id || s5.uri), r5 = e10 && (e10.id || e10.uri);
    if (n4 && n4 !== r5) {
      this.logger_(`switch media ${n4} -> ${r5} from ${t3}`);
      const i6 = { renditionInfo: { id: r5, bandwidth: e10.attributes.BANDWIDTH, resolution: e10.attributes.RESOLUTION, codecs: e10.attributes.CODECS }, cause: t3 };
      this.trigger({ type: "renditionselected", metadata: i6 }), this.tech_.trigger({ type: "usage", name: `vhs-rendition-change-${t3}` });
    }
    this.mainPlaylistLoader_.media(e10, i5);
  }
  switchMediaForDASHContentSteering_() {
    ["AUDIO", "SUBTITLES", "CLOSED-CAPTIONS"].forEach((e10) => {
      const t3 = this.mediaTypes_[e10], i5 = t3 ? t3.activeGroup() : null, s5 = this.contentSteeringController_.getPathway();
      if (i5 && s5) {
        const t4 = (i5.length ? i5[0].playlists : i5.playlists).filter((e11) => e11.attributes.serviceLocation === s5);
        t4.length && this.mediaTypes_[e10].activePlaylistLoader.media(t4[0]);
      }
    });
  }
  startABRTimer_() {
    this.stopABRTimer_(), this.abrTimer_ = b3.setInterval(() => this.checkABR_(), 250);
  }
  stopABRTimer_() {
    this.tech_.scrubbing && this.tech_.scrubbing() || (b3.clearInterval(this.abrTimer_), this.abrTimer_ = null);
  }
  getAudioTrackPlaylists_() {
    const e10 = this.main(), t3 = e10 && e10.playlists || [];
    if (!e10 || !e10.mediaGroups || !e10.mediaGroups.AUDIO) return t3;
    const i5 = e10.mediaGroups.AUDIO, s5 = Object.keys(i5);
    let n4;
    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) n4 = this.mediaTypes_.AUDIO.activeTrack();
    else {
      const e11 = i5.main || s5.length && i5[s5[0]];
      for (const t4 in e11) if (e11[t4].default) {
        n4 = { label: t4 };
        break;
      }
    }
    if (!n4) return t3;
    const r5 = [];
    for (const a9 in i5) if (i5[a9][n4.label]) {
      const t4 = i5[a9][n4.label];
      if (t4.playlists && t4.playlists.length) r5.push.apply(r5, t4.playlists);
      else if (t4.uri) r5.push(t4);
      else if (e10.playlists.length) for (let i6 = 0; i6 < e10.playlists.length; i6++) {
        const t5 = e10.playlists[i6];
        t5.attributes && t5.attributes.AUDIO && t5.attributes.AUDIO === a9 && r5.push(t5);
      }
    }
    return r5.length ? r5 : t3;
  }
  setupMainPlaylistLoaderListeners_() {
    this.mainPlaylistLoader_.on("loadedmetadata", () => {
      const e10 = this.mainPlaylistLoader_.media(), t3 = 1.5 * e10.targetDuration * 1e3;
      Ju(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media()) ? this.requestOptions_.timeout = 0 : this.requestOptions_.timeout = t3, e10.endList && "none" !== this.tech_.preload() && (this.mainSegmentLoader_.playlist(e10, this.requestOptions_), this.mainSegmentLoader_.load()), Mm({ sourceType: this.sourceType_, segmentLoaders: { AUDIO: this.audioSegmentLoader_, SUBTITLES: this.subtitleSegmentLoader_, main: this.mainSegmentLoader_ }, tech: this.tech_, requestOptions: this.requestOptions_, mainPlaylistLoader: this.mainPlaylistLoader_, vhs: this.vhs_, main: this.main(), mediaTypes: this.mediaTypes_, excludePlaylist: this.excludePlaylist.bind(this) }), this.triggerPresenceUsage_(this.main(), e10), this.setupFirstPlay(), !this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media() ? this.trigger("selectedinitialmedia") : this.mediaTypes_.AUDIO.activePlaylistLoader.one("loadedmetadata", () => {
        this.trigger("selectedinitialmedia");
      });
    }), this.mainPlaylistLoader_.on("loadedplaylist", () => {
      this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_);
      let e10 = this.mainPlaylistLoader_.media();
      if (!e10) {
        let t3;
        if (this.attachContentSteeringListeners_(), this.initContentSteeringController_(), this.excludeUnsupportedVariants_(), this.enableLowInitialPlaylist && (t3 = this.selectInitialPlaylist()), t3 || (t3 = this.selectPlaylist()), !t3 || !this.shouldSwitchToMedia_(t3)) return;
        this.initialMedia_ = t3, this.switchMedia_(this.initialMedia_, "initial");
        if (!("vhs-json" === this.sourceType_ && this.initialMedia_.segments)) return;
        e10 = this.initialMedia_;
      }
      this.handleUpdatedMediaPlaylist(e10);
    }), this.mainPlaylistLoader_.on("error", () => {
      const e10 = this.mainPlaylistLoader_.error;
      this.excludePlaylist({ playlistToExclude: e10.playlist, error: e10 });
    }), this.mainPlaylistLoader_.on("mediachanging", () => {
      this.mainSegmentLoader_.abort(), this.mainSegmentLoader_.pause();
    }), this.mainPlaylistLoader_.on("mediachange", () => {
      const e10 = this.mainPlaylistLoader_.media(), t3 = 1.5 * e10.targetDuration * 1e3;
      Ju(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media()) ? this.requestOptions_.timeout = 0 : this.requestOptions_.timeout = t3, "dash" === this.sourceType_ && this.mainPlaylistLoader_.isPaused && this.mainPlaylistLoader_.load(), this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.playlist(e10, this.requestOptions_), this.waitingForFastQualityPlaylistReceived_ ? this.runFastQualitySwitch_() : this.mainSegmentLoader_.load(), this.tech_.trigger({ type: "mediachange", bubbles: true });
    }), this.mainPlaylistLoader_.on("playlistunchanged", () => {
      const e10 = this.mainPlaylistLoader_.media();
      if ("playlist-unchanged" === e10.lastExcludeReason_) return;
      this.stuckAtPlaylistEnd_(e10) && (this.excludePlaylist({ error: { message: "Playlist no longer updating.", reason: "playlist-unchanged" } }), this.tech_.trigger("playliststuck"));
    }), this.mainPlaylistLoader_.on("renditiondisabled", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-rendition-disabled" });
    }), this.mainPlaylistLoader_.on("renditionenabled", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-rendition-enabled" });
    });
    ["manifestrequeststart", "manifestrequestcomplete", "manifestparsestart", "manifestparsecomplete", "playlistrequeststart", "playlistrequestcomplete", "playlistparsestart", "playlistparsecomplete", "renditiondisabled", "renditionenabled"].forEach((e10) => {
      this.mainPlaylistLoader_.on(e10, (e11) => {
        this.player_.trigger(Fe({}, e11));
      });
    });
  }
  handleUpdatedMediaPlaylist(e10) {
    this.useCueTags_ && this.updateAdCues_(e10), this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.playlist(e10, this.requestOptions_), this.waitingForFastQualityPlaylistReceived_ && this.runFastQualitySwitch_(), this.updateDuration(!e10.endList), this.tech_.paused() || (this.mainSegmentLoader_.load(), this.audioSegmentLoader_ && this.audioSegmentLoader_.load());
  }
  triggerPresenceUsage_(e10, t3) {
    const i5 = e10.mediaGroups || {};
    let s5 = true;
    const n4 = Object.keys(i5.AUDIO);
    for (const r5 in i5.AUDIO) for (const e11 in i5.AUDIO[r5]) {
      i5.AUDIO[r5][e11].uri || (s5 = false);
    }
    s5 && this.tech_.trigger({ type: "usage", name: "vhs-demuxed" }), Object.keys(i5.SUBTITLES).length && this.tech_.trigger({ type: "usage", name: "vhs-webvtt" }), $m.Playlist.isAes(t3) && this.tech_.trigger({ type: "usage", name: "vhs-aes" }), n4.length && Object.keys(i5.AUDIO[n4[0]]).length > 1 && this.tech_.trigger({ type: "usage", name: "vhs-alternate-audio" }), this.useCueTags_ && this.tech_.trigger({ type: "usage", name: "vhs-playlist-cue-tags" });
  }
  shouldSwitchToMedia_(e10) {
    const t3 = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_, i5 = this.tech_.currentTime(), s5 = this.bufferLowWaterLine(), n4 = this.bufferHighWaterLine(), r5 = this.tech_.buffered();
    return zm({ buffered: r5, currentTime: i5, currentPlaylist: t3, nextPlaylist: e10, bufferLowWaterLine: s5, bufferHighWaterLine: n4, duration: this.duration(), bufferBasedABR: this.bufferBasedABR, log: this.logger_ });
  }
  setupSegmentLoaderListeners_() {
    this.mainSegmentLoader_.on("bandwidthupdate", () => {
      this.checkABR_("bandwidthupdate"), this.tech_.trigger("bandwidthupdate");
    }), this.mainSegmentLoader_.on("timeout", () => {
      this.bufferBasedABR && this.mainSegmentLoader_.load();
    }), this.bufferBasedABR || this.mainSegmentLoader_.on("progress", () => {
      this.trigger("progress");
    }), this.mainSegmentLoader_.on("error", () => {
      const e11 = this.mainSegmentLoader_.error();
      this.excludePlaylist({ playlistToExclude: e11.playlist, error: e11 });
    }), this.mainSegmentLoader_.on("appenderror", () => {
      this.error = this.mainSegmentLoader_.error_, this.trigger("error");
    }), this.mainSegmentLoader_.on("syncinfoupdate", () => {
      this.onSyncInfoUpdate_();
    }), this.mainSegmentLoader_.on("timestampoffset", () => {
      this.tech_.trigger({ type: "usage", name: "vhs-timestamp-offset" });
    }), this.audioSegmentLoader_.on("syncinfoupdate", () => {
      this.onSyncInfoUpdate_();
    }), this.audioSegmentLoader_.on("appenderror", () => {
      this.error = this.audioSegmentLoader_.error_, this.trigger("error");
    }), this.mainSegmentLoader_.on("ended", () => {
      this.logger_("main segment loader ended"), this.onEndOfStream();
    }), this.timelineChangeController_.on("audioTimelineBehind", () => {
      const e11 = this.audioSegmentLoader_.pendingSegment_;
      if (!e11 || !e11.segment || !e11.segment.syncInfo) return;
      const t3 = e11.segment.syncInfo.end + 0.01;
      this.tech_.setCurrentTime(t3);
    }), this.timelineChangeController_.on("fixBadTimelineChange", () => {
      this.logger_("Fix bad timeline change. Restarting al segment loaders..."), this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.resetEverything(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.pause(), this.audioSegmentLoader_.resetEverything()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.pause(), this.subtitleSegmentLoader_.resetEverything()), this.load();
    }), this.mainSegmentLoader_.on("earlyabort", (e11) => {
      this.bufferBasedABR || (this.delegateLoaders_("all", ["abort"]), this.excludePlaylist({ error: { message: "Aborted early because there isn't enough bandwidth to complete the request without rebuffering." }, playlistExclusionDuration: jm }));
    });
    const e10 = () => {
      if (!this.sourceUpdater_.hasCreatedSourceBuffers()) return this.tryToCreateSourceBuffers_();
      const e11 = this.getCodecsOrExclude_();
      e11 && this.sourceUpdater_.addOrChangeSourceBuffers(e11);
    };
    this.mainSegmentLoader_.on("trackinfo", e10), this.audioSegmentLoader_.on("trackinfo", e10), this.mainSegmentLoader_.on("fmp4", () => {
      this.triggeredFmp4Usage || (this.tech_.trigger({ type: "usage", name: "vhs-fmp4" }), this.triggeredFmp4Usage = true);
    }), this.audioSegmentLoader_.on("fmp4", () => {
      this.triggeredFmp4Usage || (this.tech_.trigger({ type: "usage", name: "vhs-fmp4" }), this.triggeredFmp4Usage = true);
    }), this.audioSegmentLoader_.on("ended", () => {
      this.logger_("audioSegmentLoader ended"), this.onEndOfStream();
    });
    ["segmentselected", "segmentloadstart", "segmentloaded", "segmentkeyloadstart", "segmentkeyloadcomplete", "segmentdecryptionstart", "segmentdecryptioncomplete", "segmenttransmuxingstart", "segmenttransmuxingcomplete", "segmenttransmuxingtrackinfoavailable", "segmenttransmuxingtiminginfoavailable", "segmentappendstart", "appendsdone", "bandwidthupdated", "timelinechange", "codecschange"].forEach((e11) => {
      this.mainSegmentLoader_.on(e11, (e12) => {
        this.player_.trigger(Fe({}, e12));
      }), this.audioSegmentLoader_.on(e11, (e12) => {
        this.player_.trigger(Fe({}, e12));
      }), this.subtitleSegmentLoader_.on(e11, (e12) => {
        this.player_.trigger(Fe({}, e12));
      });
    });
  }
  mediaSecondsLoaded_() {
    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);
  }
  load() {
    this.mainSegmentLoader_.load(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.load(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.load();
  }
  pause() {
    this.mainSegmentLoader_.pause(), this.mediaTypes_.AUDIO.activePlaylistLoader && this.audioSegmentLoader_.pause(), this.mediaTypes_.SUBTITLES.activePlaylistLoader && this.subtitleSegmentLoader_.pause();
  }
  fastQualityChange_(e10 = this.selectPlaylist()) {
    e10 && e10 === this.mainPlaylistLoader_.media() ? this.logger_("skipping fastQualityChange because new media is same as old") : (this.switchMedia_(e10, "fast-quality"), this.waitingForFastQualityPlaylistReceived_ = true);
  }
  runFastQualitySwitch_() {
    this.waitingForFastQualityPlaylistReceived_ = false, this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.resetEverything(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.pause(), this.audioSegmentLoader_.resetEverything()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.pause(), this.subtitleSegmentLoader_.resetEverything()), this.load();
  }
  play() {
    if (this.setupFirstPlay()) return;
    this.tech_.ended() && this.tech_.setCurrentTime(0), this.hasPlayed_ && this.load();
    const e10 = this.tech_.seekable();
    return this.tech_.duration() === 1 / 0 && this.tech_.currentTime() < e10.start(0) ? this.tech_.setCurrentTime(e10.end(e10.length - 1)) : void 0;
  }
  setupFirstPlay() {
    const e10 = this.mainPlaylistLoader_.media();
    if (!e10 || this.tech_.paused() || this.hasPlayed_) return false;
    if (!e10.endList || e10.start) {
      const t3 = this.seekable();
      if (!t3.length) return false;
      const i5 = t3.end(0);
      let s5 = i5;
      if (e10.start) {
        const n4 = e10.start.timeOffset;
        s5 = n4 < 0 ? Math.max(i5 + n4, t3.start(0)) : Math.min(i5, n4);
      }
      this.trigger("firstplay"), this.tech_.setCurrentTime(s5);
    }
    return this.hasPlayed_ = true, this.load(), true;
  }
  handleSourceOpen_() {
    if (this.tryToCreateSourceBuffers_(), this.tech_.autoplay()) {
      const e10 = this.tech_.play();
      void 0 !== e10 && "function" == typeof e10.then && e10.then(null, (e11) => {
      });
    }
    this.trigger("sourceopen");
  }
  handleSourceEnded_() {
    if (!this.inbandTextTracks_.metadataTrack_) return;
    const e10 = this.inbandTextTracks_.metadataTrack_.cues;
    if (!e10 || !e10.length) return;
    const t3 = this.duration();
    e10[e10.length - 1].endTime = isNaN(t3) || Math.abs(t3) === 1 / 0 ? Number.MAX_VALUE : t3;
  }
  handleDurationChange_() {
    this.tech_.trigger("durationchange");
  }
  onEndOfStream() {
    let e10 = this.mainSegmentLoader_.ended_;
    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
      const t3 = this.mainSegmentLoader_.getCurrentMediaInfo_();
      e10 = !t3 || t3.hasVideo ? e10 && this.audioSegmentLoader_.ended_ : this.audioSegmentLoader_.ended_;
    }
    e10 && (this.stopABRTimer_(), this.sourceUpdater_.endOfStream());
  }
  stuckAtPlaylistEnd_(e10) {
    if (!this.seekable().length) return false;
    const t3 = this.syncController_.getExpiredTime(e10, this.duration());
    if (null === t3) return false;
    const i5 = $m.Playlist.playlistEnd(e10, t3), s5 = this.tech_.currentTime(), n4 = this.tech_.buffered();
    if (!n4.length) return i5 - s5 <= wu;
    const r5 = n4.end(n4.length - 1);
    return r5 - s5 <= wu && i5 - r5 <= wu;
  }
  excludePlaylist({ playlistToExclude: e10 = this.mainPlaylistLoader_.media(), error: t3 = {}, playlistExclusionDuration: i5 }) {
    if (e10 = e10 || this.mainPlaylistLoader_.media(), i5 = i5 || t3.playlistExclusionDuration || this.playlistExclusionDuration, !e10) return this.error = t3, void ("open" !== this.mediaSource.readyState ? this.trigger("error") : this.sourceUpdater_.endOfStream("network"));
    e10.playlistErrors_++;
    const s5 = this.mainPlaylistLoader_.main.playlists, n4 = s5.filter(Ku), r5 = 1 === n4.length && n4[0] === e10;
    if (1 === s5.length && i5 !== 1 / 0) return du.log.warn(`Problem encountered with playlist ${e10.id}. Trying again since it is the only playlist.`), this.tech_.trigger("retryplaylist"), this.mainPlaylistLoader_.load(r5);
    if (r5) {
      if (this.main().contentSteering) {
        const t5 = this.pathwayAttribute_(e10), i6 = 1e3 * this.contentSteeringController_.steeringManifest.ttl;
        return this.contentSteeringController_.excludePathway(t5), this.excludeThenChangePathway_(), void setTimeout(() => {
          this.contentSteeringController_.addAvailablePathway(t5);
        }, i6);
      }
      let t4 = false;
      s5.forEach((i6) => {
        if (i6 === e10) return;
        const s6 = i6.excludeUntil;
        void 0 !== s6 && s6 !== 1 / 0 && (t4 = true, delete i6.excludeUntil);
      }), t4 && (du.log.warn("Removing other playlists from the exclusion list because the last rendition is about to be excluded."), this.tech_.trigger("retryplaylist"));
    }
    let a9;
    a9 = e10.playlistErrors_ > this.maxPlaylistRetries ? 1 / 0 : Date.now() + 1e3 * i5, e10.excludeUntil = a9, t3.reason && (e10.lastExcludeReason_ = t3.reason), this.tech_.trigger("excludeplaylist"), this.tech_.trigger({ type: "usage", name: "vhs-rendition-excluded" });
    const o4 = this.selectPlaylist();
    if (!o4) return this.error = "Playback cannot continue. No available working or supported playlists.", void this.trigger("error");
    const l7 = t3.internal ? this.logger_ : du.log.warn, h3 = t3.message ? " " + t3.message : "";
    l7(`${t3.internal ? "Internal problem" : "Problem"} encountered with playlist ${e10.id}.${h3} Switching to playlist ${o4.id}.`), o4.attributes.AUDIO !== e10.attributes.AUDIO && this.delegateLoaders_("audio", ["abort", "pause"]), o4.attributes.SUBTITLES !== e10.attributes.SUBTITLES && this.delegateLoaders_("subtitle", ["abort", "pause"]), this.delegateLoaders_("main", ["abort", "pause"]);
    const u6 = o4.targetDuration / 2 * 1e3 || 5e3, d2 = "number" == typeof o4.lastRequest && Date.now() - o4.lastRequest <= u6;
    return this.switchMedia_(o4, "exclude", r5 || d2);
  }
  pauseLoading() {
    this.delegateLoaders_("all", ["abort", "pause"]), this.stopABRTimer_();
  }
  delegateLoaders_(e10, t3) {
    const i5 = [], s5 = "all" === e10;
    (s5 || "main" === e10) && i5.push(this.mainPlaylistLoader_);
    const n4 = [];
    (s5 || "audio" === e10) && n4.push("AUDIO"), (s5 || "subtitle" === e10) && (n4.push("CLOSED-CAPTIONS"), n4.push("SUBTITLES")), n4.forEach((e11) => {
      const t4 = this.mediaTypes_[e11] && this.mediaTypes_[e11].activePlaylistLoader;
      t4 && i5.push(t4);
    }), ["main", "audio", "subtitle"].forEach((t4) => {
      const s6 = this[`${t4}SegmentLoader_`];
      !s6 || e10 !== t4 && "all" !== e10 || i5.push(s6);
    }), i5.forEach((e11) => t3.forEach((t4) => {
      "function" == typeof e11[t4] && e11[t4]();
    }));
  }
  setCurrentTime(e10) {
    const t3 = ku(this.tech_.buffered(), e10);
    return this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media() && this.mainPlaylistLoader_.media().segments ? t3 && t3.length ? e10 : (this.mainSegmentLoader_.pause(), this.mainSegmentLoader_.resetEverything(), this.mediaTypes_.AUDIO.activePlaylistLoader && (this.audioSegmentLoader_.pause(), this.audioSegmentLoader_.resetEverything()), this.mediaTypes_.SUBTITLES.activePlaylistLoader && (this.subtitleSegmentLoader_.pause(), this.subtitleSegmentLoader_.resetEverything()), void this.load()) : 0;
  }
  duration() {
    if (!this.mainPlaylistLoader_) return 0;
    const e10 = this.mainPlaylistLoader_.media();
    return e10 ? e10.endList ? this.mediaSource ? this.mediaSource.duration : $m.Playlist.duration(e10) : 1 / 0 : 0;
  }
  seekable() {
    return this.seekable_;
  }
  getSeekableRange_(e10, t3) {
    const i5 = e10.media();
    if (!i5) return null;
    const s5 = this.syncController_.getMediaSequenceSync(t3);
    if (s5 && s5.isReliable) {
      const e11 = s5.start, t4 = s5.end;
      if (!isFinite(e11) || !isFinite(t4)) return null;
      const n5 = $m.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, i5);
      return Tu([[e11, Math.max(e11, t4 - n5)]]);
    }
    const n4 = this.syncController_.getExpiredTime(i5, this.duration());
    if (null === n4) return null;
    const r5 = $m.Playlist.seekable(i5, n4, $m.Playlist.liveEdgeDelay(this.mainPlaylistLoader_.main, i5));
    return r5.length ? r5 : null;
  }
  computeFinalSeekable_(e10, t3) {
    if (!t3) return e10;
    const i5 = e10.start(0), s5 = e10.end(0), n4 = t3.start(0), r5 = t3.end(0);
    return n4 > s5 || i5 > r5 ? e10 : Tu([[Math.max(i5, n4), Math.min(s5, r5)]]);
  }
  onSyncInfoUpdate_() {
    if (!this.mainPlaylistLoader_) return;
    const e10 = this.getSeekableRange_(this.mainPlaylistLoader_, "main");
    if (!e10) return;
    let t3;
    if (this.mediaTypes_.AUDIO.activePlaylistLoader && (t3 = this.getSeekableRange_(this.mediaTypes_.AUDIO.activePlaylistLoader, "audio"), !t3)) return;
    const i5 = this.seekable_;
    if (this.seekable_ = this.computeFinalSeekable_(e10, t3), !this.seekable_) return;
    if (i5 && i5.length && this.seekable_.length && i5.start(0) === this.seekable_.start(0) && i5.end(0) === this.seekable_.end(0)) return;
    this.logger_(`seekable updated [${Du(this.seekable_)}]`);
    const s5 = { seekableRanges: this.seekable_ };
    this.trigger({ type: "seekablerangeschanged", metadata: s5 }), this.tech_.trigger("seekablechanged");
  }
  updateDuration(e10) {
    if (this.updateDuration_ && (this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.updateDuration_ = null), "open" !== this.mediaSource.readyState) return this.updateDuration_ = this.updateDuration.bind(this, e10), void this.mediaSource.addEventListener("sourceopen", this.updateDuration_);
    if (e10) {
      const e11 = this.seekable();
      if (!e11.length) return;
      return void ((isNaN(this.mediaSource.duration) || this.mediaSource.duration < e11.end(e11.length - 1)) && this.sourceUpdater_.setDuration(e11.end(e11.length - 1)));
    }
    const t3 = this.tech_.buffered();
    let i5 = $m.Playlist.duration(this.mainPlaylistLoader_.media());
    t3.length > 0 && (i5 = Math.max(i5, t3.end(t3.length - 1))), this.mediaSource.duration !== i5 && this.sourceUpdater_.setDuration(i5);
  }
  dispose() {
    this.trigger("dispose"), this.decrypter_.terminate(), this.mainPlaylistLoader_.dispose(), this.mainSegmentLoader_.dispose(), this.contentSteeringController_.dispose(), this.keyStatusMap_.clear(), this.loadOnPlay_ && this.tech_.off("play", this.loadOnPlay_), ["AUDIO", "SUBTITLES"].forEach((e10) => {
      const t3 = this.mediaTypes_[e10].groups;
      for (const i5 in t3) t3[i5].forEach((e11) => {
        e11.playlistLoader && e11.playlistLoader.dispose();
      });
    }), this.audioSegmentLoader_.dispose(), this.subtitleSegmentLoader_.dispose(), this.sourceUpdater_.dispose(), this.timelineChangeController_.dispose(), this.stopABRTimer_(), this.updateDuration_ && this.mediaSource.removeEventListener("sourceopen", this.updateDuration_), this.mediaSource.removeEventListener("durationchange", this.handleDurationChange_), this.mediaSource.removeEventListener("sourceopen", this.handleSourceOpen_), this.mediaSource.removeEventListener("sourceended", this.handleSourceEnded_), this.off();
  }
  main() {
    return this.mainPlaylistLoader_.main;
  }
  media() {
    return this.mainPlaylistLoader_.media() || this.initialMedia_;
  }
  areMediaTypesKnown_() {
    const e10 = !!this.mediaTypes_.AUDIO.activePlaylistLoader, t3 = !!this.mainSegmentLoader_.getCurrentMediaInfo_(), i5 = !e10 || !!this.audioSegmentLoader_.getCurrentMediaInfo_();
    return !(!t3 || !i5);
  }
  getCodecsOrExclude_() {
    const e10 = { main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {}, audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {} }, t3 = this.mainSegmentLoader_.getPendingSegmentPlaylist() || this.media();
    e10.video = e10.main;
    const i5 = Sd(this.main(), t3), s5 = {}, n4 = !!this.mediaTypes_.AUDIO.activePlaylistLoader;
    if (e10.main.hasVideo && (s5.video = i5.video || e10.main.videoCodec || ft), e10.main.isMuxed && (s5.video += `,${i5.audio || e10.main.audioCodec || gt}`), (e10.main.hasAudio && !e10.main.isMuxed || e10.audio.hasAudio || n4) && (s5.audio = i5.audio || e10.main.audioCodec || e10.audio.audioCodec || gt, e10.audio.isFmp4 = e10.main.hasAudio && !e10.main.isMuxed ? e10.main.isFmp4 : e10.audio.isFmp4), !s5.audio && !s5.video) return void this.excludePlaylist({ playlistToExclude: t3, error: { message: "Could not determine codecs for playlist." }, playlistExclusionDuration: 1 / 0 });
    const r5 = (e11, t4) => e11 ? pt(t4, this.usingManagedMediaSource_) : mt(t4), a9 = {};
    let o4;
    if (["video", "audio"].forEach(function(t4) {
      if (s5.hasOwnProperty(t4) && !r5(e10[t4].isFmp4, s5[t4])) {
        const i6 = e10[t4].isFmp4 ? "browser" : "muxer";
        a9[i6] = a9[i6] || [], a9[i6].push(s5[t4]), "audio" === t4 && (o4 = i6);
      }
    }), n4 && o4 && t3.attributes.AUDIO) {
      const e11 = t3.attributes.AUDIO;
      this.main().playlists.forEach((i6) => {
        (i6.attributes && i6.attributes.AUDIO) === e11 && i6 !== t3 && (i6.excludeUntil = 1 / 0);
      }), this.logger_(`excluding audio group ${e11} as ${o4} does not support codec(s): "${s5.audio}"`);
    }
    if (!Object.keys(a9).length) {
      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {
        const e11 = [];
        if (["video", "audio"].forEach((t4) => {
          const i6 = (lt(this.sourceUpdater_.codecs[t4] || "")[0] || {}).type, n5 = (lt(s5[t4] || "")[0] || {}).type;
          i6 && n5 && i6.toLowerCase() !== n5.toLowerCase() && e11.push(`"${this.sourceUpdater_.codecs[t4]}" -> "${s5[t4]}"`);
        }), e11.length) return void this.excludePlaylist({ playlistToExclude: t3, error: { message: `Codec switching not supported: ${e11.join(", ")}.`, internal: true }, playlistExclusionDuration: 1 / 0 });
      }
      return s5;
    }
    {
      const e11 = Object.keys(a9).reduce((e12, t4) => (e12 && (e12 += ", "), e12 += `${t4} does not support codec(s): "${a9[t4].join(",")}"`), "") + ".";
      this.excludePlaylist({ playlistToExclude: t3, error: { internal: true, message: e11 }, playlistExclusionDuration: 1 / 0 });
    }
  }
  tryToCreateSourceBuffers_() {
    if ("open" !== this.mediaSource.readyState || this.sourceUpdater_.hasCreatedSourceBuffers()) return;
    if (!this.areMediaTypesKnown_()) return;
    const e10 = this.getCodecsOrExclude_();
    if (!e10) return;
    this.sourceUpdater_.createSourceBuffers(e10);
    const t3 = [e10.video, e10.audio].filter(Boolean).join(",");
    this.excludeIncompatibleVariants_(t3);
  }
  excludeUnsupportedVariants_() {
    const e10 = this.main().playlists, t3 = [];
    Object.keys(e10).forEach((i5) => {
      const s5 = e10[i5];
      if (-1 !== t3.indexOf(s5.id)) return;
      t3.push(s5.id);
      const n4 = Sd(this.main, s5), r5 = [];
      !n4.audio || mt(n4.audio) || pt(n4.audio, this.usingManagedMediaSource_) || r5.push(`audio codec ${n4.audio}`), !n4.video || mt(n4.video) || pt(n4.video, this.usingManagedMediaSource_) || r5.push(`video codec ${n4.video}`), n4.text && "stpp.ttml.im1t" === n4.text && r5.push(`text codec ${n4.text}`), r5.length && (s5.excludeUntil = 1 / 0, this.logger_(`excluding ${s5.id} for unsupported: ${r5.join(", ")}`));
    });
  }
  excludeIncompatibleVariants_(e10) {
    const t3 = [], i5 = this.main().playlists, s5 = bd(lt(e10)), n4 = Td(s5), r5 = s5.video && lt(s5.video)[0] || null, a9 = s5.audio && lt(s5.audio)[0] || null;
    Object.keys(i5).forEach((e11) => {
      const s6 = i5[e11];
      if (-1 !== t3.indexOf(s6.id) || s6.excludeUntil === 1 / 0) return;
      t3.push(s6.id);
      const o4 = [], l7 = Sd(this.mainPlaylistLoader_.main, s6), h3 = Td(l7);
      if (l7.audio || l7.video) {
        if (h3 !== n4 && o4.push(`codec count "${h3}" !== "${n4}"`), !this.sourceUpdater_.canChangeType()) {
          const e12 = l7.video && lt(l7.video)[0] || null, t4 = l7.audio && lt(l7.audio)[0] || null;
          e12 && r5 && e12.type.toLowerCase() !== r5.type.toLowerCase() && o4.push(`video codec "${e12.type}" !== "${r5.type}"`), t4 && a9 && t4.type.toLowerCase() !== a9.type.toLowerCase() && o4.push(`audio codec "${t4.type}" !== "${a9.type}"`);
        }
        o4.length && (s6.excludeUntil = 1 / 0, this.logger_(`excluding ${s6.id}: ${o4.join(" && ")}`));
      }
    });
  }
  updateAdCues_(e10) {
    let t3 = 0;
    const i5 = this.seekable();
    i5.length && (t3 = i5.start(0)), cm(e10, this.cueTagsTrack_, t3);
  }
  goalBufferLength() {
    const e10 = this.tech_.currentTime(), t3 = yc.GOAL_BUFFER_LENGTH, i5 = yc.GOAL_BUFFER_LENGTH_RATE, s5 = Math.max(t3, yc.MAX_GOAL_BUFFER_LENGTH);
    return Math.min(t3 + e10 * i5, s5);
  }
  bufferLowWaterLine() {
    const e10 = this.tech_.currentTime(), t3 = yc.BUFFER_LOW_WATER_LINE, i5 = yc.BUFFER_LOW_WATER_LINE_RATE, s5 = Math.max(t3, yc.MAX_BUFFER_LOW_WATER_LINE), n4 = Math.max(t3, yc.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);
    return Math.min(t3 + e10 * i5, this.bufferBasedABR ? n4 : s5);
  }
  bufferHighWaterLine() {
    return yc.BUFFER_HIGH_WATER_LINE;
  }
  addDateRangesToTextTrack_(e10) {
    Sp(this.inbandTextTracks_, "com.apple.streaming", this.tech_), Tp({ inbandTextTracks: this.inbandTextTracks_, dateRanges: e10 });
  }
  addMetadataToTextTrack(e10, t3, i5) {
    const s5 = this.sourceUpdater_.videoBuffer ? this.sourceUpdater_.videoTimestampOffset() : this.sourceUpdater_.audioTimestampOffset();
    Sp(this.inbandTextTracks_, e10, this.tech_), _p({ inbandTextTracks: this.inbandTextTracks_, metadataArray: t3, timestampOffset: s5, videoDuration: i5 });
  }
  pathwayAttribute_(e10) {
    return e10.attributes["PATHWAY-ID"] || e10.attributes.serviceLocation;
  }
  initContentSteeringController_() {
    const e10 = this.main();
    if (e10.contentSteering) {
      for (const t3 of e10.playlists) this.contentSteeringController_.addAvailablePathway(this.pathwayAttribute_(t3));
      this.contentSteeringController_.assignTagProperties(e10.uri, e10.contentSteering), this.contentSteeringController_.queryBeforeStart ? this.contentSteeringController_.requestSteeringManifest(true) : this.tech_.one("canplay", () => {
        this.contentSteeringController_.requestSteeringManifest();
      });
    }
  }
  resetContentSteeringController_() {
    this.contentSteeringController_.clearAvailablePathways(), this.contentSteeringController_.dispose(), this.initContentSteeringController_();
  }
  attachContentSteeringListeners_() {
    this.contentSteeringController_.on("content-steering", this.excludeThenChangePathway_.bind(this));
    ["contentsteeringloadstart", "contentsteeringloadcomplete", "contentsteeringparsed"].forEach((e10) => {
      this.contentSteeringController_.on(e10, (e11) => {
        this.trigger(Fe({}, e11));
      });
    }), "dash" === this.sourceType_ && this.mainPlaylistLoader_.on("loadedplaylist", () => {
      const e10 = this.main();
      (this.contentSteeringController_.didDASHTagChange(e10.uri, e10.contentSteering) || (() => {
        const t3 = this.contentSteeringController_.getAvailablePathways(), i5 = [];
        for (const s5 of e10.playlists) {
          const e11 = s5.attributes.serviceLocation;
          if (e11 && (i5.push(e11), !t3.has(e11))) return true;
        }
        return !(i5.length || !t3.size);
      })()) && this.resetContentSteeringController_();
    });
  }
  excludeThenChangePathway_() {
    const e10 = this.contentSteeringController_.getPathway();
    if (!e10) return;
    this.handlePathwayClones_();
    const t3 = this.main().playlists, i5 = /* @__PURE__ */ new Set();
    let s5 = false;
    Object.keys(t3).forEach((n4) => {
      const r5 = t3[n4], a9 = this.pathwayAttribute_(r5), o4 = a9 && e10 !== a9;
      r5.excludeUntil === 1 / 0 && "content-steering" === r5.lastExcludeReason_ && !o4 && (delete r5.excludeUntil, delete r5.lastExcludeReason_, s5 = true);
      const l7 = !r5.excludeUntil && r5.excludeUntil !== 1 / 0;
      !i5.has(r5.id) && o4 && l7 && (i5.add(r5.id), r5.excludeUntil = 1 / 0, r5.lastExcludeReason_ = "content-steering", this.logger_(`excluding ${r5.id} for ${r5.lastExcludeReason_}`));
    }), "DASH" === this.contentSteeringController_.manifestType_ && Object.keys(this.mediaTypes_).forEach((t4) => {
      const i6 = this.mediaTypes_[t4];
      if (i6.activePlaylistLoader) {
        const t5 = i6.activePlaylistLoader.media_;
        t5 && t5.attributes.serviceLocation !== e10 && (s5 = true);
      }
    }), s5 && this.changeSegmentPathway_();
  }
  handlePathwayClones_() {
    const e10 = this.main().playlists, t3 = this.contentSteeringController_.currentPathwayClones, i5 = this.contentSteeringController_.nextPathwayClones;
    if (t3 && t3.size || i5 && i5.size) {
      for (const [e11, s5] of t3.entries()) {
        i5.get(e11) || (this.mainPlaylistLoader_.updateOrDeleteClone(s5), this.contentSteeringController_.excludePathway(e11));
      }
      for (const [s5, n4] of i5.entries()) {
        const i6 = t3.get(s5);
        if (i6) this.equalPathwayClones_(i6, n4) || (this.mainPlaylistLoader_.updateOrDeleteClone(n4, true), this.contentSteeringController_.addAvailablePathway(s5));
        else {
          e10.filter((e11) => e11.attributes["PATHWAY-ID"] === n4["BASE-ID"]).forEach((e11) => {
            this.mainPlaylistLoader_.addClonePathway(n4, e11);
          }), this.contentSteeringController_.addAvailablePathway(s5);
        }
      }
      this.contentSteeringController_.currentPathwayClones = new Map(JSON.parse(JSON.stringify([...i5])));
    }
  }
  equalPathwayClones_(e10, t3) {
    if (e10["BASE-ID"] !== t3["BASE-ID"] || e10.ID !== t3.ID || e10["URI-REPLACEMENT"].HOST !== t3["URI-REPLACEMENT"].HOST) return false;
    const i5 = e10["URI-REPLACEMENT"].PARAMS, s5 = t3["URI-REPLACEMENT"].PARAMS;
    for (const n4 in i5) if (i5[n4] !== s5[n4]) return false;
    for (const n4 in s5) if (i5[n4] !== s5[n4]) return false;
    return true;
  }
  changeSegmentPathway_() {
    const e10 = this.selectPlaylist();
    this.pauseLoading(), "DASH" === this.contentSteeringController_.manifestType_ && this.switchMediaForDASHContentSteering_(), this.switchMedia_(e10, "content-steering");
  }
  excludeNonUsablePlaylistsByKeyId_() {
    if (!this.mainPlaylistLoader_ || !this.mainPlaylistLoader_.main) return;
    let e10 = 0;
    const t3 = "non-usable";
    this.mainPlaylistLoader_.main.playlists.forEach((i5) => {
      const s5 = this.mainPlaylistLoader_.getKeyIdSet(i5);
      s5 && s5.size && s5.forEach((s6) => {
        const n4 = "usable", r5 = this.keyStatusMap_.has(s6) && this.keyStatusMap_.get(s6) === n4, a9 = i5.lastExcludeReason_ === t3 && i5.excludeUntil === 1 / 0;
        r5 ? r5 && a9 && (delete i5.excludeUntil, delete i5.lastExcludeReason_, this.logger_(`enabling playlist ${i5.id} because key ID ${s6} is ${n4}`)) : (i5.excludeUntil !== 1 / 0 && i5.lastExcludeReason_ !== t3 && (i5.excludeUntil = 1 / 0, i5.lastExcludeReason_ = t3, this.logger_(`excluding playlist ${i5.id} because the key ID ${s6} doesn't exist in the keyStatusMap or is not ${n4}`)), e10++);
      });
    }), e10 >= this.mainPlaylistLoader_.main.playlists.length && this.mainPlaylistLoader_.main.playlists.forEach((e11) => {
      const i5 = e11 && e11.attributes && e11.attributes.RESOLUTION && e11.attributes.RESOLUTION.height < 720, s5 = e11.excludeUntil === 1 / 0 && e11.lastExcludeReason_ === t3;
      i5 && s5 && (delete e11.excludeUntil, du.log.warn(`enabling non-HD playlist ${e11.id} because all playlists were excluded due to ${t3} key IDs`));
    });
  }
  addKeyStatus_(e10, t3) {
    const i5 = ("string" == typeof e10 ? e10 : om(e10)).slice(0, 32).toLowerCase();
    this.logger_(`KeyStatus '${t3}' with key ID ${i5} added to the keyStatusMap`), this.keyStatusMap_.set(i5, t3);
  }
  updatePlaylistByKeyStatus(e10, t3) {
    this.addKeyStatus_(e10, t3), this.waitingForFastQualityPlaylistReceived_ || this.excludeNonUsableThenChangePlaylist_(), this.mainPlaylistLoader_.off("loadedplaylist", this.excludeNonUsableThenChangePlaylist_.bind(this)), this.mainPlaylistLoader_.on("loadedplaylist", this.excludeNonUsableThenChangePlaylist_.bind(this));
  }
  excludeNonUsableThenChangePlaylist_() {
    this.excludeNonUsablePlaylistsByKeyId_(), this.fastQualityChange_();
  }
};
var Gm = (e10, t3, i5) => (s5) => {
  const n4 = e10.main.playlists[t3], r5 = Xu(n4), a9 = Ku(n4);
  if (void 0 === s5) return a9;
  s5 ? delete n4.disabled : n4.disabled = true;
  const o4 = { renditionInfo: { id: t3, bandwidth: n4.attributes.BANDWIDTH, resolution: n4.attributes.RESOLUTION, codecs: n4.attributes.CODECS }, cause: "fast-quality" };
  return s5 === a9 || r5 || (s5 ? (i5(n4), e10.trigger({ type: "renditionenabled", metadata: o4 })) : e10.trigger({ type: "renditiondisabled", metadata: o4 })), s5;
};
var Xm = class {
  constructor(e10, t3, i5) {
    const { playlistController_: s5 } = e10, n4 = s5.fastQualityChange_.bind(s5);
    if (t3.attributes) {
      const e11 = t3.attributes.RESOLUTION;
      this.width = e11 && e11.width, this.height = e11 && e11.height, this.bandwidth = t3.attributes.BANDWIDTH, this.frameRate = t3.attributes["FRAME-RATE"];
    }
    this.codecs = Sd(s5.main(), t3), this.playlist = t3, this.id = i5, this.enabled = Gm(e10.playlists, t3.id, n4);
  }
};
var Km = function(e10) {
  e10.representations = () => {
    const t3 = e10.playlistController_.main(), i5 = td(t3) ? e10.playlistController_.getAudioTrackPlaylists_() : t3.playlists;
    return i5 ? i5.filter((e11) => !Xu(e11)).map((t4, i6) => new Xm(e10, t4, t4.id)) : [];
  };
};
var Ym = ["seeking", "seeked", "pause", "playing", "error"];
var Qm = class extends du.EventTarget {
  constructor(e10) {
    super(), this.playlistController_ = e10.playlistController, this.tech_ = e10.tech, this.seekable = e10.seekable, this.allowSeeksWithinUnsafeLiveWindow = e10.allowSeeksWithinUnsafeLiveWindow, this.liveRangeSafeTimeDelta = e10.liveRangeSafeTimeDelta, this.media = e10.media, this.playedRanges_ = [], this.consecutiveUpdates = 0, this.lastRecordedTime = null, this.checkCurrentTimeTimeout_ = null, this.logger_ = vu("PlaybackWatcher"), this.logger_("initialize");
    const t3 = () => this.monitorCurrentTime_(), i5 = () => this.monitorCurrentTime_(), s5 = () => this.techWaiting_(), n4 = () => this.resetTimeUpdate_(), r5 = this.playlistController_, a9 = ["main", "subtitle", "audio"], o4 = {};
    a9.forEach((e11) => {
      o4[e11] = { reset: () => this.resetSegmentDownloads_(e11), updateend: () => this.checkSegmentDownloads_(e11) }, r5[`${e11}SegmentLoader_`].on("appendsdone", o4[e11].updateend), r5[`${e11}SegmentLoader_`].on("playlistupdate", o4[e11].reset), this.tech_.on(["seeked", "seeking"], o4[e11].reset);
    });
    const l7 = (e11) => {
      ["main", "audio"].forEach((t4) => {
        r5[`${t4}SegmentLoader_`][e11]("appended", this.seekingAppendCheck_);
      });
    };
    this.seekingAppendCheck_ = () => {
      this.fixesBadSeeks_() && (this.consecutiveUpdates = 0, this.lastRecordedTime = this.tech_.currentTime(), l7("off"));
    }, this.clearSeekingAppendCheck_ = () => l7("off"), this.watchForBadSeeking_ = () => {
      this.clearSeekingAppendCheck_(), l7("on");
    }, this.tech_.on("seeked", this.clearSeekingAppendCheck_), this.tech_.on("seeking", this.watchForBadSeeking_), this.tech_.on("waiting", s5), this.tech_.on(Ym, n4), this.tech_.on("canplay", i5), this.tech_.one("play", t3), this.dispose = () => {
      this.clearSeekingAppendCheck_(), this.logger_("dispose"), this.tech_.off("waiting", s5), this.tech_.off(Ym, n4), this.tech_.off("canplay", i5), this.tech_.off("play", t3), this.tech_.off("seeking", this.watchForBadSeeking_), this.tech_.off("seeked", this.clearSeekingAppendCheck_), a9.forEach((e11) => {
        r5[`${e11}SegmentLoader_`].off("appendsdone", o4[e11].updateend), r5[`${e11}SegmentLoader_`].off("playlistupdate", o4[e11].reset), this.tech_.off(["seeked", "seeking"], o4[e11].reset);
      }), this.checkCurrentTimeTimeout_ && b3.clearTimeout(this.checkCurrentTimeTimeout_), this.resetTimeUpdate_();
    };
  }
  monitorCurrentTime_() {
    this.checkCurrentTime_(), this.checkCurrentTimeTimeout_ && b3.clearTimeout(this.checkCurrentTimeTimeout_), this.checkCurrentTimeTimeout_ = b3.setTimeout(this.monitorCurrentTime_.bind(this), 250);
  }
  resetSegmentDownloads_(e10) {
    const t3 = this.playlistController_[`${e10}SegmentLoader_`];
    this[`${e10}StalledDownloads_`] > 0 && this.logger_(`resetting possible stalled download count for ${e10} loader`), this[`${e10}StalledDownloads_`] = 0, this[`${e10}Buffered_`] = t3.buffered_();
  }
  checkSegmentDownloads_(e10) {
    const t3 = this.playlistController_, i5 = t3[`${e10}SegmentLoader_`], s5 = i5.buffered_(), n4 = Ou(this[`${e10}Buffered_`], s5);
    if (this[`${e10}Buffered_`] = s5, n4) {
      const i6 = { bufferedRanges: s5 };
      return t3.trigger({ type: "bufferedrangeschanged", metadata: i6 }), void this.resetSegmentDownloads_(e10);
    }
    this[`${e10}StalledDownloads_`]++, this.logger_(`found #${this[`${e10}StalledDownloads_`]} ${e10} appends that did not increase buffer (possible stalled download)`, { playlistId: i5.playlist_ && i5.playlist_.id, buffered: Lu(s5) }), this[`${e10}StalledDownloads_`] < 10 || (this.logger_(`${e10} loader stalled download exclusion`), this.resetSegmentDownloads_(e10), this.tech_.trigger({ type: "usage", name: `vhs-${e10}-download-exclusion` }), "subtitle" !== e10 && t3.excludePlaylist({ error: { message: `Excessive ${e10} segment downloading detected.` }, playlistExclusionDuration: 1 / 0 }));
  }
  checkCurrentTime_() {
    if (this.tech_.paused() || this.tech_.seeking()) return;
    const e10 = this.tech_.currentTime(), t3 = this.tech_.buffered();
    if (this.lastRecordedTime === e10 && (!t3.length || e10 + wu >= t3.end(t3.length - 1))) return this.techWaiting_();
    if (this.consecutiveUpdates >= 5 && e10 === this.lastRecordedTime) this.consecutiveUpdates++, this.waiting_();
    else if (e10 === this.lastRecordedTime) this.consecutiveUpdates++;
    else {
      this.playedRanges_.push(Tu([this.lastRecordedTime, e10]));
      const t4 = { playedRanges: this.playedRanges_ };
      this.playlistController_.trigger({ type: "playedrangeschanged", metadata: t4 }), this.consecutiveUpdates = 0, this.lastRecordedTime = e10;
    }
  }
  resetTimeUpdate_() {
    this.consecutiveUpdates = 0;
  }
  fixesBadSeeks_() {
    if (!this.tech_.seeking()) return false;
    const e10 = this.seekable(), t3 = this.tech_.currentTime();
    let i5;
    if (this.afterSeekableWindow_(e10, t3, this.media(), this.allowSeeksWithinUnsafeLiveWindow)) {
      i5 = e10.end(e10.length - 1);
    }
    if (this.beforeSeekableWindow_(e10, t3)) {
      const t4 = e10.start(0);
      i5 = t4 + (t4 === e10.end(0) ? 0 : wu);
    }
    if (void 0 !== i5) return this.logger_(`Trying to seek outside of seekable at time ${t3} with seekable range ${Du(e10)}. Seeking to ${i5}.`), this.tech_.setCurrentTime(i5), true;
    const s5 = this.playlistController_.sourceUpdater_, n4 = this.tech_.buffered(), r5 = s5.audioBuffer ? s5.audioBuffered() : null, a9 = s5.videoBuffer ? s5.videoBuffered() : null, o4 = this.media(), l7 = o4.partTargetDuration ? o4.partTargetDuration : 2 * (o4.targetDuration - Eu), h3 = [r5, a9];
    for (let d2 = 0; d2 < h3.length; d2++) {
      if (!h3[d2]) continue;
      if (Ru(h3[d2], t3) < l7) return false;
    }
    const u6 = Iu(n4, t3);
    return 0 !== u6.length && (i5 = u6.start(0) + wu, this.logger_(`Buffered region starts (${u6.start(0)})  just beyond seek point (${t3}). Seeking to ${i5}.`), this.tech_.setCurrentTime(i5), true);
  }
  waiting_() {
    if (this.techWaiting_()) return;
    const e10 = this.tech_.currentTime(), t3 = this.tech_.buffered(), i5 = ku(t3, e10);
    return i5.length && e10 + 3 <= i5.end(0) ? (this.resetTimeUpdate_(), this.tech_.setCurrentTime(e10), this.logger_(`Stopped at ${e10} while inside a buffered region [${i5.start(0)} -> ${i5.end(0)}]. Attempting to resume playback by seeking to the current time.`), void this.tech_.trigger({ type: "usage", name: "vhs-unknown-waiting" })) : void 0;
  }
  techWaiting_() {
    const e10 = this.seekable(), t3 = this.tech_.currentTime();
    if (this.tech_.seeking()) return true;
    if (this.beforeSeekableWindow_(e10, t3)) {
      const i6 = e10.end(e10.length - 1);
      return this.logger_(`Fell out of live window at time ${t3}. Seeking to live point (seekable end) ${i6}`), this.resetTimeUpdate_(), this.tech_.setCurrentTime(i6), this.tech_.trigger({ type: "usage", name: "vhs-live-resync" }), true;
    }
    const i5 = this.tech_.vhs.playlistController_.sourceUpdater_, s5 = this.tech_.buffered();
    if (this.videoUnderflow_({ audioBuffered: i5.audioBuffered(), videoBuffered: i5.videoBuffered(), currentTime: t3 })) return this.resetTimeUpdate_(), this.tech_.setCurrentTime(t3), this.tech_.trigger({ type: "usage", name: "vhs-video-underflow" }), true;
    const n4 = Iu(s5, t3);
    return n4.length > 0 && (this.logger_(`Stopped at ${t3} and seeking to ${n4.start(0)}`), this.resetTimeUpdate_(), this.skipTheGap_(t3), true);
  }
  afterSeekableWindow_(e10, t3, i5, s5 = false) {
    if (!e10.length) return false;
    let n4 = e10.end(e10.length - 1) + wu;
    const r5 = !i5.endList, a9 = "number" == typeof i5.partTargetDuration;
    return r5 && (a9 || s5) && (n4 = e10.end(e10.length - 1) + 3 * i5.targetDuration), t3 > n4;
  }
  beforeSeekableWindow_(e10, t3) {
    return !!(e10.length && e10.start(0) > 0 && t3 < e10.start(0) - this.liveRangeSafeTimeDelta);
  }
  videoUnderflow_({ videoBuffered: e10, audioBuffered: t3, currentTime: i5 }) {
    if (!e10) return;
    let s5;
    if (e10.length && t3.length) {
      const n4 = ku(e10, i5 - 3), r5 = ku(e10, i5), a9 = ku(t3, i5);
      a9.length && !r5.length && n4.length && (s5 = { start: n4.end(0), end: a9.end(0) });
    } else {
      Iu(e10, i5).length || (s5 = this.gapFromVideoUnderflow_(e10, i5));
    }
    return !!s5 && (this.logger_(`Encountered a gap in video from ${s5.start} to ${s5.end}. Seeking to current time ${i5}`), true);
  }
  skipTheGap_(e10) {
    const t3 = this.tech_.buffered(), i5 = this.tech_.currentTime(), s5 = Iu(t3, i5);
    if (this.resetTimeUpdate_(), 0 === s5.length || i5 !== e10) return;
    this.logger_("skipTheGap_:", "currentTime:", i5, "scheduled currentTime:", e10, "nextRange start:", s5.start(0)), this.tech_.setCurrentTime(s5.start(0) + Eu);
    const n4 = { gapInfo: { from: i5, to: s5.start(0) } };
    this.playlistController_.trigger({ type: "gapjumped", metadata: n4 }), this.tech_.trigger({ type: "usage", name: "vhs-gap-skip" });
  }
  gapFromVideoUnderflow_(e10, t3) {
    const i5 = xu(e10);
    for (let s5 = 0; s5 < i5.length; s5++) {
      const e11 = i5.start(s5), n4 = i5.end(s5);
      if (t3 - e11 < 4 && t3 - e11 > 2) return { start: e11, end: n4 };
    }
    return null;
  }
};
var Jm = { errorInterval: 30, getSource(e10) {
  return e10(this.tech({ IWillNotUseThisInPlugins: true }).currentSource_ || this.currentSource());
} };
var Zm = function(e10, t3) {
  let i5 = 0, s5 = 0;
  const n4 = bu(Jm, t3);
  e10.ready(() => {
    e10.trigger({ type: "usage", name: "vhs-error-reload-initialized" });
  });
  const r5 = function() {
    s5 && e10.currentTime(s5);
  }, a9 = function(t4) {
    null != t4 && (s5 = e10.duration() !== 1 / 0 && e10.currentTime() || 0, e10.one("loadedmetadata", r5), e10.src(t4), e10.trigger({ type: "usage", name: "vhs-error-reload" }), e10.play());
  }, o4 = function() {
    if (Date.now() - i5 < 1e3 * n4.errorInterval) e10.trigger({ type: "usage", name: "vhs-error-reload-canceled" });
    else {
      if (n4.getSource && "function" == typeof n4.getSource) return i5 = Date.now(), n4.getSource.call(e10, a9);
      du.log.error("ERROR: reloadSourceOnError - The option getSource must be a function!");
    }
  }, l7 = function() {
    e10.off("loadedmetadata", r5), e10.off("error", o4), e10.off("dispose", l7);
  }, h3 = function(t4) {
    l7(), Zm(e10, t4);
  };
  e10.on("error", o4), e10.on("dispose", l7), e10.reloadSourceOnError = h3;
};
var eg = function(e10) {
  Zm(this, e10);
};
var tg = "3.17.0";
var ig = "7.1.0";
var sg = "1.3.1";
var ng = "7.2.0";
var rg = "4.0.2";
var ag = { PlaylistLoader: Od, Playlist: id, utils: Kd, STANDARD_PLAYLIST_SELECTOR: hp, INITIAL_PLAYLIST_SELECTOR: cp, lastBandwidthSelector: hp, movingAverageBandwidthSelector: up, comparePlaylistBandwidth: ap, comparePlaylistResolution: op, xhr: Ud() };
Object.keys(yc).forEach((e10) => {
  Object.defineProperty(ag, e10, { get: () => (du.log.warn(`using Vhs.${e10} is UNSAFE be sure you know what you are doing`), yc[e10]), set(t3) {
    du.log.warn(`using Vhs.${e10} is UNSAFE be sure you know what you are doing`), "number" != typeof t3 || t3 < 0 ? du.log.warn(`value of Vhs.${e10} must be greater than or equal to 0`) : yc[e10] = t3;
  } });
});
var og = "videojs-vhs";
var lg = function(e10, t3) {
  const i5 = t3.media();
  let s5 = -1;
  for (let n4 = 0; n4 < e10.length; n4++) if (e10[n4].id === i5.id) {
    s5 = n4;
    break;
  }
  e10.selectedIndex_ = s5, e10.trigger({ selectedIndex: s5, type: "change" });
};
var hg = function(e10, t3) {
  t3.representations().forEach((t4) => {
    e10.addQualityLevel(t4);
  }), lg(e10, t3.playlists);
};
ag.canPlaySource = function() {
  return du.log.warn("VHS is no longer a tech. Please remove it from your player's techOrder.");
};
var ug = (e10, t3, i5) => {
  if (!e10) return e10;
  let s5 = {};
  t3 && t3.attributes && t3.attributes.CODECS && (s5 = bd(lt(t3.attributes.CODECS))), i5 && i5.attributes && i5.attributes.CODECS && (s5.audio = i5.attributes.CODECS);
  const n4 = ct(s5.video), r5 = ct(s5.audio), a9 = {};
  for (const o4 in e10) a9[o4] = {}, r5 && (a9[o4].audioContentType = r5), n4 && (a9[o4].videoContentType = n4), t3.contentProtection && t3.contentProtection[o4] && t3.contentProtection[o4].pssh && (a9[o4].pssh = t3.contentProtection[o4].pssh), "string" == typeof e10[o4] && (a9[o4].url = e10[o4]);
  return bu(e10, a9);
};
var dg = (e10, t3) => e10.reduce((e11, i5) => {
  if (!i5.contentProtection) return e11;
  const s5 = t3.reduce((e12, t4) => {
    const s6 = i5.contentProtection[t4];
    return s6 && s6.pssh && (e12[t4] = { pssh: s6.pssh }), e12;
  }, {});
  return Object.keys(s5).length && e11.push(s5), e11;
}, []);
var cg = ({ player: e10, sourceKeySystems: t3, audioMedia: i5, mainPlaylists: s5 }) => {
  if (!e10.eme.initializeMediaKeys) return Promise.resolve();
  const n4 = i5 ? s5.concat([i5]) : s5, r5 = dg(n4, Object.keys(t3)), a9 = [], o4 = [];
  return r5.forEach((t4) => {
    o4.push(new Promise((t5, i6) => {
      e10.tech_.one("keysessioncreated", t5);
    })), a9.push(new Promise((i6, s6) => {
      e10.eme.initializeMediaKeys({ keySystems: t4 }, (e11) => {
        e11 ? s6(e11) : i6();
      });
    }));
  }), Promise.race([Promise.all(a9), Promise.race(o4)]);
};
var pg = ({ player: e10, sourceKeySystems: t3, media: i5, audioMedia: s5 }) => {
  const n4 = ug(t3, i5, s5);
  return !!n4 && (e10.currentSource().keySystems = n4, !(n4 && !e10.eme) || (du.log.warn("DRM encrypted source cannot be decrypted without a DRM plugin"), false));
};
var mg = () => {
  if (!b3.localStorage) return null;
  const e10 = b3.localStorage.getItem(og);
  if (!e10) return null;
  try {
    return JSON.parse(e10);
  } catch (t3) {
    return null;
  }
};
var gg = (e10) => {
  if (!b3.localStorage) return false;
  let t3 = mg();
  t3 = t3 ? bu(t3, e10) : e10;
  try {
    b3.localStorage.setItem(og, JSON.stringify(t3));
  } catch (i5) {
    return false;
  }
  return t3;
};
var fg = (e10) => 0 === e10.toLowerCase().indexOf("data:application/vnd.videojs.vhs+json,") ? JSON.parse(e10.substring(e10.indexOf(",") + 1)) : e10;
var yg = (e10, t3) => {
  e10._requestCallbackSet || (e10._requestCallbackSet = /* @__PURE__ */ new Set()), e10._requestCallbackSet.add(t3);
};
var _g = (e10, t3) => {
  e10._responseCallbackSet || (e10._responseCallbackSet = /* @__PURE__ */ new Set()), e10._responseCallbackSet.add(t3);
};
var vg = (e10, t3) => {
  e10._requestCallbackSet && (e10._requestCallbackSet.delete(t3), e10._requestCallbackSet.size || delete e10._requestCallbackSet);
};
var bg = (e10, t3) => {
  e10._responseCallbackSet && (e10._responseCallbackSet.delete(t3), e10._responseCallbackSet.size || delete e10._responseCallbackSet);
};
ag.supportsNativeHls = function() {
  if (!ae || !ae.createElement) return false;
  const e10 = ae.createElement("video");
  if (!du.getTech("Html5").isSupported()) return false;
  return ["application/vnd.apple.mpegurl", "audio/mpegurl", "audio/x-mpegurl", "application/x-mpegurl", "video/x-mpegurl", "video/mpegurl", "application/mpegurl"].some(function(t3) {
    return /maybe|probably/i.test(e10.canPlayType(t3));
  });
}(), ag.supportsNativeDash = !!(ae && ae.createElement && du.getTech("Html5").isSupported()) && /maybe|probably/i.test(ae.createElement("video").canPlayType("application/dash+xml")), ag.supportsTypeNatively = (e10) => "hls" === e10 ? ag.supportsNativeHls : "dash" === e10 && ag.supportsNativeDash, ag.isSupported = function() {
  return du.log.warn("VHS is no longer a tech. Please remove it from your player's techOrder.");
}, ag.xhr.onRequest = function(e10) {
  yg(ag.xhr, e10);
}, ag.xhr.onResponse = function(e10) {
  _g(ag.xhr, e10);
}, ag.xhr.offRequest = function(e10) {
  vg(ag.xhr, e10);
}, ag.xhr.offResponse = function(e10) {
  bg(ag.xhr, e10);
};
var Tg = du.getComponent("Component");
var Sg = class extends Tg {
  constructor(e10, t3, i5) {
    if (super(t3, i5.vhs), "number" == typeof i5.initialBandwidth && (this.options_.bandwidth = i5.initialBandwidth), this.logger_ = vu("VhsHandler"), t3.options_ && t3.options_.playerId) {
      const e11 = du.getPlayer(t3.options_.playerId);
      this.player_ = e11;
    }
    if (this.tech_ = t3, this.source_ = e10, this.stats = {}, this.ignoreNextSeekingEvent_ = false, this.setOptions_(), this.options_.overrideNative && t3.overrideNativeAudioTracks && t3.overrideNativeVideoTracks) t3.overrideNativeAudioTracks(true), t3.overrideNativeVideoTracks(true);
    else if (this.options_.overrideNative && (t3.featuresNativeVideoTracks || t3.featuresNativeAudioTracks)) throw new Error("Overriding native VHS requires emulated tracks. See https://git.io/vMpjB");
    this.on(ae, ["fullscreenchange", "webkitfullscreenchange", "mozfullscreenchange", "MSFullscreenChange"], (e11) => {
      const t4 = ae.fullscreenElement || ae.webkitFullscreenElement || ae.mozFullScreenElement || ae.msFullscreenElement;
      t4 && t4.contains(this.tech_.el()) ? this.playlistController_.fastQualityChange_() : this.playlistController_.checkABR_();
    }), this.on(this.tech_, "seeking", function() {
      this.ignoreNextSeekingEvent_ ? this.ignoreNextSeekingEvent_ = false : this.setCurrentTime(this.tech_.currentTime());
    }), this.on(this.tech_, "error", function() {
      this.tech_.error() && this.playlistController_ && this.playlistController_.pauseLoading();
    }), this.on(this.tech_, "play", this.play);
  }
  setOptions_(e10 = {}) {
    if (this.options_ = bu(this.options_, e10), this.options_.withCredentials = this.options_.withCredentials || false, this.options_.limitRenditionByPlayerDimensions = false !== this.options_.limitRenditionByPlayerDimensions, this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false, this.options_.usePlayerObjectFit = this.options_.usePlayerObjectFit || false, this.options_.useBandwidthFromLocalStorage = void 0 !== this.source_.useBandwidthFromLocalStorage ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false, this.options_.useForcedSubtitles = this.options_.useForcedSubtitles || false, this.options_.useNetworkInformationApi = void 0 === this.options_.useNetworkInformationApi || this.options_.useNetworkInformationApi, this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false, this.options_.customTagParsers = this.options_.customTagParsers || [], this.options_.customTagMappers = this.options_.customTagMappers || [], this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false, this.options_.llhls = false !== this.options_.llhls, this.options_.bufferBasedABR = this.options_.bufferBasedABR || false, "number" != typeof this.options_.playlistExclusionDuration && (this.options_.playlistExclusionDuration = 60), "number" != typeof this.options_.bandwidth && this.options_.useBandwidthFromLocalStorage) {
      const e11 = mg();
      e11 && e11.bandwidth && (this.options_.bandwidth = e11.bandwidth, this.tech_.trigger({ type: "usage", name: "vhs-bandwidth-from-local-storage" })), e11 && e11.throughput && (this.options_.throughput = e11.throughput, this.tech_.trigger({ type: "usage", name: "vhs-throughput-from-local-storage" }));
    }
    "number" != typeof this.options_.bandwidth && (this.options_.bandwidth = yc.INITIAL_BANDWIDTH), this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === yc.INITIAL_BANDWIDTH, ["withCredentials", "useDevicePixelRatio", "usePlayerObjectFit", "customPixelRatio", "limitRenditionByPlayerDimensions", "bandwidth", "customTagParsers", "customTagMappers", "cacheEncryptionKeys", "playlistSelector", "initialPlaylistSelector", "bufferBasedABR", "liveRangeSafeTimeDelta", "llhls", "useForcedSubtitles", "useNetworkInformationApi", "useDtsForTimestampOffset", "exactManifestTimings", "leastPixelDiffSelector"].forEach((e11) => {
      void 0 !== this.source_[e11] && (this.options_[e11] = this.source_[e11]);
    }), this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions, this.useDevicePixelRatio = this.options_.useDevicePixelRatio, this.usePlayerObjectFit = this.options_.usePlayerObjectFit;
    const t3 = this.options_.customPixelRatio;
    "number" == typeof t3 && t3 >= 0 && (this.customPixelRatio = t3);
  }
  setOptions(e10 = {}) {
    this.setOptions_(e10);
  }
  src(e10, t3) {
    if (!e10) return;
    this.setOptions_(), this.options_.src = fg(this.source_.src), this.options_.tech = this.tech_, this.options_.externVhs = ag, this.options_.sourceType = vt(t3), this.options_.seekTo = (e11) => {
      this.tech_.setCurrentTime(e11);
    }, this.options_.player_ = this.player_, this.playlistController_ = new Wm(this.options_);
    const i5 = bu({ liveRangeSafeTimeDelta: wu }, this.options_, { seekable: () => this.seekable(), media: () => this.playlistController_.media(), playlistController: this.playlistController_ });
    this.playbackWatcher_ = new Qm(i5), this.attachStreamingEventListeners_(), this.playlistController_.on("error", () => {
      const e11 = du.players[this.tech_.options_.playerId];
      let t4 = this.playlistController_.error;
      "object" != typeof t4 || t4.code ? "string" == typeof t4 && (t4 = { message: t4, code: 3 }) : t4.code = 3, e11.error(t4);
    });
    const s5 = this.options_.bufferBasedABR ? ag.movingAverageBandwidthSelector(0.55) : ag.STANDARD_PLAYLIST_SELECTOR;
    this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : s5.bind(this), this.playlistController_.selectInitialPlaylist = ag.INITIAL_PLAYLIST_SELECTOR.bind(this), this.playlists = this.playlistController_.mainPlaylistLoader_, this.mediaSource = this.playlistController_.mediaSource, Object.defineProperties(this, { selectPlaylist: { get() {
      return this.playlistController_.selectPlaylist;
    }, set(e11) {
      this.playlistController_.selectPlaylist = e11.bind(this);
    } }, throughput: { get() {
      return this.playlistController_.mainSegmentLoader_.throughput.rate;
    }, set(e11) {
      this.playlistController_.mainSegmentLoader_.throughput.rate = e11, this.playlistController_.mainSegmentLoader_.throughput.count = 1;
    } }, bandwidth: { get() {
      let e11 = this.playlistController_.mainSegmentLoader_.bandwidth;
      const t4 = b3.navigator.connection || b3.navigator.mozConnection || b3.navigator.webkitConnection, i6 = 1e7;
      if (this.options_.useNetworkInformationApi && t4) {
        const s6 = 1e3 * t4.downlink * 1e3;
        e11 = s6 >= i6 && e11 >= i6 ? Math.max(e11, s6) : s6;
      }
      return e11;
    }, set(e11) {
      this.playlistController_.mainSegmentLoader_.bandwidth = e11, this.playlistController_.mainSegmentLoader_.throughput = { rate: 0, count: 0 };
    } }, systemBandwidth: { get() {
      const e11 = 1 / (this.bandwidth || 1);
      let t4;
      t4 = this.throughput > 0 ? 1 / this.throughput : 0;
      return Math.floor(1 / (e11 + t4));
    }, set() {
      du.log.error('The "systemBandwidth" property is read-only');
    } } }), this.options_.bandwidth && (this.bandwidth = this.options_.bandwidth), this.options_.throughput && (this.throughput = this.options_.throughput), Object.defineProperties(this.stats, { bandwidth: { get: () => this.bandwidth || 0, enumerable: true }, mediaRequests: { get: () => this.playlistController_.mediaRequests_() || 0, enumerable: true }, mediaRequestsAborted: { get: () => this.playlistController_.mediaRequestsAborted_() || 0, enumerable: true }, mediaRequestsTimedout: { get: () => this.playlistController_.mediaRequestsTimedout_() || 0, enumerable: true }, mediaRequestsErrored: { get: () => this.playlistController_.mediaRequestsErrored_() || 0, enumerable: true }, mediaTransferDuration: { get: () => this.playlistController_.mediaTransferDuration_() || 0, enumerable: true }, mediaBytesTransferred: { get: () => this.playlistController_.mediaBytesTransferred_() || 0, enumerable: true }, mediaSecondsLoaded: { get: () => this.playlistController_.mediaSecondsLoaded_() || 0, enumerable: true }, mediaAppends: { get: () => this.playlistController_.mediaAppends_() || 0, enumerable: true }, mainAppendsToLoadedData: { get: () => this.playlistController_.mainAppendsToLoadedData_() || 0, enumerable: true }, audioAppendsToLoadedData: { get: () => this.playlistController_.audioAppendsToLoadedData_() || 0, enumerable: true }, appendsToLoadedData: { get: () => this.playlistController_.appendsToLoadedData_() || 0, enumerable: true }, timeToLoadedData: { get: () => this.playlistController_.timeToLoadedData_() || 0, enumerable: true }, buffered: { get: () => Lu(this.tech_.buffered()), enumerable: true }, currentTime: { get: () => this.tech_.currentTime(), enumerable: true }, currentSource: { get: () => this.tech_.currentSource_, enumerable: true }, currentTech: { get: () => this.tech_.name_, enumerable: true }, duration: { get: () => this.tech_.duration(), enumerable: true }, main: { get: () => this.playlists.main, enumerable: true }, playerDimensions: { get: () => this.tech_.currentDimensions(), enumerable: true }, seekable: { get: () => Lu(this.tech_.seekable()), enumerable: true }, timestamp: { get: () => Date.now(), enumerable: true }, videoPlaybackQuality: { get: () => this.tech_.getVideoPlaybackQuality(), enumerable: true } }), this.tech_.one("canplay", this.playlistController_.setupFirstPlay.bind(this.playlistController_)), this.tech_.on("bandwidthupdate", () => {
      this.options_.useBandwidthFromLocalStorage && gg({ bandwidth: this.bandwidth, throughput: Math.round(this.throughput) });
    }), this.playlistController_.on("selectedinitialmedia", () => {
      Km(this);
    }), this.playlistController_.sourceUpdater_.on("createdsourcebuffers", () => {
      this.setupEme_();
    }), this.on(this.playlistController_, "progress", function() {
      this.tech_.trigger("progress");
    }), this.on(this.playlistController_, "firstplay", function() {
      this.ignoreNextSeekingEvent_ = true;
    }), this.setupQualityLevels_(), this.tech_.el() && (this.mediaSourceUrl_ = b3.URL.createObjectURL(this.playlistController_.mediaSource), (du.browser.IS_ANY_SAFARI || du.browser.IS_IOS) && this.options_.overrideNative && "hls" === this.options_.sourceType && "function" == typeof this.tech_.addSourceElement ? (this.tech_.addSourceElement(this.mediaSourceUrl_), this.tech_.addSourceElement(this.source_.src)) : this.tech_.src(this.mediaSourceUrl_));
  }
  createKeySessions_() {
    const e10 = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;
    this.logger_("waiting for EME key session creation"), cg({ player: this.player_, sourceKeySystems: this.source_.keySystems, audioMedia: e10 && e10.media(), mainPlaylists: this.playlists.main.playlists }).then(() => {
      this.logger_("created EME key session"), this.playlistController_.sourceUpdater_.initializedEme();
    }).catch((e11) => {
      this.logger_("error while creating EME key session", e11), this.player_.error({ message: "Failed to initialize media keys for EME", code: 3 });
    });
  }
  handleWaitingForKey_() {
    this.logger_("waitingforkey fired, attempting to create any new key sessions"), this.createKeySessions_();
  }
  setupEme_() {
    const e10 = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader, t3 = pg({ player: this.player_, sourceKeySystems: this.source_.keySystems, media: this.playlists.media(), audioMedia: e10 && e10.media() });
    this.player_.tech_.on("keystatuschange", (e11) => {
      this.playlistController_.updatePlaylistByKeyStatus(e11.keyId, e11.status);
    }), this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this), this.player_.tech_.on("waitingforkey", this.handleWaitingForKey_), t3 ? this.createKeySessions_() : this.playlistController_.sourceUpdater_.initializedEme();
  }
  setupQualityLevels_() {
    const e10 = du.players[this.tech_.options_.playerId];
    e10 && e10.qualityLevels && !this.qualityLevels_ && (this.qualityLevels_ = e10.qualityLevels(), this.playlistController_.on("selectedinitialmedia", () => {
      hg(this.qualityLevels_, this);
    }), this.playlists.on("mediachange", () => {
      lg(this.qualityLevels_, this.playlists);
    }));
  }
  static version() {
    return { "@videojs/http-streaming": tg, "mux.js": ig, "mpd-parser": sg, "m3u8-parser": ng, "aes-decrypter": rg };
  }
  version() {
    return this.constructor.version();
  }
  canChangeType() {
    return rm.canChangeType();
  }
  play() {
    this.playlistController_.play();
  }
  setCurrentTime(e10) {
    this.playlistController_.setCurrentTime(e10);
  }
  duration() {
    return this.playlistController_.duration();
  }
  seekable() {
    return this.playlistController_.seekable();
  }
  dispose() {
    this.playbackWatcher_ && this.playbackWatcher_.dispose(), this.playlistController_ && this.playlistController_.dispose(), this.qualityLevels_ && this.qualityLevels_.dispose(), this.tech_ && this.tech_.vhs && delete this.tech_.vhs, this.mediaSourceUrl_ && b3.URL.revokeObjectURL && (b3.URL.revokeObjectURL(this.mediaSourceUrl_), this.mediaSourceUrl_ = null), this.tech_ && this.tech_.off("waitingforkey", this.handleWaitingForKey_), super.dispose();
  }
  convertToProgramTime(e10, t3) {
    return sc({ playlist: this.playlistController_.media(), time: e10, callback: t3 });
  }
  seekToProgramTime(e10, t3, i5 = true, s5 = 2) {
    return nc({ programTime: e10, playlist: this.playlistController_.media(), retryCount: s5, pauseAfterSeek: i5, seekTo: this.options_.seekTo, tech: this.options_.tech, callback: t3 });
  }
  setupXhrHooks_() {
    this.xhr.onRequest = (e10) => {
      yg(this.xhr, e10);
    }, this.xhr.onResponse = (e10) => {
      _g(this.xhr, e10);
    }, this.xhr.offRequest = (e10) => {
      vg(this.xhr, e10);
    }, this.xhr.offResponse = (e10) => {
      bg(this.xhr, e10);
    }, this.player_.trigger("xhr-hooks-ready");
  }
  attachStreamingEventListeners_() {
    const e10 = ["gapjumped", "playedrangeschanged"];
    ["seekablerangeschanged", "bufferedrangeschanged", "contentsteeringloadstart", "contentsteeringloadcomplete", "contentsteeringparsed"].forEach((e11) => {
      this.playlistController_.on(e11, (e12) => {
        this.player_.trigger(Fe({}, e12));
      });
    }), e10.forEach((e11) => {
      this.playbackWatcher_.on(e11, (e12) => {
        this.player_.trigger(Fe({}, e12));
      });
    });
  }
};
var Eg = { name: "videojs-http-streaming", VERSION: tg, canHandleSource(e10, t3 = {}) {
  const i5 = bu(du.options, t3);
  return !(!i5.vhs.experimentalUseMMS && !pt("avc1.4d400d,mp4a.40.2", false)) && Eg.canPlayType(e10.type, i5);
}, handleSource(e10, t3, i5 = {}) {
  const s5 = bu(du.options, i5);
  return t3.vhs = new Sg(e10, t3, s5), t3.vhs.xhr = Ud(), t3.vhs.setupXhrHooks_(), t3.vhs.src(e10.src, e10.type), t3.vhs;
}, canPlayType(e10, t3) {
  const i5 = vt(e10);
  if (!i5) return "";
  const s5 = Eg.getOverrideNative(t3);
  return !ag.supportsTypeNatively(i5) || s5 ? "maybe" : "";
}, getOverrideNative(e10 = {}) {
  const { vhs: t3 = {} } = e10, i5 = !(du.browser.IS_ANY_SAFARI || du.browser.IS_IOS), { overrideNative: s5 = i5 } = t3;
  return s5;
} };
(() => pt("avc1.4d400d,mp4a.40.2", true))() && du.getTech("Html5").registerSourceHandler(Eg, 0), du.VhsHandler = Sg, du.VhsSourceHandler = Eg, du.Vhs = ag, du.use || du.registerComponent("Vhs", ag), du.options.vhs = du.options.vhs || {}, du.getPlugin && du.getPlugin("reloadSourceOnError") || du.registerPlugin("reloadSourceOnError", eg);
var wg = class extends b {
  constructor() {
    super(), this._controllerConfigs = { autoplay: false, autoSetup: false, controls: false, defaultVolume: 0.3, disablePictureInPicture: true, enableDocumentPictureInPicture: false, enableSmoothSeeking: true, html5: { nativeAudioTracks: false, nativeVideoTracks: false, vhs: { llhls: true, overrideNative: true } }, inactivityTimeout: 0, liveTracker: { liveTolerance: 10, trackingThreshold: 15 }, loop: false, muted: false, nativeControlsForTouch: false, normalizeAutoplay: true, preload: "auto" }, this._prevPlayingState = false, this._retryCount = 0, this._qualityLevels = [], this.autoplay = false, this.currentMetadata = null, this.element = null, this.isLive = false, this.mimeType = null, this.sensorModel = null, this.started = false, this.state = "not-ready", this.waitingTimestamp = null, this._initController = async () => {
      if (!this._controller && this.playerUrl) try {
        const e10 = { ...this._controllerConfigs };
        this.element = document.createElement("video"), du.log.level("off"), this._controller = du(this.element, e10), this._controller.muted(this.muted), this._controller.loop(this.loop), this._controller.playbackRate(this.rate);
        this._controller.qualityLevels().on("addqualitylevel", (e11) => this._handleQualityLevel(e11)), this._controller.ready(this._handleReady), this._controller.one("play", this._handleFirstPlay), this._controller.on("canplay", this._handleCanPlay), this._controller.on("durationchange", this._handleDurationChange), this._controller.on("ended", this._handleEnded), this._controller.on("error", this._handleError), this._controller.on("loadeddata", this._handleDataLoaded), this._controller.on("loadedmetadata", this._handleLoadedMetadata), this._controller.on("loadstart", this._handleLoadStart), this._controller.on("play", this._handlePlay), this._controller.on("playing", this._handlePlaying), this._controller.on("stalled", this._handleStalled), this._controller.on("timeupdate", this._handleTimeUpdate), this._controller.on("waiting", this._handleWaiting), this._controller.on("xhr-hooks-ready", this._handleXHRhooksReady), this._controller?.liveTracker.on("seekableendchange", () => this.notifyChange("livestreamStatus")), this._controller?.liveTracker.on("liveedgechange", () => this.notifyChange("livestreamStatus"));
      } catch (e10) {
        i.getLogger(this).error("Unable to initialize the player."), this._controller && this._controller.dispose();
      }
    }, this._handleQualityLevel = (e10) => {
      if (!e10?.qualityLevel) return;
      const t3 = e10.qualityLevel;
      this._qualityLevels.push(t3), t3?.enabled && (this._set("videoWidth", t3?.width ?? 0), this._set("videoHeight", t3?.height ?? 0));
    }, this._handleReady = () => {
      this.state = "ready";
    }, this._handleFirstPlay = () => {
      this._set("started", true);
    }, this._handleCanPlay = async () => {
      if (this._prevPlayingState = "playing" === this.state, this.state = "can-play", this.autoplay && !this.started) try {
        this.muted = true, await this.play();
      } catch (e10) {
        i.getLogger(this).info("Unable to auto start playback. Blocked by the browser.");
      }
    }, this._handleCueChange = () => {
      if (!this.subtitleTrack?.activeCues?.length) return;
      const e10 = this.subtitleTrack?.activeCues, t3 = f2(e10);
      if (!t3?.length) return;
      const i5 = /* @__PURE__ */ new Map();
      for (const s5 of t3) {
        if (Array.isArray(s5.value)) if (90064 === s5.tagId) i5.set(s5.tagId, s5);
        else {
          s5.value.forEach((e11) => {
            i5.set(e11.tagId, e11);
          });
        }
        else i5.set(s5.tagId, s5);
      }
      i5.set(d.EsriVideoWidth, { name: "Video Width", tagId: d.EsriVideoWidth, value: this._controller?.videoWidth() }), i5.set(d.EsriVideoHeight, { name: "Video Height", tagId: d.EsriVideoHeight, value: this._controller?.videoHeight() }), this.currentMetadata = new Map(i5);
    }, this._handleDataLoaded = () => {
      this._set("videoWidth", this._controller?.videoWidth()), this._set("videoHeight", this._controller?.videoHeight());
    }, this._handleDurationChange = () => {
      0 !== this._controller?.duration() && (this.notifyChange("duration"), this.isLive = this._controller?.duration() === 1 / 0 || false, this._setLivestreamStatus(), this.started && this._controller?.duration() === this._controller?.currentTime() && this._controller?.trigger("ended"));
    }, this._handleEnded = () => {
      this._controller?.ended() && this.notifyChange("ended");
    }, this._handleError = () => {
      const e10 = this._controller?.error() ?? null;
      if ("number" == typeof e10?.code && e10?.code < 3 && 0 === this._retryCount) this._retryCount++, setTimeout(() => {
        this._controller?.src({ type: this.mimeType, src: this.playerUrl }), this._controller?.load();
      }, 2e3);
      else {
        const t3 = new s("Media Error", e10?.message ?? "");
        i.getLogger(this).error(t3), this.reset();
      }
    }, this._handleLoadStart = () => {
      this.state = "can-play";
    }, this._handleLoadedMetadata = () => {
      this.state = "can-play", this.notifyChange("buffered"), this.notifyChange("subtitleTrack");
    }, this._handlePlay = () => {
      this.notifyChange("ended");
    }, this._handlePlaying = () => {
      this.state = "playing", this._retryCount = 0, this.notifyChange("ended");
    }, this._handleStalled = () => {
      i.getLogger(this).warn("Playback is stalled and awaiting data");
    }, this._handleTimeUpdate = () => {
      this._setLivestreamStatus(), this.notifyChange("currentTime"), this.notifyChange("buffered"), this.notifyChange("bufferedPercent"), this._set("videoWidth", this._controller?.videoWidth()), this._set("videoHeight", this._controller?.videoHeight());
    }, this._handleWaiting = () => {
      this.waitingTimestamp = this._controller?.currentTime(), this.state = "waiting";
    }, this._handleXHRhooksReady = () => {
      const e10 = (e11) => (e11.xhr = new s4(), e11);
      this._controller?.tech(true)?.vhs.xhr.onRequest(e10);
    }, this._updateSensorModel = () => {
      this.currentMetadata?.size && (this.sensorModel ? this.sensorModel.updateSensorModel(this.currentMetadata) : this.sensorModel = new V2({ videoMetadata: this.currentMetadata }));
    }, this._setLivestreamStatus = () => {
      if (!this.isLive) return void (this.livestreamStatus = null);
      this._controller?.liveTracker.isTracking() || this._controller?.liveTracker.startTracking();
      const e10 = { atLiveEdge: this._controller?.liveTracker.atLiveEdge() ?? null, behindLiveEdge: this._controller?.liveTracker.behindLiveEdge() ?? null, liveCurrentTime: this._controller?.liveTracker?.liveCurrentTime() ?? null, liveWindow: this._controller?.liveTracker?.liveWindow() ?? null, pastSeekEnd: this._controller?.liveTracker?.pastSeekEnd() ?? null, seekableEnd: this._controller?.liveTracker?.seekableEnd() ?? null, seekableStart: this._controller?.liveTracker?.seekableStart() ?? null };
      this.livestreamStatus = { ...e10 }, this.notifyChange("livestreamStatus"), this._controller?.liveTracker.handlePlay(), this._controller?.liveTracker.handleFirstTimeupdate();
    };
  }
  initialize() {
    this.addHandles([l2(() => this.playerUrl, (e10) => {
      e10 && this._initController().then(() => {
        this.mimeType = E(e10), this._controller?.src({ src: this.playerUrl, type: this.mimeType });
      });
    }, h), l2(() => this.subtitleTrack, () => {
      this.subtitleTrack && (this.subtitleTrack.mode = "showing");
    }, h), l2(() => this.isLive, (e10) => {
      e10 && this._controller?.liveTracker.startTracking();
    }), l2(() => this.currentMetadata, () => this._updateSensorModel())]), this.addHandles(a5(() => this.subtitleTrack, "cuechange", this._handleCueChange), h);
  }
  destroy() {
    this.removeAllHandles(), this._controller?.dispose();
  }
  get buffered() {
    return this._controller?.bufferedEnd() ?? 0;
  }
  get bufferedPercent() {
    return this._controller?.bufferedPercent() ?? 0;
  }
  get crossOrigin() {
    return this._controller?.crossOrigin() ?? this._get("crossOrigin");
  }
  set crossOrigin(e10) {
    this._controller?.crossOrigin(e10), this._set("crossOrigin", e10);
  }
  get currentTime() {
    return this._controller?.currentTime() ?? 0;
  }
  get duration() {
    return this._controller?.duration() ?? 0;
  }
  get ended() {
    return this._controller?.ended() ?? this._get("ended") ?? true;
  }
  set ended(e10) {
    this._controller?.trigger("ended"), this._set("ended", e10);
  }
  get loop() {
    return this._controller?.loop() ?? this._get("loop") ?? false;
  }
  set loop(e10) {
    this._controller?.loop(e10), this._set("loop", e10);
  }
  get muted() {
    return this._controller?.muted() ?? this._get("muted") ?? false;
  }
  set muted(e10) {
    this._controller?.muted(e10), this._set("muted", e10);
  }
  get playerUrl() {
    return this._controller?.src() || "";
  }
  set playerUrl(e10) {
    this._set("playerUrl", e10);
  }
  get playing() {
    return !this.ended && ("can-play" === this.state ? this._prevPlayingState : "playing" === this.state);
  }
  get playsInline() {
    const e10 = this._controller?.playsinline();
    return e10 ?? this._get("playsInline") ?? false;
  }
  set playsInline(e10) {
    this._controller?.playsinline(e10), this._set("playsInline", e10);
  }
  get rate() {
    return this._controller?.playbackRate() ?? this._get("rate") ?? 1;
  }
  set rate(e10) {
    this._controller?.playbackRate(e10), this._set("rate", e10);
  }
  get subtitleTrack() {
    const e10 = this._controller?.textTracks();
    return e10?.length ? Array.from(e10).find((e11) => "subtitles" === e11.kind) : null;
  }
  get volume() {
    return this._controller?.volume() ?? 0;
  }
  set volume(e10) {
    const t3 = r2(e10, 0, 1);
    isNaN(t3) || this._controller?.volume(t3);
  }
  get waiting() {
    return !this.waitingTimestamp && (this.waitingTimestamp === this.currentTime || (this.waitingTimestamp = null, false));
  }
  pause() {
    this._controller?.pause(), this.state = "paused";
  }
  async play() {
    try {
      !this.started && this.isLive && this._controller?.muted(true), await this._controller?.play(), this.state = "playing";
    } catch (e10) {
    }
  }
  reset() {
    this._controller && (this._prevPlayingState = false, this._retryCount = 0, this._set("started", false), this.setCurrentTime(0), this.notifyChange("buffered"), this.notifyChange("currentTime"), this.notifyChange("duration"), this.notifyChange("waiting"), this._controller?.trigger("can-play"), this.autoplay || this._controller?.pause());
  }
  seekToLiveEdge() {
    this.isLive ? "playing" === this.state && this._controller?.liveTracker.isTracking() && this._controller?.liveTracker.seekToLiveEdge() : i.getLogger(this).info("seekToLiveEdge method is only available for livestream playback.");
  }
  setCurrentTime(e10) {
    const t3 = r2(e10, 0, this.duration);
    this._controller?.currentTime(t3), this.notifyChange("currentTime");
  }
};
r([m()], wg.prototype, "autoplay", void 0), r([m()], wg.prototype, "buffered", null), r([m()], wg.prototype, "bufferedPercent", null), r([m()], wg.prototype, "crossOrigin", null), r([m({ readOnly: true })], wg.prototype, "currentTime", null), r([m()], wg.prototype, "currentMetadata", void 0), r([m({ readOnly: true })], wg.prototype, "duration", null), r([m()], wg.prototype, "element", void 0), r([m({ readOnly: true })], wg.prototype, "ended", null), r([m()], wg.prototype, "isLive", void 0), r([m()], wg.prototype, "livestreamStatus", void 0), r([m()], wg.prototype, "loop", null), r([m()], wg.prototype, "mimeType", void 0), r([m()], wg.prototype, "muted", null), r([m()], wg.prototype, "playerUrl", null), r([m({ readOnly: true })], wg.prototype, "playing", null), r([m()], wg.prototype, "playsInline", null), r([m()], wg.prototype, "rate", null), r([m()], wg.prototype, "sensorModel", void 0), r([m({ readOnly: true })], wg.prototype, "started", void 0), r([m()], wg.prototype, "state", void 0), r([m()], wg.prototype, "subtitleTrack", null), r([m({ readOnly: true })], wg.prototype, "videoHeight", void 0), r([m({ readOnly: true })], wg.prototype, "videoWidth", void 0), r([m()], wg.prototype, "volume", null), r([m({ readOnly: true })], wg.prototype, "waiting", null), r([m()], wg.prototype, "waitingTimestamp", void 0), wg = r([a2("esri.layers.video.VideoController")], wg);

// node_modules/@arcgis/core/layers/VideoLayer.js
function ee2(e10, t3) {
  return { ignoreOrigin: this.originIdOf(t3) < e.PORTAL_ITEM };
}
var te2 = [];
var re2 = new l4([255, 127, 0]);
var oe2 = new l4([0, 0, 0, 0.05]);
var ie2 = new u2({ angle: 0, color: re2, size: 10, style: "cross" });
var se2 = new m3({ color: oe2, outline: new m2({ color: re2, width: 2 }) });
var le2 = new m2({ color: re2, width: 1 });
var ne2 = new u2({ angle: 0, color: re2, outline: { color: [255, 255, 255], width: 1.33 }, size: 10, style: "circle" });
var ae2 = new m2({ color: re2, width: 1 });
var pe2 = { types: { base: c2, key: "type", typeMap: { "simple-marker": u2, "picture-marker": a6, cim: n2 } }, json: { name: "drawingInfo.sensorSymbol", write: { writer: i2, overridePolicy: ee2 } } };
function ye2(e10, t3) {
  return { type: t3, json: { name: e10, write: { overridePolicy: ee2 } } };
}
var me2 = class extends p2(t2(l5(b2(j2(S2(e3(h2))))))) {
  constructor(e10) {
    super(e10), this.capabilities = null, this.codecs = null, this.connectionInfo = null, this.controller = new wg(), this.copyright = null, this.created = null, this.customParameters = null, this.description = null, this.elevationSource = null, this.frame = null, this.frameCenterSymbol = ie2.clone(), this.frameCount = null, this.frameEffect = null, this.frameOpacity = 1, this.frameOutlineSymbol = se2.clone(), this.fullExtent = null, this.initialExtent = null, this.layerId = null, this.operationalLayerType = "ArcGISVideoLayer", this.playbackInfo = null, this.posterUrl = null, this.qualities = null, this.sensorSymbolOrientation = { source: "platformHeading", symbolOffset: 0 }, this.sensorSymbol = ne2.clone(), this.sensorSightLineSymbol = le2.clone(), this.sensorTrailSymbol = ae2.clone(), this.serviceItemId = null, this.sourceJSON = null, this.sourceQuality = null, this.sourceType = null, this.spatialReference = f.WGS84, this.start = 0, this.telemetryDisplay = new p3(), this.type = "video", this.url = null, this.version = null, this.videoLayersInfo = null;
  }
  initialize() {
    this.addHandles([l2(() => this.metadata, () => {
      this.notifyChange("telemetry"), this.notifyChange("groundControlPoints"), this.notifyChange("frameHorizonPoints");
    }), l2(() => this.telemetry?.sensorLocation, (e10) => this._setSensorTrail(e10), h)]), j(() => this.loaded && "can-play" === this.state && this.duration > 0).then(() => {
      this.start >= 0 && this.start <= this.duration && this.setCurrentTime(this.start);
    });
  }
  destroy() {
    this.removeAllHandles(), this.controller && this.controller.destroy();
  }
  load(e10) {
    const t3 = null != e10 ? e10.signal : null, r5 = this.loadFromPortal({ supportedTypes: ["Video Service"], supportsData: false }, e10).catch(a3).then(() => this._fetchService(t3));
    return this.addResolvingPromise(r5), Promise.resolve(this);
  }
  get autoplay() {
    return this.controller?.autoplay ?? false;
  }
  set autoplay(e10) {
    this.controller.autoplay = e10;
  }
  get buffered() {
    return this.controller.buffered;
  }
  readCapabilitiesFromService(e10, t3) {
    return A(t3);
  }
  readConnectionInfo(e10, t3) {
    const r5 = Object.values(t3.connectionUrl);
    return r5?.length && (this.controller.playerUrl = r5[0]), t3.connectionUrl;
  }
  get currentTime() {
    return this.controller.currentTime;
  }
  get duration() {
    return this.controller.duration;
  }
  get ended() {
    return this.controller.ended;
  }
  get frameHorizonPoints() {
    return c4(this.metadata);
  }
  get groundControlPoints() {
    return L(this.metadata);
  }
  get isLive() {
    return this.controller?.isLive ?? false;
  }
  get livestreamStatus() {
    return this.controller?.livestreamStatus;
  }
  get loop() {
    return this.controller.loop;
  }
  set loop(e10) {
    this.controller.loop = e10;
  }
  get metadata() {
    return this.controller?.currentMetadata;
  }
  get mimeType() {
    return this.controller?.mimeType;
  }
  get muted() {
    return this.controller.muted;
  }
  set muted(e10) {
    this.controller.muted = e10;
  }
  get parsedUrl() {
    return u4(this);
  }
  get playbackRate() {
    return this.controller.rate;
  }
  set playbackRate(e10) {
    this.controller.rate = e10;
  }
  get playerUrl() {
    return this.controller.playerUrl;
  }
  get playing() {
    return this.controller.playing;
  }
  get started() {
    return this.controller?.started ?? false;
  }
  get state() {
    return this.controller.state;
  }
  get telemetry() {
    return C2(this.metadata);
  }
  readTitleFromService(e10, { name: t3 }) {
    return this.url ? w(this.url, t3) : t3;
  }
  get videoElement() {
    return this.controller?.element;
  }
  get videoHeight() {
    return this.controller?.videoHeight;
  }
  readLayerInfosFromService(e10, t3) {
    return p4(t3);
  }
  get videoTimeExtent() {
    return c(i.getLogger(this), "videoTimeExtent", { replacement: "fullTimeExtent", version: "4.33", warnOnce: true }), this.fullTimeExtent;
  }
  get videoWidth() {
    return this.controller?.videoWidth;
  }
  get volume() {
    return this.controller?.volume ?? 0;
  }
  set volume(e10) {
    this.controller.volume = e10;
  }
  get waiting() {
    return this.controller.waiting;
  }
  play() {
    this.controller.play();
  }
  pause() {
    this.controller.pause();
  }
  reset() {
    te2 = [], this.controller.reset();
  }
  setCurrentTime(e10) {
    if (this.duration < 0) return;
    const t3 = r2(e10, 0, this.duration);
    this.controller.setCurrentTime(t3);
  }
  toGround(e10, t3) {
    return this.controller?.sensorModel?.metadataSupportsTransforms ? this.controller.sensorModel.transformImageToGeo(e10, t3) : null;
  }
  toVideo(e10) {
    if (!this.controller?.sensorModel?.metadataSupportsTransforms) return null;
    const t3 = this.controller.sensorModel.transformGeoToImage(e10.x, e10.y, e10.z);
    return { x: t3[0], y: t3[1] };
  }
  updateTelemetryColor(e10) {
    this.frameCenterSymbol = v(this.frameCenterSymbol, e10) ?? ie2, this.frameOutlineSymbol = v(this.frameOutlineSymbol, e10, oe2) ?? se2, this.sensorSightLineSymbol = v(this.sensorSightLineSymbol, e10) ?? le2, this.sensorTrailSymbol = v(this.sensorTrailSymbol, e10) ?? ae2, this.sensorSymbol = v(this.sensorSymbol, e10) ?? ne2;
  }
  write(e10, t3) {
    return null == this.layerId ? (t3?.messages?.push(new s("layer:unsupported", `Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' cannot be saved to a web map, web scene, or portal item. The ArcGIS server version must be greater than 11.2.`)), null) : super.write(e10, t3);
  }
  async _fetchService(e10) {
    if (this.sourceJSON) return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t3, ssl: o4 } = await H(this.url, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters }, signal: e10 });
    if (o4 && (this.url = this.url.replace(/^http:/i, "https:")), !t3?.currentVersion) return t3.currentVersion = "11.2", this.sourceJSON = t3, void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    if (this.layerId ??= t3.layers?.[0]?.id ?? null, null == this.layerId) throw new s("arcgis-layers:url-mismatch", "The url is not a valid arcgis resource");
    const { data: s5 } = await H(this.parsedUrl.path, { query: { f: "json", ...this.customParameters }, signal: e10 });
    this.sourceJSON = { ...t3, ...s5 }, this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
  }
  _setSensorTrail(e10) {
    if (!e10) return;
    const t3 = m5(e10, te2);
    te2 = [...t3];
    const r5 = te2.map((e11) => e11.toArray()), o4 = new y({ hasZ: e10.hasZ, paths: [r5] });
    this.telemetry.sensorTrail = o4.clone();
  }
};
r([m({ type: Boolean, json: { write: { ignoreOrigin: true } } })], me2.prototype, "autoplay", null), r([m({ readOnly: true })], me2.prototype, "buffered", null), r([m({ readOnly: true })], me2.prototype, "cameraInfo", void 0), r([m({ readOnly: true, json: { read: false } })], me2.prototype, "capabilities", void 0), r([o("service", "capabilities", ["supportsAppend", "supportsCoverageQuery", "supportsExportClip", "supportsExportFrameset", "supportsMensuration", "supportsPreviews", "supportsUpdate"])], me2.prototype, "readCapabilitiesFromService", null), r([m({ readOnly: true })], me2.prototype, "codecs", void 0), r([m({ readOnly: true })], me2.prototype, "connectionInfo", void 0), r([o("connectionInfo", ["connectionUrl"])], me2.prototype, "readConnectionInfo", null), r([m()], me2.prototype, "controller", void 0), r([m({ type: String })], me2.prototype, "copyright", void 0), r([m({ readOnly: true, type: Date })], me2.prototype, "created", void 0), r([m({ type: Number })], me2.prototype, "currentTime", null), r([m({ json: { write: false } })], me2.prototype, "customParameters", void 0), r([m({ type: String })], me2.prototype, "description", void 0), r([m({ type: Number })], me2.prototype, "duration", null), r([m({ readOnly: true })], me2.prototype, "elevationSource", void 0), r([m({ type: Boolean })], me2.prototype, "ended", null), r([m({ type: u5 })], me2.prototype, "frame", void 0), r([m(ye2("drawingInfo.frameCenterSymbol", u2))], me2.prototype, "frameCenterSymbol", void 0), r([m({ readOnly: true, type: x })], me2.prototype, "frameCount", void 0), r([m(l3)], me2.prototype, "frameEffect", void 0), r([m(w2)], me2.prototype, "frameOpacity", void 0), r([m(ye2("drawingInfo.frameOutlineSymbol", m3))], me2.prototype, "frameOutlineSymbol", void 0), r([m({ type: z })], me2.prototype, "fullExtent", void 0), r([m({ readOnly: true })], me2.prototype, "frameHorizonPoints", null), r([m({ readOnly: true, json: { read: { reader: g, source: "time" } }, type: a7 })], me2.prototype, "fullTimeExtent", void 0), r([m({ readOnly: true })], me2.prototype, "groundControlPoints", null), r([m(u)], me2.prototype, "id", void 0), r([m({ type: z })], me2.prototype, "initialExtent", void 0), r([m({ readOnly: true })], me2.prototype, "isLive", null), r([m({ type: x, json: { read: false, origins: { service: { read: { source: "id" } } } } })], me2.prototype, "layerId", void 0), r([m({ readOnly: true })], me2.prototype, "livestreamStatus", null), r([m({ type: Boolean })], me2.prototype, "loop", null), r([m({ readOnly: true })], me2.prototype, "metadata", null), r([m({ readOnly: true })], me2.prototype, "mimeType", null), r([m({ type: Boolean, json: { write: { ignoreOrigin: true } } })], me2.prototype, "muted", null), r([m({ type: ["ArcGISVideoLayer"] })], me2.prototype, "operationalLayerType", void 0), r([m({ readOnly: true })], me2.prototype, "parsedUrl", null), r([m({ type: i4 })], me2.prototype, "playbackInfo", void 0), r([m({ type: Number })], me2.prototype, "playbackRate", null), r([m({ readOnly: true, type: String })], me2.prototype, "playerUrl", null), r([m({ readOnly: true })], me2.prototype, "playing", null), r([m({ readOnly: true, json: { read: { source: "poster" } } })], me2.prototype, "posterUrl", void 0), r([m({ readOnly: true })], me2.prototype, "qualities", void 0), r([m()], me2.prototype, "sensorSymbolOrientation", void 0), r([m(pe2)], me2.prototype, "sensorSymbol", void 0), r([m(ye2("drawingInfo.sensorSightLineSymbol", m2))], me2.prototype, "sensorSightLineSymbol", void 0), r([m(ye2("drawingInfo.sensorTrailSymbol", m2))], me2.prototype, "sensorTrailSymbol", void 0), r([m({ readOnly: true })], me2.prototype, "serviceItemId", void 0), r([m()], me2.prototype, "sourceJSON", void 0), r([m({ readOnly: true })], me2.prototype, "sourceQuality", void 0), r([m({ readOnly: true, json: { name: "serviceType" } })], me2.prototype, "sourceType", void 0), r([m()], me2.prototype, "spatialReference", void 0), r([m({ json: { write: true } })], me2.prototype, "start", void 0), r([m({ readOnly: true })], me2.prototype, "started", null), r([m({ readOnly: true, type: String })], me2.prototype, "state", null), r([m({ readOnly: true, type: m4 })], me2.prototype, "telemetry", null), r([m({ type: p3, nonNullable: true, json: { write: { ignoreOrigin: true } } })], me2.prototype, "telemetryDisplay", void 0), r([o("service", "title", ["name"])], me2.prototype, "readTitleFromService", null), r([m({ readOnly: true })], me2.prototype, "type", void 0), r([m(s2())], me2.prototype, "url", void 0), r([m({ readOnly: true, type: Number, json: { read: { source: "currentVersion" } } })], me2.prototype, "version", void 0), r([m({ readOnly: true })], me2.prototype, "videoElement", null), r([m({ readOnly: true })], me2.prototype, "videoHeight", null), r([m({ readOnly: true, json: { read: false } })], me2.prototype, "videoLayersInfo", void 0), r([o("service", "videoLayersInfo", ["id", "name", "poster", "serviceType", "type"])], me2.prototype, "readLayerInfosFromService", null), r([m({ type: a7, readOnly: true })], me2.prototype, "videoTimeExtent", null), r([m({ readOnly: true })], me2.prototype, "videoWidth", null), r([m()], me2.prototype, "volume", null), r([m({ readOnly: true })], me2.prototype, "waiting", null), me2 = r([a2("esri.layers.VideoLayer")], me2);
var ue2 = me2;
export {
  ue2 as default
};
//# sourceMappingURL=VideoLayer-OJS4HBP7.js.map
