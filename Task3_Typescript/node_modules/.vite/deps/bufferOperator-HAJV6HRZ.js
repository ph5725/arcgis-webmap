import {
  f,
  l
} from "./chunk-QJLJKB7O.js";
import "./chunk-3DJQ2CCQ.js";
import "./chunk-HDMIACHH.js";
import "./chunk-OURQTMNI.js";
import {
  Be,
  Ie,
  Me,
  Pe
} from "./chunk-MYOG5JEY.js";
import "./chunk-XOCYWQ7P.js";
import "./chunk-2OTCLWRN.js";
import "./chunk-XZOH57EG.js";
import "./chunk-LSL2QL5U.js";
import "./chunk-DDDUQRA2.js";
import "./chunk-XOMXNJJG.js";
import {
  N2 as N
} from "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import {
  L
} from "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/geometry/operators/json/bufferOperator.js
function a(t, o, m = {}) {
  const { unit: a2 } = m, c2 = Ie(t);
  a2 && c2 && (o = N(o, a2, c2));
  const u = Pe(t), p = u.getSpatialReference();
  return Me(f(u.getGeometry(), p, o), p);
}
function c(e, i, a2 = {}) {
  let { maxDeviation: c2 = NaN, maxVerticesInFullCircle: u = 96, union: p = false, unit: f2 } = a2;
  const l2 = Ie(e);
  f2 && l2 && (i = i.map((t) => N(t, f2, l2)), c2 && (c2 = N(c2, f2, l2)));
  const [j, x] = Be(e);
  return l(j, x, i, c2, u, p).map((t) => Me(t, x)).filter(L);
}
export {
  a as execute,
  c as executeMany
};
//# sourceMappingURL=bufferOperator-HAJV6HRZ.js.map
