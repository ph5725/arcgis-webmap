{
  "version": 3,
  "sources": ["../../lit-html/src/directives/repeat.ts", "../../@esri/calcite-components/dist/chunks/global.js", "../../@esri/calcite-components/dist/chunks/responsive.js", "../../@esri/calcite-components/dist/components/calcite-carousel/customElement.js"],
  "sourcesContent": ["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ChildPart, noChange} from '../lit-html.js';\nimport {directive, Directive, PartInfo, PartType} from '../directive.js';\nimport {\n  insertPart,\n  getCommittedValue,\n  removePart,\n  setCommittedValue,\n  setChildPartValue,\n} from '../directive-helpers.js';\n\nexport type KeyFn<T> = (item: T, index: number) => unknown;\nexport type ItemTemplate<T> = (item: T, index: number) => unknown;\n\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list: unknown[], start: number, end: number) => {\n  const map = new Map<unknown, number>();\n  for (let i = start; i <= end; i++) {\n    map.set(list[i], i);\n  }\n  return map;\n};\n\nclass RepeatDirective extends Directive {\n  private _itemKeys?: unknown[];\n\n  constructor(partInfo: PartInfo) {\n    super(partInfo);\n    if (partInfo.type !== PartType.CHILD) {\n      throw new Error('repeat() can only be used in text expressions');\n    }\n  }\n\n  private _getValuesAndKeys<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    let keyFn: KeyFn<T> | undefined;\n    if (template === undefined) {\n      template = keyFnOrTemplate;\n    } else if (keyFnOrTemplate !== undefined) {\n      keyFn = keyFnOrTemplate as KeyFn<T>;\n    }\n    const keys = [];\n    const values = [];\n    let index = 0;\n    for (const item of items) {\n      keys[index] = keyFn ? keyFn(item, index) : index;\n      values[index] = template!(item, index);\n      index++;\n    }\n    return {\n      values,\n      keys,\n    };\n  }\n\n  render<T>(items: Iterable<T>, template: ItemTemplate<T>): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): Array<unknown>;\n  render<T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ) {\n    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;\n  }\n\n  override update<T>(\n    containerPart: ChildPart,\n    [items, keyFnOrTemplate, template]: [\n      Iterable<T>,\n      KeyFn<T> | ItemTemplate<T>,\n      ItemTemplate<T>,\n    ]\n  ) {\n    // Old part & key lists are retrieved from the last update (which may\n    // be primed by hydration)\n    const oldParts = getCommittedValue(\n      containerPart\n    ) as Array<ChildPart | null>;\n    const {values: newValues, keys: newKeys} = this._getValuesAndKeys(\n      items,\n      keyFnOrTemplate,\n      template\n    );\n\n    // We check that oldParts, the committed value, is an Array as an\n    // indicator that the previous value came from a repeat() call. If\n    // oldParts is not an Array then this is the first render and we return\n    // an array for lit-html's array handling to render, and remember the\n    // keys.\n    if (!Array.isArray(oldParts)) {\n      this._itemKeys = newKeys;\n      return newValues;\n    }\n\n    // In SSR hydration it's possible for oldParts to be an array but for us\n    // to not have item keys because the update() hasn't run yet. We set the\n    // keys to an empty array. This will cause all oldKey/newKey comparisons\n    // to fail and execution to fall to the last nested brach below which\n    // reuses the oldPart.\n    const oldKeys = (this._itemKeys ??= []);\n\n    // New part list will be built up as we go (either reused from\n    // old parts or created for new keys in this update). This is\n    // saved in the above cache at the end of the update.\n    const newParts: ChildPart[] = [];\n\n    // Maps from key to index for current and previous update; these\n    // are generated lazily only when needed as a performance\n    // optimization, since they are only required for multiple\n    // non-contiguous changes in the list, which are less common.\n    let newKeyToIndexMap!: Map<unknown, number>;\n    let oldKeyToIndexMap!: Map<unknown, number>;\n\n    // Head and tail pointers to old parts and new values\n    let oldHead = 0;\n    let oldTail = oldParts.length - 1;\n    let newHead = 0;\n    let newTail = newValues.length - 1;\n\n    // Overview of O(n) reconciliation algorithm (general approach\n    // based on ideas found in ivi, vue, snabbdom, etc.):\n    //\n    // * We start with the list of old parts and new values (and\n    //   arrays of their respective keys), head/tail pointers into\n    //   each, and we build up the new list of parts by updating\n    //   (and when needed, moving) old parts or creating new ones.\n    //   The initial scenario might look like this (for brevity of\n    //   the diagrams, the numbers in the array reflect keys\n    //   associated with the old parts or new values, although keys\n    //   and parts/values are actually stored in parallel arrays\n    //   indexed using the same head/tail pointers):\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n    //                                      item order\n    //      newHead ^                 ^ newTail\n    //\n    // * Iterate old & new lists from both sides, updating,\n    //   swapping, or removing parts at the head/tail locations\n    //   until neither head nor tail can move.\n    //\n    // * Example below: keys at head pointers match, so update old\n    //   part 0 in-place (no need to move it) and record part 0 in\n    //   the `newParts` list. The last thing we do is advance the\n    //   `oldHead` and `newHead` pointers (will be reflected in the\n    //   next diagram).\n    //\n    //      oldHead v                 v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //      newHead ^                 ^ newTail\n    //\n    // * Example below: head pointers don't match, but tail\n    //   pointers do, so update part 6 in place (no need to move\n    //   it), and record part 6 in the `newParts` list. Last,\n    //   advance the `oldTail` and `oldHead` pointers.\n    //\n    //         oldHead v              v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n    //                                      & newTail\n    //         newHead ^              ^ newTail\n    //\n    // * If neither head nor tail match; next check if one of the\n    //   old head/tail items was removed. We first need to generate\n    //   the reverse map of new keys to index (`newKeyToIndexMap`),\n    //   which is done once lazily as a performance optimization,\n    //   since we only hit this case if multiple non-contiguous\n    //   changes were made. Note that for contiguous removal\n    //   anywhere in the list, the head and tails would advance\n    //   from either end and pass each other before we get to this\n    //   case and removals would be handled in the final while loop\n    //   without needing to generate the map.\n    //\n    // * Example below: The key at `oldTail` was removed (no longer\n    //   in the `newKeyToIndexMap`), so remove that part from the\n    //   DOM and advance just the `oldTail` pointer.\n    //\n    //         oldHead v           v oldTail\n    //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n    //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n    //         newHead ^           ^ newTail\n    //\n    // * Once head and tail cannot move, any mismatches are due to\n    //   either new or moved items; if a new key is in the previous\n    //   \"old key to old index\" map, move the old part to the new\n    //   location, otherwise create and insert a new part. Note\n    //   that when moving an old part we null its position in the\n    //   oldParts array if it lies between the head and tail so we\n    //   know to skip it when the pointers get there.\n    //\n    // * Example below: neither head nor tail match, and neither\n    //   were removed; so find the `newHead` key in the\n    //   `oldKeyToIndexMap`, and move that old part's DOM into the\n    //   next head position (before `oldParts[oldHead]`). Last,\n    //   null the part in the `oldPart` array since it was\n    //   somewhere in the remaining oldParts still to be scanned\n    //   (between the head and tail pointers) so that we know to\n    //   skip that old part on future iterations.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n    //                                      newHead\n    //         newHead ^           ^ newTail\n    //\n    // * Note that for moves/insertions like the one above, a part\n    //   inserted at the head pointer is inserted before the\n    //   current `oldParts[oldHead]`, and a part inserted at the\n    //   tail pointer is inserted before `newParts[newTail+1]`. The\n    //   seeming asymmetry lies in the fact that new parts are\n    //   moved into place outside in, so to the right of the head\n    //   pointer are old parts, and to the right of the tail\n    //   pointer are new parts.\n    //\n    // * We always restart back from the top of the algorithm,\n    //   allowing matching and simple updates in place to\n    //   continue...\n    //\n    // * Example below: the head pointers once again match, so\n    //   simply update part 1 and record it in the `newParts`\n    //   array.  Last, advance both head pointers.\n    //\n    //         oldHead v        v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n    //                                      & newHead\n    //            newHead ^        ^ newTail\n    //\n    // * As mentioned above, items that were moved as a result of\n    //   being stuck (the final else clause in the code below) are\n    //   marked with null, so we always advance old pointers over\n    //   these so we're comparing the next actual old value on\n    //   either end.\n    //\n    // * Example below: `oldHead` is null (already placed in\n    //   newParts), so advance `oldHead`.\n    //\n    //            oldHead v     v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n    //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //               newHead ^     ^ newTail\n    //\n    // * Note it's not critical to mark old parts as null when they\n    //   are moved from head to tail or tail to head, since they\n    //   will be outside the pointer range and never visited again.\n    //\n    // * Example below: Here the old tail key matches the new head\n    //   key, so the part at the `oldTail` position and move its\n    //   DOM to the new head position (before `oldParts[oldHead]`).\n    //   Last, advance `oldTail` and `newHead` pointers.\n    //\n    //               oldHead v  v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n    //                                     advance oldTail & newHead\n    //               newHead ^     ^ newTail\n    //\n    // * Example below: Old and new head keys match, so update the\n    //   old head part in place, and advance the `oldHead` and\n    //   `newHead` pointers.\n    //\n    //               oldHead v oldTail\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n    //                                      newHead\n    //                  newHead ^  ^ newTail\n    //\n    // * Once the new or old pointers move past each other then all\n    //   we have left is additions (if old list exhausted) or\n    //   removals (if new list exhausted). Those are handled in the\n    //   final while loops at the end.\n    //\n    // * Example below: `oldHead` exceeded `oldTail`, so we're done\n    //   with the main loop.  Create the remaining part and insert\n    //   it at the new head position, and the update is complete.\n    //\n    //                   (oldHead > oldTail)\n    //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n    //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n    //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n    //                     newHead ^ newTail\n    //\n    // * Note that the order of the if/else clauses is not\n    //   important to the algorithm, as long as the null checks\n    //   come first (to ensure we're always working on valid old\n    //   parts) and that the final else clause comes last (since\n    //   that's where the expensive moves occur). The order of\n    //   remaining clauses is just a simple guess at which cases\n    //   will be most common.\n    //\n    // * Note, we could calculate the longest\n    //   increasing subsequence (LIS) of old items in new position,\n    //   and only move those not in the LIS set. However that costs\n    //   O(nlogn) time and adds a bit more code, and only helps\n    //   make rare types of mutations require fewer moves. The\n    //   above handles removes, adds, reversal, swaps, and single\n    //   moves of contiguous items in linear time, in the minimum\n    //   number of moves. As the number of multiple moves where LIS\n    //   might help approaches a random shuffle, the LIS\n    //   optimization becomes less helpful, so it seems not worth\n    //   the code at this point. Could reconsider if a compelling\n    //   case arises.\n\n    while (oldHead <= oldTail && newHead <= newTail) {\n      if (oldParts[oldHead] === null) {\n        // `null` means old part at head has already been used\n        // below; skip\n        oldHead++;\n      } else if (oldParts[oldTail] === null) {\n        // `null` means old part at tail has already been used\n        // below; skip\n        oldTail--;\n      } else if (oldKeys[oldHead] === newKeys[newHead]) {\n        // Old head matches new head; update in place\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newHead]\n        );\n        oldHead++;\n        newHead++;\n      } else if (oldKeys[oldTail] === newKeys[newTail]) {\n        // Old tail matches new tail; update in place\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newTail]\n        );\n        oldTail--;\n        newTail--;\n      } else if (oldKeys[oldHead] === newKeys[newTail]) {\n        // Old head matches new tail; update and move to new tail\n        newParts[newTail] = setChildPartValue(\n          oldParts[oldHead]!,\n          newValues[newTail]\n        );\n        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]!);\n        oldHead++;\n        newTail--;\n      } else if (oldKeys[oldTail] === newKeys[newHead]) {\n        // Old tail matches new head; update and move to new head\n        newParts[newHead] = setChildPartValue(\n          oldParts[oldTail]!,\n          newValues[newHead]\n        );\n        insertPart(containerPart, oldParts[oldHead]!, oldParts[oldTail]!);\n        oldTail--;\n        newHead++;\n      } else {\n        if (newKeyToIndexMap === undefined) {\n          // Lazily generate key-to-index maps, used for removals &\n          // moves below\n          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n        }\n        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n          // Old head is no longer in new list; remove\n          removePart(oldParts[oldHead]!);\n          oldHead++;\n        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n          // Old tail is no longer in new list; remove\n          removePart(oldParts[oldTail]!);\n          oldTail--;\n        } else {\n          // Any mismatches at this point are due to additions or\n          // moves; see if we have an old part we can reuse and move\n          // into place\n          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n          const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n          if (oldPart === null) {\n            // No old part for this value; create a new one and\n            // insert it\n            const newPart = insertPart(containerPart, oldParts[oldHead]!);\n            setChildPartValue(newPart, newValues[newHead]);\n            newParts[newHead] = newPart;\n          } else {\n            // Reuse old part\n            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);\n            insertPart(containerPart, oldParts[oldHead]!, oldPart);\n            // This marks the old part as having been used, so that\n            // it will be skipped in the first two checks above\n            oldParts[oldIndex as number] = null;\n          }\n          newHead++;\n        }\n      }\n    }\n    // Add parts for any remaining new values\n    while (newHead <= newTail) {\n      // For all remaining additions, we insert before last new\n      // tail, since old pointers are no longer valid\n      const newPart = insertPart(containerPart, newParts[newTail + 1]);\n      setChildPartValue(newPart, newValues[newHead]);\n      newParts[newHead++] = newPart;\n    }\n    // Remove any remaining unused old parts\n    while (oldHead <= oldTail) {\n      const oldPart = oldParts[oldHead++];\n      if (oldPart !== null) {\n        removePart(oldPart);\n      }\n    }\n\n    // Save order of new parts for next round\n    this._itemKeys = newKeys;\n    // Directly set part value, bypassing it's dirty-checking\n    setCommittedValue(containerPart, newParts);\n    return noChange;\n  }\n}\n\nexport interface RepeatDirectiveFn {\n  <T>(\n    items: Iterable<T>,\n    keyFnOrTemplate: KeyFn<T> | ItemTemplate<T>,\n    template?: ItemTemplate<T>\n  ): unknown;\n  <T>(items: Iterable<T>, template: ItemTemplate<T>): unknown;\n  <T>(\n    items: Iterable<T>,\n    keyFn: KeyFn<T> | ItemTemplate<T>,\n    template: ItemTemplate<T>\n  ): unknown;\n}\n\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * and removals.\n *\n * The `keyFn` takes two parameters, the item and its index, and returns a unique key value.\n *\n * ```js\n * html`\n *   <ol>\n *     ${repeat(this.items, (item) => item.id, (item, index) => {\n *       return html`<li>${index}: ${item.name}</li>`;\n *     })}\n *   </ol>\n * `\n * ```\n *\n * **Important**: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive(RepeatDirective) as RepeatDirectiveFn;\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type {RepeatDirective};\n", "/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\r\nv3.2.1 */\r\nconst calciteContainerSizeWidthXxs = { max: \"320px\" };\r\nconst calciteContainerSizeWidthXs = { max: \"476px\" };\r\nconst calciteContainerSizeWidthSm = { max: \"768px\" };\r\nconst calciteContainerSizeWidthMd = { max: \"1152px\" };\r\nconst calciteSpacingFixedSm = \"8px\";\r\nconst calciteSpacingFixedMd = \"12px\";\r\nconst calciteSpacingFixedXl = \"16px\";\r\nconst calciteSpacingBase = \"2px\";\r\nconst calciteSpacingXxs = \"0.25rem\";\r\nconst calciteSpacingSm = \"0.5rem\";\r\nexport {\r\n  calciteContainerSizeWidthXs as a,\r\n  calciteContainerSizeWidthSm as b,\r\n  calciteContainerSizeWidthXxs as c,\r\n  calciteContainerSizeWidthMd as d,\r\n  calciteSpacingXxs as e,\r\n  calciteSpacingBase as f,\r\n  calciteSpacingSm as g,\r\n  calciteSpacingFixedXl as h,\r\n  calciteSpacingFixedMd as i,\r\n  calciteSpacingFixedSm as j\r\n};\r\n", "/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\r\nv3.2.1 */\r\nimport { c as calciteContainerSizeWidthXxs, a as calciteContainerSizeWidthXs, b as calciteContainerSizeWidthSm, d as calciteContainerSizeWidthMd } from \"./global.js\";\r\nconst breakpoints = {\r\n  width: {\r\n    medium: cssLengthToNumber(calciteContainerSizeWidthMd.max),\r\n    small: cssLengthToNumber(calciteContainerSizeWidthSm.max),\r\n    xsmall: cssLengthToNumber(calciteContainerSizeWidthXs.max),\r\n    xxsmall: cssLengthToNumber(calciteContainerSizeWidthXxs.max)\r\n  }\r\n};\r\nfunction cssLengthToNumber(length) {\r\n  return parseInt(length);\r\n}\r\nexport {\r\n  breakpoints as b\r\n};\r\n", "/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\r\nv3.2.1 */\r\nimport { c as customElement } from \"../../chunks/runtime.js\";\r\nimport { ref } from \"lit-html/directives/ref.js\";\r\nimport { repeat } from \"lit-html/directives/repeat.js\";\r\nimport { nothing, html } from \"lit\";\r\nimport { LitElement, createEvent, safeClassMap } from \"@arcgis/lumina\";\r\nimport { z as whenAnimationDone, s as slotChangeGetAssignedElements, d as focusElementInGroup, g as getElementDir } from \"../../chunks/dom.js\";\r\nimport { g as guid } from \"../../chunks/guid.js\";\r\nimport { u as updateHostInteraction, I as InteractiveContainer } from \"../../chunks/interactive.js\";\r\nimport { c as componentFocusable } from \"../../chunks/component.js\";\r\nimport { c as createObserver } from \"../../chunks/observers.js\";\r\nimport { b as breakpoints } from \"../../chunks/responsive.js\";\r\nimport { g as getRoundRobinIndex } from \"../../chunks/array.js\";\r\nimport { u as useT9n } from \"../../chunks/useT9n.js\";\r\nimport { css } from \"@lit/reactive-element/css-tag.js\";\r\nconst DURATION = 6e3;\r\nconst CSS = {\r\n  container: \"container\",\r\n  containerOverlaid: \"container--overlaid\",\r\n  containerEdged: \"container--edged\",\r\n  itemContainer: \"item-container\",\r\n  itemContainerForward: \"item-container--forward\",\r\n  itemContainerBackward: \"item-container--backward\",\r\n  pagination: \"pagination\",\r\n  paginationItems: \"pagination-items\",\r\n  paginationItem: \"pagination-item\",\r\n  paginationItemIndividual: \"pagination-item--individual\",\r\n  paginationItemVisible: \"pagination-item--visible\",\r\n  paginationItemOutOfRange: \"pagination-item--out-of-range\",\r\n  paginationItemSelected: \"pagination-item--selected\",\r\n  paginationItemRangeEdge: \"pagination-item--range-edge\",\r\n  pageNext: \"page-next\",\r\n  pagePrevious: \"page-previous\",\r\n  autoplayControl: \"autoplay-control\",\r\n  autoplayProgress: \"autoplay-progress\"\r\n};\r\nconst ICONS = {\r\n  chevronLeft: \"chevron-left\",\r\n  chevronRight: \"chevron-right\",\r\n  inactive: \"bullet-point\",\r\n  active: \"bullet-point-large\",\r\n  pause: \"pause-f\",\r\n  play: \"play-f\"\r\n};\r\nconst centerItemsByBreakpoint = {\r\n  medium: 7,\r\n  small: 5,\r\n  xsmall: 3,\r\n  xxsmall: 1\r\n};\r\nconst styles = css`:host([disabled]){cursor:default;-webkit-user-select:none;user-select:none;opacity:var(--calcite-opacity-disabled)}:host([disabled]) *,:host([disabled]) ::slotted(*){pointer-events:none}:host{display:flex;inline-size:100%;--calcite-internal-internal-carousel-item-space: 1.5rem;--calcite-internal-internal-carousel-item-space-wide: 3.5rem;--calcite-internal-internal-carousel-item-background-color: var( --calcite-internal-carousel-item-background-color, var(--calcite-color-foreground-1) );--calcite-internal-internal-carousel-item-background-color-hover: var( --calcite-internal-carousel-item-background-color-hover, var(--calcite-color-foreground-2) );--calcite-internal-internal-carousel-item-background-color-active: var( --calcite-internal-carousel-item-background-color-active, var(--calcite-color-foreground-2) );--calcite-internal-internal-carousel-item-background-color-selected: var( --calcite-internal-carousel-item-background-color-selected, var(--calcite-color-foreground-1) );--calcite-internal-internal-carousel-item-icon-color-hover: var( --calcite-internal-carousel-item-icon-color-hover, var(--calcite-color-text-1) );--calcite-internal-internal-carousel-item-icon-color: var( --calcite-internal-carousel-item-icon-color, var(--calcite-color-border-1) );--calcite-internal-internal-carousel-item-icon-color-selected: var( --calcite-internal-carousel-item-icon-color-selected, var(--calcite-color-brand) );--calcite-internal-internal-carousel-control-color-hover: var( --calcite-internal-carousel-control-color-hover, var(--calcite-color-text-1) );--calcite-internal-internal-carousel-control-color: var( --calcite-internal-carousel-item-icon-color, var(--calcite-color-text-3) );--calcite-internal-internal-carousel-autoplay-progress-background-color: var( --calcite-internal-carousel-autoplay-progress-background-color, var(--calcite-color-border-3) );--calcite-internal-internal-carousel-autoplay-progress-fill-color: var( --calcite-internal-carousel-autoplay-progress-fill-color, var(--calcite-color-brand) )}.container{position:relative;display:flex;inline-size:100%;flex-direction:column;overflow:hidden;font-size:var(--calcite-font-size--1);line-height:1rem;color:var(--calcite-color-text-2);outline-color:transparent}.container:focus{outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.container--edged:not(.container--overlaid){padding-inline:var(--calcite-internal-internal-carousel-item-space-wide);inline-size:calc(100% - var(--calcite-internal-internal-carousel-item-space-wide) * 2)}.item-container{display:flex;flex:1 1 auto;align-items:flex-start;justify-content:center;overflow:auto;padding:.25rem;animation-name:none;animation-duration:var(--calcite-animation-timing)}.container--overlaid .item-container{padding:0}.item-container--forward{animation-name:item-forward}.item-container--backward{animation-name:item-backward}calcite-carousel-item:not([selected]){opacity:0}.pagination{margin:.75rem;display:flex;flex-direction:row;align-items:center;justify-content:center;inline-size:auto}.pagination-items{display:flex;flex-direction:row;align-items:center}.container--overlaid .pagination{position:absolute}.pagination-item.page-next,.pagination-item.page-previous{color:var(--calcite-internal-internal-carousel-control-color)}.pagination-item.page-next:hover,.pagination-item.page-previous:hover{color:var(--calcite-internal-internal-carousel-control-color-hover)}.container--edged .page-next,.container--edged .page-previous{block-size:3rem;inline-size:3rem;position:absolute;inset-block-start:50%;transform:translateY(-50%)}.container--edged .page-next{inset-inline-end:0}.container--edged .page-previous{inset-inline-start:0}.container--overlaid .pagination{inset-block-start:unset;inset-block-end:0;inset-inline:0}.pagination-item.autoplay-control{position:relative;color:var(--calcite-internal-internal-carousel-control-color);--calcite-progress-fill-color: var(--calcite-internal-internal-carousel-autoplay-progress-fill-color);--calcite-progress-background-color: var(--calcite-internal-internal-carousel-autoplay-progress-background-color)}.autoplay-control:focus .autoplay-progress{inset-block-end:4px;inset-inline:2px;inline-size:calc(100% - 4px)}.autoplay-progress{position:absolute;inset-block-end:2px;inset-inline:0;inline-size:100%}.pagination-item{margin:0;block-size:2rem;inline-size:2rem;cursor:pointer;align-items:center;border-style:none;background-color:transparent;outline-color:transparent;transition-property:background-color,block-size,border-color,box-shadow,color,inset-block-end,inset-block-start,inset-inline-end,inset-inline-start,inset-size,opacity,outline-color,transform;transition-duration:var(--calcite-animation-timing);transition-timing-function:ease-in-out;-webkit-appearance:none;display:flex;align-content:center;justify-content:center;--calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color);color:var(--calcite-internal-internal-carousel-item-icon-color)}.pagination-item:hover{background-color:var(--calcite-internal-internal-carousel-item-background-color-hover);color:var(--calcite-internal-internal-carousel-item-icon-color-hover)}.pagination-item:focus{background-color:var(--calcite-internal-internal-carousel-item-background-color-active);outline:2px solid var(--calcite-color-focus, var(--calcite-ui-focus-color, var(--calcite-color-brand)));outline-offset:calc(-2px*(1 - (2*clamp(0,var(--calcite-offset-invert-focus),1))))}.pagination-item:active{background-color:var(--calcite-internal-internal-carousel-item-background-color-active);color:var(--calcite-internal-internal-carousel-item-icon-color-hover)}.pagination-item calcite-icon{color:inherit;pointer-events:none}.pagination-item.pagination-item--selected{--calcite-color-foreground-1: var(--calcite-internal-internal-carousel-item-background-color-selected);--calcite-color-foreground-3: var(--calcite-internal-internal-carousel-item-background-color-selected);color:var(--calcite-internal-internal-carousel-item-icon-color-selected)}.pagination-item--individual{pointer-events:none;inline-size:0px;padding:0;opacity:0;visibility:hidden;transition:var(--calcite-animation-timing) ease-in-out inline-size,var(--calcite-animation-timing) ease-in-out padding,var(--calcite-animation-timing) ease-in-out opacity}.pagination-item--individual.pagination-item--visible{pointer-events:auto;inline-size:2rem;opacity:1;visibility:visible}.pagination-item--range-edge calcite-icon{scale:.75;transition:var(--calcite-animation-timing) ease-in-out scale}.container--overlaid .pagination-item{background-color:var(--calcite-internal-internal-carousel-item-background-color)}.container--overlaid .pagination-item:hover{background-color:var(--calcite-internal-internal-carousel-item-background-color-hover)}.container--overlaid .pagination-item:focus{background-color:var(--calcite-internal-internal-carousel-item-background-color-active)}.container--overlaid .pagination-item:active{background-color:var(--calcite-internal-internal-carousel-item-background-color-active)}@keyframes item-forward{0%{transform:translate3d(100px,0,0)}to{transform:translateZ(0)}}@keyframes item-backward{0%{transform:translate3d(-100px,0,0)}to{transform:translateZ(0)}}:host([disabled]) ::slotted([calcite-hydrated][disabled]),:host([disabled]) [calcite-hydrated][disabled]{opacity:1}.interaction-container{display:contents}:host([hidden]){display:none}[hidden]{display:none}`;\r\nclass Carousel extends LitElement {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.autoplayHandler = () => {\r\n      this.clearIntervals();\r\n      this.slideDurationInterval = setInterval(this.timer, this.autoplayDuration / 100);\r\n    };\r\n    this.containerId = `calcite-carousel-container-${guid()}`;\r\n    this.resizeHandler = ({ contentRect: { width } }) => {\r\n      this.setMaxItemsToBreakpoint(width);\r\n    };\r\n    this.resizeObserver = createObserver(\"resize\", (entries) => entries.forEach(this.resizeHandler));\r\n    this.slideDurationInterval = null;\r\n    this.slideInterval = null;\r\n    this.timer = () => {\r\n      let time = this.slideDurationRemaining;\r\n      const notSuspended = !this.suspendedDueToFocus && !this.suspendedDueToHover || this.userPreventsSuspend;\r\n      if (notSuspended) {\r\n        if (time <= 0.01) {\r\n          time = 1;\r\n          this.direction = \"forward\";\r\n          this.nextItem(false);\r\n        } else {\r\n          time = time - 0.01;\r\n        }\r\n      }\r\n      if (time > 0) {\r\n        this.slideDurationRemaining = time;\r\n      }\r\n    };\r\n    this.messages = useT9n();\r\n    this.direction = \"standby\";\r\n    this.items = [];\r\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\r\n    this.playing = false;\r\n    this.slideDurationRemaining = 1;\r\n    this.suspendedDueToFocus = false;\r\n    this.suspendedDueToHover = false;\r\n    this.suspendedSlideDurationRemaining = 1;\r\n    this.userPreventsSuspend = false;\r\n    this.arrowType = \"inline\";\r\n    this.autoplay = false;\r\n    this.autoplayDuration = DURATION;\r\n    this.controlOverlay = false;\r\n    this.disabled = false;\r\n    this.calciteCarouselChange = createEvent({ cancelable: false });\r\n    this.calciteCarouselPause = createEvent({ cancelable: false });\r\n    this.calciteCarouselPlay = createEvent({ cancelable: false });\r\n    this.calciteCarouselResume = createEvent({ cancelable: false });\r\n    this.calciteCarouselStop = createEvent({ cancelable: false });\r\n  }\r\n  static {\r\n    this.properties = { direction: [16, {}, { state: true }], items: [16, {}, { state: true }], maxItems: [16, {}, { state: true }], playing: [16, {}, { state: true }], selectedIndex: [16, {}, { state: true }], slideDurationRemaining: [16, {}, { state: true }], suspendedDueToFocus: [16, {}, { state: true }], suspendedDueToHover: [16, {}, { state: true }], suspendedSlideDurationRemaining: [16, {}, { state: true }], userPreventsSuspend: [16, {}, { state: true }], arrowType: [3, {}, { reflect: true }], autoplay: [3, {}, { reflect: true }], autoplayDuration: [11, {}, { type: Number, reflect: true }], controlOverlay: [7, {}, { reflect: true, type: Boolean }], disabled: [7, {}, { reflect: true, type: Boolean }], label: 1, messageOverrides: [0, {}, { attribute: false }], paused: [5, {}, { type: Boolean }], selectedItem: [0, {}, { attribute: false }] };\r\n  }\r\n  static {\r\n    this.styles = styles;\r\n  }\r\n  async play() {\r\n    if (this.playing || this.autoplay !== \"\" && !this.autoplay && this.autoplay !== \"paused\") {\r\n      return;\r\n    }\r\n    this.handlePlay(true);\r\n  }\r\n  async setFocus() {\r\n    await componentFocusable(this);\r\n    this.container?.focus();\r\n  }\r\n  async stop() {\r\n    if (!this.playing) {\r\n      return;\r\n    }\r\n    this.handlePause(true);\r\n  }\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    this.resizeObserver?.observe(this.el);\r\n  }\r\n  async load() {\r\n    if ((this.autoplay === \"\" || this.autoplay) && this.autoplay !== \"paused\") {\r\n      this.handlePlay(false);\r\n    } else if (this.autoplay === \"paused\") {\r\n      this.paused = true;\r\n    }\r\n  }\r\n  willUpdate(changes) {\r\n    if (changes.has(\"autoplay\") && this.hasUpdated) {\r\n      this.autoplayWatcher(this.autoplay);\r\n    }\r\n    if (changes.has(\"direction\") && (this.hasUpdated || this.direction !== \"standby\")) {\r\n      this.directionWatcher(this.direction);\r\n    }\r\n    if (changes.has(\"playing\") && (this.hasUpdated || this.playing !== false)) {\r\n      this.paused = !this.playing;\r\n    }\r\n    if (changes.has(\"suspendedDueToFocus\") && (this.hasUpdated || this.suspendedDueToFocus !== false) || changes.has(\"suspendedDueToHover\") && (this.hasUpdated || this.suspendedDueToHover !== false)) {\r\n      this.suspendWatcher();\r\n    }\r\n  }\r\n  updated() {\r\n    updateHostInteraction(this);\r\n  }\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback();\r\n    this.clearIntervals();\r\n    this.resizeObserver?.disconnect();\r\n  }\r\n  autoplayWatcher(autoplay) {\r\n    if (!autoplay) {\r\n      this.handlePause(false);\r\n    }\r\n  }\r\n  async directionWatcher(direction) {\r\n    if (direction === \"standby\") {\r\n      return;\r\n    }\r\n    await whenAnimationDone(this.itemContainer, direction === \"forward\" ? \"item-forward\" : \"item-backward\");\r\n    this.direction = \"standby\";\r\n  }\r\n  suspendWatcher() {\r\n    if (!this.suspendedDueToFocus && !this.suspendedDueToHover) {\r\n      this.suspendEnd();\r\n    } else {\r\n      this.suspendStart();\r\n    }\r\n  }\r\n  setMaxItemsToBreakpoint(width) {\r\n    if (!width) {\r\n      return;\r\n    }\r\n    if (width >= breakpoints.width.small) {\r\n      this.maxItems = centerItemsByBreakpoint.medium;\r\n      return;\r\n    }\r\n    if (width >= breakpoints.width.xsmall) {\r\n      this.maxItems = centerItemsByBreakpoint.small;\r\n      return;\r\n    }\r\n    if (width >= breakpoints.width.xxsmall) {\r\n      this.maxItems = centerItemsByBreakpoint.xsmall;\r\n      return;\r\n    }\r\n    this.maxItems = centerItemsByBreakpoint.xxsmall;\r\n  }\r\n  clearIntervals() {\r\n    clearInterval(this.slideDurationInterval);\r\n    clearInterval(this.slideInterval);\r\n  }\r\n  nextItem(emit) {\r\n    if (this.playing && emit) {\r\n      this.playing = false;\r\n    }\r\n    const nextIndex = getRoundRobinIndex(this.selectedIndex + 1, this.items.length);\r\n    this.setSelectedItem(nextIndex, emit);\r\n  }\r\n  previousItem() {\r\n    this.playing = false;\r\n    const prevIndex = getRoundRobinIndex(Math.max(this.selectedIndex - 1, -1), this.items.length);\r\n    this.setSelectedItem(prevIndex, true);\r\n  }\r\n  handlePlay(emit) {\r\n    this.playing = true;\r\n    this.autoplayHandler();\r\n    this.slideInterval = setInterval(this.autoplayHandler, this.autoplayDuration);\r\n    if (emit) {\r\n      this.calciteCarouselPlay.emit();\r\n    }\r\n  }\r\n  handlePause(emit) {\r\n    this.playing = false;\r\n    this.clearIntervals();\r\n    this.slideDurationRemaining = 1;\r\n    this.suspendedSlideDurationRemaining = 1;\r\n    if (emit) {\r\n      this.calciteCarouselStop.emit();\r\n    }\r\n  }\r\n  suspendStart() {\r\n    this.suspendedSlideDurationRemaining = this.slideDurationRemaining;\r\n  }\r\n  suspendEnd() {\r\n    this.slideDurationRemaining = this.suspendedSlideDurationRemaining;\r\n  }\r\n  handleSlotChange(event) {\r\n    const items = slotChangeGetAssignedElements(event);\r\n    if (items.length < 1) {\r\n      return;\r\n    }\r\n    const activeItemIndex = items.findIndex((item) => item.selected);\r\n    const requestedSelectedIndex = activeItemIndex > -1 ? activeItemIndex : 0;\r\n    this.items = items;\r\n    this.setSelectedItem(requestedSelectedIndex, false);\r\n  }\r\n  setSelectedItem(requestedIndex, emit) {\r\n    const previousSelected = this.selectedIndex;\r\n    this.items.forEach((el, index) => {\r\n      const match = requestedIndex === index;\r\n      el.selected = match;\r\n      if (match) {\r\n        this.selectedItem = el;\r\n        this.selectedIndex = index;\r\n      }\r\n    });\r\n    if (emit) {\r\n      this.playing = false;\r\n      if (previousSelected !== this.selectedIndex) {\r\n        this.calciteCarouselChange.emit();\r\n      }\r\n    }\r\n  }\r\n  handleArrowClick(event) {\r\n    const direction = event.target.dataset.direction;\r\n    if (this.playing) {\r\n      this.handlePause(true);\r\n    }\r\n    if (direction === \"next\") {\r\n      this.direction = \"forward\";\r\n      this.nextItem(true);\r\n    } else if (direction === \"previous\") {\r\n      this.direction = \"backward\";\r\n      this.previousItem();\r\n    }\r\n  }\r\n  handleItemSelection(event) {\r\n    const item = event.target;\r\n    const requestedPosition = parseInt(item.dataset.index);\r\n    if (requestedPosition === this.selectedIndex) {\r\n      return;\r\n    }\r\n    if (this.playing) {\r\n      this.handlePause(true);\r\n    }\r\n    this.direction = requestedPosition > this.selectedIndex ? \"forward\" : \"backward\";\r\n    this.setSelectedItem(requestedPosition, true);\r\n  }\r\n  toggleRotation() {\r\n    this.userPreventsSuspend = true;\r\n    if (this.playing) {\r\n      this.handlePause(true);\r\n    } else {\r\n      this.handlePlay(true);\r\n    }\r\n  }\r\n  handleFocusIn() {\r\n    const isPlaying = this.playing;\r\n    if (isPlaying) {\r\n      this.suspendedDueToFocus = true;\r\n    }\r\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\r\n      this.calciteCarouselPause.emit();\r\n    }\r\n  }\r\n  handleMouseIn() {\r\n    const isPlaying = this.playing;\r\n    if (isPlaying) {\r\n      this.suspendedDueToHover = true;\r\n    }\r\n    if ((!this.suspendedDueToFocus || !this.suspendedDueToHover) && isPlaying) {\r\n      this.calciteCarouselPause.emit();\r\n    }\r\n  }\r\n  handleMouseOut(event) {\r\n    const leavingComponent = !this.el.contains(event.relatedTarget);\r\n    const isPlaying = this.playing;\r\n    if (leavingComponent && isPlaying) {\r\n      this.suspendedDueToHover = false;\r\n    }\r\n    if (leavingComponent && isPlaying && !this.suspendedDueToFocus) {\r\n      this.userPreventsSuspend = false;\r\n      this.calciteCarouselResume.emit();\r\n    }\r\n  }\r\n  handleFocusOut(event) {\r\n    const leavingComponent = !event.composedPath().includes(event.relatedTarget);\r\n    const isPlaying = this.playing;\r\n    if (leavingComponent && isPlaying) {\r\n      this.suspendedDueToFocus = false;\r\n    }\r\n    if (leavingComponent && isPlaying && !this.suspendedDueToHover) {\r\n      this.userPreventsSuspend = false;\r\n      this.calciteCarouselResume.emit();\r\n    }\r\n  }\r\n  containerKeyDownHandler(event) {\r\n    if (event.target !== this.container) {\r\n      return;\r\n    }\r\n    const lastItem = this.items.length - 1;\r\n    switch (event.key) {\r\n      case \" \":\r\n      case \"Enter\":\r\n        event.preventDefault();\r\n        if (this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") {\r\n          this.toggleRotation();\r\n        }\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        this.direction = \"forward\";\r\n        this.nextItem(true);\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        this.direction = \"backward\";\r\n        this.previousItem();\r\n        break;\r\n      case \"Home\":\r\n        event.preventDefault();\r\n        if (this.selectedIndex === 0) {\r\n          return;\r\n        }\r\n        this.direction = \"backward\";\r\n        this.setSelectedItem(0, true);\r\n        break;\r\n      case \"End\":\r\n        event.preventDefault();\r\n        if (this.selectedIndex === lastItem) {\r\n          return;\r\n        }\r\n        this.direction = \"forward\";\r\n        this.setSelectedItem(lastItem, true);\r\n        break;\r\n    }\r\n  }\r\n  tabListKeyDownHandler(event) {\r\n    const visiblePaginationEls = Array(...this.tabList.querySelectorAll(`button:not(.${CSS.paginationItemOutOfRange})`));\r\n    const currentEl = event.target;\r\n    switch (event.key) {\r\n      case \"ArrowRight\":\r\n        focusElementInGroup(visiblePaginationEls, currentEl, \"next\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        focusElementInGroup(visiblePaginationEls, currentEl, \"previous\");\r\n        break;\r\n      case \"Home\":\r\n        event.preventDefault();\r\n        focusElementInGroup(visiblePaginationEls, currentEl, \"first\");\r\n        break;\r\n      case \"End\":\r\n        event.preventDefault();\r\n        focusElementInGroup(visiblePaginationEls, currentEl, \"last\");\r\n        break;\r\n    }\r\n  }\r\n  storeTabListRef(el) {\r\n    this.tabList = el;\r\n  }\r\n  storeContainerRef(el) {\r\n    this.container = el;\r\n  }\r\n  storeItemContainerRef(el) {\r\n    this.itemContainer = el;\r\n  }\r\n  renderRotationControl() {\r\n    const text = this.playing ? this.messages.pause : this.messages.play;\r\n    const formattedValue = this.slideDurationRemaining * 100;\r\n    return html`<button .ariaLabel=${text} class=${safeClassMap({\r\n      [CSS.paginationItem]: true,\r\n      [CSS.autoplayControl]: true\r\n    })} @click=${this.toggleRotation} title=${text ?? nothing}><calcite-icon .icon=${this.playing ? ICONS.pause : ICONS.play} scale=s></calcite-icon>${this.playing && html`<calcite-progress class=${safeClassMap(CSS.autoplayProgress)} .label=${this.messages.carouselItemProgress} .value=${formattedValue}></calcite-progress>` || \"\"}</button>`;\r\n  }\r\n  renderPaginationArea() {\r\n    return html`<div class=${safeClassMap({\r\n      [CSS.pagination]: true,\r\n      [CSS.containerOverlaid]: this.controlOverlay\r\n    })} @keydown=${this.tabListKeyDownHandler} ${ref(this.storeTabListRef)}>${(this.playing || this.autoplay === \"\" || this.autoplay || this.autoplay === \"paused\") && this.renderRotationControl() || \"\"}${this.arrowType === \"inline\" && this.renderArrow(\"previous\") || \"\"}${this.renderPaginationItems()}${this.arrowType === \"inline\" && this.renderArrow(\"next\") || \"\"}</div>`;\r\n  }\r\n  renderPaginationItems() {\r\n    const { selectedIndex, maxItems, items, label, handleItemSelection } = this;\r\n    return html`<div .ariaLabel=${label} class=${safeClassMap(CSS.paginationItems)} role=tablist>${repeat(items, (item) => item.id, (item, index) => {\r\n      const itemCount = items.length;\r\n      const match = index === selectedIndex;\r\n      const first = index === 0;\r\n      const last = index === itemCount - 1;\r\n      const endRangeStart = itemCount - maxItems - 1;\r\n      const inStartRange = selectedIndex < maxItems;\r\n      const inEndRange = selectedIndex >= endRangeStart;\r\n      const rangeStart = inStartRange ? 0 : selectedIndex - Math.floor(maxItems / 2);\r\n      const rangeEnd = inEndRange ? itemCount : rangeStart + maxItems;\r\n      const low = inStartRange ? 0 : inEndRange ? endRangeStart : rangeStart;\r\n      const high = inStartRange ? maxItems + 1 : rangeEnd;\r\n      const isEdge = !first && !last && !match && (index === low - 1 || index === high);\r\n      const visible = match || index <= high && index >= low - 1;\r\n      const overflowActive = itemCount - 1 <= maxItems;\r\n      const icon = match ? ICONS.active : ICONS.inactive;\r\n      return html`<button aria-controls=${(!match ? item.id : void 0) ?? nothing} .ariaSelected=${match} class=${safeClassMap({\r\n        [CSS.paginationItem]: true,\r\n        [CSS.paginationItemIndividual]: true,\r\n        [CSS.paginationItemSelected]: match,\r\n        [CSS.paginationItemRangeEdge]: itemCount - 1 > maxItems && isEdge,\r\n        [CSS.paginationItemOutOfRange]: !(overflowActive || visible),\r\n        [CSS.paginationItemVisible]: overflowActive || visible\r\n      })} data-index=${index ?? nothing} @click=${handleItemSelection} role=tab title=${item.label ?? nothing}><calcite-icon .icon=${icon} scale=l></calcite-icon></button>`;\r\n    })}</div>`;\r\n  }\r\n  renderArrow(direction) {\r\n    const isPrev = direction === \"previous\";\r\n    const dir = getElementDir(this.el);\r\n    const scale = this.arrowType === \"edge\" ? \"m\" : \"s\";\r\n    const css2 = isPrev ? CSS.pagePrevious : CSS.pageNext;\r\n    const title = isPrev ? this.messages.previous : this.messages.next;\r\n    const icon = isPrev ? ICONS.chevronLeft : ICONS.chevronRight;\r\n    return html`<button aria-controls=${this.containerId ?? nothing} class=${safeClassMap({ [CSS.paginationItem]: true, [css2]: true })} data-direction=${direction ?? nothing} @click=${this.handleArrowClick} title=${title ?? nothing}><calcite-icon .flipRtl=${dir === \"rtl\"} .icon=${icon} .scale=${scale}></calcite-icon></button>`;\r\n  }\r\n  render() {\r\n    const { direction } = this;\r\n    return InteractiveContainer({ disabled: this.disabled, children: html`<div .ariaLabel=${this.label} .ariaLive=${this.playing ? \"off\" : \"polite\"} .ariaRoleDescription=${this.messages.carousel} class=${safeClassMap({\r\n      [CSS.container]: true,\r\n      [CSS.containerOverlaid]: this.controlOverlay,\r\n      [CSS.containerEdged]: this.arrowType === \"edge\"\r\n    })} @focusin=${this.handleFocusIn} @focusout=${this.handleFocusOut} @keydown=${this.containerKeyDownHandler} @mouseenter=${this.handleMouseIn} @mouseleave=${this.handleMouseOut} role=group tabindex=0 ${ref(this.storeContainerRef)}><section class=${safeClassMap({\r\n      [CSS.itemContainer]: true,\r\n      [CSS.itemContainerForward]: direction === \"forward\",\r\n      [CSS.itemContainerBackward]: direction === \"backward\"\r\n    })} id=${this.containerId ?? nothing} ${ref(this.storeItemContainerRef)}><slot @slotchange=${this.handleSlotChange}></slot></section>${this.items.length > 1 && this.renderPaginationArea() || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"previous\") || \"\"}${this.arrowType === \"edge\" && this.renderArrow(\"next\") || \"\"}</div>` });\r\n  }\r\n}\r\ncustomElement(\"calcite-carousel\", Carousel);\r\nexport {\r\n  Carousel\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
