import {
  u as u2
} from "./chunk-RN7UQ2UT.js";
import {
  s as s2
} from "./chunk-4K2SSSX2.js";
import {
  $,
  Ct,
  Dt,
  Et,
  G,
  Ge,
  He,
  J,
  Je,
  Mt,
  N,
  O,
  Oe,
  Ot,
  P,
  Pt,
  Q,
  Qe,
  R,
  S,
  Se,
  St,
  T,
  Te,
  Tt,
  U,
  V,
  W,
  X,
  Xe,
  Xt,
  Y,
  Ye,
  Yt,
  Z,
  _,
  _e,
  _t,
  ai,
  at,
  b,
  ct,
  dt,
  e,
  ee,
  ei,
  et,
  f,
  g,
  i as i2,
  it,
  j,
  jt,
  k,
  kt,
  l,
  le,
  m,
  me,
  mt,
  n,
  ni,
  nt,
  ot,
  q,
  qe,
  r,
  st,
  ti,
  u,
  ut,
  v,
  vt,
  w,
  wt,
  x,
  xt,
  z,
  zt
} from "./chunk-SLXU24ZV.js";
import "./chunk-U57T7EQN.js";
import "./chunk-CMHHL5UO.js";
import "./chunk-XHYOFJ4U.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-UY6B6IVT.js";
import {
  i,
  s
} from "./chunk-Y2ZIOB7Y.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/chunks/chartUtilsAm5.js
var Ee = class {
  constructor() {
    Object.defineProperty(this, "_observer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_targets", { enumerable: true, configurable: true, writable: true, value: [] }), this._observer = new ResizeObserver((e2) => {
      P(e2, (e3) => {
        P(this._targets, (t) => {
          t.target === e3.target && t.callback();
        });
      });
    });
  }
  addTarget(e2, t) {
    this._observer.observe(e2, { box: "border-box" }), this._targets.push({ target: e2, callback: t });
  }
  removeTarget(e2) {
    this._observer.unobserve(e2), N(this._targets, (t) => t.target !== e2);
  }
};
var Te2 = class _Te {
  constructor() {
    Object.defineProperty(this, "_timer", { enumerable: true, configurable: true, writable: true, value: null }), Object.defineProperty(this, "_targets", { enumerable: true, configurable: true, writable: true, value: [] });
  }
  addTarget(e2, t) {
    if (null === this._timer) {
      let e3 = null;
      const t2 = () => {
        const i4 = Date.now();
        (null === e3 || i4 > e3 + _Te.delay) && (e3 = i4, P(this._targets, (e4) => {
          let t3 = e4.target.getBoundingClientRect();
          t3.width === e4.size.width && t3.height === e4.size.height || (e4.size = t3, e4.callback());
        })), 0 === this._targets.length ? this._timer = null : this._timer = requestAnimationFrame(t2);
      };
      this._timer = requestAnimationFrame(t2);
    }
    let i3 = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0, x: 0, y: 0 };
    this._targets.push({ target: e2, callback: t, size: i3 });
  }
  removeTarget(e2) {
    N(this._targets, (t) => t.target !== e2), 0 === this._targets.length && null !== this._timer && (cancelAnimationFrame(this._timer), this._timer = null);
  }
};
Object.defineProperty(Te2, "delay", { enumerable: true, configurable: true, writable: true, value: 200 });
var Be = null;
function Ce() {
  return null === Be && (Be = "undefined" != typeof ResizeObserver ? new Ee() : new Te2()), Be;
}
var De = class {
  constructor(e2, t) {
    Object.defineProperty(this, "_sensor", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_element", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_listener", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_disposed", { enumerable: true, configurable: true, writable: true, value: false }), this._sensor = Ce(), this._element = e2, this._listener = q(t), this._sensor.addTarget(e2, t);
  }
  isDisposed() {
    return this._disposed;
  }
  dispose() {
    this._disposed || (this._disposed = true, this._sensor.removeTarget(this._element), this._listener.dispose());
  }
  get sensor() {
    return this._sensor;
  }
};
var Ae = class extends He {
};
Object.defineProperty(Ae, "className", { enumerable: true, configurable: true, writable: true, value: "InterfaceColors" }), Object.defineProperty(Ae, "classNames", { enumerable: true, configurable: true, writable: true, value: He.classNames.concat([Ae.className]) });
var Le = class extends He {
  _setDefaults() {
    this._setDefault("negativeBase", 0), this._setDefault("numberFormat", "#,###.#####"), this._setDefault("smallNumberThreshold", 1);
    const e2 = "_big_number_suffix_", t = "_small_number_suffix_", i3 = "_byte_suffix_";
    this._setDefault("bigNumberPrefixes", [{ number: 1e3, suffix: this._t(e2 + "3") }, { number: 1e6, suffix: this._t(e2 + "6") }, { number: 1e9, suffix: this._t(e2 + "9") }, { number: 1e12, suffix: this._t(e2 + "12") }, { number: 1e15, suffix: this._t(e2 + "15") }, { number: 1e18, suffix: this._t(e2 + "18") }, { number: 1e21, suffix: this._t(e2 + "21") }, { number: 1e24, suffix: this._t(e2 + "24") }]), this._setDefault("smallNumberPrefixes", [{ number: 1e-24, suffix: this._t(t + "24") }, { number: 1e-21, suffix: this._t(t + "21") }, { number: 1e-18, suffix: this._t(t + "18") }, { number: 1e-15, suffix: this._t(t + "15") }, { number: 1e-12, suffix: this._t(t + "12") }, { number: 1e-9, suffix: this._t(t + "9") }, { number: 1e-6, suffix: this._t(t + "6") }, { number: 1e-3, suffix: this._t(t + "3") }]), this._setDefault("bytePrefixes", [{ number: 1, suffix: this._t(i3 + "B") }, { number: 1024, suffix: this._t(i3 + "KB") }, { number: 1048576, suffix: this._t(i3 + "MB") }, { number: 1073741824, suffix: this._t(i3 + "GB") }, { number: 1099511627776, suffix: this._t(i3 + "TB") }, { number: 1125899906842624, suffix: this._t(i3 + "PB") }]), super._setDefaults();
  }
  _beforeChanged() {
    super._beforeChanged();
  }
  format(e2, t, i3) {
    let r2;
    (null == t || g(t) && "number" === t.toLowerCase()) && (t = this.get("numberFormat", ""));
    let s3 = Number(e2);
    if (m(t)) try {
      return this.get("intlLocales") ? new Intl.NumberFormat(this.get("intlLocales"), t).format(s3) : new Intl.NumberFormat(void 0, t).format(s3);
    } catch (a) {
      return "Invalid";
    }
    else {
      t = wt(t);
      let e3, a = this.parseFormat(t, this._root.language);
      e3 = s3 > this.get("negativeBase") ? a.positive : s3 < this.get("negativeBase") ? a.negative : a.zero, null == i3 || e3.mod || (e3 = W(e3), e3.decimals.active = 0 == s3 ? 0 : i3), r2 = e3.template.split(f).join(this.applyFormat(s3, e3));
    }
    return true === this.get("forceLTR") && (r2 = "‎" + r2), r2;
  }
  parseFormat(e2, t) {
    const i3 = t.translateEmpty("_thousandSeparator"), r2 = t.translateEmpty("_decimalSeparator");
    let s3 = { positive: { thousands: { active: -1, passive: -1, interval: -1, separator: i3 }, decimals: { active: -1, passive: -1, separator: r2 }, template: "", source: "", parsed: false }, negative: { thousands: { active: -1, passive: -1, interval: -1, separator: i3 }, decimals: { active: -1, passive: -1, separator: r2 }, template: "", source: "", parsed: false }, zero: { thousands: { active: -1, passive: -1, interval: -1, separator: i3 }, decimals: { active: -1, passive: -1, separator: r2 }, template: "", source: "", parsed: false } }, a = (e2 = e2.replace("||", b)).split("|");
    return s3.positive.source = a[0], void 0 === a[2] ? s3.zero = s3.positive : s3.zero.source = a[2], void 0 === a[1] ? s3.negative = s3.positive : s3.negative.source = a[1], U(s3, (e3, t2) => {
      if (t2.parsed) return;
      let i4 = t2.source;
      "number" === i4.toLowerCase() && (i4 = this.get("numberFormat", "#,###.#####"));
      let r3 = ti.chunk(i4, true);
      for (let s4 = 0; s4 < r3.length; s4++) {
        let e4 = r3[s4];
        if (e4.text = e4.text.replace(b, "|"), "value" === e4.type) {
          let i5 = e4.text.match(/[#0.,]+[ ]?[abespABESP%!]?[abespABESP‰!]?/);
          if (i5) if (null === i5 || "" === i5[0]) t2.template += e4.text;
          else {
            let r4 = i5[0].match(/[abespABESP%‰!]{2}|[abespABESP%‰]{1}$/);
            r4 && (t2.mod = r4[0].toLowerCase(), t2.modSpacing = !!i5[0].match(/[ ]{1}[abespABESP%‰!]{1}$/));
            let s5 = i5[0].split(".");
            if ("" === s5[0]) ;
            else {
              t2.thousands.active = (s5[0].match(/0/g) || []).length, t2.thousands.passive = (s5[0].match(/\#/g) || []).length + t2.thousands.active;
              let e5 = s5[0].split(",");
              1 === e5.length || (t2.thousands.interval = (e5.pop() || "").length, 0 === t2.thousands.interval && (t2.thousands.interval = -1));
            }
            void 0 === s5[1] || (t2.decimals.active = (s5[1].match(/0/g) || []).length, t2.decimals.passive = (s5[1].match(/\#/g) || []).length + t2.decimals.active), t2.template += e4.text.split(i5[0]).join(f);
          }
        } else t2.template += e4.text;
      }
      t2.parsed = true;
    }), s3;
  }
  applyFormat(e2, t) {
    let i3 = e2 < 0;
    e2 = Math.abs(e2);
    let r2 = "", s3 = "", a = t.mod ? t.mod.split("") : [];
    if (-1 !== a.indexOf("b")) {
      let i4 = this.applyPrefix(e2, this.get("bytePrefixes"), -1 !== a.indexOf("!"));
      e2 = i4[0], r2 = i4[1], s3 = i4[2], t.modSpacing && (s3 = " " + s3);
    } else if (-1 !== a.indexOf("a")) {
      let i4 = this.applyPrefix(e2, e2 < this.get("smallNumberThreshold") ? this.get("smallNumberPrefixes") : this.get("bigNumberPrefixes"), -1 !== a.indexOf("!"));
      e2 = i4[0], r2 = i4[1], s3 = i4[2], t.modSpacing && (s3 = " " + s3);
    } else if (-1 !== a.indexOf("p")) {
      let t2 = Math.min(e2.toString().length + 2, 21);
      e2 = parseFloat(e2.toPrecision(t2)), r2 = this._root.language.translate("_percentPrefix"), s3 = this._root.language.translate("_percentSuffix"), "" == r2 && "" == s3 && (s3 = "%");
    } else if (-1 !== a.indexOf("%")) {
      let t2 = Math.min(e2.toString().length + 2, 21);
      e2 *= 100, e2 = parseFloat(e2.toPrecision(t2)), s3 = "%";
    } else if (-1 !== a.indexOf("‰")) {
      let t2 = Math.min(e2.toString().length + 3, 21);
      e2 *= 1e3, e2 = parseFloat(e2.toPrecision(t2)), s3 = "‰";
    }
    if (-1 !== a.indexOf("e")) {
      let i4;
      i4 = t.decimals.passive >= 0 ? e2.toExponential(t.decimals.passive).split("e") : e2.toExponential().split("e"), e2 = Number(i4[0]), s3 = "e" + i4[1], t.modSpacing && (s3 = " " + s3);
    } else if (0 === t.decimals.passive) e2 = Math.round(e2);
    else if (t.decimals.passive > 0) {
      const i4 = _t(e2);
      if (i4 > 0) {
        const r3 = Math.pow(10, t.decimals.passive);
        e2 = Math.round(parseFloat((e2 * r3).toFixed(i4))) / r3;
      }
    }
    let n2 = "", o = u(e2).split("."), l2 = o[0];
    if (l2.length < t.thousands.active && (l2 = Array(t.thousands.active - l2.length + 1).join("0") + l2), t.thousands.interval > 0) {
      let e3 = [], i4 = l2.split("").reverse().join("");
      for (let r3 = 0, s4 = l2.length; r3 <= s4; r3 += t.thousands.interval) {
        let s5 = i4.substr(r3, t.thousands.interval).split("").reverse().join("");
        "" !== s5 && e3.unshift(s5);
      }
      l2 = e3.join(t.thousands.separator);
    }
    n2 += l2, 1 === o.length && o.push("");
    let h = o[1];
    return h.length < t.decimals.active && (h += Array(t.decimals.active - h.length + 1).join("0")), "" !== h && (n2 += t.decimals.separator + h), "" === n2 && (n2 = "0"), 0 !== e2 && i3 && -1 === a.indexOf("s") && (n2 = "-" + n2), r2 && (n2 = r2 + n2), s3 && (n2 += s3), n2;
  }
  applyPrefix(e2, t, i3 = false) {
    let r2 = e2, s3 = "", a = "", n2 = false, o = 1;
    for (let l2 = 0, h = t.length; l2 < h; l2++) t[l2].number <= e2 && (0 === t[l2].number ? r2 = 0 : (r2 = e2 / t[l2].number, o = t[l2].number), s3 = t[l2].prefix, a = t[l2].suffix, n2 = true);
    return !n2 && i3 && t.length && 0 != e2 && (r2 = e2 / t[0].number, s3 = t[0].prefix, a = t[0].suffix, n2 = true), n2 && (r2 = parseFloat(r2.toPrecision(Math.min(o.toString().length + Math.floor(r2).toString().replace(/[^0-9]*/g, "").length, 21)))), [r2, s3, a];
  }
  escape(e2) {
    return e2.replace("||", b);
  }
  unescape(e2) {
    return e2.replace(b, "|");
  }
};
function ze(e2, t) {
  let i3 = 0, r2 = 0, s3 = 1, a = 0, n2 = 0, o = 0, l2 = 0, h = 0;
  return e2.formatToParts(t).forEach((e3) => {
    switch (e3.type) {
      case "year":
        i3 = +e3.value;
        break;
      case "month":
        r2 = +e3.value - 1;
        break;
      case "day":
        s3 = +e3.value;
        break;
      case "hour":
        a = +e3.value;
        break;
      case "minute":
        n2 = +e3.value;
        break;
      case "second":
        o = +e3.value;
        break;
      case "fractionalSecond":
        l2 = +e3.value;
        break;
      case "weekday":
        switch (e3.value) {
          case "Sun":
            h = 0;
            break;
          case "Mon":
            h = 1;
            break;
          case "Tue":
            h = 2;
            break;
          case "Wed":
            h = 3;
            break;
          case "Thu":
            h = 4;
            break;
          case "Fri":
            h = 5;
            break;
          case "Sat":
            h = 6;
        }
    }
  }), 24 === a && (a = 0), { year: i3, month: r2, day: s3, hour: a, minute: n2, second: o, millisecond: l2, weekday: h };
}
function Fe(e2, t) {
  const { year: i3, month: r2, day: s3, hour: a, minute: n2, second: o, millisecond: l2 } = ze(e2, t);
  return Date.UTC(i3, r2, s3, a, n2, o, l2);
}
var He2 = class {
  constructor(e2, t) {
    if (Object.defineProperty(this, "_utc", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_dtf", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "name", { enumerable: true, configurable: true, writable: true, value: void 0 }), !t) throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
    this.name = e2, this._utc = new Intl.DateTimeFormat("en-US", { hour12: false, timeZone: "UTC", year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", weekday: "short", fractionalSecondDigits: 3 }), this._dtf = new Intl.DateTimeFormat("en-US", { hour12: false, timeZone: e2, year: "numeric", month: "2-digit", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", weekday: "short", fractionalSecondDigits: 3 });
  }
  static new(e2) {
    return new this(e2, true);
  }
  convertLocal(e2) {
    const t = this.offsetUTC(e2), i3 = e2.getTimezoneOffset(), r2 = new Date(e2);
    r2.setUTCMinutes(r2.getUTCMinutes() - (t - i3));
    const s3 = r2.getTimezoneOffset();
    return i3 != s3 && r2.setUTCMinutes(r2.getUTCMinutes() + s3 - i3), r2;
  }
  offsetUTC(e2) {
    return (Fe(this._utc, e2) - Fe(this._dtf, e2)) / 6e4;
  }
  parseDate(e2) {
    return ze(this._dtf, e2);
  }
};
var Ie = class extends He {
  _setDefaults() {
    this._setDefault("capitalize", true), this._setDefault("dateFormat", "yyyy-MM-dd"), super._setDefaults();
  }
  _beforeChanged() {
    super._beforeChanged();
  }
  format(e2, t, i3 = false) {
    let r2;
    void 0 !== t && "" !== t || (t = this.get("dateFormat", "yyyy-MM-dd"));
    let s3 = e2;
    if (m(t)) try {
      const e3 = this.get("intlLocales");
      return e3 ? new Intl.DateTimeFormat(e3, t).format(s3) : new Intl.DateTimeFormat(void 0, t).format(s3);
    } catch (h) {
      return "Invalid";
    }
    let a = this.parseFormat(t);
    const n2 = this._root.timezone;
    let l2 = s3;
    return !n2 || this._root.utc || i3 || (s3 = n2.convertLocal(s3)), _(s3.getTime()) ? (r2 = this.applyFormat(s3, a, i3, l2), this.get("capitalize") && (r2 = r2.replace(/^.{1}/, r2.substr(0, 1).toUpperCase())), r2) : "Invalid date";
  }
  applyFormat(e2, t, i3 = false, r2) {
    let s3, a, n2, o, l2, h, c, d, b2 = t.template, f2 = e2.getTime();
    this._root.utc && !i3 ? (s3 = e2.getUTCFullYear(), a = e2.getUTCMonth(), n2 = e2.getUTCDay(), o = e2.getUTCDate(), l2 = e2.getUTCHours(), h = e2.getUTCMinutes(), c = e2.getUTCSeconds(), d = e2.getUTCMilliseconds()) : (s3 = e2.getFullYear(), a = e2.getMonth(), n2 = e2.getDay(), o = e2.getDate(), l2 = e2.getHours(), h = e2.getMinutes(), c = e2.getSeconds(), d = e2.getMilliseconds());
    for (let p = 0, g2 = t.parts.length; p < g2; p++) {
      let i4 = "";
      switch (t.parts[p]) {
        case "G":
          i4 = this._t(s3 < 0 ? "_era_bc" : "_era_ad");
          break;
        case "yyyy":
          i4 = Math.abs(s3).toString(), s3 < 0 && (i4 += this._t("_era_bc"));
          break;
        case "yyy":
        case "yy":
        case "y":
          i4 = Math.abs(s3).toString().substr(-t.parts[p].length), s3 < 0 && (i4 += this._t("_era_bc"));
          break;
        case "YYYY":
        case "YYY":
        case "YY":
        case "Y":
          let u3 = Ot(e2, this._root.utc);
          i4 = "YYYY" == t.parts[p] ? Math.abs(u3).toString() : Math.abs(u3).toString().substr(-t.parts[p].length), u3 < 0 && (i4 += this._t("_era_bc"));
          break;
        case "u":
        case "F":
        case "g":
          break;
        case "q":
          i4 = "" + Math.ceil((e2.getMonth() + 1) / 3);
          break;
        case "MMMMM":
          i4 = this._t(this._getMonth(a)).substr(0, 1);
          break;
        case "MMMM":
          i4 = this._t(this._getMonth(a));
          break;
        case "MMM":
          i4 = this._t(this._getShortMonth(a));
          break;
        case "MM":
          i4 = mt(a + 1, 2, "0");
          break;
        case "M":
          i4 = (a + 1).toString();
          break;
        case "ww":
          i4 = mt(Tt(e2, this._root.utc), 2, "0");
          break;
        case "w":
          i4 = Tt(e2, this._root.utc).toString();
          break;
        case "W":
          i4 = St(e2, this._root.utc).toString();
          break;
        case "dd":
          i4 = mt(o, 2, "0");
          break;
        case "d":
          i4 = o.toString();
          break;
        case "DD":
        case "DDD":
          i4 = mt(kt(e2, this._root.utc).toString(), t.parts[p].length, "0");
          break;
        case "D":
          i4 = kt(e2, this._root.utc).toString();
          break;
        case "t":
          i4 = this._root.language.translateFunc("_dateOrd").call(this, o);
          break;
        case "E":
          i4 = (n2 || 7).toString();
          break;
        case "EE":
          i4 = mt((n2 || 7).toString(), 2, "0");
          break;
        case "EEE":
        case "eee":
          i4 = this._t(this._getShortWeekday(n2));
          break;
        case "EEEE":
        case "eeee":
          i4 = this._t(this._getWeekday(n2));
          break;
        case "EEEEE":
        case "eeeee":
          i4 = this._t(this._getShortWeekday(n2)).substr(0, 1);
          break;
        case "e":
        case "ee":
          i4 = (n2 - (this._root.locale.firstDayOfWeek || 1) + 1).toString(), "ee" == t.parts[p] && (i4 = mt(i4, 2, "0"));
          break;
        case "a":
          i4 = l2 >= 12 ? this._t("PM") : this._t("AM");
          break;
        case "aa":
          i4 = l2 >= 12 ? this._t("P.M.") : this._t("A.M.");
          break;
        case "aaa":
          i4 = l2 >= 12 ? this._t("P") : this._t("A");
          break;
        case "h":
          i4 = Et(l2).toString();
          break;
        case "hh":
          i4 = mt(Et(l2), 2, "0");
          break;
        case "H":
          i4 = l2.toString();
          break;
        case "HH":
          i4 = mt(l2, 2, "0");
          break;
        case "K":
          i4 = Et(l2, 0).toString();
          break;
        case "KK":
          i4 = mt(Et(l2, 0), 2, "0");
          break;
        case "k":
          i4 = (l2 + 1).toString();
          break;
        case "kk":
          i4 = mt(l2 + 1, 2, "0");
          break;
        case "m":
          i4 = h.toString();
          break;
        case "mm":
          i4 = mt(h, 2, "0");
          break;
        case "s":
          i4 = c.toString();
          break;
        case "ss":
          i4 = mt(c, 2, "0");
          break;
        case "S":
        case "SS":
        case "SSS":
          i4 = Math.round(d / 1e3 * Math.pow(10, t.parts[p].length)).toString();
          break;
        case "x":
          i4 = f2.toString();
          break;
        case "n":
        case "nn":
        case "nnn":
          i4 = mt(d, t.parts[p].length, "0");
          break;
        case "z":
          i4 = Ct(r2 || e2, false, false, this._root.utc, this._root.timezone ? this._root.timezone.name : void 0).replace(/[+-]+[0-9]+$/, "");
          break;
        case "zz":
          i4 = Ct(r2 || e2, true, false, this._root.utc, this._root.timezone ? this._root.timezone.name : void 0);
          break;
        case "zzz":
          i4 = Ct(r2 || e2, false, true, this._root.utc, this._root.timezone ? this._root.timezone.name : void 0).replace(/[+-]+[0-9]+$/, "");
          break;
        case "zzzz":
          i4 = Ct(r2 || e2, true, true, this._root.utc, this._root.timezone ? this._root.timezone.name : void 0);
          break;
        case "Z":
        case "ZZ":
          let b3 = this._root.utc ? "UTC" : this._root.timezone;
          b3 instanceof He2 && (b3 = b3.name);
          const g3 = b3 ? Mt(b3, r2 || e2) : e2.getTimezoneOffset();
          let k2 = Math.abs(g3) / 60, M = Math.floor(k2), S2 = 60 * k2 - 60 * M;
          this._root.utc && (M = 0, S2 = 0), "Z" == t.parts[p] ? (i4 = "GMT", i4 += g3 > 0 ? "-" : "+", i4 += mt(M, 2) + ":" + mt(S2, 2)) : (i4 = g3 > 0 ? "-" : "+", i4 += mt(M, 2) + mt(S2, 2));
          break;
        case "i":
          i4 = e2.toISOString();
          break;
        case "I":
          i4 = e2.toUTCString();
      }
      b2 = b2.replace(f, i4);
    }
    return b2;
  }
  parseFormat(e2) {
    let t = { template: "", parts: [] }, i3 = ti.chunk(e2, true);
    for (let r2 = 0; r2 < i3.length; r2++) {
      let e3 = i3[r2];
      if ("value" === e3.type) {
        if (e3.text.match(/^date$/i)) {
          let t2 = this.get("dateFormat", "yyyy-MM-dd");
          g(t2) || (t2 = "yyyy-MM-dd"), e3.text = t2;
        }
        let i4 = e3.text.match(/G|yyyy|yyy|yy|y|YYYY|YYY|YY|Y|u|q|MMMMM|MMMM|MMM|MM|M|ww|w|W|dd|d|DDD|DD|D|F|g|EEEEE|EEEE|EEE|EE|E|eeeee|eeee|eee|ee|e|aaa|aa|a|hh|h|HH|H|KK|K|kk|k|mm|m|ss|s|SSS|SS|S|A|zzzz|zzz|zz|z|ZZ|Z|t|x|nnn|nn|n|i|I/g);
        if (i4) for (let r3 = 0; r3 < i4.length; r3++) t.parts.push(i4[r3]), e3.text = e3.text.replace(i4[r3], f);
      }
      t.template += e3.text;
    }
    return t;
  }
  _months() {
    return ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
  }
  _getMonth(e2) {
    return this._months()[e2];
  }
  _shortMonths() {
    return ["Jan", "Feb", "Mar", "Apr", "May(short)", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  }
  _getShortMonth(e2) {
    return this._shortMonths()[e2];
  }
  _weekdays() {
    return ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
  }
  _getWeekday(e2) {
    return this._weekdays()[e2];
  }
  _shortWeekdays() {
    return ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
  }
  _getShortWeekday(e2) {
    return this._shortWeekdays()[e2];
  }
  parse(e2, t, i3) {
    if (void 0 === i3 && (i3 = this._root.utc), e2 instanceof Date) return e2;
    if (_(e2)) return new Date(e2);
    if ("x" == t) return new Date(parseInt(e2));
    let r2;
    g(e2) || (e2 = e2.toString());
    let s3 = "";
    t = (t = wt(t)).substr(0, e2.length);
    let a = this.parseFormat(t), o = { year: -1, year3: -1, year2: -1, year1: -1, month: -1, monthShort: -1, monthLong: -1, weekdayShort: -1, weekdayLong: -1, day: -1, yearDay: -1, week: -1, hourBase0: -1, hour12Base0: -1, hourBase1: -1, hour12Base1: -1, minute: -1, second: -1, millisecond: -1, millisecondDigits: -1, am: -1, zone: -1, timestamp: -1, iso: -1 }, h = { year: 1970, month: 0, day: 1, hour: 0, minute: 0, second: 0, millisecond: 0, timestamp: null, offset: 0, utc: i3 }, u3 = 0, c = 0;
    for (let n2 = 0; n2 < a.parts.length; n2++) {
      switch (c = n2 + u3 + 1, a.parts[n2]) {
        case "yyyy":
        case "YYYY":
          s3 += "([0-9]{4})", o.year = c;
          break;
        case "yyy":
        case "YYY":
          s3 += "([0-9]{3})", o.year3 = c;
          break;
        case "yy":
        case "YY":
          s3 += "([0-9]{2})", o.year2 = c;
          break;
        case "y":
        case "Y":
          s3 += "([0-9]{1})", o.year1 = c;
          break;
        case "MMMM":
          s3 += "(" + this.getStringList(this._months()).join("|") + ")", o.monthLong = c;
          break;
        case "MMM":
          s3 += "(" + this.getStringList(this._shortMonths()).join("|") + ")", o.monthShort = c;
          break;
        case "MM":
        case "M":
          s3 += "([0-9]{2}|[0-9]{1})", o.month = c;
          break;
        case "ww":
        case "w":
          s3 += "([0-9]{2}|[0-9]{1})", o.week = c;
          break;
        case "dd":
        case "d":
          s3 += "([0-9]{2}|[0-9]{1})", o.day = c;
          break;
        case "DDD":
        case "DD":
        case "D":
          s3 += "([0-9]{3}|[0-9]{2}|[0-9]{1})", o.yearDay = c;
          break;
        case "dddd":
          s3 += "(" + this.getStringList(this._weekdays()).join("|") + ")", o.weekdayLong = c;
          break;
        case "ddd":
          s3 += "(" + this.getStringList(this._shortWeekdays()).join("|") + ")", o.weekdayShort = c;
          break;
        case "aaa":
        case "aa":
        case "a":
          s3 += "(" + this.getStringList(["AM", "PM", "A.M.", "P.M.", "A", "P"]).join("|") + ")", o.am = c;
          break;
        case "hh":
        case "h":
          s3 += "([0-9]{2}|[0-9]{1})", o.hour12Base1 = c;
          break;
        case "HH":
        case "H":
          s3 += "([0-9]{2}|[0-9]{1})", o.hourBase0 = c;
          break;
        case "KK":
        case "K":
          s3 += "([0-9]{2}|[0-9]{1})", o.hour12Base0 = c;
          break;
        case "kk":
        case "k":
          s3 += "([0-9]{2}|[0-9]{1})", o.hourBase1 = c;
          break;
        case "mm":
        case "m":
          s3 += "([0-9]{2}|[0-9]{1})", o.minute = c;
          break;
        case "ss":
        case "s":
          s3 += "([0-9]{2}|[0-9]{1})", o.second = c;
          break;
        case "SSS":
        case "SS":
        case "S":
          s3 += "([0-9]{3}|[0-9]{2}|[0-9]{1})", o.millisecond = c, o.millisecondDigits = a.parts[n2].length;
          break;
        case "nnn":
        case "nn":
        case "n":
          s3 += "([0-9]{3}|[0-9]{2}|[0-9]{1})", o.millisecond = c;
          break;
        case "x":
          s3 += "([0-9]{1,})", o.timestamp = c;
          break;
        case "Z":
          s3 += "GMT([-+]+[0-9]{2}:[0-9]{2})", o.zone = c;
          break;
        case "ZZ":
          s3 += "([\\-+]+[0-9]{2}[0-9]{2})", o.zone = c;
          break;
        case "i":
          s3 += "([0-9]{4})-?([0-9]{2})-?([0-9]{2})T?([0-9]{2}):?([0-9]{2}):?([0-9]{2})\\.?([0-9]{0,3})([zZ]|[+\\-][0-9]{2}:?[0-9]{2}|$)", o.iso = c, u3 += 7;
          break;
        case "G":
        case "YYYY":
        case "YYY":
        case "YY":
        case "Y":
        case "MMMMM":
        case "W":
        case "EEEEE":
        case "EEEE":
        case "EEE":
        case "EE":
        case "E":
        case "eeeee":
        case "eeee":
        case "eee":
        case "ee":
        case "e":
        case "zzzz":
        case "zzz":
        case "zz":
        case "z":
        case "t":
          u3--;
      }
      s3 += "[^0-9]*";
    }
    let d = new RegExp(s3), b2 = e2.match(d);
    if (b2) {
      if (o.year > -1 && (h.year = parseInt(b2[o.year])), o.year3 > -1) {
        let e3 = parseInt(b2[o.year3]);
        e3 += 1e3, h.year = e3;
      }
      if (o.year2 > -1) {
        let e3 = parseInt(b2[o.year2]);
        e3 += e3 > 50 ? 1e3 : 2e3, h.year = e3;
      }
      if (o.year1 > -1) {
        let e3 = parseInt(b2[o.year1]);
        e3 = 10 * Math.floor((/* @__PURE__ */ new Date()).getFullYear() / 10) + e3, h.year = e3;
      }
      if (o.monthLong > -1 && (h.month = this.resolveMonth(b2[o.monthLong])), o.monthShort > -1 && (h.month = this.resolveShortMonth(b2[o.monthShort])), o.month > -1 && (h.month = parseInt(b2[o.month]) - 1), o.week > -1 && -1 === o.day && (h.month = 0, h.day = jt(parseInt(b2[o.week]), h.year, 1, i3)), o.day > -1 && (h.day = parseInt(b2[o.day])), o.yearDay > -1 && (h.month = 0, h.day = parseInt(b2[o.yearDay])), o.hourBase0 > -1 && (h.hour = parseInt(b2[o.hourBase0])), o.hourBase1 > -1 && (h.hour = parseInt(b2[o.hourBase1]) - 1), o.hour12Base0 > -1) {
        let e3 = parseInt(b2[o.hour12Base0]);
        11 == e3 && (e3 = 0), o.am > -1 && !this.isAm(b2[o.am]) && (e3 += 12), h.hour = e3;
      }
      if (o.hour12Base1 > -1) {
        let e3 = parseInt(b2[o.hour12Base1]);
        12 == e3 && (e3 = 0), o.am > -1 && !this.isAm(b2[o.am]) && (e3 += 12), h.hour = e3;
      }
      if (o.minute > -1 && (h.minute = parseInt(b2[o.minute])), o.second > -1 && (h.second = parseInt(b2[o.second])), o.millisecond > -1) {
        let e3 = parseInt(b2[o.millisecond]);
        2 == o.millisecondDigits ? e3 *= 10 : 1 == o.millisecondDigits && (e3 *= 100), h.millisecond = e3;
      }
      if (o.timestamp > -1) {
        h.timestamp = parseInt(b2[o.timestamp]);
        const e3 = new Date(h.timestamp);
        h.year = e3.getUTCFullYear(), h.month = e3.getUTCMonth(), h.day = e3.getUTCDate(), h.hour = e3.getUTCHours(), h.minute = e3.getUTCMinutes(), h.second = e3.getUTCSeconds(), h.millisecond = e3.getUTCMilliseconds();
      }
      o.zone > -1 && (h.offset = this.resolveTimezoneOffset(new Date(h.year, h.month, h.day), b2[o.zone])), o.iso > -1 && (h.year = l(b2[o.iso + 0]), h.month = l(b2[o.iso + 1]) - 1, h.day = l(b2[o.iso + 2]), h.hour = l(b2[o.iso + 3]), h.minute = l(b2[o.iso + 4]), h.second = l(b2[o.iso + 5]), h.millisecond = l(b2[o.iso + 6]), "Z" == b2[o.iso + 7] || "z" == b2[o.iso + 7] ? h.utc = true : "" != b2[o.iso + 7] && (h.offset = this.resolveTimezoneOffset(new Date(h.year, h.month, h.day), b2[o.iso + 7]))), r2 = h.utc ? new Date(Date.UTC(h.year, h.month, h.day, h.hour, h.minute, h.second, h.millisecond)) : new Date(h.year, h.month, h.day, h.hour, h.minute + h.offset, h.second, h.millisecond);
    } else r2 = new Date(e2);
    return r2;
  }
  resolveTimezoneOffset(e2, t) {
    if (t.match(/([+\-]?)([0-9]{2}):?([0-9]{2})/)) {
      let i3 = t.match(/([+\-]?)([0-9]{2}):?([0-9]{2})/), r2 = i3[1], s3 = i3[2], a = i3[3], n2 = 60 * parseInt(s3) + parseInt(a);
      return "+" == r2 && (n2 *= -1), n2 - (e2 || /* @__PURE__ */ new Date()).getTimezoneOffset();
    }
    return 0;
  }
  resolveMonth(e2) {
    let t = this._months().indexOf(e2);
    return t > -1 || !this._root.language.isDefault() && (t = this._root.language.translateAll(this._months()).indexOf(e2), t > -1) ? t : 0;
  }
  resolveShortMonth(e2) {
    let t = this._shortMonths().indexOf(e2);
    return t > -1 ? t : (t = this._months().indexOf(e2), t > -1 || this._root.language && !this._root.language.isDefault() && (t = this._root.language.translateAll(this._shortMonths()).indexOf(e2), t > -1) ? t : 0);
  }
  isAm(e2) {
    return this.getStringList(["AM", "A.M.", "A"]).indexOf(e2.toUpperCase()) > -1;
  }
  getStringList(e2) {
    let t = [];
    for (let i3 = 0; i3 < e2.length; i3++) this._root.language ? t.push(Dt(this._t(e2[i3]))) : t.push(Dt(e2[i3]));
    return t;
  }
};
var Ye2 = class extends He {
  constructor() {
    super(...arguments), Object.defineProperty(this, "_unitAliases", { enumerable: true, configurable: true, writable: true, value: { Y: "y", D: "d", H: "h", K: "h", k: "h", n: "S" } });
  }
  _setDefaults() {
    const e2 = "_duration_millisecond", t = "_duration_second", i3 = "_duration_minute", r2 = "_duration_hour", s3 = "_duration_day", a = "_duration_week", n2 = "_duration_month", o = "_duration_year", l2 = "_second", h = "_minute", u3 = "_hour", c = "_day", d = "_week", b2 = "_week", f2 = "_year";
    this._setDefault("negativeBase", 0), this._setDefault("baseUnit", "second"), this._setDefault("durationFormats", { millisecond: { millisecond: this._t(e2), second: this._t(e2 + l2), minute: this._t(e2 + h), hour: this._t(e2 + u3), day: this._t(e2 + c), week: this._t(e2 + d), month: this._t(e2 + b2), year: this._t(e2 + f2) }, second: { second: this._t(t), minute: this._t(t + h), hour: this._t(t + u3), day: this._t(t + c), week: this._t(t + d), month: this._t(t + b2), year: this._t(t + f2) }, minute: { minute: this._t(i3), hour: this._t(i3 + u3), day: this._t(i3 + c), week: this._t(i3 + d), month: this._t(i3 + b2), year: this._t(i3 + f2) }, hour: { hour: this._t(r2), day: this._t(r2 + c), week: this._t(r2 + d), month: this._t(r2 + b2), year: this._t(r2 + f2) }, day: { day: this._t(s3), week: this._t(s3 + d), month: this._t(s3 + b2), year: this._t(s3 + f2) }, week: { week: this._t(a), month: this._t(a + b2), year: this._t(a + f2) }, month: { month: this._t(n2), year: this._t(n2 + f2) }, year: { year: this._t(o) } }), super._setDefaults();
  }
  _beforeChanged() {
    super._beforeChanged();
  }
  format(e2, t, i3) {
    let r2 = i3 || this.get("baseUnit");
    void 0 !== t && "" !== t || (t = null != this.get("durationFormat") ? this.get("durationFormat") : this.getFormat(l(e2), void 0, r2)), t = wt(t);
    let s3, a = this.parseFormat(t, r2), n2 = Number(e2);
    s3 = n2 > this.get("negativeBase") ? a.positive : n2 < this.get("negativeBase") ? a.negative : a.zero;
    let o = this.applyFormat(n2, s3);
    return "" !== s3.color && (o = "[" + s3.color + "]" + o + "[/]"), o;
  }
  parseFormat(e2, t) {
    let i3 = t || this.get("baseUnit"), r2 = { positive: { color: "", template: "", parts: [], source: "", baseUnit: i3, parsed: false, absolute: false }, negative: { color: "", template: "", parts: [], source: "", baseUnit: i3, parsed: false, absolute: false }, zero: { color: "", template: "", parts: [], source: "", baseUnit: i3, parsed: false, absolute: false } }, s3 = (e2 = e2.replace("||", b)).split("|");
    return r2.positive.source = s3[0], void 0 === s3[2] ? r2.zero = r2.positive : r2.zero.source = s3[2], void 0 === s3[1] ? r2.negative = r2.positive : r2.negative.source = s3[1], U(r2, (e3, t2) => {
      if (t2.parsed) return;
      let i4 = t2.source, r3 = [];
      r3 = t2.source.match(/^\[([^\]]*)\]/), r3 && r3.length && "" !== r3[0] && (i4 = t2.source.substr(r3[0].length), t2.color = r3[1]);
      let s4 = ti.chunk(i4, true);
      for (let a = 0; a < s4.length; a++) {
        let e4 = s4[a];
        if (e4.text = e4.text.replace(b, "|"), "value" === e4.type) {
          e4.text.match(/[yYMdDwhHKkmsSn]+a/) && (t2.absolute = true, e4.text = e4.text.replace(/([yYMdDwhHKkmsSn]+)a/, "$1"));
          let i5 = e4.text.match(/y+|Y+|M+|d+|D+|w+|h+|H+|K+|k+|m+|s+|S+|n+/g);
          if (i5) for (let r4 = 0; r4 < i5.length; r4++) null == i5[r4] && (i5[r4] = this._unitAliases[i5[r4]]), t2.parts.push(i5[r4]), e4.text = e4.text.replace(i5[r4], f);
        }
        t2.template += e4.text;
      }
      t2.parsed = true;
    }), r2;
  }
  applyFormat(e2, t) {
    let i3 = !t.absolute && e2 < this.get("negativeBase");
    e2 = Math.abs(e2);
    let r2 = this.toTimeStamp(e2, t.baseUnit), s3 = t.template;
    const a = { millisecond: 0, second: 0, minute: 0, hour: 0, day: 0, week: 0, month: 0, year: 0 };
    for (let n2 = 0, o = t.parts.length; n2 < o; n2++) {
      let e3, i4 = t.parts[n2], s4 = this._toTimeUnit(i4.substr(0, 1));
      const l2 = this._getUnitValue(s4);
      e3 = n2 < o - 1 ? Math.floor(r2 / l2) : Math.round(r2 / l2), a[s4] += e3, r2 -= e3 * l2;
    }
    U(a, (e3, t2) => {
      "millisecond" == e3 && 1e3 == t2 ? (a.second++, a.millisecond = 0) : "second" == e3 && 60 == t2 ? (a.minute++, a.second = 0) : "minute" == e3 && 60 == t2 ? (a.hour++, a.minute = 0) : "hour" == e3 && 24 == t2 ? (a.day++, a.hour = 0) : "day" == e3 && 7 == t2 ? (a.week++, a.day = 0) : "day" == e3 && 30 == t2 ? (a.month++, a.day = 0) : "month" == e3 && 12 == t2 && (a.year++, a.month = 0);
    });
    for (let n2 = 0, o = t.parts.length; n2 < o; n2++) {
      let e3 = t.parts[n2], i4 = this._toTimeUnit(e3.substr(0, 1)), r3 = e3.length;
      s3 = s3.replace(f, mt(a[i4], r3, "0"));
    }
    return i3 && (s3 = "-" + s3), s3;
  }
  toTimeStamp(e2, t) {
    return e2 * this._getUnitValue(t);
  }
  _toTimeUnit(e2) {
    switch (e2) {
      case "S":
        return "millisecond";
      case "s":
        return "second";
      case "m":
        return "minute";
      case "h":
        return "hour";
      case "d":
        return "day";
      case "w":
        return "week";
      case "M":
        return "month";
      case "y":
        return "year";
    }
  }
  getFormat(e2, t, i3) {
    if (null != this.get("durationFormat")) return this.get("durationFormat");
    if (i3 || (i3 = this.get("baseUnit")), null != t && e2 != t) {
      e2 = Math.abs(e2), t = Math.abs(t);
      let r2 = this.getValueUnit(Math.max(e2, t), i3);
      return this.get("durationFormats")[i3][r2];
    }
    {
      let t2 = this.getValueUnit(e2, i3);
      return this.get("durationFormats")[i3][t2];
    }
  }
  getValueUnit(e2, t) {
    let i3;
    t || (t = this.get("baseUnit"));
    let r2 = this.getMilliseconds(e2, t);
    return V(this._getUnitValues(), (e3, s3) => {
      if (e3 == t || i3) {
        if (r2 / s3 <= 1) return i3 || (i3 = e3), false;
        i3 = e3;
      }
      return true;
    }), i3;
  }
  getMilliseconds(e2, t) {
    return t || (t = this.get("baseUnit")), e2 * this._getUnitValue(t);
  }
  _getUnitValue(e2) {
    return this._getUnitValues()[e2];
  }
  _getUnitValues() {
    return { millisecond: 1, second: 1e3, minute: 6e4, hour: 36e5, day: 864e5, week: 6048e5, month: 2592e6, year: 31536e6 };
  }
};
var Re = { firstDayOfWeek: 1, _decimalSeparator: ".", _thousandSeparator: ",", _percentPrefix: null, _percentSuffix: "%", _big_number_suffix_3: "k", _big_number_suffix_6: "M", _big_number_suffix_9: "G", _big_number_suffix_12: "T", _big_number_suffix_15: "P", _big_number_suffix_18: "E", _big_number_suffix_21: "Z", _big_number_suffix_24: "Y", _small_number_suffix_3: "m", _small_number_suffix_6: "μ", _small_number_suffix_9: "n", _small_number_suffix_12: "p", _small_number_suffix_15: "f", _small_number_suffix_18: "a", _small_number_suffix_21: "z", _small_number_suffix_24: "y", _byte_suffix_B: "B", _byte_suffix_KB: "KB", _byte_suffix_MB: "MB", _byte_suffix_GB: "GB", _byte_suffix_TB: "TB", _byte_suffix_PB: "PB", _date: "yyyy-MM-dd", _date_millisecond: "mm:ss SSS", _date_millisecond_full: "HH:mm:ss SSS", _date_second: "HH:mm:ss", _date_second_full: "HH:mm:ss", _date_minute: "HH:mm", _date_minute_full: "HH:mm - MMM dd, yyyy", _date_hour: "HH:mm", _date_hour_full: "HH:mm - MMM dd, yyyy", _date_day: "MMM dd", _date_day_full: "MMM dd, yyyy", _date_week: "ww", _date_week_full: "MMM dd, yyyy", _date_month: "MMM", _date_month_full: "MMM, yyyy", _date_year: "yyyy", _duration_millisecond: "SSS", _duration_millisecond_second: "ss.SSS", _duration_millisecond_minute: "mm:ss SSS", _duration_millisecond_hour: "hh:mm:ss SSS", _duration_millisecond_day: "d'd' mm:ss SSS", _duration_millisecond_week: "d'd' mm:ss SSS", _duration_millisecond_month: "M'm' dd'd' mm:ss SSS", _duration_millisecond_year: "y'y' MM'm' dd'd' mm:ss SSS", _duration_second: "ss", _duration_second_minute: "mm:ss", _duration_second_hour: "hh:mm:ss", _duration_second_day: "d'd' hh:mm:ss", _duration_second_week: "d'd' hh:mm:ss", _duration_second_month: "M'm' dd'd' hh:mm:ss", _duration_second_year: "y'y' MM'm' dd'd' hh:mm:ss", _duration_minute: "mm", _duration_minute_hour: "hh:mm", _duration_minute_day: "d'd' hh:mm", _duration_minute_week: "d'd' hh:mm", _duration_minute_month: "M'm' dd'd' hh:mm", _duration_minute_year: "y'y' MM'm' dd'd' hh:mm", _duration_hour: "hh'h'", _duration_hour_day: "d'd' hh'h'", _duration_hour_week: "d'd' hh'h'", _duration_hour_month: "M'm' dd'd' hh'h'", _duration_hour_year: "y'y' MM'm' dd'd' hh'h'", _duration_day: "d'd'", _duration_day_week: "d'd'", _duration_day_month: "M'm' dd'd'", _duration_day_year: "y'y' MM'm' dd'd'", _duration_week: "w'w'", _duration_week_month: "w'w'", _duration_week_year: "w'w'", _duration_month: "M'm'", _duration_month_year: "y'y' MM'm'", _duration_year: "y'y'", _era_ad: "AD", _era_bc: "BC", A: "", P: "", AM: "", PM: "", "A.M.": "", "P.M.": "", January: "", February: "", March: "", April: "", May: "", June: "", July: "", August: "", September: "", October: "", November: "", December: "", Jan: "", Feb: "", Mar: "", Apr: "", "May(short)": "May", Jun: "", Jul: "", Aug: "", Sep: "", Oct: "", Nov: "", Dec: "", Sunday: "", Monday: "", Tuesday: "", Wednesday: "", Thursday: "", Friday: "", Saturday: "", Sun: "", Mon: "", Tue: "", Wed: "", Thu: "", Fri: "", Sat: "", _dateOrd: function(e2) {
  let t = "th";
  if (e2 < 11 || e2 > 13) switch (e2 % 10) {
    case 1:
      t = "st";
      break;
    case 2:
      t = "nd";
      break;
    case 3:
      t = "rd";
  }
  return t;
}, "Zoom Out": "", Play: "", Stop: "", Legend: "", "Press ENTER to toggle": "", Loading: "", Home: "", Chart: "", "Serial chart": "", "X/Y chart": "", "Pie chart": "", "Gauge chart": "", "Radar chart": "", "Sankey diagram": "", "Flow diagram": "", "Chord diagram": "", "TreeMap chart": "", "Force directed tree": "", "Sliced chart": "", Series: "", "Candlestick Series": "", "OHLC Series": "", "Column Series": "", "Line Series": "", "Pie Slice Series": "", "Funnel Series": "", "Pyramid Series": "", "X/Y Series": "", Map: "", "Press ENTER to zoom in": "", "Press ENTER to zoom out": "", "Use arrow keys to zoom in and out": "", "Use plus and minus keys on your keyboard to zoom in and out": "", Export: "", Image: "", Data: "", Print: "", "Press ENTER or use arrow keys to navigate": "", "Press ENTER to open": "", "Press ENTER to print.": "", "Press ENTER to export as %1.": "", "(Press ESC to close this message)": "", "Image Export Complete": "", "Export operation took longer than expected. Something might have gone wrong.": "", "Saved from": "", PNG: "", JPG: "", GIF: "", SVG: "", PDF: "", JSON: "", CSV: "", XLSX: "", HTML: "", "Use TAB to select grip buttons or left and right arrows to change selection": "", "Use left and right arrows to move selection": "", "Use left and right arrows to move left selection": "", "Use left and right arrows to move right selection": "", "Use TAB select grip buttons or up and down arrows to change selection": "", "Use up and down arrows to move selection": "", "Use up and down arrows to move lower selection": "", "Use up and down arrows to move upper selection": "", "From %1 to %2": "", "From %1": "", "To %1": "", "No parser available for file: %1": "", "Error parsing file: %1": "", "Unable to load file: %1": "", "Invalid date": "", Close: "", Minimize: "" };
var Ue = class extends He {
  _setDefaults() {
    this.setPrivate("defaultLocale", Re), super._setDefaults();
  }
  translate(e2, t, ...i3) {
    t || (t = this._root.locale || this.getPrivate("defaultLocale"));
    let r2 = e2, s3 = t[e2];
    if (null === s3) r2 = "";
    else if (null != s3) s3 && (r2 = s3);
    else if (t !== this.getPrivate("defaultLocale")) return this.translate(e2, this.getPrivate("defaultLocale"), ...i3);
    if (i3.length) for (let a = i3.length, n2 = 0; n2 < a; ++n2) r2 = r2.split("%" + (n2 + 1)).join(i3[n2]);
    return r2;
  }
  translateAny(e2, t, ...i3) {
    return this.translate(e2, t, ...i3);
  }
  setTranslationAny(e2, t, i3) {
    (i3 || this._root.locale)[e2] = t;
  }
  setTranslationsAny(e2, t) {
    U(e2, (e3, i3) => {
      this.setTranslationAny(e3, i3, t);
    });
  }
  translateEmpty(e2, t, ...i3) {
    let r2 = this.translate(e2, t, ...i3);
    return r2 == e2 ? "" : r2;
  }
  translateFunc(e2, t) {
    return this._root.locale[e2] ? this._root.locale[e2] : t !== this.getPrivate("defaultLocale") ? this.translateFunc(e2, this.getPrivate("defaultLocale")) : () => "";
  }
  translateAll(e2, t) {
    return this.isDefault() ? e2 : w(e2, (e3) => this.translate(e3, t));
  }
  isDefault() {
    return this.getPrivate("defaultLocale") === this._root.locale;
  }
};
var We = class {
  constructor(e2 = 1, t = 0, i3 = 0, r2 = 1, s3 = 0, a = 0) {
    Object.defineProperty(this, "a", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "b", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "c", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "d", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "tx", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "ty", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.a = e2, this.b = t, this.c = i3, this.d = r2, this.tx = s3, this.ty = a;
  }
  setTransform(e2, t, i3, r2, s3, a = 1) {
    this.a = Math.cos(s3) * a, this.b = Math.sin(s3) * a, this.c = -Math.sin(s3) * a, this.d = Math.cos(s3) * a, this.tx = e2 - (i3 * this.a + r2 * this.c), this.ty = t - (i3 * this.b + r2 * this.d);
  }
  apply(e2) {
    return { x: this.a * e2.x + this.c * e2.y + this.tx, y: this.b * e2.x + this.d * e2.y + this.ty };
  }
  applyInverse(e2) {
    const t = 1 / (this.a * this.d + this.c * -this.b);
    return { x: this.d * t * e2.x + -this.c * t * e2.y + (this.ty * this.c - this.tx * this.d) * t, y: this.a * t * e2.y + -this.b * t * e2.x + (-this.ty * this.a + this.tx * this.b) * t };
  }
  append(e2) {
    const t = this.a, i3 = this.b, r2 = this.c, s3 = this.d;
    this.a = e2.a * t + e2.b * r2, this.b = e2.a * i3 + e2.b * s3, this.c = e2.c * t + e2.d * r2, this.d = e2.c * i3 + e2.d * s3, this.tx = e2.tx * t + e2.ty * r2 + this.tx, this.ty = e2.tx * i3 + e2.ty * s3 + this.ty;
  }
  prepend(e2) {
    const t = this.tx;
    if (1 !== e2.a || 0 !== e2.b || 0 !== e2.c || 1 !== e2.d) {
      const t2 = this.a, i3 = this.c;
      this.a = t2 * e2.a + this.b * e2.c, this.b = t2 * e2.b + this.b * e2.d, this.c = i3 * e2.a + this.d * e2.c, this.d = i3 * e2.b + this.d * e2.d;
    }
    this.tx = t * e2.a + this.ty * e2.c + e2.tx, this.ty = t * e2.b + this.ty * e2.d + e2.ty;
  }
  copyFrom(e2) {
    this.a = e2.a, this.b = e2.b, this.c = e2.c, this.d = e2.d, this.tx = e2.tx, this.ty = e2.ty;
  }
};
var Ge2 = /* @__PURE__ */ function() {
  function e2(e3, t) {
    var i3 = [], r2 = true, s3 = false, a = void 0;
    try {
      for (var n2, o = e3[Symbol.iterator](); !(r2 = (n2 = o.next()).done) && (i3.push(n2.value), !t || i3.length !== t); r2 = true) ;
    } catch (l2) {
      s3 = true, a = l2;
    } finally {
      try {
        !r2 && o.return && o.return();
      } finally {
        if (s3) throw a;
      }
    }
    return i3;
  }
  return function(t, i3) {
    if (Array.isArray(t)) return t;
    if (Symbol.iterator in Object(t)) return e2(t, i3);
    throw new TypeError("Invalid attempt to destructure non-iterable instance");
  };
}();
var Ve = 2 * Math.PI;
var Ne = function(e2, t, i3, r2, s3, a, n2) {
  var o = e2.x, l2 = e2.y;
  return { x: r2 * (o *= t) - s3 * (l2 *= i3) + a, y: s3 * o + r2 * l2 + n2 };
};
var Xe2 = function(e2, t) {
  var i3 = 1.5707963267948966 === t ? 0.551915024494 : -1.5707963267948966 === t ? -0.551915024494 : 4 / 3 * Math.tan(t / 4), r2 = Math.cos(e2), s3 = Math.sin(e2), a = Math.cos(e2 + t), n2 = Math.sin(e2 + t);
  return [{ x: r2 - s3 * i3, y: s3 + r2 * i3 }, { x: a + n2 * i3, y: n2 - a * i3 }, { x: a, y: n2 }];
};
var qe2 = function(e2, t, i3, r2) {
  var s3 = e2 * i3 + t * r2;
  return s3 > 1 && (s3 = 1), s3 < -1 && (s3 = -1), (e2 * r2 - t * i3 < 0 ? -1 : 1) * Math.acos(s3);
};
var Ke = function(e2, t, i3, r2, s3, a, n2, o, l2, h, u3, c) {
  var d = Math.pow(s3, 2), b2 = Math.pow(a, 2), f2 = Math.pow(u3, 2), p = Math.pow(c, 2), g2 = d * b2 - d * p - b2 * f2;
  g2 < 0 && (g2 = 0), g2 /= d * p + b2 * f2;
  var m2 = (g2 = Math.sqrt(g2) * (n2 === o ? -1 : 1)) * s3 / a * c, _2 = g2 * -a / s3 * u3, y = h * m2 - l2 * _2 + (e2 + i3) / 2, v2 = l2 * m2 + h * _2 + (t + r2) / 2, w2 = (u3 - m2) / s3, x2 = (c - _2) / a, P2 = (-u3 - m2) / s3, O2 = (-c - _2) / a, k2 = qe2(1, 0, w2, x2), M = qe2(w2, x2, P2, O2);
  return 0 === o && M > 0 && (M -= Ve), 1 === o && M < 0 && (M += Ve), [y, v2, k2, M];
};
var Ze = function(e2) {
  var t = e2.px, i3 = e2.py, r2 = e2.cx, s3 = e2.cy, a = e2.rx, n2 = e2.ry, o = e2.xAxisRotation, l2 = void 0 === o ? 0 : o, h = e2.largeArcFlag, u3 = void 0 === h ? 0 : h, c = e2.sweepFlag, d = void 0 === c ? 0 : c, b2 = [];
  if (0 === a || 0 === n2) return [];
  var f2 = Math.sin(l2 * Ve / 360), p = Math.cos(l2 * Ve / 360), g2 = p * (t - r2) / 2 + f2 * (i3 - s3) / 2, m2 = -f2 * (t - r2) / 2 + p * (i3 - s3) / 2;
  if (0 === g2 && 0 === m2) return [];
  a = Math.abs(a), n2 = Math.abs(n2);
  var _2 = Math.pow(g2, 2) / Math.pow(a, 2) + Math.pow(m2, 2) / Math.pow(n2, 2);
  _2 > 1 && (a *= Math.sqrt(_2), n2 *= Math.sqrt(_2));
  var y = Ke(t, i3, r2, s3, a, n2, u3, d, f2, p, g2, m2), v2 = Ge2(y, 4), w2 = v2[0], x2 = v2[1], P2 = v2[2], O2 = v2[3], k2 = Math.abs(O2) / (Ve / 4);
  Math.abs(1 - k2) < 1e-7 && (k2 = 1);
  var M = Math.max(Math.ceil(k2), 1);
  O2 /= M;
  for (var S2 = 0; S2 < M; S2++) b2.push(Xe2(P2, O2)), P2 += O2;
  return b2.map(function(e3) {
    var t2 = Ne(e3[0], a, n2, p, f2, w2, x2), i4 = t2.x, r3 = t2.y, s4 = Ne(e3[1], a, n2, p, f2, w2, x2), o2 = s4.x, l3 = s4.y, h2 = Ne(e3[2], a, n2, p, f2, w2, x2);
    return { x1: i4, y1: r3, x2: o2, y2: l3, x: h2.x, y: h2.y };
  });
};
function Je2(e2, t, i3) {
  if (t !== i3) throw new Error("Required " + i3 + " arguments for " + e2 + " but got " + t);
}
function $e(e2, t, i3) {
  if (t < i3) throw new Error("Required at least " + i3 + " arguments for " + e2 + " but got " + t);
}
function Qe2(e2, t, i3) {
  if ($e(e2, t, i3), t % i3 !== 0) throw new Error("Arguments for " + e2 + " must be in pairs of " + i3);
}
function et2(e2) {
  for (let t = 0; t < e2.length; t += 7) {
    let i3 = t + 3, r2 = e2[i3];
    if (r2.length > 1) {
      const t2 = /^([01])([01])(.*)$/.exec(r2);
      null !== t2 && (e2.splice(i3, 0, t2[1]), ++i3, e2.splice(i3, 0, t2[2]), ++i3, t2[3].length > 0 ? e2[i3] = t2[3] : e2.splice(i3, 1));
    }
    if (++i3, r2 = e2[i3], r2.length > 1) {
      const t2 = /^([01])(.+)$/.exec(r2);
      null !== t2 && (e2.splice(i3, 0, t2[1]), ++i3, e2[i3] = t2[2]);
    }
  }
}
function tt(e2) {
  if (0 === e2 || 1 === e2) return e2;
  throw new Error("Flag must be 0 or 1");
}
function it2(e2) {
  const t = [0, 0, 0];
  for (let i3 = 0; i3 < 24; i3++) t[i3 % 3] <<= 1, t[i3 % 3] |= 1 & e2, e2 >>= 1;
  return (0 | t[0]) + (t[1] << 8) + (t[2] << 16);
}
function rt(e2, t) {
  for (; (!e2.interactive || t(e2)) && e2._parent; ) e2 = e2._parent;
}
function st2(e2, t, i3) {
  return J(e2, st(t), (e3) => {
    const t2 = ot(e3);
    let r2 = e3.touches;
    r2 ? (0 == r2.length && (r2 = e3.changedTouches), i3(j(r2), t2)) : i3([e3], t2);
  });
}
function at2(e2) {
  const t = document.createElement("canvas");
  t.width = 1, t.height = 1;
  const i3 = t.getContext("2d", { willReadFrequently: true });
  i3.drawImage(e2, 0, 0, 1, 1);
  try {
    return i3.getImageData(0, 0, 1, 1), false;
  } catch (r2) {
    return console.warn('Image "' + e2.src + '" is loaded from different host and is not covered by CORS policy. For more information about the implications read here: https://www.amcharts.com/docs/v5/concepts/cors'), true;
  }
}
function nt2(e2) {
  e2.width = 0, e2.height = 0, e2.style.width = "0px", e2.style.height = "0px";
}
function ot2(e2) {
  return Math.floor(e2) + 0.5;
}
var lt = class {
  constructor() {
    Object.defineProperty(this, "_x", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_y", { enumerable: true, configurable: true, writable: true, value: 0 });
  }
  get x() {
    return this._x;
  }
  get y() {
    return this._y;
  }
  set x(e2) {
    this._x = e2;
  }
  set y(e2) {
    this._y = e2;
  }
};
var ht = class extends G {
  constructor(e2) {
    super(), Object.defineProperty(this, "_layer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "mask", { enumerable: true, configurable: true, writable: true, value: null }), Object.defineProperty(this, "visible", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "exportable", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "interactive", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "inactive", { enumerable: true, configurable: true, writable: true, value: null }), Object.defineProperty(this, "wheelable", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "cancelTouch", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "isMeasured", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "buttonMode", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "alpha", { enumerable: true, configurable: true, writable: true, value: 1 }), Object.defineProperty(this, "compoundAlpha", { enumerable: true, configurable: true, writable: true, value: 1 }), Object.defineProperty(this, "angle", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "scale", { enumerable: true, configurable: true, writable: true, value: 1 }), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "crisp", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "pivot", { enumerable: true, configurable: true, writable: true, value: new lt() }), Object.defineProperty(this, "filter", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "cursorOverStyle", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_replacedCursorStyle", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_localMatrix", { enumerable: true, configurable: true, writable: true, value: new We() }), Object.defineProperty(this, "_matrix", { enumerable: true, configurable: true, writable: true, value: new We() }), Object.defineProperty(this, "_uMatrix", { enumerable: true, configurable: true, writable: true, value: new We() }), Object.defineProperty(this, "_renderer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_parent", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_localBounds", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_bounds", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_colorId", { enumerable: true, configurable: true, writable: true, value: void 0 }), this._renderer = e2;
  }
  subStatus(e2) {
    return { inactive: null == this.inactive ? e2.inactive : this.inactive, layer: this._layer || e2.layer };
  }
  _dispose() {
    this._renderer._removeObject(this), this.getLayer().dirty = true;
  }
  getCanvas() {
    return this.getLayer().view;
  }
  getLayer() {
    let e2 = this;
    for (; ; ) {
      if (e2._layer) return e2._layer;
      if (!e2._parent) return this._renderer.defaultLayer;
      e2 = e2._parent;
    }
  }
  setLayer(e2, t) {
    if (null == e2) this._layer = void 0;
    else {
      const i3 = true;
      this._layer = this._renderer.getLayer(e2, i3), this._layer.visible = i3, this._layer.margin = t, t && dt(this._layer.view, false), this._renderer._ghostLayer.setMargin(this._renderer.layers), this._parent && this._parent.registerChildLayer(this._layer), this._layer.dirty = true, this._renderer.resizeLayer(this._layer), this._renderer.resizeGhost();
    }
  }
  markDirtyLayer() {
    this.getLayer().dirty = true;
  }
  clear() {
    this.invalidateBounds();
  }
  invalidateBounds() {
    this._localBounds = void 0;
  }
  _addBounds(e2) {
  }
  _getColorId() {
    return void 0 === this._colorId && (this._colorId = this._renderer.paintId(this)), this._colorId;
  }
  _isInteractive(e2) {
    return !e2.inactive && (this.interactive || this._renderer._forceInteractive > 0);
  }
  _isInteractiveMask(e2) {
    return this._isInteractive(e2);
  }
  contains(e2) {
    for (; ; ) {
      if (e2 === this) return true;
      if (!e2._parent) return false;
      e2 = e2._parent;
    }
  }
  toGlobal(e2) {
    return this._matrix.apply(e2);
  }
  toLocal(e2) {
    return this._matrix.applyInverse(e2);
  }
  getLocalMatrix() {
    return this._uMatrix.setTransform(0, 0, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale), this._uMatrix;
  }
  getLocalBounds() {
    if (!this._localBounds) {
      const e2 = 1e7;
      this._localBounds = { left: e2, top: e2, right: -1e7, bottom: -1e7 }, this._addBounds(this._localBounds);
    }
    return this._localBounds;
  }
  getAdjustedBounds(e2) {
    this._setMatrix();
    const t = this.getLocalMatrix(), i3 = t.apply({ x: e2.left, y: e2.top }), r2 = t.apply({ x: e2.right, y: e2.top }), s3 = t.apply({ x: e2.right, y: e2.bottom }), a = t.apply({ x: e2.left, y: e2.bottom });
    return { left: Math.min(i3.x, r2.x, s3.x, a.x), top: Math.min(i3.y, r2.y, s3.y, a.y), right: Math.max(i3.x, r2.x, s3.x, a.x), bottom: Math.max(i3.y, r2.y, s3.y, a.y) };
  }
  on(e2, t, i3) {
    return this.interactive ? this._renderer._addEvent(this, e2, t, i3) : new z(() => {
    });
  }
  _setMatrix() {
    this._localMatrix.setTransform(this.x, this.y, this.pivot.x, this.pivot.y, this.angle * Math.PI / 180, this.scale), this._matrix.copyFrom(this._localMatrix), this._parent && this._matrix.prepend(this._parent._matrix);
  }
  _transform(e2, t) {
    const i3 = this._matrix;
    let r2 = i3.tx * t, s3 = i3.ty * t;
    this.crisp && (r2 = ot2(r2), s3 = ot2(s3)), e2.setTransform(i3.a * t, i3.b * t, i3.c * t, i3.d * t, r2, s3);
  }
  _transformMargin(e2, t, i3) {
    const r2 = this._matrix;
    e2.setTransform(r2.a * t, r2.b * t, r2.c * t, r2.d * t, (r2.tx + i3.left) * t, (r2.ty + i3.top) * t);
  }
  _transformLayer(e2, t, i3) {
    i3.margin ? this._transformMargin(e2, i3.scale || t, i3.margin) : this._transform(e2, i3.scale || t);
  }
  render(e2, t = 0) {
    if (this.visible && (false !== this.exportable || !this._renderer._omitTainted)) {
      this._setMatrix();
      const i3 = this.subStatus(e2), s3 = this._renderer.resolution, a = this._renderer.layers, n2 = this._renderer._ghostLayer, o = n2.context, l2 = this.mask;
      l2 && l2._setMatrix(), P(a, (e3) => {
        if (e3) {
          const t2 = e3.context;
          t2.save(), l2 && (l2._transformLayer(t2, s3, e3), l2._runPath(t2), t2.clip()), t2.globalAlpha = this.compoundAlpha * this.alpha, this._transformLayer(t2, s3, e3), this.filter && (t2.filter = this.filter);
        }
      }), o.save(), l2 && this._isInteractiveMask(i3) && (l2._transformMargin(o, s3, n2.margin), l2._runPath(o), o.clip()), this._transformMargin(o, s3, n2.margin), i3.layer.order > 0 && !t && O(this._renderer._deferredGhostLayers, i3.layer.order), this._render(i3, t), o.restore(), P(a, (e3) => {
        e3 && e3.context.restore();
      });
    }
  }
  _render(e2, t = 0) {
    false === this.exportable && (e2.layer.tainted = true);
  }
  _ghostOnly(e2 = 0) {
    return e2 > 0;
  }
  _drawGhost(e2, t = 0) {
    const i3 = this._isInteractive(e2), r2 = e2.layer.order || 0;
    return !(!i3 || (0 != r2 || this._ghostOnly(t)) && r2 != t);
  }
  hovering() {
    return this._renderer._hovering.has(this);
  }
  dragging() {
    return this._renderer._dragging.some((e2) => e2.value === this);
  }
  shouldCancelTouch() {
    const e2 = this._renderer;
    return !(e2.tapToActivate && !e2._touchActive) && (!!this.cancelTouch || !!this._parent && this._parent.shouldCancelTouch());
  }
};
var ut2 = class extends ht {
  constructor() {
    super(...arguments), Object.defineProperty(this, "interactiveChildren", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "_childLayers", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_children", { enumerable: true, configurable: true, writable: true, value: [] });
  }
  _isInteractiveMask(e2) {
    return this.interactiveChildren || super._isInteractiveMask(e2);
  }
  addChild(e2) {
    e2._parent = this, this._children.push(e2), e2._layer && this.registerChildLayer(e2._layer);
  }
  addChildAt(e2, t) {
    e2._parent = this, this._children.splice(t, 0, e2), e2._layer && this.registerChildLayer(e2._layer);
  }
  removeChild(e2) {
    e2._parent = void 0, T(this._children, e2);
  }
  _render(e2, t) {
    super._render(e2);
    const i3 = this._renderer;
    this.interactive && this.interactiveChildren && ++i3._forceInteractive, P(this._children, (i4) => {
      i4.compoundAlpha = this.compoundAlpha * this.alpha, i4.render(e2, t);
    }), this.interactive && this.interactiveChildren && --i3._forceInteractive;
  }
  registerChildLayer(e2) {
    this._childLayers || (this._childLayers = []), S(this._childLayers, e2), this._parent && this._parent.registerChildLayer(e2);
  }
  markDirtyLayer(e2 = false) {
    super.markDirtyLayer(), e2 && this._childLayers && P(this._childLayers, (e3) => e3.dirty = true);
  }
  _dispose() {
    super._dispose(), this._childLayers && P(this._childLayers, (e2) => {
      e2.dirty = true;
    });
  }
};
function ct2(e2, t) {
  e2.left = Math.min(e2.left, t.x), e2.top = Math.min(e2.top, t.y), e2.right = Math.max(e2.right, t.x), e2.bottom = Math.max(e2.bottom, t.y);
}
var dt2 = class {
  colorize(e2, t) {
  }
  colorizeGhost(e2, t) {
    this.colorize(e2, t);
  }
  path(e2) {
  }
  pathGhost(e2) {
    this.path(e2);
  }
  addBounds(e2) {
  }
};
var bt = class extends dt2 {
  colorize(e2, t) {
    e2.beginPath();
  }
};
var ft = class extends dt2 {
  constructor(e2) {
    super(), Object.defineProperty(this, "color", { enumerable: true, configurable: true, writable: true, value: e2 });
  }
  colorize(e2, t) {
    e2.fillStyle = void 0 !== t ? t : this.color;
  }
};
var pt = class extends dt2 {
  constructor(e2) {
    super(), Object.defineProperty(this, "clearShadow", { enumerable: true, configurable: true, writable: true, value: e2 });
  }
  colorize(e2, t) {
    e2.fill(), this.clearShadow && (e2.shadowColor = "", e2.shadowBlur = 0, e2.shadowOffsetX = 0, e2.shadowOffsetY = 0);
  }
};
var gt = class extends dt2 {
  colorize(e2, t) {
    e2.stroke();
  }
};
var mt2 = class extends dt2 {
  constructor(e2, t, i3, r2) {
    super(), Object.defineProperty(this, "width", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "color", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "lineJoin", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "lineCap", { enumerable: true, configurable: true, writable: true, value: r2 });
  }
  colorize(e2, t) {
    e2.strokeStyle = void 0 !== t ? t : this.color, e2.lineWidth = this.width, this.lineJoin && (e2.lineJoin = this.lineJoin), this.lineCap && (e2.lineCap = this.lineCap);
  }
};
var _t2 = class extends dt2 {
  constructor(e2) {
    super(), Object.defineProperty(this, "dash", { enumerable: true, configurable: true, writable: true, value: e2 });
  }
  colorize(e2, t) {
    e2.setLineDash(this.dash);
  }
};
var yt = class extends dt2 {
  constructor(e2) {
    super(), Object.defineProperty(this, "dashOffset", { enumerable: true, configurable: true, writable: true, value: e2 });
  }
  colorize(e2, t) {
    e2.lineDashOffset = this.dashOffset;
  }
};
var vt2 = class extends dt2 {
  constructor(e2, t, i3, r2) {
    super(), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "width", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "height", { enumerable: true, configurable: true, writable: true, value: r2 });
  }
  path(e2) {
    e2.rect(this.x, this.y, this.width, this.height);
  }
  addBounds(e2) {
    const t = this.x, i3 = this.y, r2 = t + this.width, s3 = i3 + this.height;
    ct2(e2, { x: t, y: i3 }), ct2(e2, { x: r2, y: i3 }), ct2(e2, { x: t, y: s3 }), ct2(e2, { x: r2, y: s3 });
  }
};
var wt2 = class extends dt2 {
  constructor(e2, t, i3) {
    super(), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "radius", { enumerable: true, configurable: true, writable: true, value: i3 });
  }
  path(e2) {
    e2.moveTo(this.x + this.radius, this.y), e2.arc(this.x, this.y, this.radius, 0, 2 * Math.PI);
  }
  addBounds(e2) {
    ct2(e2, { x: this.x - this.radius, y: this.y - this.radius }), ct2(e2, { x: this.x + this.radius, y: this.y + this.radius });
  }
};
var xt2 = class extends dt2 {
  constructor(e2, t, i3, r2) {
    super(), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "radiusX", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "radiusY", { enumerable: true, configurable: true, writable: true, value: r2 });
  }
  path(e2) {
    e2.ellipse(0, 0, this.radiusX, this.radiusY, 0, 0, 2 * Math.PI);
  }
  addBounds(e2) {
    ct2(e2, { x: this.x - this.radiusX, y: this.y - this.radiusY }), ct2(e2, { x: this.x + this.radiusX, y: this.y + this.radiusY });
  }
};
var Pt2 = class extends dt2 {
  constructor(e2, t, i3, r2, s3, a) {
    super(), Object.defineProperty(this, "cx", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "cy", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "radius", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "startAngle", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "endAngle", { enumerable: true, configurable: true, writable: true, value: s3 }), Object.defineProperty(this, "anticlockwise", { enumerable: true, configurable: true, writable: true, value: a });
  }
  path(e2) {
    this.radius > 0 && e2.arc(this.cx, this.cy, this.radius, this.startAngle, this.endAngle, this.anticlockwise);
  }
  addBounds(e2) {
    let t = me(this.cx, this.cy, this.startAngle * le, this.endAngle * le, this.radius);
    ct2(e2, { x: t.left, y: t.top }), ct2(e2, { x: t.right, y: t.bottom });
  }
};
var Ot2 = class extends dt2 {
  constructor(e2, t, i3, r2, s3) {
    super(), Object.defineProperty(this, "x1", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y1", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "x2", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "y2", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "radius", { enumerable: true, configurable: true, writable: true, value: s3 });
  }
  path(e2) {
    this.radius > 0 && e2.arcTo(this.x1, this.y1, this.x2, this.y2, this.radius);
  }
  addBounds(e2) {
  }
};
var kt2 = class extends dt2 {
  constructor(e2, t) {
    super(), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: t });
  }
  path(e2) {
    e2.lineTo(this.x, this.y);
  }
  addBounds(e2) {
    ct2(e2, { x: this.x, y: this.y });
  }
};
var Mt2 = class extends dt2 {
  constructor(e2, t) {
    super(), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: t });
  }
  path(e2) {
    e2.moveTo(this.x, this.y);
  }
  addBounds(e2) {
    ct2(e2, { x: this.x, y: this.y });
  }
};
var St2 = class extends dt2 {
  path(e2) {
    e2.closePath();
  }
};
var jt2 = class extends dt2 {
  constructor(e2, t, i3, r2, s3, a) {
    super(), Object.defineProperty(this, "cpX", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "cpY", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "cpX2", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "cpY2", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "toX", { enumerable: true, configurable: true, writable: true, value: s3 }), Object.defineProperty(this, "toY", { enumerable: true, configurable: true, writable: true, value: a });
  }
  path(e2) {
    e2.bezierCurveTo(this.cpX, this.cpY, this.cpX2, this.cpY2, this.toX, this.toY);
  }
  addBounds(e2) {
    ct2(e2, { x: this.cpX, y: this.cpY }), ct2(e2, { x: this.cpX2, y: this.cpY2 }), ct2(e2, { x: this.toX, y: this.toY });
  }
};
var Et2 = class extends dt2 {
  constructor(e2, t, i3, r2) {
    super(), Object.defineProperty(this, "cpX", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "cpY", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "toX", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "toY", { enumerable: true, configurable: true, writable: true, value: r2 });
  }
  path(e2) {
    e2.quadraticCurveTo(this.cpX, this.cpY, this.toX, this.toY);
  }
  addBounds(e2) {
    ct2(e2, { x: this.cpX, y: this.cpY }), ct2(e2, { x: this.toX, y: this.toY });
  }
};
var Tt2 = class extends dt2 {
  constructor(e2, t, i3, r2, s3) {
    super(), Object.defineProperty(this, "color", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "blur", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "offsetX", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "offsetY", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "opacity", { enumerable: true, configurable: true, writable: true, value: s3 });
  }
  colorize(e2, t) {
    this.opacity && (e2.fillStyle = this.color), e2.shadowColor = this.color, e2.shadowBlur = this.blur, e2.shadowOffsetX = this.offsetX, e2.shadowOffsetY = this.offsetY;
  }
  colorizeGhost(e2, t) {
  }
};
var Bt = class extends dt2 {
  constructor(e2, t, i3, r2, s3) {
    super(), Object.defineProperty(this, "image", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "width", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "height", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "x", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "y", { enumerable: true, configurable: true, writable: true, value: s3 });
  }
  path(e2) {
    e2.drawImage(this.image, this.x, this.y, this.width, this.height);
  }
  addBounds(e2) {
    ct2(e2, { x: this.x, y: this.y }), ct2(e2, { x: this.width, y: this.height });
  }
};
var Ct2 = class extends ht {
  constructor() {
    super(...arguments), Object.defineProperty(this, "_operations", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "blendMode", { enumerable: true, configurable: true, writable: true, value: Ge.NORMAL }), Object.defineProperty(this, "_hasShadows", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_fillAlpha", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_strokeAlpha", { enumerable: true, configurable: true, writable: true, value: void 0 });
  }
  clear() {
    super.clear(), this._operations.length = 0;
  }
  _pushOp(e2) {
    this._operations.push(e2);
  }
  beginFill(e2, t = 1) {
    this._fillAlpha = t, e2 ? e2 instanceof Yt ? this._pushOp(new ft(e2.toCSS(t))) : (this.isMeasured = true, this._pushOp(new ft(e2))) : this._pushOp(new ft("rgba(0, 0, 0, " + t + ")"));
  }
  endFill() {
    this._pushOp(new pt(this._hasShadows));
  }
  endStroke() {
    this._pushOp(new gt());
  }
  beginPath() {
    this._pushOp(new bt());
  }
  lineStyle(e2 = 0, t, i3 = 1, r2, s3) {
    this._strokeAlpha = i3, t ? t instanceof Yt ? this._pushOp(new mt2(e2, t.toCSS(i3), r2, s3)) : this._pushOp(new mt2(e2, t, r2, s3)) : this._pushOp(new mt2(e2, "rgba(0, 0, 0, " + i3 + ")", r2, s3));
  }
  setLineDash(e2) {
    this._pushOp(new _t2(e2 || []));
  }
  setLineDashOffset(e2 = 0) {
    this._pushOp(new yt(e2));
  }
  drawRect(e2, t, i3, r2) {
    this._pushOp(new vt2(e2, t, i3, r2));
  }
  drawCircle(e2, t, i3) {
    this._pushOp(new wt2(e2, t, i3));
  }
  drawEllipse(e2, t, i3, r2) {
    this._pushOp(new xt2(e2, t, i3, r2));
  }
  arc(e2, t, i3, r2, s3, a = false) {
    this._pushOp(new Pt2(e2, t, i3, r2, s3, a));
  }
  arcTo(e2, t, i3, r2, s3) {
    this._pushOp(new Ot2(e2, t, i3, r2, s3));
  }
  lineTo(e2, t) {
    this._pushOp(new kt2(e2, t));
  }
  moveTo(e2, t) {
    this._pushOp(new Mt2(e2, t));
  }
  bezierCurveTo(e2, t, i3, r2, s3, a) {
    this._pushOp(new jt2(e2, t, i3, r2, s3, a));
  }
  quadraticCurveTo(e2, t, i3, r2) {
    this._pushOp(new Et2(e2, t, i3, r2));
  }
  closePath() {
    this._pushOp(new St2());
  }
  shadow(e2, t = 0, i3 = 0, r2 = 0, s3) {
    this._hasShadows = true, this._pushOp(new Tt2(s3 ? e2.toCSS(s3) : e2.toCSS(this._fillAlpha || this._strokeAlpha), t, i3, r2));
  }
  image(e2, t, i3, r2, s3) {
    this._pushOp(new Bt(e2, t, i3, r2, s3));
  }
  svgPath(e2) {
    let t = 0, i3 = 0, s3 = null, a = null, n2 = null, o = null;
    const l2 = /([MmZzLlHhVvCcSsQqTtAa])([^MmZzLlHhVvCcSsQqTtAa]*)/g, h = /[\u0009\u0020\u000A\u000C\u000D]*([\+\-]?[0-9]*\.?[0-9]+(?:[eE][\+\-]?[0-9]+)?)[\u0009\u0020\u000A\u000C\u000D]*,?/g;
    let u3;
    for (; null !== (u3 = l2.exec(e2)); ) {
      const e3 = u3[1], l3 = u3[2], c = [];
      for (; null !== (u3 = h.exec(l3)); ) c.push(u3[1]);
      switch ("S" !== e3 && "s" !== e3 && "C" !== e3 && "c" !== e3 && (s3 = null, a = null), "Q" !== e3 && "q" !== e3 && "T" !== e3 && "t" !== e3 && (n2 = null, o = null), e3) {
        case "M":
          Qe2(e3, c.length, 2), t = +c[0], i3 = +c[1], this.moveTo(t, i3);
          for (let e4 = 2; e4 < c.length; e4 += 2) t = +c[e4], i3 = +c[e4 + 1], this.lineTo(t, i3);
          break;
        case "m":
          Qe2(e3, c.length, 2), t += +c[0], i3 += +c[1], this.moveTo(t, i3);
          for (let e4 = 2; e4 < c.length; e4 += 2) t += +c[e4], i3 += +c[e4 + 1], this.lineTo(t, i3);
          break;
        case "L":
          Qe2(e3, c.length, 2);
          for (let e4 = 0; e4 < c.length; e4 += 2) t = +c[e4], i3 = +c[e4 + 1], this.lineTo(t, i3);
          break;
        case "l":
          Qe2(e3, c.length, 2);
          for (let e4 = 0; e4 < c.length; e4 += 2) t += +c[e4], i3 += +c[e4 + 1], this.lineTo(t, i3);
          break;
        case "H":
          $e(e3, c.length, 1);
          for (let e4 = 0; e4 < c.length; ++e4) t = +c[e4], this.lineTo(t, i3);
          break;
        case "h":
          $e(e3, c.length, 1);
          for (let e4 = 0; e4 < c.length; ++e4) t += +c[e4], this.lineTo(t, i3);
          break;
        case "V":
          $e(e3, c.length, 1);
          for (let e4 = 0; e4 < c.length; ++e4) i3 = +c[e4], this.lineTo(t, i3);
          break;
        case "v":
          $e(e3, c.length, 1);
          for (let e4 = 0; e4 < c.length; ++e4) i3 += +c[e4], this.lineTo(t, i3);
          break;
        case "C":
          Qe2(e3, c.length, 6);
          for (let e4 = 0; e4 < c.length; e4 += 6) {
            const r2 = +c[e4], n3 = +c[e4 + 1];
            s3 = +c[e4 + 2], a = +c[e4 + 3], t = +c[e4 + 4], i3 = +c[e4 + 5], this.bezierCurveTo(r2, n3, s3, a, t, i3);
          }
          break;
        case "c":
          Qe2(e3, c.length, 6);
          for (let e4 = 0; e4 < c.length; e4 += 6) {
            const r2 = +c[e4] + t, n3 = +c[e4 + 1] + i3;
            s3 = +c[e4 + 2] + t, a = +c[e4 + 3] + i3, t += +c[e4 + 4], i3 += +c[e4 + 5], this.bezierCurveTo(r2, n3, s3, a, t, i3);
          }
          break;
        case "S":
          Qe2(e3, c.length, 4), null !== s3 && null !== a || (s3 = t, a = i3);
          for (let e4 = 0; e4 < c.length; e4 += 4) {
            const r2 = 2 * t - s3, n3 = 2 * i3 - a;
            s3 = +c[e4], a = +c[e4 + 1], t = +c[e4 + 2], i3 = +c[e4 + 3], this.bezierCurveTo(r2, n3, s3, a, t, i3);
          }
          break;
        case "s":
          Qe2(e3, c.length, 4), null !== s3 && null !== a || (s3 = t, a = i3);
          for (let e4 = 0; e4 < c.length; e4 += 4) {
            const r2 = 2 * t - s3, n3 = 2 * i3 - a;
            s3 = +c[e4] + t, a = +c[e4 + 1] + i3, t += +c[e4 + 2], i3 += +c[e4 + 3], this.bezierCurveTo(r2, n3, s3, a, t, i3);
          }
          break;
        case "Q":
          Qe2(e3, c.length, 4);
          for (let e4 = 0; e4 < c.length; e4 += 4) n2 = +c[e4], o = +c[e4 + 1], t = +c[e4 + 2], i3 = +c[e4 + 3], this.quadraticCurveTo(n2, o, t, i3);
          break;
        case "q":
          Qe2(e3, c.length, 4);
          for (let e4 = 0; e4 < c.length; e4 += 4) n2 = +c[e4] + t, o = +c[e4 + 1] + i3, t += +c[e4 + 2], i3 += +c[e4 + 3], this.quadraticCurveTo(n2, o, t, i3);
          break;
        case "T":
          Qe2(e3, c.length, 2), null !== n2 && null !== o || (n2 = t, o = i3);
          for (let e4 = 0; e4 < c.length; e4 += 2) n2 = 2 * t - n2, o = 2 * i3 - o, t = +c[e4], i3 = +c[e4 + 1], this.quadraticCurveTo(n2, o, t, i3);
          break;
        case "t":
          Qe2(e3, c.length, 2), null !== n2 && null !== o || (n2 = t, o = i3);
          for (let e4 = 0; e4 < c.length; e4 += 2) n2 = 2 * t - n2, o = 2 * i3 - o, t += +c[e4], i3 += +c[e4 + 1], this.quadraticCurveTo(n2, o, t, i3);
          break;
        case "A":
        case "a":
          const l4 = "a" === e3;
          et2(c), Qe2(e3, c.length, 7);
          for (let e4 = 0; e4 < c.length; e4 += 7) {
            let s4 = +c[e4 + 5], a2 = +c[e4 + 6];
            l4 && (s4 += t, a2 += i3);
            const n3 = Ze({ px: t, py: i3, rx: +c[e4], ry: +c[e4 + 1], xAxisRotation: +c[e4 + 2], largeArcFlag: tt(+c[e4 + 3]), sweepFlag: tt(+c[e4 + 4]), cx: s4, cy: a2 });
            P(n3, (e5) => {
              this.bezierCurveTo(e5.x1, e5.y1, e5.x2, e5.y2, e5.x, e5.y), t = e5.x, i3 = e5.y;
            });
          }
          break;
        case "Z":
        case "z":
          Je2(e3, c.length, 0), this.closePath();
      }
    }
  }
  _runPath(e2) {
    e2.beginPath(), P(this._operations, (t) => {
      t.path(e2);
    });
  }
  _render(e2, t = 0) {
    super._render(e2);
    const i3 = e2.layer.dirty, s3 = this._isInteractive(e2), a = this._ghostOnly(t), n2 = this._drawGhost(e2, t);
    if (i3 || s3 || a) {
      const t2 = e2.layer.context, s4 = this._renderer._ghostLayer.context;
      let o;
      i3 && !a && (t2.globalCompositeOperation = this.blendMode, t2.beginPath()), n2 && (s4.beginPath(), o = this._getColorId()), P(this._operations, (e3) => {
        i3 && !a && (e3.path(t2), e3.colorize(t2, void 0)), n2 && (e3.pathGhost(s4), e3.colorizeGhost(s4, o));
      });
    }
  }
  renderDetached(e2) {
    if (this.visible) {
      this._setMatrix(), e2.save();
      const t = this.mask;
      t && (t._setMatrix(), t._transform(e2, 1), t._runPath(e2), e2.clip()), e2.globalAlpha = this.compoundAlpha * this.alpha, this._transform(e2, 1), this.filter && (e2.filter = this.filter), e2.globalCompositeOperation = this.blendMode, e2.beginPath(), P(this._operations, (t2) => {
        t2.path(e2), t2.colorize(e2, void 0);
      }), e2.restore();
    }
  }
  _addBounds(e2) {
    this.visible && this.isMeasured && P(this._operations, (t) => {
      t.addBounds(e2);
    });
  }
};
var Dt2 = class extends ht {
  constructor(e2, t, i3) {
    super(e2), Object.defineProperty(this, "text", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "style", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "resolution", { enumerable: true, configurable: true, writable: true, value: 1 }), Object.defineProperty(this, "textVisible", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "truncated", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_textInfo", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_originalScale", { enumerable: true, configurable: true, writable: true, value: 1 }), this.text = t, this.style = i3;
  }
  invalidateBounds() {
    super.invalidateBounds(), this._textInfo = void 0;
  }
  _shared(e2) {
    this.style.textAlign && (e2.textAlign = this.style.textAlign), this.style.direction && (e2.direction = this.style.direction), this.style.textBaseline && (e2.textBaseline = this.style.textBaseline);
  }
  _prerender(e2, t = false, i3 = false) {
    super._render(e2);
    const r2 = e2.layer.context, s3 = this._renderer._ghostLayer.context, a = this.style;
    let n2 = this._getFontStyle(void 0, i3);
    r2.font = n2, this._isInteractive(e2) && !t && (s3.font = n2), a.fill && (a.fill instanceof Yt ? r2.fillStyle = a.fill.toCSS(null != a.fillOpacity ? a.fillOpacity : 1) : r2.fillStyle = a.fill), a.shadowColor && (e2.layer.context.shadowColor = a.shadowColor.toCSS(a.shadowOpacity || 1)), a.shadowBlur && (e2.layer.context.shadowBlur = a.shadowBlur), a.shadowOffsetX && (e2.layer.context.shadowOffsetX = a.shadowOffsetX), a.shadowOffsetY && (e2.layer.context.shadowOffsetY = a.shadowOffsetY), this._shared(r2), this._isInteractive(e2) && !t && (s3.fillStyle = this._getColorId(), this._shared(s3));
  }
  _getFontStyle(e2, t = false) {
    const i3 = this.style;
    let r2 = [];
    return e2 && e2.fontVariant ? r2.push(e2.fontVariant) : i3.fontVariant && r2.push(i3.fontVariant), t || (e2 && e2.fontWeight ? r2.push(e2.fontWeight) : i3.fontWeight && r2.push(i3.fontWeight)), e2 && e2.fontStyle ? r2.push(e2.fontStyle) : i3.fontStyle && r2.push(i3.fontStyle), e2 && e2.fontSize ? (_(e2.fontSize) && (e2.fontSize = e2.fontSize + "px"), r2.push(e2.fontSize)) : i3.fontSize && (_(i3.fontSize) && (i3.fontSize = i3.fontSize + "px"), r2.push(i3.fontSize)), e2 && e2.fontFamily ? r2.push(e2.fontFamily) : i3.fontFamily ? r2.push(i3.fontFamily) : r2.length && r2.push("Arial"), r2.join(" ");
  }
  _render(e2, t = 0) {
    if (this._textInfo || this._measure(e2), this.textVisible) {
      const i3 = this._isInteractive(e2), s3 = e2.layer.context, a = e2.layer.dirty, n2 = this._renderer._ghostLayer.context, o = this._ghostOnly(t), l2 = this._drawGhost(e2, t);
      s3.save(), n2.save(), this._prerender(e2), P(this._textInfo, (t2, h) => {
        P(t2.textChunks, (r2, h2) => {
          if (r2.style && (s3.save(), n2.save(), o || (s3.font = r2.style), this._isInteractive(e2) && (n2.font = r2.style)), r2.fill && (s3.save(), o || (s3.fillStyle = r2.fill.toCSS())), a && !o && s3.fillText(r2.text, r2.offsetX, t2.offsetY + r2.offsetY), "underline" == r2.textDecoration || "line-through" == r2.textDecoration) {
            let e3 = 1, i4 = 1, a2 = r2.height;
            const n3 = this.style.oversizedBehavior || "";
            if (["truncate", "wrap", "wrap-no-break"].indexOf(n3) > -1) {
              const e4 = this._measureText(r2.text, s3);
              r2.width = e4.actualBoundingBoxLeft + e4.actualBoundingBoxRight;
            }
            let l3, h3 = r2.offsetX;
            switch (this.style.textAlign) {
              case "right":
              case "end":
                h3 -= r2.width;
                break;
              case "center":
                h3 -= r2.width / 2;
            }
            if (r2.style) {
              switch (ti.getTextStyle(r2.style).fontWeight) {
                case "bolder":
                case "bold":
                case "700":
                case "800":
                case "900":
                  e3 = 2;
              }
            }
            a2 && (i4 = a2 / 20), l3 = "line-through" == r2.textDecoration ? e3 + t2.offsetY + r2.offsetY - r2.height / 2 : e3 + 1.5 * i4 + t2.offsetY + r2.offsetY, o || (s3.save(), s3.beginPath(), r2.fill ? s3.strokeStyle = r2.fill.toCSS() : this.style.fill && this.style.fill instanceof Yt && (s3.strokeStyle = this.style.fill.toCSS()), s3.lineWidth = e3 * i4, s3.moveTo(h3, l3), s3.lineTo(h3 + r2.width, l3), s3.stroke(), s3.restore());
          }
          i3 && this.interactive && l2 && n2.fillText(r2.text, r2.offsetX, t2.offsetY + r2.offsetY), r2.fill && s3.restore(), r2.style && (s3.restore(), n2.restore());
        });
      }), s3.restore(), n2.restore();
    }
  }
  _addBounds(e2) {
    if (this.visible && this.isMeasured) {
      const t = this._measure({ inactive: this.inactive, layer: this.getLayer() });
      ct2(e2, { x: t.left, y: t.top }), ct2(e2, { x: t.right, y: t.bottom });
    }
  }
  _ignoreFontWeight() {
    return /apple/i.test(navigator.vendor);
  }
  _measure(e2) {
    const t = e2.layer.context, i3 = this._renderer._ghostLayer.context, s3 = "rtl" == this.style.direction;
    this._textInfo = [];
    const a = this.style.oversizedBehavior, n2 = this.style.maxWidth, o = _(n2) && "truncate" == a, l2 = _(n2) && ("wrap" == a || "wrap-no-break" == a);
    t.save(), i3.save(), this._prerender(e2, true, this._ignoreFontWeight());
    const h = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 ", u3 = this.text.toString().replace(/\r/g, "").split(/\n/);
    let c, d = true, f2 = 0, p = 0, m2 = 0;
    P(u3, (e3, r2) => {
      let s4;
      for (s4 = "" == e3 ? [{ type: "value", text: "" }] : ti.chunk(e3, false, this.style.ignoreFormatting); s4.length > 0; ) {
        let e4 = { offsetY: m2, ascent: 0, width: 0, height: 0, left: 0, right: 0, textChunks: [] };
        const r3 = this._measureText(h, t), a2 = r3.actualBoundingBoxAscent + r3.actualBoundingBoxDescent;
        let u4;
        e4.height = a2, e4.ascent = r3.actualBoundingBoxAscent;
        let g2, _3, y, v2 = this.style.textDecoration, w2 = false, x2 = true, P2 = [];
        x(s4, (r4, a3) => {
          if ("format" == r4.type) if ("[/]" == r4.text) d || (t.restore(), i3.restore(), d = true), g2 = void 0, c = void 0, _3 = void 0, v2 = this.style.textDecoration, y = void 0, u4 = r4.text;
          else {
            d || (t.restore(), i3.restore());
            let s5 = ti.getTextStyle(r4.text);
            const a4 = this._getFontStyle(s5);
            t.save(), i3.save(), t.font = a4, c = a4, u4 = r4.text, s5.textDecoration && (v2 = s5.textDecoration), s5.fill && (g2 = s5.fill), s5.width && (_3 = l(s5.width)), s5.verticalAlign && (y = s5.verticalAlign), d = false;
            const n3 = this._measureText(h, t), o2 = n3.actualBoundingBoxAscent + n3.actualBoundingBoxDescent;
            o2 > e4.height && (e4.height = o2), n3.actualBoundingBoxAscent > e4.ascent && (e4.ascent = n3.actualBoundingBoxAscent);
          }
          else if ("value" == r4.type && !w2) {
            const i4 = this._measureText(r4.text, t);
            let h2 = i4.actualBoundingBoxLeft + i4.actualBoundingBoxRight;
            if (o) {
              this.truncated = void 0;
              let i5 = x2 || this.style.breakWords || false;
              const s5 = this.style.ellipsis || "", a4 = this._measureText(s5, t), o2 = a4.actualBoundingBoxLeft + a4.actualBoundingBoxRight;
              if (e4.width + h2 > n2) {
                const a5 = n2 - e4.width - o2;
                r4.text = this._truncateText(t, r4.text, a5, i5), r4.text += s5, w2 = true, this.truncated = true;
              }
            } else if (l2 && e4.width + h2 > n2) {
              const i5 = n2 - e4.width, o2 = this._truncateText(t, r4.text, i5, false, x2 && "wrap-no-break" != this.style.oversizedBehavior);
              if ("" == o2) return this.textVisible = true, false;
              P2 = s4.slice(a3 + 1), vt(o2) != vt(r4.text) && (P2.unshift({ type: "value", text: r4.text.substr(o2.length) }), u4 && P2.unshift({ type: "format", text: u4 })), r4.text = vt(o2), s4 = [], w2 = true;
            }
            let d2 = 1, b2 = 1;
            if (c && _3 && _3 > h2) {
              const e5 = h2 / _3;
              switch (this.style.textAlign) {
                case "right":
                case "end":
                  d2 = e5;
                  break;
                case "center":
                  d2 = e5, b2 = e5;
                  break;
                default:
                  b2 = e5;
              }
              h2 = _3;
            }
            const f3 = i4.actualBoundingBoxAscent + i4.actualBoundingBoxDescent;
            f3 > e4.height && (e4.height = f3), i4.actualBoundingBoxAscent > e4.ascent && (e4.ascent = i4.actualBoundingBoxAscent), e4.width += h2, e4.left += i4.actualBoundingBoxLeft / d2, e4.right += i4.actualBoundingBoxRight / b2, e4.textChunks.push({ style: c, fill: g2, text: r4.text, width: h2, height: f3, left: i4.actualBoundingBoxLeft, right: i4.actualBoundingBoxRight, ascent: i4.actualBoundingBoxAscent, offsetX: 0, offsetY: 0, textDecoration: v2, verticalAlign: y }), x2 = false;
          }
          return true;
        }), this.style.lineHeight instanceof e ? (e4.height *= this.style.lineHeight.value, e4.ascent *= this.style.lineHeight.value) : (e4.height *= this.style.lineHeight || 1.2, e4.ascent *= this.style.lineHeight || 1.2), f2 < e4.left && (f2 = e4.left), p < e4.right && (p = e4.right), this._textInfo.push(e4), m2 += e4.height, s4 = P2 || [];
      }
    }), d || (t.restore(), i3.restore()), P(this._textInfo, (e3, t2) => {
      let i4 = 0;
      P(e3.textChunks, (t3) => {
        if (t3.offsetX = i4 + t3.left - e3.left, t3.offsetY += e3.height - e3.height * (this.style.baselineRatio || 0.19), i4 += t3.width, t3.verticalAlign) switch (t3.verticalAlign) {
          case "super":
            t3.offsetY -= e3.height / 2 - t3.height / 2;
            break;
          case "sub":
            t3.offsetY += t3.height / 2;
        }
      });
    });
    const _2 = { left: s3 ? -p : -f2, top: 0, right: s3 ? f2 : p, bottom: m2 };
    if ("none" !== a) {
      const e3 = this._fitRatio(_2);
      if (e3 < 1) if ("fit" == a) _(this.style.minScale) && e3 < this.style.minScale ? (this.textVisible = false, _2.left = 0, _2.top = 0, _2.right = 0, _2.bottom = 0) : (this._originalScale || (this._originalScale = this.scale), this.scale = e3, this.textVisible = true);
      else if ("hide" == a) this.textVisible = false, _2.left = 0, _2.top = 0, _2.right = 0, _2.bottom = 0;
      else {
        switch (this.style.textAlign) {
          case "right":
          case "end":
            _2.left = s3 ? n2 : -n2, _2.right = 0;
            break;
          case "center":
            _2.left = -n2 / 2, _2.right = n2 / 2;
            break;
          default:
            _2.left = 0, _2.right = s3 ? -n2 : n2;
        }
        this.scale = this._originalScale || 1, this._originalScale = void 0, this.textVisible = true;
      }
      else this.scale = this._originalScale || 1, this._originalScale = void 0, this.textVisible = true;
    }
    return t.restore(), i3.restore(), _2;
  }
  _fitRatio(e2) {
    const t = this.style.maxWidth, i3 = this.style.maxHeight;
    if (!_(t) && !_(i3)) return 1;
    const r2 = e2.right - e2.left, s3 = e2.bottom - e2.top;
    return Math.min(t / r2 || 1, i3 / s3 || 1);
  }
  _truncateText(e2, t, i3, r2 = false, s3 = true) {
    let a;
    do {
      if (r2) t = t.slice(0, -1);
      else {
        let e3 = t.replace(/[^,;:!?\\\/\s​]+[,;:!?\\\/\s​]*$/g, "");
        if ("" != e3 && e3 !== t || !s3) {
          if ("" == e3) return t;
          t = e3;
        } else r2 = true;
      }
      const i4 = this._measureText(t, e2);
      a = i4.actualBoundingBoxLeft + i4.actualBoundingBoxRight;
    } while (a > i3 && "" != t);
    return t;
  }
  _measureText(e2, t) {
    let i3 = t.measureText(e2), r2 = {};
    if (null == i3.actualBoundingBoxAscent) {
      const t2 = document.createElement("div");
      t2.innerText = e2, t2.style.visibility = "hidden", t2.style.position = "absolute", t2.style.top = "-1000000px;", t2.style.fontFamily = this.style.fontFamily || "", t2.style.fontSize = this.style.fontSize + "", document.body.appendChild(t2);
      const s4 = t2.getBoundingClientRect();
      document.body.removeChild(t2);
      const a = s4.height, n2 = i3.width;
      r2 = { actualBoundingBoxAscent: a, actualBoundingBoxDescent: 0, actualBoundingBoxLeft: 0, actualBoundingBoxRight: n2, fontBoundingBoxAscent: a, fontBoundingBoxDescent: 0, width: n2 };
    } else r2 = { actualBoundingBoxAscent: i3.actualBoundingBoxAscent, actualBoundingBoxDescent: i3.actualBoundingBoxDescent, actualBoundingBoxLeft: i3.actualBoundingBoxLeft, actualBoundingBoxRight: i3.actualBoundingBoxRight, fontBoundingBoxAscent: i3.actualBoundingBoxAscent, fontBoundingBoxDescent: i3.actualBoundingBoxDescent, width: i3.width };
    const s3 = i3.width;
    switch (this.style.textAlign) {
      case "right":
      case "end":
        r2.actualBoundingBoxLeft = s3, r2.actualBoundingBoxRight = 0;
        break;
      case "center":
        r2.actualBoundingBoxLeft = s3 / 2, r2.actualBoundingBoxRight = s3 / 2;
        break;
      default:
        r2.actualBoundingBoxLeft = 0, r2.actualBoundingBoxRight = s3;
    }
    return r2;
  }
};
var At = class {
  constructor() {
    Object.defineProperty(this, "fill", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fillOpacity", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "textAlign", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fontFamily", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fontSize", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fontWeight", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fontStyle", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fontVariant", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "textDecoration", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowColor", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowBlur", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOffsetX", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOffsetY", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOpacity", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "lineHeight", { enumerable: true, configurable: true, writable: true, value: i2(120) }), Object.defineProperty(this, "baselineRatio", { enumerable: true, configurable: true, writable: true, value: 0.19 }), Object.defineProperty(this, "direction", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "textBaseline", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "oversizedBehavior", { enumerable: true, configurable: true, writable: true, value: "none" }), Object.defineProperty(this, "breakWords", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "ellipsis", { enumerable: true, configurable: true, writable: true, value: "…" }), Object.defineProperty(this, "maxWidth", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "maxHeight", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "minScale", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "ignoreFormatting", { enumerable: true, configurable: true, writable: true, value: false });
  }
};
var Lt = class extends Dt2 {
  constructor() {
    super(...arguments), Object.defineProperty(this, "textType", { enumerable: true, configurable: true, writable: true, value: "circular" }), Object.defineProperty(this, "radius", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "startAngle", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "inside", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "orientation", { enumerable: true, configurable: true, writable: true, value: "auto" }), Object.defineProperty(this, "kerning", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_textReversed", { enumerable: true, configurable: true, writable: true, value: false });
  }
  _render(e2, t = 0) {
    if ("circular" === this.textType) this._renderCircular(e2, t);
    else super._render(e2, t);
  }
  _renderCircular(e2, t = 0) {
    if (this.textVisible) {
      this._prerender(e2);
      const i3 = this._isInteractive(e2), s3 = e2.layer.context, a = e2.layer.dirty, n2 = this._renderer._ghostLayer.context;
      s3.save(), i3 && n2.save(), this._textInfo || this._measure(e2);
      let o = this.radius || 0, l2 = this.startAngle || 0, h = 0, u3 = this.orientation, c = "auto" == u3 ? "auto" : "inward" == u3;
      const d = this.inside, b2 = this.style.textAlign || "left", f2 = this.kerning || 0;
      let p = "left" == b2 ? 1 : -1;
      const g2 = !this._textReversed, m2 = this._ghostOnly(t), _2 = this._drawGhost(e2, t);
      if ("auto" == c) {
        let e3 = 0, t2 = 0;
        P(this._textInfo, (t3, i4) => {
          const r2 = l2 + t3.width / (o - t3.height) / 2 * -p;
          r2 > e3 && (e3 = r2);
        }), t2 = "left" == b2 ? (e3 + h / 2) * le : "right" == b2 ? (e3 - h / 2) * le : l2 * le, t2 = _e(t2), c = t2 >= 270 || t2 <= 90;
      }
      1 == c && g2 && (this._textInfo.reverse(), this._textReversed = true), P(this._textInfo, (e3, t2) => {
        const u4 = e3.height;
        d || (o += u4), (-1 == p && c || 1 == p && !c) && g2 && e3.textChunks.reverse();
        let y = l2;
        h = 0, "center" == b2 && (y += e3.width / (o - u4) / 2 * -p, h = y - l2), y += Math.PI * (c ? 0 : 1), s3.save(), i3 && n2.save(), m2 || s3.rotate(y), i3 && n2.rotate(y);
        let v2 = 0;
        P(e3.textChunks, (e4, t3) => {
          const r2 = e4.text, l3 = e4.width;
          v2 = l3 / 2 / (o - u4) * p, m2 || s3.rotate(v2), i3 && n2.rotate(v2), e4.style && (s3.save(), n2.save(), m2 || (s3.font = e4.style), i3 && (n2.font = e4.style)), e4.fill && (s3.save(), m2 || (s3.fillStyle = e4.fill.toCSS())), m2 || (s3.textBaseline = "middle", s3.textAlign = "center"), i3 && (n2.textBaseline = "middle", n2.textAlign = "center"), a && !m2 && s3.fillText(r2, 0, (c ? 1 : -1) * (0 - o + u4 / 2)), i3 && _2 && n2.fillText(r2, 0, (c ? 1 : -1) * (0 - o + u4 / 2)), e4.fill && s3.restore(), e4.style && (s3.restore(), n2.restore()), v2 = (l3 / 2 + f2) / (o - u4) * p, m2 || s3.rotate(v2), i3 && n2.rotate(v2);
        }), s3.restore(), i3 && n2.restore(), d && (o -= u4);
      }), s3.restore(), i3 && n2.restore();
    }
  }
  _measure(e2) {
    return "circular" === this.textType ? this._measureCircular(e2) : super._measure(e2);
  }
  _measureCircular(e2) {
    const t = e2.layer.context, i3 = this._renderer._ghostLayer.context, s3 = "rtl" == this.style.direction, a = this.style.oversizedBehavior, n2 = this.style.maxWidth, o = _(n2) && "truncate" == a, l2 = this.style.ellipsis || "";
    let h;
    this.textVisible = true, this._textInfo = [], this._textReversed = false, t.save(), i3.save(), this._prerender(e2, true);
    const u3 = this.text.toString().replace(/\r/g, "").split(/\n/);
    let c = true, d = 0, f2 = 0;
    return P(u3, (e3, a2) => {
      let u4, p, g2, m2 = ti.chunk(e3, false, this.style.ignoreFormatting), _2 = { offsetY: f2, ascent: 0, width: 0, height: 0, left: 0, right: 0, textChunks: [] };
      P(m2, (e4, r2) => {
        if ("format" == e4.type) {
          if ("[/]" == e4.text) c || (t.restore(), i3.restore(), c = true), p = void 0, u4 = void 0, g2 = void 0;
          else {
            let r3 = ti.getTextStyle(e4.text);
            const s4 = this._getFontStyle(r3);
            t.save(), i3.save(), t.font = s4, u4 = s4, r3.fill && (p = r3.fill), r3.width && (g2 = l(r3.width)), c = false;
          }
          o && (h = this._measureText(l2, t));
        } else if ("value" == e4.type) {
          let i4 = e4.text.match(/./gu) || [];
          s3 && (i4 = xt(e4.text), i4.reverse());
          for (let e5 = 0; e5 < i4.length; e5++) {
            const r3 = i4[e5], s4 = this._measureText(r3, t);
            let a3 = s4.width;
            u4 && g2 && g2 > a3 && (a3 = g2);
            const c2 = s4.actualBoundingBoxAscent + s4.actualBoundingBoxDescent;
            if (c2 > _2.height && (_2.height = c2), s4.actualBoundingBoxAscent > _2.ascent && (_2.ascent = s4.actualBoundingBoxAscent), d += a3, o) {
              h || (h = this._measureText(l2, t));
              const e6 = h.actualBoundingBoxLeft + h.actualBoundingBoxRight;
              if (d + e6 > n2) {
                1 == _2.textChunks.length ? this.textVisible = false : (_2.width += e6, _2.left += h.actualBoundingBoxLeft, _2.right += h.actualBoundingBoxRight, _2.textChunks.push({ style: u4, fill: p, text: l2, width: e6, height: c2 + h.actualBoundingBoxDescent, left: h.actualBoundingBoxLeft, right: h.actualBoundingBoxRight, ascent: h.actualBoundingBoxAscent, offsetX: 0, offsetY: c2, textDecoration: void 0 }));
                break;
              }
            }
            _2.width += a3, _2.left += s4.actualBoundingBoxLeft, _2.right += s4.actualBoundingBoxRight, _2.textChunks.push({ style: u4, fill: p, text: r3, width: a3, height: c2 + s4.actualBoundingBoxDescent, left: s4.actualBoundingBoxLeft, right: s4.actualBoundingBoxRight, ascent: s4.actualBoundingBoxAscent, offsetX: 0, offsetY: c2, textDecoration: void 0 });
          }
        }
      }), this.style.lineHeight instanceof e ? _2.height *= this.style.lineHeight.value : _2.height *= this.style.lineHeight || 1.2, this._textInfo.push(_2), f2 += _2.height;
    }), c || (t.restore(), i3.restore()), "hide" == a && d > n2 && (this.textVisible = false), P(this._textInfo, (e3) => {
      P(e3.textChunks, (t2) => {
        t2.offsetY += Math.round((e3.height - t2.height + (e3.ascent - t2.ascent)) / 2);
      });
    }), t.restore(), i3.restore(), { left: 0, top: 0, right: 0, bottom: 0 };
  }
};
var zt2 = class extends ht {
  constructor(e2, t) {
    super(e2), Object.defineProperty(this, "width", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "height", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "image", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "tainted", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowColor", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowBlur", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOffsetX", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOffsetY", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "shadowOpacity", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_imageMask", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.image = t;
  }
  _dispose() {
    super._dispose(), this._imageMask && nt2(this._imageMask);
  }
  getLocalBounds() {
    if (!this._localBounds) {
      let e2 = 0, t = 0;
      this.width && (e2 = this.width), this.height && (t = this.height), this._localBounds = { left: 0, top: 0, right: e2, bottom: t }, this._addBounds(this._localBounds);
    }
    return this._localBounds;
  }
  _render(e2, t = 0) {
    if (super._render(e2), this.image) {
      if (void 0 === this.tainted && (this.tainted = at2(this.image), e2.layer.tainted = true), this.tainted && this._renderer._omitTainted) return;
      const i3 = this._ghostOnly(t), r2 = this._drawGhost(e2, t);
      if (e2.layer.dirty && !i3) {
        this.shadowColor && (e2.layer.context.shadowColor = this.shadowColor.toCSS(this.shadowOpacity || 1)), this.shadowBlur && (e2.layer.context.shadowBlur = this.shadowBlur), this.shadowOffsetX && (e2.layer.context.shadowOffsetX = this.shadowOffsetX), this.shadowOffsetY && (e2.layer.context.shadowOffsetY = this.shadowOffsetY);
        const t2 = this.width || this.image.naturalWidth, i4 = this.height || this.image.naturalHeight;
        e2.layer.context.drawImage(this.image, 0, 0, t2, i4);
      }
      if (this.interactive && this._isInteractive(e2) && r2) {
        const e3 = this._getMask(this.image);
        this._renderer._ghostLayer.context.drawImage(e3, 0, 0);
      }
    }
  }
  clear() {
    super.clear(), this.image = void 0, this._imageMask = void 0;
  }
  _getMask(e2) {
    if (void 0 === this._imageMask) {
      const t = this.width || e2.naturalWidth, i3 = this.height || e2.naturalHeight, r2 = document.createElement("canvas");
      r2.width = t, r2.height = i3;
      const s3 = r2.getContext("2d");
      s3.imageSmoothingEnabled = false, s3.fillStyle = this._getColorId(), s3.fillRect(0, 0, t, i3), at2(e2) || (s3.globalCompositeOperation = "destination-in", s3.drawImage(e2, 0, 0, t, i3)), this._imageMask = r2;
    }
    return this._imageMask;
  }
};
var Ft = class {
  constructor(e2, t, i3, r2) {
    Object.defineProperty(this, "event", { enumerable: true, configurable: true, writable: true, value: e2 }), Object.defineProperty(this, "originalPoint", { enumerable: true, configurable: true, writable: true, value: t }), Object.defineProperty(this, "point", { enumerable: true, configurable: true, writable: true, value: i3 }), Object.defineProperty(this, "bbox", { enumerable: true, configurable: true, writable: true, value: r2 }), Object.defineProperty(this, "id", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "simulated", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "native", { enumerable: true, configurable: true, writable: true, value: true }), Q("touchevents") && e2 instanceof Touch ? this.id = e2.identifier : this.id = null;
  }
};
var Ht = class extends Y {
  constructor(e2) {
    if (super(), Object.defineProperty(this, "view", { enumerable: true, configurable: true, writable: true, value: document.createElement("div") }), Object.defineProperty(this, "_layerDom", { enumerable: true, configurable: true, writable: true, value: document.createElement("div") }), Object.defineProperty(this, "layers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_dirtyLayers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "defaultLayer", { enumerable: true, configurable: true, writable: true, value: this.getLayer(0) }), Object.defineProperty(this, "_ghostLayer", { enumerable: true, configurable: true, writable: true, value: new It() }), Object.defineProperty(this, "_deferredGhostLayers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_patternCanvas", { enumerable: true, configurable: true, writable: true, value: document.createElement("canvas") }), Object.defineProperty(this, "_patternContext", { enumerable: true, configurable: true, writable: true, value: this._patternCanvas.getContext("2d") }), Object.defineProperty(this, "_realWidth", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_realHeight", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_calculatedWidth", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_calculatedHeight", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "resolution", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "interactionsEnabled", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "_listeners", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_events", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_colorId", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_colorMap", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_forceInteractive", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_omitTainted", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_hovering", { enumerable: true, configurable: true, writable: true, value: /* @__PURE__ */ new Set() }), Object.defineProperty(this, "_dragging", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_mousedown", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_lastPointerMoveEvent", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "tapToActivate", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "tapToActivateTimeout", { enumerable: true, configurable: true, writable: true, value: 3e3 }), Object.defineProperty(this, "_touchActive", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_touchActiveTimeout", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.resolution = e2 ?? window.devicePixelRatio, this.view.style.position = "absolute", this.view.setAttribute("aria-hidden", "true"), this.view.appendChild(this._layerDom), this._disposers.push(new z(() => {
      U(this._events, (e3, t) => {
        t.disposer.dispose();
      }), P(this.layers, (e3) => {
        nt2(e3.view), e3.exportableView && nt2(e3.exportableView);
      }), nt2(this._ghostLayer.view), nt2(this._patternCanvas);
    })), this._disposers.push(q(() => {
      null == e2 && (this.resolution = window.devicePixelRatio);
    })), Q("touchevents")) {
      const e3 = (e4) => {
        0 !== this._dragging.length && x(this._dragging, (t) => !t.value.shouldCancelTouch() || (e4.preventDefault(), false)), this._touchActiveTimeout && this._delayTouchDeactivate();
      };
      this._disposers.push(J(window, "touchstart", e3, { passive: false })), this._disposers.push(J(this.view, "touchstart", e3, { passive: false })), this._disposers.push(J(this.view, "touchmove", () => {
        this._touchActiveTimeout && this._delayTouchDeactivate();
      }, { passive: true })), this._disposers.push(J(window, "click", (e4) => {
        this._touchActive = false;
      }, { passive: true })), this._disposers.push(J(this.view, "click", (e4) => {
        window.setTimeout(() => {
          this._touchActive = true, this._delayTouchDeactivate();
        }, 100);
      }, { passive: true }));
    }
    Q("wheelevents") && this._disposers.push(J(this.view, "wheel", (e3) => {
      let t = false;
      this._hovering.forEach((e4) => {
        if (e4.wheelable) return t = true, false;
      }), t && e3.preventDefault();
    }, { passive: false }));
  }
  resetImageArray() {
    this._ghostLayer.imageArray = void 0;
  }
  _delayTouchDeactivate() {
    this._touchActiveTimeout && clearTimeout(this._touchActiveTimeout), this.tapToActivateTimeout > 0 && (this._touchActiveTimeout = window.setTimeout(() => {
      this._touchActive = false;
    }, this.tapToActivateTimeout));
  }
  get debugGhostView() {
    return !!this._ghostLayer.view.parentNode;
  }
  set debugGhostView(e2) {
    e2 ? this._ghostLayer.view.parentNode || this.view.appendChild(this._ghostLayer.view) : this._ghostLayer.view.parentNode && this._ghostLayer.view.parentNode.removeChild(this._ghostLayer.view);
  }
  createLinearGradient(e2, t, i3, r2) {
    return this.defaultLayer.context.createLinearGradient(e2, t, i3, r2);
  }
  createRadialGradient(e2, t, i3, r2, s3, a) {
    return this.defaultLayer.context.createRadialGradient(e2, t, i3, r2, s3, a);
  }
  createPattern(e2, t, i3, r2, s3) {
    return this._patternCanvas.width = r2, this._patternCanvas.height = s3, this._patternContext.clearRect(0, 0, r2, s3), t.renderDetached(this._patternContext), e2.renderDetached(this._patternContext), this._patternContext.createPattern(this._patternCanvas, i3);
  }
  makeContainer() {
    return new ut2(this);
  }
  makeGraphics() {
    return new Ct2(this);
  }
  makeText(e2, t) {
    return new Dt2(this, e2, t);
  }
  makeTextStyle() {
    return new At();
  }
  makeRadialText(e2, t) {
    return new Lt(this, e2, t);
  }
  makePicture(e2) {
    return new zt2(this, e2);
  }
  resizeLayer(e2) {
    e2.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);
  }
  resizeGhost() {
    this._ghostLayer.resize(this._calculatedWidth, this._calculatedHeight, this._calculatedWidth, this._calculatedHeight, this.resolution);
  }
  resize(e2, t, i3, s3) {
    this._realWidth = e2, this._realHeight = t, this._calculatedWidth = i3, this._calculatedHeight = s3, P(this.layers, (e3) => {
      e3 && (e3.dirty = true, this.resizeLayer(e3));
    }), this.resizeGhost(), this.view.style.width = i3 + "px", this.view.style.height = s3 + "px";
  }
  createDetachedLayer(e2 = false) {
    const t = document.createElement("canvas"), i3 = t.getContext("2d", { willReadFrequently: e2 }), r2 = new Yt2(t, i3);
    return t.style.position = "absolute", t.style.top = "0px", t.style.left = "0px", r2;
  }
  getLayerByOrder(e2) {
    const t = this.layers, i3 = t.length;
    for (let r2 = 0; r2 < i3; r2++) {
      const i4 = t[r2];
      if (i4.order == e2) return i4;
    }
  }
  getLayer(e2, t = true) {
    let i3 = this.getLayerByOrder(e2);
    if (i3) return i3;
    const r2 = this.createDetachedLayer(99 == e2);
    r2.order = e2, r2.visible = t, r2.view.className = "am5-layer-" + e2, r2.visible && this.resizeLayer(r2);
    const s3 = this.layers;
    s3.push(r2), s3.sort((e3, t2) => e3.order > t2.order ? 1 : e3.order < t2.order ? -1 : 0);
    const a = s3.length;
    let n2;
    for (let o = v(s3, r2) + 1; o < a; o++) if (s3[o].visible) {
      n2 = s3[o];
      break;
    }
    return r2.visible && (void 0 === n2 ? this._layerDom.appendChild(r2.view) : this._layerDom.insertBefore(r2.view, n2.view)), r2;
  }
  render(e2) {
    this._dirtyLayers.length = 0, this._deferredGhostLayers = [], P(this.layers, (e3) => {
      e3 && e3.dirty && e3.visible && (this._dirtyLayers.push(e3), e3.clear());
    }), this._ghostLayer.clear(), e2.render({ inactive: null, layer: this.defaultLayer });
    const t = this._deferredGhostLayers;
    if (t.length && (t.sort((e3, t2) => e3 - t2), P(t, (t2) => {
      e2.render({ inactive: null, layer: this.defaultLayer }, t2);
    })), this._ghostLayer.context.restore(), P(this.layers, (e3) => {
      if (e3) {
        const t2 = e3.context;
        t2.beginPath(), t2.moveTo(0, 0), t2.stroke();
      }
    }), P(this._dirtyLayers, (e3) => {
      e3.context.restore(), e3.dirty = false;
    }), this._hovering.size && this._lastPointerMoveEvent) {
      const { events: e3, target: t2, native: i3 } = this._lastPointerMoveEvent;
      P(e3, (e4) => {
        this._dispatchGlobalMousemove(e4, t2, i3);
      });
    }
  }
  paintId(e2) {
    const t = it2(++this._colorId), i3 = Yt.fromHex(t).toCSS();
    return this._colorMap[i3] = e2, i3;
  }
  _removeObject(e2) {
    void 0 !== e2._colorId && delete this._colorMap[e2._colorId];
  }
  _adjustBoundingBox(e2) {
    const t = this._ghostLayer.margin;
    return new DOMRect(-t.left, -t.top, e2.width + t.left + t.right, e2.height + t.top + t.bottom);
  }
  getEvent(e2, t = true) {
    const i3 = this.view.getBoundingClientRect(), r2 = e2.clientX || 0, s3 = e2.clientY || 0, a = this._calculatedWidth / this._realWidth, n2 = this._calculatedHeight / this._realHeight, o = { x: r2 - i3.left, y: s3 - i3.top }, l2 = { x: (r2 - (t ? i3.left : 0)) * a, y: (s3 - (t ? i3.top : 0)) * n2 };
    return new Ft(e2, o, l2, this._adjustBoundingBox(i3));
  }
  _getHitTarget(e2, t, i3) {
    if (0 === t.width || 0 === t.height || e2.x < t.left || e2.x > t.right || e2.y < t.top || e2.y > t.bottom) return;
    if (!i3 || !this._layerDom.contains(i3)) return;
    const r2 = this._ghostLayer.getImageData(e2, t);
    if (0 === r2.data[0] && 0 === r2.data[1] && 0 === r2.data[2]) return false;
    const s3 = Yt.fromRGB(r2.data[0], r2.data[1], r2.data[2]).toCSS();
    return this._colorMap[s3];
  }
  getObjectAtPoint(e2) {
    const t = this._ghostLayer.getImageArray(e2);
    if (0 === t[0] && 0 === t[1] && 0 === t[2]) return;
    const i3 = Yt.fromRGB(t[0], t[1], t[2]).toCSS();
    return this._colorMap[i3];
  }
  _withEvents(e2, t) {
    const i3 = this._events[e2];
    if (void 0 !== i3) {
      i3.dispatching = true;
      try {
        t(i3);
      } finally {
        i3.dispatching = false, i3.cleanup && (i3.cleanup = false, N(i3.callbacks, (e3) => !e3.disposed), 0 === i3.callbacks.length && (i3.disposer.dispose(), delete this._events[e2]));
      }
    }
  }
  _dispatchEventAll(e2, t) {
    this.interactionsEnabled && this._withEvents(e2, (e3) => {
      P(e3.callbacks, (e4) => {
        e4.disposed || e4.callback.call(e4.context, t);
      });
    });
  }
  _dispatchEvent(e2, t, i3) {
    if (!this.interactionsEnabled) return false;
    let s3 = false;
    return this._withEvents(e2, (e3) => {
      P(e3.callbacks, (e4) => {
        e4.disposed || e4.object !== t || (e4.callback.call(e4.context, i3), s3 = true);
      });
    }), s3;
  }
  _dispatchMousedown(e2, t) {
    const i3 = e2.button;
    if (0 != i3 && 2 != i3 && 1 != i3 && void 0 !== i3) return;
    const r2 = this.getEvent(e2), s3 = this._getHitTarget(r2.originalPoint, r2.bbox, t);
    if (s3) {
      const e3 = r2.id;
      let t2 = false;
      rt(s3, (i4) => {
        const s4 = { id: e3, value: i4 };
        if (this._mousedown.push(s4), !t2 && this._dispatchEvent("pointerdown", i4, r2)) {
          t2 = true;
          this._dragging.some((t3) => t3.value === i4 && t3.id === e3) || this._dragging.push(s4);
        }
        return true;
      });
    }
  }
  _dispatchGlobalMousemove(e2, t, i3) {
    const r2 = this.getEvent(e2), s3 = this._getHitTarget(r2.originalPoint, r2.bbox, t);
    r2.native = i3, s3 ? (this._hovering.forEach((e3) => {
      e3.contains(s3) || (this._hovering.delete(e3), e3.cursorOverStyle && at(document.body, "cursor", e3._replacedCursorStyle), this._dispatchEvent("pointerout", e3, r2));
    }), r2.native && rt(s3, (e3) => (this._hovering.has(e3) || (this._hovering.add(e3), e3.cursorOverStyle && (e3._replacedCursorStyle = nt(document.body, "cursor"), at(document.body, "cursor", e3.cursorOverStyle)), this._dispatchEvent("pointerover", e3, r2)), true))) : (this._hovering.forEach((e3) => {
      e3.cursorOverStyle && at(document.body, "cursor", e3._replacedCursorStyle), this._dispatchEvent("pointerout", e3, r2);
    }), this._hovering.clear()), this._dispatchEventAll("globalpointermove", r2);
  }
  removeHovering(e2) {
    this._hovering.delete(e2), e2.cursorOverStyle && at(document.body, "cursor", e2._replacedCursorStyle);
  }
  _dispatchGlobalMouseup(e2, t) {
    const i3 = this.getEvent(e2);
    i3.native = t, this._dispatchEventAll("globalpointerup", i3);
  }
  _dispatchDragMove(e2) {
    if (0 !== this._dragging.length) {
      const t = this.getEvent(e2), i3 = t.id;
      this._dragging.forEach((e3) => {
        e3.id === i3 && this._dispatchEvent("pointermove", e3.value, t);
      });
    }
  }
  _dispatchDragEnd(e2, t) {
    const i3 = e2.button;
    let r2;
    if (0 == i3 || void 0 === i3) r2 = "click";
    else if (2 == i3) r2 = "rightclick";
    else {
      if (1 != i3) return;
      r2 = "middleclick";
    }
    const s3 = this.getEvent(e2), a = s3.id;
    if (0 !== this._mousedown.length) {
      const e3 = this._getHitTarget(s3.originalPoint, s3.bbox, t);
      e3 && this._mousedown.forEach((t2) => {
        t2.id === a && t2.value.contains(e3) && this._dispatchEvent(r2, t2.value, s3);
      }), this._mousedown.length = 0;
    }
    0 !== this._dragging.length && (this._dragging.forEach((e3) => {
      e3.id === a && this._dispatchEvent("pointerup", e3.value, s3);
    }), this._dragging.length = 0);
  }
  _dispatchDoubleClick(e2, t) {
    const i3 = this.getEvent(e2), r2 = this._getHitTarget(i3.originalPoint, i3.bbox, t);
    r2 && rt(r2, (e3) => !this._dispatchEvent("dblclick", e3, i3));
  }
  _dispatchWheel(e2, t) {
    const i3 = this.getEvent(e2), r2 = this._getHitTarget(i3.originalPoint, i3.bbox, t);
    r2 && rt(r2, (e3) => !this._dispatchEvent("wheel", e3, i3));
  }
  _makeSharedEvent(e2, t) {
    if (void 0 === this._listeners[e2]) {
      const i3 = t();
      this._listeners[e2] = new $(() => {
        delete this._listeners[e2], i3.dispose();
      });
    }
    return this._listeners[e2].increment();
  }
  _onPointerEvent(e2, t) {
    let i3 = false, r2 = null;
    function s3() {
      r2 = null, i3 = false;
    }
    return new X([new z(() => {
      null !== r2 && clearTimeout(r2), s3();
    }), J(this.view, st(e2), (e3) => {
      i3 = true, null !== r2 && clearTimeout(r2), r2 = window.setTimeout(s3, 0);
    }), st2(window, e2, (e3, s4) => {
      null !== r2 && (clearTimeout(r2), r2 = null), t(e3, s4, i3), i3 = false;
    })]);
  }
  _initEvent(e2) {
    switch (e2) {
      case "globalpointermove":
      case "pointerover":
      case "pointerout":
        return this._makeSharedEvent("pointermove", () => {
          const e3 = (e4, t, i3) => {
            this._lastPointerMoveEvent = { events: e4, target: t, native: i3 }, P(e4, (e5) => {
              this._dispatchGlobalMousemove(e5, t, i3);
            });
          };
          return new X([this._onPointerEvent("pointerdown", e3), this._onPointerEvent("pointermove", e3)]);
        });
      case "globalpointerup":
        return this._makeSharedEvent("pointerup", () => {
          const e3 = this._onPointerEvent("pointerup", (e4, t2, i3) => {
            P(e4, (e5) => {
              this._dispatchGlobalMouseup(e5, i3);
            }), this._lastPointerMoveEvent = { events: e4, target: t2, native: i3 };
          }), t = this._onPointerEvent("pointercancel", (e4, t2, i3) => {
            P(e4, (e5) => {
              this._dispatchGlobalMouseup(e5, i3);
            }), this._lastPointerMoveEvent = { events: e4, target: t2, native: i3 };
          });
          return new z(() => {
            e3.dispose(), t.dispose();
          });
        });
      case "click":
      case "rightclick":
      case "middleclick":
      case "pointerdown":
      case "pointermove":
      case "pointerup":
        return this._makeSharedEvent("pointerdown", () => {
          const e3 = this._onPointerEvent("pointerdown", (e4, t2) => {
            P(e4, (e5) => {
              this._dispatchMousedown(e5, t2);
            });
          }), t = this._onPointerEvent("pointermove", (e4) => {
            P(e4, (e5) => {
              this._dispatchDragMove(e5);
            });
          }), i3 = this._onPointerEvent("pointerup", (e4, t2) => {
            P(e4, (e5) => {
              this._dispatchDragEnd(e5, t2);
            });
          }), s3 = this._onPointerEvent("pointercancel", (e4, t2) => {
            P(e4, (e5) => {
              this._dispatchDragEnd(e5, t2);
            });
          });
          return new z(() => {
            e3.dispose(), t.dispose(), i3.dispose(), s3.dispose();
          });
        });
      case "dblclick":
        return this._makeSharedEvent("dblclick", () => this._onPointerEvent("dblclick", (e3, t) => {
          P(e3, (e4) => {
            this._dispatchDoubleClick(e4, t);
          });
        }));
      case "wheel":
        return this._makeSharedEvent("wheel", () => J(this.view, st("wheel"), (e3) => {
          this._dispatchWheel(e3, ot(e3));
        }, { passive: false }));
    }
  }
  _addEvent(e2, t, i3, r2) {
    let s3 = this._events[t];
    void 0 === s3 && (s3 = this._events[t] = { disposer: this._initEvent(t), callbacks: [], dispatching: false, cleanup: false });
    const a = { object: e2, context: r2, callback: i3, disposed: false };
    return s3.callbacks.push(a), new z(() => {
      a.disposed = true, s3.dispatching ? s3.cleanup = true : (T(s3.callbacks, a), 0 === s3.callbacks.length && (s3.disposer.dispose(), delete this._events[t]));
    });
  }
  getCanvas(e2, t) {
    this.render(e2), t || (t = {});
    let i3 = this.resolution, s3 = Math.floor(this._calculatedWidth * this.resolution), a = Math.floor(this._calculatedHeight * this.resolution);
    if (t.minWidth && t.minWidth > s3) {
      let e3 = t.minWidth / s3;
      e3 > i3 && (i3 = e3 * this.resolution);
    }
    if (t.minHeight && t.minHeight > a) {
      let e3 = t.minHeight / a;
      e3 > i3 && (i3 = e3 * this.resolution);
    }
    if (t.maxWidth && t.maxWidth < s3) {
      let e3 = t.maxWidth / s3;
      e3 < i3 && (i3 = e3 * this.resolution);
    }
    if (t.maxHeight && t.maxHeight > a) {
      let e3 = t.maxHeight / a;
      e3 < i3 && (i3 = e3 * this.resolution);
    }
    t.maintainPixelRatio && (i3 /= this.resolution);
    const n2 = [];
    let o = false;
    const l2 = document.createElement("canvas");
    i3 != this.resolution && (o = true, s3 = s3 * i3 / this.resolution, a = a * i3 / this.resolution), l2.width = s3, l2.height = a, l2.style.position = "fixed", l2.style.top = "-10000px", this.view.appendChild(l2), n2.push(l2);
    const h = l2.getContext("2d");
    let u3 = 0, c = 0, d = false;
    return P(this.layers, (e3) => {
      if (e3 && e3.visible && (e3.tainted || o)) {
        d = true, e3.exportableView = e3.view, e3.exportableContext = e3.context, e3.view = document.createElement("canvas"), e3.view.style.position = "fixed", e3.view.style.top = "-10000px", this.view.appendChild(e3.view), n2.push(e3.view);
        let t2 = 0, r2 = 0;
        e3.margin && (t2 += e3.margin.left || 0 + e3.margin.right || 0, r2 += e3.margin.top || 0 + e3.margin.bottom || 0), e3.view.width = s3 + t2, e3.view.height = a + r2, e3.context = e3.view.getContext("2d"), e3.dirty = true, e3.scale = i3;
      }
    }), d && (this._omitTainted = true, this.render(e2), this._omitTainted = false), P(this.layers, (e3) => {
      if (e3 && e3.visible) {
        let t2 = 0, i4 = 0;
        e3.margin && (t2 = -(e3.margin.left || 0) * this.resolution, i4 = -(e3.margin.top || 0) * this.resolution), h.drawImage(e3.view, t2, i4), e3.exportableView && (e3.view = e3.exportableView, e3.exportableView = void 0), e3.exportableContext && (e3.context = e3.exportableContext, e3.exportableContext = void 0), u3 < e3.view.clientWidth && (u3 = e3.view.clientWidth), c < e3.view.clientHeight && (c = e3.view.clientHeight), e3.scale = void 0;
      }
    }), l2.style.width = u3 + "px", l2.style.height = c + "px", P(n2, (e3) => {
      e3.style.position = "", e3.style.top = "", this.view.removeChild(e3);
    }), l2;
  }
};
var It = class {
  constructor() {
    Object.defineProperty(this, "view", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "context", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "margin", { enumerable: true, configurable: true, writable: true, value: { left: 0, right: 0, top: 0, bottom: 0 } }), Object.defineProperty(this, "_resolution", { enumerable: true, configurable: true, writable: true, value: 1 }), Object.defineProperty(this, "_width", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_height", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "imageArray", { enumerable: true, configurable: true, writable: true, value: void 0 }), this.view = document.createElement("canvas"), this.context = this.view.getContext("2d", { alpha: false, willReadFrequently: true }), this.context.imageSmoothingEnabled = false, this.view.style.position = "absolute", this.view.style.top = "0px", this.view.style.left = "0px";
  }
  resize(e2, t, i3, r2, s3) {
    this._resolution = s3, e2 += this.margin.left + this.margin.right, t += this.margin.top + this.margin.bottom, i3 += this.margin.left + this.margin.right, r2 += this.margin.top + this.margin.bottom, this.view.style.left = -this.margin.left + "px", this.view.style.top = -this.margin.top + "px", this._width = Math.floor(e2 * s3), this._height = Math.floor(t * s3), this.view.width = this._width, this.view.style.width = i3 + "px", this.view.height = this._height, this.view.style.height = r2 + "px";
  }
  getImageData(e2, t) {
    return this.context.getImageData(Math.round((e2.x - t.left) / t.width * this._width), Math.round((e2.y - t.top) / t.height * this._height), 1, 1);
  }
  getImageArray(e2) {
    this.imageArray || (this.imageArray = this.context.getImageData(0, 0, this._width, this._height).data);
    const t = this.imageArray, i3 = Math.round(e2.x * this._resolution), r2 = 4 * (Math.round(e2.y * this._resolution) * this._width + i3);
    return [t[r2], t[r2 + 1], t[r2 + 2], t[r2 + 3]];
  }
  setMargin(e2) {
    this.margin.left = 0, this.margin.right = 0, this.margin.top = 0, this.margin.bottom = 0, P(e2, (e3) => {
      e3.margin && (this.margin.left = Math.max(this.margin.left, e3.margin.left), this.margin.right = Math.max(this.margin.right, e3.margin.right), this.margin.top = Math.max(this.margin.top, e3.margin.top), this.margin.bottom = Math.max(this.margin.bottom, e3.margin.bottom));
    });
  }
  clear() {
    this.context.save(), this.context.fillStyle = "#000", this.context.fillRect(0, 0, this._width, this._height);
  }
};
var Yt2 = class {
  constructor(e2, t) {
    Object.defineProperty(this, "view", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "context", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "tainted", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "margin", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "order", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "visible", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "width", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "height", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "scale", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "dirty", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "exportableView", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "exportableContext", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_width", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_height", { enumerable: true, configurable: true, writable: true, value: 0 }), this.view = e2, this.context = t;
  }
  resize(e2, t, i3, r2, s3) {
    null != this.width && (e2 = this.width, i3 = this.width), null != this.height && (t = this.height, r2 = this.height), this.margin ? (e2 += this.margin.left + this.margin.right, t += this.margin.top + this.margin.bottom, i3 += this.margin.left + this.margin.right, r2 += this.margin.top + this.margin.bottom, this.view.style.left = -this.margin.left + "px", this.view.style.top = -this.margin.top + "px") : (this.view.style.left = "0px", this.view.style.top = "0px"), this._width = Math.floor(e2 * s3), this._height = Math.floor(t * s3), this.view.width = this._width, this.view.style.width = i3 + "px", this.view.height = this._height, this.view.style.height = r2 + "px";
  }
  clear() {
    this.context.save(), this.context.clearRect(0, 0, this._width, this._height);
  }
};
function Rt(e2, t) {
  null == e2 ? requestAnimationFrame(t) : setTimeout(() => {
    requestAnimationFrame(t);
  }, 1e3 / e2);
}
var Ut = class _Ut {
  constructor(e2, t = {}, i3) {
    if (Object.defineProperty(this, "dom", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_inner", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_settings", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_isDirty", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_isDirtyParents", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_isDirtyAnimation", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_dirty", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_dirtyParents", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_dirtyBounds", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_dirtyPositions", { enumerable: true, configurable: true, writable: true, value: {} }), Object.defineProperty(this, "_ticker", { enumerable: true, configurable: true, writable: true, value: null }), Object.defineProperty(this, "_tickers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_updateTick", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "events", { enumerable: true, configurable: true, writable: true, value: new Xt() }), Object.defineProperty(this, "animationTime", { enumerable: true, configurable: true, writable: true, value: null }), Object.defineProperty(this, "_animations", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_renderer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_rootContainer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "container", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "tooltipContainer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_tooltipContainerSettings", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_tooltip", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "language", { enumerable: true, configurable: true, writable: true, value: Ue.new(this, {}) }), Object.defineProperty(this, "locale", { enumerable: true, configurable: true, writable: true, value: Re }), Object.defineProperty(this, "utc", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "timezone", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "fps", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "numberFormatter", { enumerable: true, configurable: true, writable: true, value: Le.new(this, {}) }), Object.defineProperty(this, "dateFormatter", { enumerable: true, configurable: true, writable: true, value: Ie.new(this, {}) }), Object.defineProperty(this, "durationFormatter", { enumerable: true, configurable: true, writable: true, value: Ye2.new(this, {}) }), Object.defineProperty(this, "tabindex", { enumerable: true, configurable: true, writable: true, value: 0 }), Object.defineProperty(this, "_tabindexes", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_a11yD", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_focusElementDirty", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_focusElementContainer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_focusedSprite", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_isShift", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_keyboardDragPoint", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_tooltipElementContainer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_readerAlertElement", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_logo", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_tooltipDiv", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "nonce", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "interfaceColors", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "verticalLayout", { enumerable: true, configurable: true, writable: true, value: qe.new(this, {}) }), Object.defineProperty(this, "horizontalLayout", { enumerable: true, configurable: true, writable: true, value: Je.new(this, {}) }), Object.defineProperty(this, "gridLayout", { enumerable: true, configurable: true, writable: true, value: Qe.new(this, {}) }), Object.defineProperty(this, "_paused", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "autoResize", { enumerable: true, configurable: true, writable: true, value: true }), Object.defineProperty(this, "_fontHash", { enumerable: true, configurable: true, writable: true, value: "" }), Object.defineProperty(this, "_isDisposed", { enumerable: true, configurable: true, writable: true, value: false }), Object.defineProperty(this, "_disposers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_resizeSensorDisposer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_tooltips", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "_htmlElementContainer", { enumerable: true, configurable: true, writable: true, value: void 0 }), Object.defineProperty(this, "_htmlEnabledContainers", { enumerable: true, configurable: true, writable: true, value: [] }), Object.defineProperty(this, "entitiesById", { enumerable: true, configurable: true, writable: true, value: {} }), !i3) throw new Error("You cannot use `new Class()`, instead use `Class.new()`");
    let s3, a;
    if (this._settings = t, 0 == t.accessible && (this._a11yD = true), null == t.useSafeResolution && (t.useSafeResolution = true), t.useSafeResolution && (s3 = ct()), this._renderer = new Ht(s3), a = e2 instanceof HTMLElement ? e2 : document.getElementById(e2), P(Te.rootElements, (e3) => {
      if (e3.dom === a) throw new Error("You cannot have multiple Roots on the same DOM node");
    }), this.interfaceColors = Ae.new(this, {}), null === a) throw new Error("Could not find HTML element with id `" + e2 + "`");
    this.dom = a;
    let n2 = document.createElement("div");
    n2.style.position = "relative", n2.style.width = "100%", n2.style.height = "100%", a.appendChild(n2);
    const o = t.tooltipContainerBounds;
    o && (this._tooltipContainerSettings = o), this._inner = n2, this._updateComputedStyles(), Te.rootElements.push(this);
  }
  static new(e2, t) {
    const i3 = new _Ut(e2, t, true);
    return i3._init(), i3;
  }
  moveDOM(e2) {
    let t;
    if (t = e2 instanceof HTMLElement ? e2 : document.getElementById(e2), t) {
      for (; this.dom.childNodes.length > 0; ) t.appendChild(this.dom.childNodes[0]);
      this.dom = t, this._initResizeSensor(), this.resize();
    }
  }
  _handleLogo() {
    if (this._logo) {
      const e2 = this.dom.offsetWidth, t = this.dom.offsetHeight;
      e2 <= 150 || t <= 60 ? this._logo.hide() : this._logo.show();
    }
  }
  _showBranding() {
    if (!this._logo) {
      const e2 = this.tooltipContainer.children.push(ai.new(this, { interactive: true, interactiveChildren: false, position: "absolute", setStateOnChildren: true, paddingTop: 9, paddingRight: 9, paddingBottom: 9, paddingLeft: 9, scale: 0.6, y: i2(100), centerY: r, tooltipText: "Created using amCharts 5", tooltipX: r, cursorOverStyle: "pointer", background: Xe.new(this, { fill: zt(4671320), fillOpacity: 0, tooltipY: 5 }) })), t = u2.new(this, { pointerOrientation: "horizontal", paddingTop: 4, paddingRight: 7, paddingBottom: 4, paddingLeft: 7 });
      t.label.setAll({ fontSize: 12 }), t.get("background").setAll({ fill: this.interfaceColors.get("background"), stroke: this.interfaceColors.get("grid"), strokeOpacity: 0.3 }), e2.set("tooltip", t), e2.events.on("click", () => {
        window.open("https://www.amcharts.com/", "_blank");
      }), e2.states.create("hover", {});
      e2.children.push(Ye.new(this, { stroke: zt(13421772), strokeWidth: 3, svgPath: "M5 25 L13 25h13.6c3.4 0 6 0 10.3-4.3s5.2-12 8.6-12c3.4 0 4.3 8.6 7.7 8.6M83.4 25H79.8c-3.4 0-6 0-10.3-4.3s-5.2-12-8.6-12-4.3 8.6-7.7 8.6" })).states.create("hover", { stroke: zt(3976191) });
      e2.children.push(Ye.new(this, { stroke: zt(8947848), strokeWidth: 3, svgPath: "M83.4 25h-31C37 25 39.5 4.4 28.4 4.4S18.9 24.2 4.3 25H0" })).states.create("hover", { stroke: zt(4671320) }), this._logo = e2, this._handleLogo();
    }
  }
  _getRealSize() {
    return this.dom.getBoundingClientRect();
  }
  _getCalculatedSize(e2) {
    return this._settings.calculateSize ? this._settings.calculateSize(e2) : { width: e2.width, height: e2.height };
  }
  _init() {
    const e2 = this._settings;
    false !== e2.accessible && (e2.focusable && (this._inner.setAttribute("focusable", "true"), this._inner.setAttribute("tabindex", this.tabindex + "")), e2.ariaLabel && this._inner.setAttribute("aria-label", e2.ariaLabel), e2.role && this._inner.setAttribute("role", e2.role));
    const t = this._renderer, i3 = this._getRealSize(), r2 = this._getCalculatedSize(i3), s3 = Math.floor(r2.width), a = Math.floor(r2.height), n2 = Math.floor(i3.width), o = Math.floor(i3.height), l2 = ai.new(this, { visible: true, width: s3, height: a });
    this._rootContainer = l2, this._rootContainer._defaultThemes.push(s2.new(this));
    const h = l2.children.push(ai.new(this, { visible: true, width: r, height: r }));
    this.container = h, t.resize(n2, o, s3, a), this._inner.appendChild(t.view), this._initResizeSensor();
    const u3 = document.createElement("div");
    if (this._htmlElementContainer = u3, u3.className = "am5-html-container", u3.style.position = "absolute", u3.style.pointerEvents = "none", this._tooltipContainerSettings || (u3.style.overflow = "hidden"), this._inner.appendChild(u3), true !== this._a11yD) {
      const e3 = document.createElement("div");
      e3.className = "am5-reader-container", e3.setAttribute("role", "alert"), e3.style.position = "absolute", e3.style.width = "1px", e3.style.height = "1px", e3.style.overflow = "hidden", e3.style.clip = "rect(1px, 1px, 1px, 1px)", this._readerAlertElement = e3, this._inner.appendChild(this._readerAlertElement);
      const i4 = document.createElement("div");
      i4.className = "am5-focus-container", i4.style.position = "absolute", i4.style.pointerEvents = "none", i4.style.top = "0px", i4.style.left = "0px", i4.style.overflow = "hidden", i4.style.width = s3 + "px", i4.style.height = a + "px", i4.setAttribute("role", "graphics-document"), dt(i4, false), this._focusElementContainer = i4, this._inner.appendChild(this._focusElementContainer);
      const r3 = document.createElement("div");
      this._tooltipElementContainer = r3, r3.className = "am5-tooltip-container", this._inner.appendChild(r3), Q("keyboardevents") && (this._disposers.push(J(window, "keydown", (e4) => {
        const t2 = ut(e4);
        "Shift" == t2 ? this._isShift = true : "Tab" == t2 && (this._isShift = e4.shiftKey);
      })), this._disposers.push(J(window, "keyup", (e4) => {
        "Shift" == ut(e4) && (this._isShift = false);
      })), this._disposers.push(J(i4, "click", () => {
        const e4 = this._focusedSprite;
        if (e4) {
          const i5 = e4.get("clickAnnounceText", "");
          "" !== i5 && this.readerAlert(i5);
          const r4 = t.getEvent(new MouseEvent("click"));
          e4.events.dispatch("click", { type: "click", originalEvent: r4.event, point: r4.point, simulated: true, target: e4 });
        }
      })), this._disposers.push(J(i4, "keydown", (e4) => {
        const i5 = this._focusedSprite;
        if (i5) {
          "Escape" == e4.key && (et(), this._focusedSprite = void 0);
          let r4 = 0, s4 = 0;
          const a2 = ut(e4);
          switch (a2) {
            case "Enter":
            case " ":
              const n3 = i5.get("clickAnnounceText", "");
              if ("" !== n3 && this.readerAlert(n3), " " == a2 && "checkbox" != i5.get("role")) return;
              e4.preventDefault();
              const o2 = t.getEvent(new MouseEvent("mouse"));
              return void i5.events.dispatch("click", { type: "click", originalEvent: o2.event, point: o2.point, simulated: true, target: i5 });
            case "ArrowLeft":
              r4 = -6;
              break;
            case "ArrowRight":
              r4 = 6;
              break;
            case "ArrowUp":
              s4 = -6;
              break;
            case "ArrowDown":
              s4 = 6;
              break;
            default:
              return;
          }
          if (0 != r4 || 0 != s4) {
            if (e4.preventDefault(), !i5.isDragging()) {
              this._keyboardDragPoint = { x: 0, y: 0 };
              const e5 = t.getEvent(new MouseEvent("mousedown", { clientX: 0, clientY: 0 }));
              e5.point = { x: 0, y: 0 }, i5.events.isEnabled("pointerdown") && i5.events.dispatch("pointerdown", { type: "pointerdown", originalEvent: e5.event, point: e5.point, simulated: true, target: i5 });
            }
            const a3 = this._keyboardDragPoint;
            a3.x += r4, a3.y += s4;
            const n3 = t.getEvent(new MouseEvent("mousemove", { clientX: a3.x, clientY: a3.y }), false);
            i5.events.isEnabled("globalpointermove") && i5.events.dispatch("globalpointermove", { type: "globalpointermove", originalEvent: n3.event, point: n3.point, simulated: true, target: i5 });
          }
        }
      })), this._disposers.push(J(i4, "keyup", (e4) => {
        if (this._focusedSprite) {
          const i5 = this._focusedSprite, r4 = ut(e4);
          switch (r4) {
            case "ArrowLeft":
            case "ArrowRight":
            case "ArrowUp":
            case "ArrowDown":
              if (i5.isDragging()) {
                const e6 = this._keyboardDragPoint, r5 = t.getEvent(new MouseEvent("mouseup", { clientX: e6.x, clientY: e6.y }));
                return i5.events.isEnabled("globalpointerup") && i5.events.dispatch("globalpointerup", { type: "globalpointerup", originalEvent: r5.event, point: r5.point, simulated: true, target: i5 }), void (this._keyboardDragPoint = void 0);
              }
              if (i5.get("focusableGroup")) {
                const e6 = i5.get("focusableGroup"), t2 = this._tabindexes.filter((t3) => !(t3.get("focusableGroup") != e6 || false === t3.getPrivate("focusable") || !t3.isVisibleDeep()));
                let s4 = t2.indexOf(i5);
                const a2 = t2.length - 1;
                s4 += "ArrowRight" == r4 || "ArrowDown" == r4 ? 1 : -1, s4 < 0 ? s4 = a2 : s4 > a2 && (s4 = 0), it(t2[s4].getPrivate("focusElement").dom);
              }
              break;
            case "Tab":
              const e5 = i5.get("focusableGroup");
              if (e5 && this._isShift) return void this._focusNext(i5.getPrivate("focusElement").dom, -1, e5);
          }
        }
      })));
    }
    this._startTicker(), this.setThemes([]), this._addTooltip(), this._hasLicense() || this._showBranding();
  }
  _initResizeSensor() {
    this._resizeSensorDisposer && this._resizeSensorDisposer.dispose(), this._resizeSensorDisposer = new De(this.dom, () => {
      this.autoResize && this.resize();
    }), this._disposers.push(this._resizeSensorDisposer);
  }
  resize() {
    const e2 = this._getRealSize(), t = this._getCalculatedSize(e2), i3 = Math.floor(t.width), r2 = Math.floor(t.height);
    if (i3 > 0 && r2 > 0) {
      const t2 = Math.floor(e2.width), s3 = Math.floor(e2.height), a = this._htmlElementContainer;
      if (a.style.width = i3 + "px", a.style.height = r2 + "px", true !== this._a11yD) {
        const e3 = this._focusElementContainer;
        e3.style.width = i3 + "px", e3.style.height = r2 + "px";
      }
      this._renderer.resize(t2, s3, i3, r2);
      const n2 = this._rootContainer;
      n2.setPrivate("width", i3), n2.setPrivate("height", r2), this._render(), this._handleLogo();
    }
  }
  _render() {
    this._renderer.render(this._rootContainer._display), this._focusElementDirty && (this._updateCurrentFocus(), this._focusElementDirty = false);
  }
  _runTickers(e2) {
    P(this._tickers, (t) => {
      t(e2);
    });
  }
  _runAnimations(e2) {
    let t = 0;
    return N(this._animations, (i3) => {
      const r2 = i3._runAnimation(e2);
      return r2 !== ee.Stopped && (r2 !== ee.Playing || (++t, true));
    }), this._isDirtyAnimation = false, 0 === t;
  }
  _runDirties() {
    let e2 = {};
    for (; this._isDirtyParents; ) this._isDirtyParents = false, R(this._dirtyParents).forEach((t2) => {
      const i4 = this._dirtyParents[t2];
      delete this._dirtyParents[t2], i4.isDisposed() || (e2[i4.uid] = i4, i4._prepareChildren());
    });
    R(e2).forEach((t2) => {
      e2[t2]._updateChildren();
    });
    const t = [];
    R(this._dirty).forEach((e3) => {
      const i4 = this._dirty[e3];
      i4.isDisposed() ? delete this._dirty[i4.uid] : (t.push(i4), i4._beforeChanged());
    }), t.forEach((e3) => {
      e3._changed(), delete this._dirty[e3.uid], e3._clearDirty();
    }), this._isDirty = false;
    const i3 = {}, r2 = [];
    R(this._dirtyBounds).forEach((e3) => {
      const t2 = this._dirtyBounds[e3];
      delete this._dirtyBounds[e3], t2.isDisposed() || (i3[t2.uid] = t2.depth(), r2.push(t2));
    }), this._positionHTMLElements(), r2.sort((e3, t2) => Se(i3[t2.uid], i3[e3.uid])), r2.forEach((e3) => {
      e3._updateBounds();
    });
    const s3 = this._dirtyPositions;
    R(s3).forEach((e3) => {
      const t2 = s3[e3];
      delete s3[e3], t2.isDisposed() || t2._updatePosition();
    }), t.forEach((e3) => {
      e3._afterChanged();
    });
  }
  _renderFrame(e2) {
    if (this._updateTick) {
      this.events.isEnabled("framestarted") && this.events.dispatch("framestarted", { type: "framestarted", target: this, timestamp: e2 }), this._checkComputedStyles(), this._runTickers(e2);
      const t = this._runAnimations(e2);
      return this._runDirties(), this._render(), this._renderer.resetImageArray(), this._positionHTMLElements(), this.events.isEnabled("frameended") && this.events.dispatch("frameended", { type: "frameended", target: this, timestamp: e2 }), 0 === this._tickers.length && t && !this._isDirtyAnimation && !this._isDirty;
    }
    return true;
  }
  _runTicker(e2, t) {
    if (!this.isDisposed()) {
      this.animationTime = e2;
      this._renderFrame(e2) ? (this._ticker = null, this.animationTime = null) : this._paused || (t ? this._ticker : Rt(this.fps, this._ticker));
    }
  }
  _runTickerNow(e2 = 1e4) {
    if (!this.isDisposed()) {
      const t = performance.now() + e2;
      for (; ; ) {
        const e3 = performance.now();
        if (e3 >= t) {
          this.animationTime = null;
          break;
        }
        this.animationTime = e3;
        if (this._renderFrame(e3)) {
          this.animationTime = null;
          break;
        }
      }
    }
  }
  _startTicker() {
    null === this._ticker && (this.animationTime = null, this._ticker = (e2) => {
      this._runTicker(e2);
    }, Rt(this.fps, this._ticker));
  }
  get updateTick() {
    return this._updateTick;
  }
  set updateTick(e2) {
    this._updateTick = e2, e2 && this._startTicker();
  }
  _addDirtyEntity(e2) {
    this._isDirty = true, void 0 === this._dirty[e2.uid] && (this._dirty[e2.uid] = e2), this._startTicker();
  }
  _addDirtyParent(e2) {
    this._isDirty = true, this._isDirtyParents = true, void 0 === this._dirtyParents[e2.uid] && (this._dirtyParents[e2.uid] = e2), this._startTicker();
  }
  _addDirtyBounds(e2) {
    this._isDirty = true, void 0 === this._dirtyBounds[e2.uid] && (this._dirtyBounds[e2.uid] = e2), this._startTicker();
  }
  _addDirtyPosition(e2) {
    this._isDirty = true, void 0 === this._dirtyPositions[e2.uid] && (this._dirtyPositions[e2.uid] = e2), this._startTicker();
  }
  _addAnimation(e2) {
    this._isDirtyAnimation = true, -1 === this._animations.indexOf(e2) && this._animations.push(e2), this._startTicker();
  }
  _markDirty() {
    this._isDirty = true;
  }
  _markDirtyRedraw() {
    this.events.once("frameended", () => {
      this._isDirty = true, this._startTicker();
    });
  }
  eachFrame(e2) {
    return this._tickers.push(e2), this._startTicker(), new z(() => {
      T(this._tickers, e2);
    });
  }
  markDirtyGlobal(e2) {
    e2 || (e2 = this.container), e2.walkChildren((e3) => {
      e3 instanceof ai && this.markDirtyGlobal(e3), e3.markDirty(), e3.markDirtyBounds();
    });
  }
  width() {
    return Math.floor(this._getCalculatedSize(this._getRealSize()).width);
  }
  height() {
    return Math.floor(this._getCalculatedSize(this._getRealSize()).height);
  }
  dispose() {
    this._isDisposed || (this._isDisposed = true, this._rootContainer.dispose(), this._renderer.dispose(), this.horizontalLayout.dispose(), this.verticalLayout.dispose(), this.interfaceColors.dispose(), P(this._disposers, (e2) => {
      e2.dispose();
    }), this._inner && Z(this._inner), k(Te.rootElements, this));
  }
  isDisposed() {
    return this._isDisposed;
  }
  readerAlert(e2) {
    if (true !== this._a11yD) {
      const t = this._readerAlertElement;
      e2 = Pt(e2), t.innerHTML == e2 && (t.innerHTML = ""), t.innerHTML = e2;
    }
  }
  setThemes(e2) {
    this._rootContainer.set("themes", e2);
    const t = this.tooltipContainer;
    t && t._applyThemes();
    const i3 = this.interfaceColors;
    i3 && i3._applyThemes();
  }
  _addTooltip() {
    if (!this.tooltipContainer) {
      const e2 = this._tooltipContainerSettings, t = this._rootContainer.children.push(ai.new(this, { position: "absolute", isMeasured: false, width: r, height: r, layer: e2 ? 35 : 30, layerMargin: e2 || void 0 }));
      this.tooltipContainer = t;
      const i3 = u2.new(this, {});
      this.container.set("tooltip", i3), i3.hide(0), this._tooltip = i3;
    }
  }
  _registerTabindexOrder(e2) {
    1 != this._a11yD && (e2.get("focusable") ? S(this._tabindexes, e2) : k(this._tabindexes, e2), this._invalidateTabindexes());
  }
  _unregisterTabindexOrder(e2) {
    1 != this._a11yD && (k(this._tabindexes, e2), this._invalidateTabindexes());
  }
  _invalidateTabindexes() {
    if (1 == this._a11yD) return;
    this._tabindexes.sort((e3, t) => {
      const i3 = e3.get("tabindexOrder", 0), r2 = t.get("tabindexOrder", 0);
      return i3 == r2 ? 0 : i3 > r2 ? 1 : -1;
    });
    const e2 = [];
    P(this._tabindexes, (t, i3) => {
      t.getPrivate("focusElement") ? this._moveFocusElement(i3, t) : this._makeFocusElement(i3, t);
      const r2 = t.get("focusableGroup");
      r2 && false !== t.getPrivate("focusable") && (-1 !== e2.indexOf(r2) ? t.getPrivate("focusElement").dom.setAttribute("tabindex", "-1") : e2.push(r2));
    });
  }
  _updateCurrentFocus() {
    1 != this._a11yD && this._focusedSprite && (this._decorateFocusElement(this._focusedSprite), this._positionFocusElement(this._focusedSprite));
  }
  _decorateFocusElement(e2, t) {
    if (1 == this._a11yD) return;
    if (t || (t = e2.getPrivate("focusElement").dom), !t) return;
    const i3 = e2.get("role");
    i3 ? t.setAttribute("role", i3) : t.removeAttribute("role");
    const r2 = e2.get("ariaLabel");
    if (r2) {
      const i4 = ei(e2, r2);
      t.setAttribute("aria-label", i4);
    } else t.removeAttribute("aria-label");
    const s3 = e2.get("ariaLive");
    s3 ? t.setAttribute("aria-live", s3) : t.removeAttribute("aria-live");
    const a = e2.get("ariaChecked");
    null != a && i3 && -1 !== ["checkbox", "option", "radio", "menuitemcheckbox", "menuitemradio", "treeitem"].indexOf(i3) ? t.setAttribute("aria-checked", a ? "true" : "false") : t.removeAttribute("aria-checked");
    const n2 = e2.get("ariaCurrent");
    null != n2 ? t.setAttribute("aria-current", n2) : t.removeAttribute("aria-current");
    const o = e2.get("ariaSelected");
    null != o && i3 && -1 !== ["gridcell", "option", "row", "tab", "columnheader", "rowheader", "treeitem"].indexOf(i3) ? t.setAttribute("aria-selected", o ? "true" : "false") : t.removeAttribute("aria-selected"), e2.get("ariaHidden") ? t.setAttribute("aria-hidden", "true") : t.removeAttribute("aria-hidden");
    const l2 = e2.get("ariaOrientation");
    l2 ? t.setAttribute("aria-orientation", l2) : t.removeAttribute("aria-orientation");
    const h = e2.get("ariaValueNow");
    h ? t.setAttribute("aria-valuenow", h) : t.removeAttribute("aria-valuenow");
    const u3 = e2.get("ariaValueMin");
    u3 ? t.setAttribute("aria-valuemin", u3) : t.removeAttribute("aria-valuemin");
    const c = e2.get("ariaValueMax");
    c ? t.setAttribute("aria-valuemax", c) : t.removeAttribute("aria-valuemax");
    const d = e2.get("ariaValueText");
    d ? t.setAttribute("aria-valuetext", d) : t.removeAttribute("aria-valuetext");
    const b2 = e2.get("ariaControls");
    b2 ? t.setAttribute("aria-controls", b2) : t.removeAttribute("aria-controls"), e2.get("visible") && 0 !== e2.get("opacity") && "tooltip" != e2.get("role") && !e2.isHidden() && false !== e2.getPrivate("focusable") && (e2.height() || e2.width()) ? ("-1" != t.getAttribute("tabindex") && t.setAttribute("tabindex", "" + this.tabindex), t.removeAttribute("aria-hidden")) : (t.removeAttribute("tabindex"), t.setAttribute("aria-hidden", "true"));
  }
  _makeFocusElement(e2, t) {
    if (t.getPrivate("focusElement") || 1 == this._a11yD) return;
    const i3 = document.createElement("div");
    "tooltip" != t.get("role") && (i3.tabIndex = this.tabindex), i3.style.position = "absolute", dt(i3, false);
    const r2 = [];
    t.setPrivate("focusElement", { dom: i3, disposers: r2 }), this._decorateFocusElement(t), r2.push(J(i3, "focus", (e3) => {
      this._handleFocus(e3);
    })), r2.push(J(i3, "blur", (e3) => {
      this._handleBlur(e3);
    })), this._moveFocusElement(e2, t);
  }
  _removeFocusElement(e2) {
    if (1 == this._a11yD) return;
    k(this._tabindexes, e2);
    const t = e2.getPrivate("focusElement");
    if (t) {
      this._focusElementContainer.removeChild(t.dom), P(t.disposers, (e3) => {
        e3.dispose();
      });
    }
  }
  _hideFocusElement(e2) {
    if (1 == this._a11yD) return;
    e2.getPrivate("focusElement").dom.style.display = "none";
  }
  _moveFocusElement(e2, t) {
    if (1 == this._a11yD) return;
    const i3 = this._focusElementContainer, r2 = t.getPrivate("focusElement").dom;
    if (r2 === this._focusElementContainer.children[e2]) return;
    const s3 = this._focusElementContainer.children[e2 + 1];
    s3 ? i3.insertBefore(r2, s3) : i3.append(r2);
  }
  _positionFocusElement(e2) {
    if (1 == this._a11yD || null == e2) return;
    const t = e2.globalBounds();
    let i3 = t.right == t.left ? e2.width() : t.right - t.left, r2 = t.top == t.bottom ? e2.height() : t.bottom - t.top;
    const s3 = void 0 !== this._settings.focusPadding ? this._settings.focusPadding : 2;
    let a = t.left - s3, n2 = t.top - s3;
    i3 < 0 && (a += i3, i3 = Math.abs(i3)), r2 < 0 && (n2 += r2, r2 = Math.abs(r2));
    const o = e2.getPrivate("focusElement").dom;
    o.style.top = n2 + "px", o.style.left = a + "px", o.style.width = i3 + 2 * s3 + "px", o.style.height = r2 + 2 * s3 + "px";
  }
  _getSpriteByFocusElement(e2) {
    let t;
    return x(this._tabindexes, (i3, r2) => i3.getPrivate("focusElement").dom !== e2 || (t = i3, false)), t;
  }
  _handleFocus(e2) {
    if (1 == this._a11yD) return;
    const t = this._getSpriteByFocusElement(e2.target);
    t && (t.isVisibleDeep() ? (this._positionFocusElement(t), this._focusedSprite = t, t.events.isEnabled("focus") && t.events.dispatch("focus", { type: "focus", originalEvent: e2, target: t })) : this._focusNext(e2.target, this._isShift ? -1 : 1));
  }
  _focusNext(e2, t, i3) {
    if (1 == this._a11yD) return;
    const r2 = Array.from(document.querySelectorAll(["a[href]", "area[href]", "button:not([disabled])", "details", "input:not([disabled])", "iframe:not([disabled])", "select:not([disabled])", "textarea:not([disabled])", '[contentEditable=""]', '[contentEditable="true"]', '[contentEditable="TRUE"]', '[tabindex]:not([tabindex^="-"])'].join(",")));
    let s3 = r2.indexOf(e2) + t;
    s3 < 0 ? s3 = r2.length - 1 : s3 >= r2.length && (s3 = 0);
    const a = r2[s3];
    if (i3 && -1 == t) {
      const e3 = this._getSpriteByFocusElement(a);
      if (e3 && e3.get("focusableGroup") == i3) return void this._focusNext(a, t);
    }
    a.focus();
  }
  _handleBlur(e2) {
    if (1 == this._a11yD) return;
    const t = this._focusedSprite;
    t && !t.isDisposed() && t.events.isEnabled("blur") && t.events.dispatch("blur", { type: "blur", originalEvent: e2, target: t }), this._focusedSprite = void 0;
  }
  updateTooltip(e2) {
    if (1 == this._a11yD) return;
    const t = Pt(e2._getText());
    let i3 = e2.getPrivate("tooltipElement");
    "tooltip" == e2.get("role") && "" != t ? (i3 || (i3 = this._makeTooltipElement(e2)), i3.innerHTML != t && (i3.innerHTML = t), i3.setAttribute("aria-hidden", e2.isVisibleDeep() ? "false" : "true")) : i3 && (i3.remove(), e2.removePrivate("tooltipElement"));
  }
  _makeTooltipElement(e2) {
    const t = this._tooltipElementContainer, i3 = document.createElement("div");
    return i3.style.position = "absolute", i3.style.width = "1px", i3.style.height = "1px", i3.style.overflow = "hidden", i3.style.clip = "rect(1px, 1px, 1px, 1px)", dt(i3, false), this._decorateFocusElement(e2, i3), t.append(i3), e2.setPrivate("tooltipElement", i3), i3;
  }
  _removeTooltipElement(e2) {
    if (1 == this._a11yD) return;
    const t = e2.getPrivate("tooltipElement");
    if (t) {
      const e3 = t.parentElement;
      e3 && e3.removeChild(t);
    }
  }
  _invalidateAccessibility(e2) {
    if (1 == this._a11yD) return;
    this._focusElementDirty = true;
    const t = e2.getPrivate("focusElement");
    e2.get("focusable") ? t && (this._decorateFocusElement(e2), this._positionFocusElement(e2)) : t && this._removeFocusElement(e2);
  }
  focused(e2) {
    return this._focusedSprite === e2;
  }
  documentPointToRoot(e2) {
    const t = this._getRealSize(), i3 = this._getCalculatedSize(t), r2 = i3.width / t.width, s3 = i3.height / t.height;
    return { x: (e2.x - t.left) * r2, y: (e2.y - t.top) * s3 };
  }
  rootPointToDocument(e2) {
    const t = this._getRealSize(), i3 = this._getCalculatedSize(t), r2 = i3.width / t.width, s3 = i3.height / t.height;
    return { x: e2.x / r2 + t.left, y: e2.y / s3 + t.top };
  }
  addDisposer(e2) {
    return this._disposers.push(e2), e2;
  }
  _updateComputedStyles() {
    const e2 = window.getComputedStyle(this.dom);
    let t = "";
    U(e2, (e3, i4) => {
      g(e3) && e3.match(/^font/) && (t += i4);
    });
    const i3 = t != this._fontHash;
    return i3 && (this._fontHash = t), i3;
  }
  _checkComputedStyles() {
    this._updateComputedStyles() && this._invalidateLabelBounds(this.container);
  }
  _invalidateLabelBounds(e2) {
    e2 instanceof ai ? e2.children.each((e3) => {
      this._invalidateLabelBounds(e3);
    }) : e2 instanceof ni && e2.markDirtyBounds();
  }
  _hasLicense() {
    for (let e2 = 0; e2 < Te.licenses.length; e2++) if (Te.licenses[e2].match(/^AM5C.{5,}/i)) return true;
    return false;
  }
  _licenseApplied() {
    this._logo && this._logo.set("forceHidden", true);
  }
  get debugGhostView() {
    return this._renderer.debugGhostView;
  }
  set debugGhostView(e2) {
    this._renderer.debugGhostView = e2;
  }
  set tapToActivate(e2) {
    this._renderer.tapToActivate = e2;
  }
  get tapToActivate() {
    return this._renderer.tapToActivate;
  }
  set tapToActivateTimeout(e2) {
    this._renderer.tapToActivateTimeout = e2;
  }
  get tapToActivateTimeout() {
    return this._renderer.tapToActivateTimeout;
  }
  _makeHTMLElement(e2) {
    const t = this._htmlElementContainer, i3 = document.createElement("div");
    e2.setPrivate("htmlElement", i3);
    let r2, s3, a = false;
    return e2._walkParents((e3) => {
      if (e3.get("verticalScrollbar")) return a = true, r2 = e3, false;
    }), a && (s3 = document.createElement("div"), e2.setPrivate("htmlElementWrapper", s3), e2.setPrivate("wrapperContainer", r2), s3.style.position = "absolute", s3.style.overflow = "hidden", s3.style.boxSizing = "border-box", s3.style.top = "0px", s3.style.left = "0px", s3.style.width = "100%", s3.style.height = "100%", r2.events.on("boundschanged", () => {
      this._positionHTMLElement(e2);
    })), i3.style.position = "absolute", i3.style.overflow = "auto", i3.style.boxSizing = "border-box", dt(i3, e2.get("interactive", false)), e2.events.isEnabled("click") && (dt(i3, true), this._disposers.push(J(i3, "click", (t2) => {
      const i4 = this._renderer.getEvent(t2);
      e2.events.dispatch("click", { type: "click", originalEvent: i4.event, point: i4.point, simulated: false, target: e2 });
    }))), this._positionHTMLElement(e2), a ? (s3.append(i3), t.append(s3)) : t.append(i3), S(this._htmlEnabledContainers, e2), i3;
  }
  _positionHTMLElements() {
    P(this._htmlEnabledContainers, (e2) => {
      this._positionHTMLElement(e2);
    });
  }
  _positionHTMLElement(e2) {
    const t = e2.getPrivate("htmlElementWrapper");
    if (t) {
      const i4 = e2.getPrivate("wrapperContainer");
      if (i4) {
        const e3 = i4.globalBounds();
        t.style.clipPath = "rect(" + e3.top + "px " + e3.right + "px " + e3.bottom + "px " + e3.left + "px)";
      }
    }
    const i3 = e2.getPrivate("htmlElement");
    if (i3) {
      P(["paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "minWidth", "minHeight", "maxWidth", "maxHeight"], (t3) => {
        const r2 = e2.get(t3);
        i3.style[t3] = r2 ? r2 + "px" : "";
      });
      P(["fontFamily", "fontSize", "fontStyle", "fontWeight", "fontStyle", "fontVariant", "textDecoration"], (t3) => {
        const r2 = e2.get(t3);
        r2 ? "fontSize" != t3 || g(r2) ? i3.style[t3] = r2 + "" : i3.style[t3] = r2 + "px" : i3.style[t3] = "";
      });
      const t2 = e2.compositeScale() || 1, s3 = e2.compositeRotation() || 0;
      i3.style.transform = "", i3.style.transformOrigin = "";
      const a = e2.compositeOpacity();
      setTimeout(() => {
        i3.style.opacity = a + "";
      }, 10);
      const o = e2.isVisibleDeep();
      o && (i3.style.display = "block");
      let l2 = { x: e2.x() + e2.get("dx", 0), y: e2.y() + e2.get("dy", 0) };
      e2.parent && (l2 = e2.parent.toGlobal(l2)), i3.style.top = l2.y + "px", i3.style.left = l2.x + "px";
      const h = e2.get("width"), u3 = e2.get("height");
      let c = 0, d = 0;
      if (h && (c = e2.width()), u3 && (d = e2.height()), !h || !u3) {
        i3.style.position = "fixed", i3.style.width = "", i3.style.height = "";
        const r2 = i3.getBoundingClientRect();
        i3.style.position = "absolute", h || (c = r2.width), u3 || (d = r2.height);
        let s4 = c / t2, a2 = d / t2, n2 = e2.get("centerX", 0), o2 = e2.get("centerY", 0), l3 = 0, b3 = 0, f3 = 0, p2 = 0;
        n2 instanceof e ? (l3 = -n2.value * s4, b3 = (1 - n2.value) * s4) : (l3 = -n2, b3 = s4 - n2), o2 instanceof e ? (f3 = -o2.value * a2, p2 = (1 - o2.value) * a2) : (f3 = -o2, p2 = a2 - o2), e2._localBounds = { left: l3, right: b3, top: f3, bottom: p2 };
        let g3 = e2._adjustedLocalBounds, m2 = e2._display.getAdjustedBounds(e2._localBounds);
        e2._adjustedLocalBounds = m2, g3.left === m2.left && g3.right === m2.right && g3.top === m2.top && g3.bottom === m2.bottom || e2.markDirtyBounds();
      }
      c > 0 && (i3.style.minWidth = c + "px"), d > 0 && (i3.style.minHeight = d + "px"), o && 0 != a || (i3.style.display = "none");
      const b2 = e2.get("centerX", 0), f2 = n(b2) ? b2.percent + "%" : b2 + "px", p = e2.get("centerY", 0), g2 = n(p) ? p.percent + "%" : p + "px";
      (b2 || p) && (i3.style.transform = "translate(-" + f2 + ", -" + g2 + ")" + i3.style.transform), 1 != t2 && (i3.style.transform += "scale(" + t2 + ")"), 0 != s3 && (i3.style.transform += " rotate(" + s3 + "deg)"), "" != i3.style.transform && (i3.style.transformOrigin = f2 + " " + g2);
    }
  }
  _setHTMLContent(e2, t) {
    let i3 = e2.getPrivate("htmlElement");
    i3 || (i3 = this._makeHTMLElement(e2)), i3.innerHTML != t && (i3.innerHTML = t);
  }
  _removeHTMLContent(e2) {
    const t = e2.getPrivate("htmlElementWrapper"), i3 = e2.getPrivate("htmlElement");
    t ? (this._htmlElementContainer.removeChild(t), e2.removePrivate("htmlElement"), e2.removePrivate("htmlElementWrapper"), e2.removePrivate("wrapperContainer")) : i3 && (this._htmlElementContainer.removeChild(i3), e2.removePrivate("htmlElement"), e2.removePrivate("wrapperContainer")), k(this._htmlEnabledContainers, e2);
  }
};
Oe("AM5C241025748");
var Wt = "en-US";
var Gt = /* @__PURE__ */ new Map([["ar", () => import("./ar-LKRY47UZ.js")], ["bg-BG", () => import("./bg_BG-QD2Y6KEG.js")], ["bs-BA", () => import("./bs_BA-V4RVUYXO.js")], ["ca-ES", () => import("./ca_ES-OKSLLAIO.js")], ["cs-CZ", () => import("./cs_CZ-ZQR7OFI2.js")], ["da-DK", () => import("./da_DK-Q6VZHAWM.js")], ["de-DE", () => import("./de_DE-MKEFUF2X.js")], ["de-CH", () => import("./de_CH-R6YQE6ZP.js")], ["el-GR", () => import("./el_GR-6AYI27SI.js")], ["en-US", () => import("./en_US-AL5BY5QT.js")], ["en-CA", () => import("./en_CA-2TZ4HXMP.js")], ["es-ES", () => import("./es_ES-JFICQ7LX.js")], ["et-EE", () => import("./et_EE-DWIGVT2M.js")], ["fi-FI", () => import("./fi_FI-QG6CXCKM.js")], ["fr-FR", () => import("./fr_FR-XJL7AUWM.js")], ["he-IL", () => import("./he_IL-EMYF3CH4.js")], ["hr-HR", () => import("./hr_HR-ZM4X6CIC.js")], ["hu-HU", () => import("./hu_HU-3VTKA4UL.js")], ["id-ID", () => import("./id_ID-5X5GHEWL.js")], ["it-IT", () => import("./it_IT-LNOYLFMI.js")], ["ja-JP", () => import("./ja_JP-564INOPM.js")], ["ko-KR", () => import("./ko_KR-4ADWJRNJ.js")], ["lt-LT", () => import("./lt_LT-B3RGY6IN.js")], ["lv-LV", () => import("./lv_LV-CLDAXDSN.js")], ["no-NO", () => import("./nb_NO-RB4PWWG4.js")], ["nb-NO", () => import("./nb_NO-RB4PWWG4.js")], ["nl-NL", () => import("./nl_NL-YEG3UUGH.js")], ["pl-PL", () => import("./pl_PL-MM7Q2Z4N.js")], ["pt-BR", () => import("./pt_BR-WHPFQOW4.js")], ["pt-PT", () => import("./pt_PT-BE7EGM7W.js")], ["ro-RO", () => import("./ro_RO-PXXMBZKI.js")], ["ru-RU", () => import("./ru_RU-DHDORC4S.js")], ["sk-SK", () => import("./sk_SK-VMVEKMMP.js")], ["sl-SL", () => import("./sl_SL-JZ4SPMMI.js")], ["sr-RS", () => import("./sr_RS-MHLQ5MLC.js")], ["sv-SE", () => import("./sv_SE-HIT4WH2F.js")], ["th-TH", () => import("./th_TH-STDDK3HX.js")], ["tr-TR", () => import("./tr_TR-W3J6YA72.js")], ["uk-UA", () => import("./uk_UA-SURQ2ZAZ.js")], ["vi-VN", () => import("./vi_VN-EK6FCCPI.js")], ["zh-CN", () => import("./zh_Hans-ZGCXFEKV.js")], ["zh-HK", () => import("./zh_Hant-W4GAKRZL.js")], ["zh-TW", () => import("./zh_Hant-W4GAKRZL.js")]]);
function Vt(e2) {
  const i3 = s(e2)?.language;
  if (!i3) return null;
  for (const r2 of Gt.keys()) {
    const e3 = s(r2)?.language;
    if (e3 === i3) return r2;
  }
  return null;
}
function Nt(e2) {
  return e2 ? Gt.has(e2) ? e2 : Vt(e2) ?? Wt : Wt;
}
async function Xt2(t, i3 = i()) {
  const r2 = Ut.new(t);
  return r2.locale = (await Gt.get(Nt(i3))()).default, r2;
}
export {
  Xt2 as createRoot
};
//# sourceMappingURL=chartUtilsAm5-4HTIBZVB.js.map
