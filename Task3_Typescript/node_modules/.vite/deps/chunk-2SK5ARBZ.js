import {
  n
} from "./chunk-RNXMAHSA.js";
import {
  c as c2
} from "./chunk-VD4HSDHE.js";
import {
  i as i3
} from "./chunk-WBSGKMRV.js";
import {
  M,
  X,
  ie,
  j as j2,
  k,
  re,
  z as z3
} from "./chunk-UTU6N7VJ.js";
import {
  j,
  m as m2,
  v,
  y
} from "./chunk-G4PMFSAZ.js";
import {
  a as a6
} from "./chunk-MX5VW6PC.js";
import {
  E,
  s as s2
} from "./chunk-UGXCZZ7N.js";
import {
  m as m3
} from "./chunk-5GBXHGKW.js";
import {
  a as a5,
  t as t3
} from "./chunk-6TS2ZJL4.js";
import {
  c2 as c,
  i2
} from "./chunk-YX2VTIZR.js";
import {
  E as E2,
  T,
  Xe,
  x
} from "./chunk-VCRP2PLV.js";
import {
  A,
  G,
  H,
  z as z2
} from "./chunk-YBJ5GVXQ.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  a as a3
} from "./chunk-TVM3SZJR.js";
import {
  a as a4
} from "./chunk-LMEOPAGQ.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r3
} from "./chunk-YFPGM5UE.js";
import {
  _e,
  he
} from "./chunk-OXSERRAR.js";
import {
  s
} from "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  e,
  m,
  r4 as r2,
  t2 as t,
  t4 as t2
} from "./chunk-N3XLUQJI.js";
import {
  a2
} from "./chunk-JUAD7TJ6.js";
import {
  S
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  C,
  S as S2
} from "./chunk-ZWFY3WY5.js";
import {
  F,
  Pt,
  vt
} from "./chunk-LQFTAGIV.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/form/ExpressionInfo.js
var s3;
var i4 = s3 = class extends l {
  constructor(e4) {
    super(e4), this.expression = null, this.name = null, this.returnType = "boolean", this.title = null;
  }
  clone() {
    return new s3({ name: this.name, title: this.title, expression: this.expression, returnType: this.returnType });
  }
};
r([m({ type: String, json: { write: true } })], i4.prototype, "expression", void 0), r([m({ type: String, json: { write: true } })], i4.prototype, "name", void 0), r([m({ type: ["boolean", "date", "number", "string"], json: { write: true } })], i4.prototype, "returnType", void 0), r([m({ type: String, json: { write: true } })], i4.prototype, "title", void 0), i4 = s3 = r([a2("esri.form.ExpressionInfo")], i4);
var p = i4;

// node_modules/@arcgis/core/form/elements/Element.js
var e2 = class extends l {
  constructor(t4) {
    super(t4), this.description = null, this.label = null, this.type = null, this.visibilityExpression = null;
  }
};
r([m({ type: String, json: { write: true } })], e2.prototype, "description", void 0), r([m({ type: String, json: { write: true } })], e2.prototype, "label", void 0), r([m()], e2.prototype, "type", void 0), r([m({ type: String, json: { write: true } })], e2.prototype, "visibilityExpression", void 0), e2 = r([a2("esri.form.elements.Element")], e2);
var i5 = e2;

// node_modules/@arcgis/core/form/elements/inputs/attachments/Input.js
var p2 = class extends a3.ClonableMixin(l) {
  constructor(o2) {
    super(o2), this.type = null;
  }
};
r([m()], p2.prototype, "type", void 0), p2 = r([a2("esri.form.elements.inputs.attachments.Input")], p2);
var c3 = p2;

// node_modules/@arcgis/core/form/elements/inputs/attachments/support/utils.js
var a7 = ["any", "capture", "upload"];

// node_modules/@arcgis/core/form/elements/inputs/attachments/AudioInput.js
var p3 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "audio", this.inputMethod = "any", this.maxDuration = null;
  }
};
r([m({ type: ["audio"], readOnly: true, json: { write: true } })], p3.prototype, "type", void 0), r([m({ type: a7, json: { write: true } })], p3.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p3.prototype, "maxDuration", void 0), p3 = r([a2("esri.form.elements.inputs.attachments.AudioInput")], p3);
var i6 = p3;

// node_modules/@arcgis/core/form/elements/inputs/attachments/DocumentInput.js
var s4 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "document", this.maxFileSize = null;
  }
};
r([m({ type: ["document"], readOnly: true, json: { write: true } })], s4.prototype, "type", void 0), r([m({ type: Number, json: { write: true } })], s4.prototype, "maxFileSize", void 0), s4 = r([a2("esri.form.elements.inputs.attachments.DocumentInput")], s4);
var p4 = s4;

// node_modules/@arcgis/core/form/elements/inputs/attachments/ImageInput.js
var p5 = class extends c3 {
  constructor(t4) {
    super(t4), this.type = "image", this.inputMethod = "any", this.maxImageSize = null;
  }
};
r([m({ type: ["image"], readOnly: true, json: { write: true } })], p5.prototype, "type", void 0), r([m({ type: a7, json: { write: true } })], p5.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p5.prototype, "maxImageSize", void 0), p5 = r([a2("esri.form.elements.inputs.attachments.ImageInput")], p5);
var i7 = p5;

// node_modules/@arcgis/core/form/elements/inputs/attachments/SignatureInput.js
var p6 = class extends c3 {
  constructor(t4) {
    super(t4), this.type = "signature", this.inputMethod = "any";
  }
};
r([m({ type: ["signature"], readOnly: true, json: { write: true } })], p6.prototype, "type", void 0), r([m({ type: a7, json: { write: true } })], p6.prototype, "inputMethod", void 0), p6 = r([a2("esri.form.elements.inputs.attachments.SignatureInput")], p6);
var i8 = p6;

// node_modules/@arcgis/core/form/elements/inputs/attachments/VideoInput.js
var p7 = class extends c3 {
  constructor(o2) {
    super(o2), this.type = "video", this.inputMethod = "any", this.maxDuration = null;
  }
};
r([m({ type: ["video"], readOnly: true, json: { write: true } })], p7.prototype, "type", void 0), r([m({ type: a7, json: { write: true } })], p7.prototype, "inputMethod", void 0), r([m({ type: Number, json: { write: true } })], p7.prototype, "maxDuration", void 0), p7 = r([a2("esri.form.elements.inputs.attachments.VideoInput")], p7);
var i9 = p7;

// node_modules/@arcgis/core/form/elements/inputs/attachments/support/inputs.js
function u(e4) {
  return { nestableTypes: { base: c3, key: "type", typeMap: { audio: i6, document: p4, image: i7, signature: i8, video: i9 } }, allTypes: { base: c3, key: "type", typeMap: { attachment: e4, audio: i6, document: p4, image: i7, signature: i8, video: i9 } } };
}
function s5(t4, p24, n8) {
  return t4 ? t4.map((t5) => S(n8 ? p24.nestableTypes : p24.allTypes, t5)) : null;
}
function i10(e4, t4, p24) {
  if (!e4) return null;
  const n8 = p24 ? t4.nestableTypes.typeMap : t4.allTypes.typeMap;
  return e4.filter((e5) => n8[e5.type]).map((e5) => n8[e5.type].fromJSON(e5));
}
function m4(e4, t4, p24) {
  if (!e4) return null;
  const n8 = p24 ? t4.nestableTypes.typeMap : t4.allTypes.typeMap;
  return e4.filter((e5) => n8[e5.type]).map((e5) => e5.toJSON());
}

// node_modules/@arcgis/core/form/elements/inputs/attachments/AttachmentInput.js
var m5 = class extends c3 {
  constructor(t4) {
    super(t4), this.type = "attachment", this.attachmentAssociationType = "exact", this.inputTypes = null;
  }
  castInputs(t4) {
    return s5(t4, y2, true);
  }
  readInputs(t4, r5) {
    return i10(r5.inputTypes, y2, true);
  }
  writeInputs(t4, r5) {
    r5.inputTypes = m4(t4, y2, true);
  }
};
r([m({ type: ["attachment"], readOnly: true, json: { write: true } })], m5.prototype, "type", void 0), r([m({ type: ["any", "exact", "exactOrNone"], json: { write: true } })], m5.prototype, "attachmentAssociationType", void 0), r([m({ json: { write: { isRequired: true } } })], m5.prototype, "inputTypes", void 0), r([s("inputTypes")], m5.prototype, "castInputs", null), r([o("inputTypes")], m5.prototype, "readInputs", null), r([r3("inputTypes")], m5.prototype, "writeInputs", null), m5 = r([a2("esri.form.elements.inputs.attachments.AttachmentInput")], m5);
var y2 = u(m5);
var d = m5;

// node_modules/@arcgis/core/form/elements/AttachmentElement.js
var r4;
var a8 = u(d);
var p8 = r4 = class extends i5 {
  constructor(t4) {
    super(t4), this.allowUserRename = true, this.attachmentKeyword = null, this.displayFilename = false, this.editableExpression = null, this.filenameExpression = "{attachmentKeyword}_{now}", this.input = null, this.maxAttachmentCount = null, this.minAttachmentCount = null, this.type = "attachment", this.useOriginalFilename = true;
  }
  clone() {
    return new r4({ allowUserRename: this.allowUserRename, attachmentKeyword: this.attachmentKeyword, description: this.description, displayFilename: this.displayFilename, editableExpression: this.editableExpression, filenameExpression: this.filenameExpression, input: this.input?.clone(), label: this.label, maxAttachmentCount: this.maxAttachmentCount, minAttachmentCount: this.minAttachmentCount, useOriginalFilename: this.useOriginalFilename, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: Boolean, json: { write: true } })], p8.prototype, "allowUserRename", void 0), r([m({ type: String, json: { write: { isRequired: true } } })], p8.prototype, "attachmentKeyword", void 0), r([m({ type: Boolean, json: { write: true } })], p8.prototype, "displayFilename", void 0), r([m({ type: String, json: { write: true } })], p8.prototype, "editableExpression", void 0), r([m({ type: String, json: { write: true } })], p8.prototype, "filenameExpression", void 0), r([m({ types: a8.allTypes, json: { read: { source: "inputType" }, write: { target: "inputType", isRequired: true } } })], p8.prototype, "input", void 0), r([m({ type: Number, json: { write: true } })], p8.prototype, "maxAttachmentCount", void 0), r([m({ type: Number, json: { write: true } })], p8.prototype, "minAttachmentCount", void 0), r([m({ type: ["attachment"], readOnly: true, json: { read: false, write: true } })], p8.prototype, "type", void 0), r([m({ type: Boolean, json: { write: true } })], p8.prototype, "useOriginalFilename", void 0), p8 = r4 = r([a2("esri.form.elements.AttachmentElement")], p8);
var m6 = p8;

// node_modules/@arcgis/core/form/elements/inputs/Input.js
var e3 = class extends l {
  constructor(o2) {
    super(o2), this.type = null;
  }
};
r([m()], e3.prototype, "type", void 0), e3 = r([a2("esri.form.elements.inputs.Input")], e3);
var p9 = e3;

// node_modules/@arcgis/core/form/elements/inputs/TextInput.js
var s6 = class extends p9 {
  constructor(o2) {
    super(o2), this.maxLength = null, this.minLength = 0;
  }
};
r([m({ type: Number, json: { write: true } })], s6.prototype, "maxLength", void 0), r([m({ type: Number, json: { write: true } })], s6.prototype, "minLength", void 0), s6 = r([a2("esri.form.elements.inputs.TextInput")], s6);
var p10 = s6;

// node_modules/@arcgis/core/form/elements/inputs/BarcodeScannerInput.js
var s7;
var n2 = s7 = class extends p10 {
  constructor(r5) {
    super(r5), this.type = "barcode-scanner";
  }
  clone() {
    return new s7({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["barcode-scanner"], json: { read: false, write: true } })], n2.prototype, "type", void 0), n2 = s7 = r([a2("esri.form.elements.inputs.BarcodeScannerInput")], n2);
var c4 = n2;

// node_modules/@arcgis/core/form/elements/inputs/ComboBoxInput.js
var s8;
var p11 = s8 = class extends p9 {
  constructor(o2) {
    super(o2), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "combo-box";
  }
  clone() {
    return new s8({ showNoValueOption: this.showNoValueOption, noValueOptionLabel: this.noValueOptionLabel });
  }
};
r([m({ type: String, json: { write: true } })], p11.prototype, "noValueOptionLabel", void 0), r([m({ type: Boolean, json: { write: true } })], p11.prototype, "showNoValueOption", void 0), r([m({ type: ["combo-box"], json: { read: false, write: true } })], p11.prototype, "type", void 0), p11 = s8 = r([a2("esri.form.elements.inputs.ComboBoxInput")], p11);
var i11 = p11;

// node_modules/@arcgis/core/form/elements/inputs/DatePickerInput.js
var p12;
function s9(r5) {
  return null != r5 ? r5 : null;
}
function a9(r5) {
  return null != r5 ? r5 : null;
}
var m7 = p12 = class extends p9 {
  constructor(r5) {
    super(r5), this.max = null, this.min = null, this.type = "date-picker";
  }
  readMax(r5, t4) {
    return s9(t4.max);
  }
  writeMax(r5, t4) {
    t4.max = a9(r5);
  }
  readMin(r5, t4) {
    return s9(t4.min);
  }
  writeMin(r5, t4) {
    t4.min = a9(r5);
  }
  clone() {
    return new p12({ max: this.max, min: this.min });
  }
};
r([m({ type: String, json: { type: String, write: true } })], m7.prototype, "max", void 0), r([o("max")], m7.prototype, "readMax", null), r([r3("max")], m7.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], m7.prototype, "min", void 0), r([o("min")], m7.prototype, "readMin", null), r([r3("min")], m7.prototype, "writeMin", null), r([m({ type: ["date-picker"], json: { read: false, write: true } })], m7.prototype, "type", void 0), m7 = p12 = r([a2("esri.form.elements.inputs.DatePickerInput")], m7);
var c5 = m7;

// node_modules/@arcgis/core/form/elements/inputs/DateTimeOffsetPickerInput.js
var s10;
function p13(t4) {
  return null != t4 ? t4 : null;
}
function m8(t4) {
  return null != t4 ? t4 : null;
}
var u2 = s10 = class extends p9 {
  constructor(t4) {
    super(t4), this.includeTimeOffset = true, this.max = null, this.min = null, this.timeResolution = "minutes", this.type = "datetimeoffset-picker";
  }
  readMax(t4, e4) {
    return p13(e4.max);
  }
  writeMax(t4, e4) {
    e4.max = m8(t4);
  }
  readMin(t4, e4) {
    return p13(e4.min);
  }
  writeMin(t4, e4) {
    e4.min = m8(t4);
  }
  readTimeResolution(t4, e4) {
    return p13(e4.timeResolution);
  }
  writeTimeResolution(t4, e4) {
    e4.timeResolution = m8(t4);
  }
  clone() {
    return new s10({ includeTimeOffset: this.includeTimeOffset, max: this.max, min: this.min, timeResolution: this.timeResolution });
  }
};
r([m({ type: Boolean, json: { write: true } })], u2.prototype, "includeTimeOffset", void 0), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "max", void 0), r([o("max")], u2.prototype, "readMax", null), r([r3("max")], u2.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "min", void 0), r([o("min")], u2.prototype, "readMin", null), r([r3("min")], u2.prototype, "writeMin", null), r([m({ type: String, json: { type: String, write: true } })], u2.prototype, "timeResolution", void 0), r([o("timeResolution")], u2.prototype, "readTimeResolution", null), r([r3("timeResolution")], u2.prototype, "writeTimeResolution", null), r([m({ type: ["datetimeoffset-picker"], json: { read: false, write: true } })], u2.prototype, "type", void 0), u2 = s10 = r([a2("esri.form.elements.inputs.DateTimeOffsetPickerInput")], u2);
var l2 = u2;

// node_modules/@arcgis/core/form/elements/inputs/DateTimePickerInput.js
var p14;
function s11(e4) {
  return null != e4 ? new Date(e4) : null;
}
function m9(e4) {
  return e4 ? e4.getTime() : null;
}
var a10 = p14 = class extends p9 {
  constructor(e4) {
    super(e4), this.includeTime = false, this.max = null, this.min = null, this.type = "datetime-picker";
  }
  readMax(e4, r5) {
    return s11(r5.max);
  }
  writeMax(e4, r5) {
    r5.max = m9(e4);
  }
  readMin(e4, r5) {
    return s11(r5.min);
  }
  writeMin(e4, r5) {
    r5.min = m9(e4);
  }
  clone() {
    return new p14({ includeTime: this.includeTime, max: this.max, min: this.min });
  }
};
r([m({ type: Boolean, json: { write: true } })], a10.prototype, "includeTime", void 0), r([m({ type: Date, json: { type: Number, write: true } })], a10.prototype, "max", void 0), r([o("max")], a10.prototype, "readMax", null), r([r3("max")], a10.prototype, "writeMax", null), r([m({ type: Date, json: { type: Number, write: true } })], a10.prototype, "min", void 0), r([o("min")], a10.prototype, "readMin", null), r([r3("min")], a10.prototype, "writeMin", null), r([m({ type: ["datetime-picker"], json: { read: false, write: true } })], a10.prototype, "type", void 0), a10 = p14 = r([a2("esri.form.elements.inputs.DateTimePickerInput")], a10);
var c6 = a10;

// node_modules/@arcgis/core/form/elements/inputs/RadioButtonsInput.js
var s12;
var p15 = s12 = class extends p9 {
  constructor(o2) {
    super(o2), this.noValueOptionLabel = null, this.showNoValueOption = true, this.type = "radio-buttons";
  }
  clone() {
    return new s12({ noValueOptionLabel: this.noValueOptionLabel, showNoValueOption: this.showNoValueOption });
  }
};
r([m({ type: String, json: { write: true } })], p15.prototype, "noValueOptionLabel", void 0), r([m({ type: Boolean, json: { write: true } })], p15.prototype, "showNoValueOption", void 0), r([m({ type: ["radio-buttons"], json: { read: false, write: true } })], p15.prototype, "type", void 0), p15 = s12 = r([a2("esri.form.elements.inputs.RadioButtonsInput")], p15);
var i12 = p15;

// node_modules/@arcgis/core/form/elements/inputs/SwitchInput.js
var s13;
var p16 = s13 = class extends p9 {
  constructor(o2) {
    super(o2), this.offValue = null, this.onValue = null, this.type = "switch";
  }
  clone() {
    return new s13({ offValue: this.offValue, onValue: this.onValue });
  }
};
r([m({ type: [String, Number], json: { write: true } })], p16.prototype, "offValue", void 0), r([m({ type: [String, Number], json: { write: true } })], p16.prototype, "onValue", void 0), r([m({ type: ["switch"], json: { read: false, write: true } })], p16.prototype, "type", void 0), p16 = s13 = r([a2("esri.form.elements.inputs.SwitchInput")], p16);
var i13 = p16;

// node_modules/@arcgis/core/form/elements/inputs/TextAreaInput.js
var s14;
var p17 = s14 = class extends p10 {
  constructor(t4) {
    super(t4), this.type = "text-area";
  }
  clone() {
    return new s14({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["text-area"], json: { read: false, write: true } })], p17.prototype, "type", void 0), p17 = s14 = r([a2("esri.form.elements.inputs.TextAreaInput")], p17);
var a11 = p17;

// node_modules/@arcgis/core/form/elements/inputs/TextBoxInput.js
var s15;
var p18 = s15 = class extends p10 {
  constructor(t4) {
    super(t4), this.type = "text-box";
  }
  clone() {
    return new s15({ maxLength: this.maxLength, minLength: this.minLength });
  }
};
r([m({ type: ["text-box"], json: { read: false, write: true } })], p18.prototype, "type", void 0), p18 = s15 = r([a2("esri.form.elements.inputs.TextBoxInput")], p18);
var n3 = p18;

// node_modules/@arcgis/core/form/elements/inputs/TimePickerInput.js
var s16;
function p19(t4) {
  return null != t4 ? t4 : null;
}
function m10(t4) {
  return null != t4 ? t4 : null;
}
var u3 = s16 = class extends p9 {
  constructor(t4) {
    super(t4), this.max = null, this.min = null, this.timeResolution = "minutes", this.type = "time-picker";
  }
  readMax(t4, e4) {
    return p19(e4.max);
  }
  writeMax(t4, e4) {
    e4.max = m10(t4);
  }
  readMin(t4, e4) {
    return p19(e4.min);
  }
  writeMin(t4, e4) {
    e4.min = m10(t4);
  }
  readTimeResolution(t4, e4) {
    return p19(e4.timeResolution);
  }
  writeTimeResolution(t4, e4) {
    e4.timeResolution = m10(t4);
  }
  clone() {
    return new s16({ max: this.max, min: this.min, timeResolution: this.timeResolution });
  }
};
r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "max", void 0), r([o("max")], u3.prototype, "readMax", null), r([r3("max")], u3.prototype, "writeMax", null), r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "min", void 0), r([o("min")], u3.prototype, "readMin", null), r([r3("min")], u3.prototype, "writeMin", null), r([m({ type: String, json: { type: String, write: true } })], u3.prototype, "timeResolution", void 0), r([o("timeResolution")], u3.prototype, "readTimeResolution", null), r([r3("timeResolution")], u3.prototype, "writeTimeResolution", null), r([m({ type: ["time-picker"], json: { read: false, write: true } })], u3.prototype, "type", void 0), u3 = s16 = r([a2("esri.form.elements.inputs.TimePickerInput")], u3);
var l3 = u3;

// node_modules/@arcgis/core/form/elements/inputs.js
var c7 = { base: p9, key: "type", typeMap: { "barcode-scanner": c4, "combo-box": i11, "date-picker": c5, "datetime-picker": c6, "datetimeoffset-picker": l2, "radio-buttons": i12, switch: i13, "text-area": a11, "text-box": n3, "time-picker": l3 } };

// node_modules/@arcgis/core/form/elements/FieldElement.js
var n4;
var l4 = n4 = class extends i5 {
  constructor(e4) {
    super(e4), this.domain = null, this.editable = null, this.editableExpression = null, this.fieldName = null, this.hint = null, this.input = null, this.requiredExpression = null, this.type = "field", this.valueExpression = null;
  }
  clone() {
    return new n4({ description: this.description, domain: this.domain, editable: this.editable, editableExpression: this.editableExpression, fieldName: this.fieldName, hint: this.hint, input: this.input, label: this.label, requiredExpression: this.requiredExpression, valueExpression: this.valueExpression, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ types: t3, json: { read: { reader: a5 }, write: true } })], l4.prototype, "domain", void 0), r([m({ type: Boolean, json: { write: true } })], l4.prototype, "editable", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "editableExpression", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "fieldName", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "hint", void 0), r([m({ types: c7, json: { read: { source: "inputType" }, write: { target: "inputType" } } })], l4.prototype, "input", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "requiredExpression", void 0), r([m({ type: String, json: { read: false, write: true } })], l4.prototype, "type", void 0), r([m({ type: String, json: { write: true } })], l4.prototype, "valueExpression", void 0), l4 = n4 = r([a2("esri.form.elements.FieldElement")], l4);
var a12 = l4;

// node_modules/@arcgis/core/form/elements/RelationshipElement.js
var p20;
var l5 = p20 = class extends i5 {
  constructor(e4) {
    super(e4), this.displayCount = null, this.displayType = "list", this.editableExpression = null, this.orderByFields = null, this.relationshipId = null, this.type = "relationship";
  }
  clone() {
    return new p20({ description: this.description, displayCount: this.displayCount, displayType: this.displayType, editableExpression: this.editableExpression, label: this.label, orderByFields: a(this.orderByFields), relationshipId: this.relationshipId, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: Number, json: { write: true } })], l5.prototype, "displayCount", void 0), r([m({ type: ["list"], json: { write: true } })], l5.prototype, "displayType", void 0), r([m({ type: String, json: { write: true } })], l5.prototype, "editableExpression", void 0), r([m({ type: [i2], json: { write: true } })], l5.prototype, "orderByFields", void 0), r([m({ type: Number, json: { write: true } })], l5.prototype, "relationshipId", void 0), r([m({ type: ["relationship"], json: { read: false, write: true } })], l5.prototype, "type", void 0), l5 = p20 = r([a2("esri.form.elements.RelationshipElement")], l5);
var n5 = l5;

// node_modules/@arcgis/core/form/elements/TextElement.js
var s17;
var i14 = s17 = class extends i5 {
  constructor(t4) {
    super(t4), this.text = null, this.textFormat = "plain-text", this.type = "text";
  }
  clone() {
    return new s17({ text: this.text, textFormat: this.textFormat, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ type: String, json: { write: true } })], i14.prototype, "text", void 0), r([m({ type: String, json: { write: true } })], i14.prototype, "textFormat", void 0), r([m({ type: ["text"], readOnly: true, json: { read: false, write: true } })], i14.prototype, "type", void 0), i14 = s17 = r([a2("esri.form.elements.TextElement")], i14);
var p21 = i14;

// node_modules/@arcgis/core/form/elements/UtilityNetworkAssociationsElement.js
var p22 = class extends a3.ClonableMixin(i5) {
  constructor(o2) {
    super(o2), this.associationTypes = null, this.editableExpression = null, this.type = "utilityNetworkAssociations";
  }
};
r([m({ type: [c], json: { write: { isRequired: true } } })], p22.prototype, "associationTypes", void 0), r([m({ type: String, json: { write: true } })], p22.prototype, "editableExpression", void 0), r([m({ type: ["utilityNetworkAssociations"], json: { read: false, write: true } })], p22.prototype, "type", void 0), p22 = r([a2("esri.form.elements.UtilityNetworkAssociationsElement")], p22);
var n6 = p22;

// node_modules/@arcgis/core/form/support/formUtils.js
var s18 = (t4) => "field" === t4.type;
var u4 = (t4) => "group" === t4.type;
var m11 = (t4) => "text" === t4.type;
function h(t4) {
  return { typesWithGroup: { base: i5, key: "type", typeMap: { attachment: m6, field: a12, group: t4, relationship: n5, text: p21, utilityNetworkAssociations: n6 } }, typesWithoutGroup: { base: i5, key: "type", typeMap: { attachment: m6, field: a12, relationship: n5, text: p21, utilityNetworkAssociations: n6 } } };
}
function x2(t4, e4, o2 = true) {
  if (!t4) return null;
  const p24 = o2 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t4.filter((t5) => p24[t5.type]).map((t5) => p24[t5.type].fromJSON(t5));
}
function G2(t4, e4, o2 = true) {
  if (!t4) return null;
  const p24 = o2 ? e4.typesWithGroup.typeMap : e4.typesWithoutGroup.typeMap;
  return t4.filter((t5) => p24[t5.type]).map((t5) => t5.toJSON());
}
function W(e4, o2, p24 = true) {
  return e4 ? e4.map((e5) => S(p24 ? o2.typesWithGroup : o2.typesWithoutGroup, e5)) : null;
}

// node_modules/@arcgis/core/form/elements/GroupElement.js
var d2;
var u5 = d2 = class extends i5 {
  constructor(e4) {
    super(e4), this.elements = null, this.initialState = "expanded", this.type = "group";
  }
  castElements(e4) {
    return W(e4, E3, false);
  }
  readElements(e4, t4) {
    return x2(t4.formElements, E3, false);
  }
  writeElements(e4, t4) {
    t4.formElements = G2(e4, E3, false);
  }
  clone() {
    return new d2({ description: this.description, elements: a(this.elements), initialState: this.initialState, label: this.label, visibilityExpression: this.visibilityExpression });
  }
};
r([m({ json: { write: true } })], u5.prototype, "elements", void 0), r([s("elements")], u5.prototype, "castElements", null), r([o("elements", ["formElements"])], u5.prototype, "readElements", null), r([r3("elements")], u5.prototype, "writeElements", null), r([m({ type: ["collapsed", "expanded"], json: { write: true } })], u5.prototype, "initialState", void 0), r([m({ type: String, json: { read: false, write: true } })], u5.prototype, "type", void 0), u5 = d2 = r([a2("esri.form.elements.GroupElement")], u5);
var E3 = h(u5);
var j3 = u5;

// node_modules/@arcgis/core/form/FormTemplate.js
var I;
var b = h(j3);
var F2 = I = class extends l {
  constructor(e4) {
    super(e4), this.description = null, this.elements = null, this.expressionInfos = null, this.preserveFieldValuesWhenHidden = false, this.title = null;
  }
  castElements(e4) {
    return W(e4, b);
  }
  readElements(e4, s19) {
    return x2(s19.formElements, b);
  }
  writeElements(e4, s19) {
    s19.formElements = G2(e4, b);
  }
  clone() {
    return new I({ description: this.description, expressionInfos: a(this.expressionInfos), elements: a(this.elements), title: this.title, preserveFieldValuesWhenHidden: this.preserveFieldValuesWhenHidden });
  }
  async getFieldsUsed(e4, s19) {
    const t4 = /* @__PURE__ */ new Set(), { description: r5, elements: o2, expressionInfos: i15, title: n8 } = this;
    if (U(t4, e4, r5), U(t4, e4, n8), !o2) return [];
    const l7 = k2(o2, i15).map((s20) => E2(t4, e4, s20));
    await Promise.all(l7);
    for (const p24 of o2) g(t4, { fieldsIndex: e4, relationships: s19 }, p24);
    return Array.from(t4).sort();
  }
};
function g(e4, s19, t4) {
  const { fieldsIndex: r5 } = s19;
  if (!r5 || r5.fields.length !== e4.size) switch (U(e4, r5, t4.label), U(e4, r5, t4.description), t4.type) {
    case "field":
      x(e4, r5, t4.fieldName);
      break;
    case "group":
      t4.elements.forEach((t5) => g(e4, s19, t5));
      break;
    case "relationship":
      if (s19.relationships) {
        const o2 = s19.relationships.find((e5) => e5.id === t4.relationshipId);
        o2 && x(e4, r5, o2.keyField);
      }
      T(e4, r5, t4.orderByFields?.map((e5) => e5.field));
      break;
    case "text":
      U(e4, r5, t4.text);
  }
}
function k2(e4, s19) {
  if (!s19 || 0 === s19.length) return [];
  const t4 = H2(e4), r5 = [];
  for (const o2 of s19) t4.has(o2.name) && r5.push(o2.expression);
  return r5;
}
function H2(e4) {
  const s19 = /* @__PURE__ */ new Set();
  for (const t4 of e4) if (t2(s19, t4.visibilityExpression), !m11(t4)) {
    if (u4(t4)) r2(s19, H2(t4.elements));
    else if (t2(s19, t4.editableExpression), s18(t4)) {
      const { requiredExpression: e5, valueExpression: r5 } = t4;
      r2(s19, [e5, r5]);
    }
  }
  return s19;
}
function U(e4, s19, t4) {
  T(e4, s19, Xe(t4));
}
r([m({ type: String, json: { write: true } })], F2.prototype, "description", void 0), r([m({ json: { write: true } })], F2.prototype, "elements", void 0), r([s("elements")], F2.prototype, "castElements", null), r([o("elements", ["formElements"])], F2.prototype, "readElements", null), r([r3("elements")], F2.prototype, "writeElements", null), r([m({ type: [p], json: { write: true } })], F2.prototype, "expressionInfos", void 0), r([m({ type: Boolean, json: { default: false, write: true } })], F2.prototype, "preserveFieldValuesWhenHidden", void 0), r([m({ type: String, json: { write: true } })], F2.prototype, "title", void 0), F2 = I = r([a2("esri.form.FormTemplate")], F2);
var V2 = F2;

// node_modules/@arcgis/core/layers/support/EditFieldsInfo.js
var l6 = class extends a3.ClonableMixin(l) {
  constructor(o2) {
    super(o2), this.creatorField = null, this.creationDateField = null, this.editorField = null, this.editDateField = null, this.realm = null, this.timeZone = null;
  }
};
r([m()], l6.prototype, "creatorField", void 0), r([m()], l6.prototype, "creationDateField", void 0), r([m()], l6.prototype, "editorField", void 0), r([m()], l6.prototype, "editDateField", void 0), r([m()], l6.prototype, "realm", void 0), r([m(a4("dateFieldsTimeReference", true))], l6.prototype, "timeZone", void 0), l6 = r([a2("esri.layers.support.EditFieldsInfo")], l6);

// node_modules/@arcgis/core/layers/support/FeatureIndex.js
var p23 = class extends a3.ClonableMixin(l) {
  constructor(o2) {
    super(o2);
  }
};
r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "name", void 0), r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "fields", void 0), r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "isAscending", void 0), r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "indexType", void 0), r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "isUnique", void 0), r([m({ constructOnly: true, json: { write: true } })], p23.prototype, "description", void 0), p23 = r([a2("esri.layers.support.FeatureIndex")], p23);

// node_modules/@arcgis/core/layers/support/GeometryFieldsInfo.js
var a13 = class extends a3.ClonableMixin(l) {
  constructor(e4) {
    super(e4), this.shapeAreaField = null, this.shapeLengthField = null, this.units = null;
  }
};
r([m({ type: String, json: { read: { source: "shapeAreaFieldName" } } })], a13.prototype, "shapeAreaField", void 0), r([m({ type: String, json: { read: { source: "shapeLengthFieldName" } } })], a13.prototype, "shapeLengthField", void 0), r([m({ type: String, json: { read: (e4) => _e.read(e4) || he.read(e4) } })], a13.prototype, "units", void 0), a13 = r([a2("esri.layers.support.GeometryFieldsInfo")], a13);

// node_modules/@arcgis/core/layers/support/Subtype.js
var n7 = class extends a3.ClonableMixin(l) {
  constructor(o2) {
    super(o2), this.code = null, this.defaultValues = {}, this.domains = null, this.name = null;
  }
  readDomains(o2) {
    if (!o2) return null;
    const r5 = {};
    for (const t4 of Object.keys(o2)) r5[t4] = a5(o2[t4]);
    return r5;
  }
  writeDomains(o2, r5) {
    if (!o2) return;
    const t4 = {};
    for (const e4 of Object.keys(o2)) o2[e4] && (t4[e4] = o2[e4]?.toJSON());
    r5.domains = t4;
  }
};
r([m({ type: Number, json: { write: true } })], n7.prototype, "code", void 0), r([m({ type: Object, json: { write: true } })], n7.prototype, "defaultValues", void 0), r([m({ json: { write: true } })], n7.prototype, "domains", void 0), r([o("domains")], n7.prototype, "readDomains", null), r([r3("domains")], n7.prototype, "writeDomains", null), r([m({ type: String, json: { write: true } })], n7.prototype, "name", void 0), n7 = r([a2("esri.layers.support.Subtype")], n7);

// node_modules/@arcgis/core/layers/mixins/FeatureLayerBase.js
var k3 = (k4) => {
  let L = class extends k4 {
    constructor() {
      super(...arguments), this.copyright = null, this.capabilities = null, this.dateFieldsTimeZone = null, this.datesInUnknownTimezone = false, this.definitionExpression = null, this.displayField = null, this.editFieldsInfo = null, this.editingInfo = null, this.elevationInfo = null, this.fieldsIndex = null, this.floorInfo = null, this.fullExtent = null, this.gdbVersion = null, this.geometryFieldsInfo = null, this.geometryType = null, this.globalIdField = null, this.hasM = void 0, this.hasZ = void 0, this.heightModelInfo = null, this.historicMoment = null, this.indexes = new (V.ofType(p23))(), this.isTable = false, this.layerId = void 0, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.preferredTimeZone = null, this.relationships = null, this.returnM = void 0, this.returnZ = void 0, this.serviceDefinitionExpression = null, this.serviceItemId = null, this.sourceJSON = null, this.spatialReference = f.WGS84, this.subtypeField = null, this.subtypes = null, this.trackIdField = null, this.uniqueIdFields = null, this.version = void 0, this._isUrlHostModified = false, this._isUrlHostModificationEnabled = false;
    }
    getFieldDomain() {
      throw new Error("Not implemented");
    }
    getField(e4) {
      return this.fieldsIndex.get(e4);
    }
    get authenticationTriggerEvent() {
      if (!this.url) return null;
      const { capabilities: e4 } = this;
      if (e4) {
        const { query: t5, operations: i15, editing: r5 } = e4;
        if (!t5.supportsQueryByOthers || !t5.supportsQueryByAnonymous) return "load";
        if (i15.supportsEditing && !(r5.supportsUpdateByOthers && r5.supportsUpdateByAnonymous && r5.supportsDeleteByOthers && r5.supportsDeleteByAnonymous)) return "load";
      }
      if (X(this.serviceDefinitionExpression) || X(this.definitionExpression)) return "load";
      if (this.userHasUpdateItemPrivileges) {
        if (re(this)) return "load";
        if (this.hasUpdateItemRestrictions) return e4.operations.supportsQuery ? "editing" : "load";
      }
      if (this.userHasFullEditingPrivileges && this.hasFullEditingRestrictions) return "editing";
      const t4 = this.editFieldsInfo;
      return (t4?.creatorField || t4?.editorField) && e4?.operations.supportsEditing ? "editing" : null;
    }
    readCapabilitiesFromService(e4, t4) {
      return c2(t4, this.url);
    }
    readEditingInfo(e4, t4) {
      const { editingInfo: i15 } = t4;
      return i15 ? { lastEditDate: null != i15.lastEditDate ? new Date(i15.lastEditDate) : null } : null;
    }
    get effectiveCapabilities() {
      const e4 = this.capabilities;
      if (!e4) return null;
      const t4 = a(e4), { operations: r5, editing: o2 } = t4;
      return ie(this) ? (this.userHasUpdateItemPrivileges && (r5.supportsQuery = true), t4) : this.userHasUpdateItemPrivileges ? (r5.supportsAdd = r5.supportsDelete = r5.supportsEditing = r5.supportsQuery = r5.supportsUpdate = o2.supportsDeleteByOthers = o2.supportsGeometryUpdate = o2.supportsUpdateByOthers = true, t4) : (this.userHasFullEditingPrivileges && r5.supportsEditing && (r5.supportsAdd = r5.supportsDelete = r5.supportsUpdate = o2.supportsGeometryUpdate = true), t4);
    }
    get effectiveEditingEnabled() {
      return false;
    }
    readGlobalIdFieldFromService(e4, t4) {
      return M(t4);
    }
    get hasFullEditingRestrictions() {
      const e4 = this.capabilities;
      if (!e4 || ie(this)) return false;
      const { operations: t4, editing: i15 } = e4;
      return t4.supportsEditing && !(t4.supportsAdd && t4.supportsDelete && t4.supportsUpdate && i15.supportsGeometryUpdate);
    }
    get hasUpdateItemRestrictions() {
      const e4 = this.capabilities;
      if (!e4) return false;
      const { operations: t4, editing: i15 } = e4;
      return ie(this) ? !t4.supportsQuery : !(t4.supportsAdd && t4.supportsDelete && t4.supportsEditing && t4.supportsQuery && t4.supportsUpdate && i15.supportsDeleteByOthers && i15.supportsGeometryUpdate && i15.supportsUpdateByOthers);
    }
    readIsTableFromService(e4, t4) {
      return "Table" === t4.type;
    }
    readMaxScale(e4, t4) {
      return t4.effectiveMaxScale || e4 || 0;
    }
    readMinScale(e4, t4) {
      return t4.effectiveMinScale || e4 || 0;
    }
    readObjectIdFieldFromService(e4, t4) {
      return k(t4);
    }
    readServiceDefinitionExpression(e4, t4) {
      return t4.definitionQuery || t4.definitionExpression;
    }
    readUniqueIdFields(e4, t4) {
      return t4.uniqueIdInfo?.OIDFieldContainsHashValue ? t4.uniqueIdInfo.fields : null;
    }
    set url(e4) {
      if (null == e4) return void this._set("url", e4);
      const t4 = S2({ layer: this, url: e4, nonStandardUrlAllowed: true, logger: i.getLogger(this) });
      this._set("url", t4.url), null != t4.layerId && this._set("layerId", t4.layerId);
    }
    writeUrl(e4, t4, i15, r5) {
      C(this, e4, null, t4, r5);
    }
    readVersion(e4, t4) {
      return z3(t4);
    }
    get isUrlHostModified() {
      const { loaded: e4, url: t4, _isUrlHostModified: i15 } = this;
      if (i15) return true;
      if (!e4 || !t4) return false;
      if (this.originIdOf("url") < e.USER) return false;
      const r5 = this.sourceJSON?.preferredHost;
      if (!r5) return false;
      if (!F(t4, `https://${r5}`, true)) return false;
      for (let s19 = e.USER - 1; s19 >= e.PORTAL_ITEM; s19--) {
        const e5 = this.getAtOrigin("url", t(s19));
        if (e5) return !F(t4, e5, true);
      }
      return false;
    }
    applyPreferredHost(e4) {
      const { url: t4, portalItem: i15 } = this;
      if (!t4 || !G(i15)) return;
      const r5 = z2();
      r5 && this._isUrlHostModificationEnabled && (this._set("url", r5), this._isUrlHostModified = true, i15 && H(i15, A()));
    }
    applyHostFromPortalItem() {
      const { url: e4, portalItem: t4 } = this;
      if (!e4 || this.originIdOf("url") === e.USER || !t4?.url || !G(t4) || !s2(t4, E.HOSTED_SERVICE) || F(e4, t4.url, true) || !this._isUrlHostModificationEnabled) return;
      const i15 = Pt(t4.url);
      this._set("url", vt(e4, i15)), this._isUrlHostModified = true;
    }
  };
  return r([m({ readOnly: true })], L.prototype, "authenticationTriggerEvent", null), r([m({ type: String, json: { origins: { service: { read: { source: "copyrightText" } } } } })], L.prototype, "copyright", void 0), r([m({ readOnly: true, json: { read: false, origins: { service: { read: { source: ["advancedQueryCapabilities", "allowGeometryUpdates", "allowUpdateWithoutMValues", "archivingInfo", "capabilities", "datesInUnknownTimezone", "hasAttachments", "hasM", "hasZ", "isDataBranchVersioned", "isDataVersioned", "maxRecordCount", "maxRecordCountFactor", "maxUniqueIDCount", "ownershipBasedAccessControlForFeatures", "standardMaxRecordCount", "supportedQueryFormats", "supportsAdvancedQueries", "supportsApplyEditsWithGlobalIds", "supportsAttachmentsByUploadId", "supportsAttachmentsResizing", "supportsCalculate", "supportsCoordinatesQuantization", "supportsExceedsLimitStatistics", "supportsFieldDescriptionProperty", "supportsQuantizationEditMode", "supportsRollbackOnFailureParameter", "supportsStatistics", "supportsTruncate", "supportsValidateSql", "tileMaxRecordCount", "useStandardizedQueries"] } } } } })], L.prototype, "capabilities", void 0), r([o("service", "capabilities")], L.prototype, "readCapabilitiesFromService", null), r([m(a4("dateFieldsTimeReference"))], L.prototype, "dateFieldsTimeZone", void 0), r([m({ type: Boolean })], L.prototype, "datesInUnknownTimezone", void 0), r([m({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], L.prototype, "definitionExpression", void 0), r([m({ type: String, json: { origins: { service: { read: { source: "displayField" } } } } })], L.prototype, "displayField", void 0), r([m({ readOnly: true, type: l6 })], L.prototype, "editFieldsInfo", void 0), r([m({ readOnly: true })], L.prototype, "editingInfo", void 0), r([o("editingInfo")], L.prototype, "readEditingInfo", null), r([m({ readOnly: true })], L.prototype, "effectiveCapabilities", null), r([m()], L.prototype, "effectiveEditingEnabled", null), r([m((() => {
    const e4 = a(m2), t4 = e4.json.origins;
    return t4["web-map"] = { read: false, write: false }, t4["portal-item"] = { read: false, write: false }, e4;
  })())], L.prototype, "elevationInfo", void 0), r([m()], L.prototype, "fieldsIndex", void 0), r([m({ type: i3, json: { name: "layerDefinition.floorInfo", write: { layerContainerTypes: a6 } } })], L.prototype, "floorInfo", void 0), r([m({ type: z, json: { origins: { service: { read: { source: "extent" } } } } })], L.prototype, "fullExtent", void 0), r([m()], L.prototype, "gdbVersion", void 0), r([m({ readOnly: true, type: a13, json: { read: { source: "geometryProperties" } } })], L.prototype, "geometryFieldsInfo", void 0), r([m({ type: ["point", "polygon", "polyline", "multipoint", "multipatch", "mesh"], json: { origins: { service: { read: j2.read } } } })], L.prototype, "geometryType", void 0), r([m({ type: String })], L.prototype, "globalIdField", void 0), r([o("service", "globalIdField", ["globalIdField", "fields"])], L.prototype, "readGlobalIdFieldFromService", null), r([m({ readOnly: true })], L.prototype, "hasFullEditingRestrictions", null), r([m({ type: Boolean, json: { origins: { service: { read: true } } } })], L.prototype, "hasM", void 0), r([m({ readOnly: true })], L.prototype, "hasUpdateItemRestrictions", null), r([m({ type: Boolean, json: { origins: { service: { read: true } } } })], L.prototype, "hasZ", void 0), r([m({ readOnly: true, type: m3 })], L.prototype, "heightModelInfo", void 0), r([m({ type: Date })], L.prototype, "historicMoment", void 0), r([m({ type: V.ofType(p23), readOnly: true })], L.prototype, "indexes", void 0), r([m({ readOnly: true })], L.prototype, "isTable", void 0), r([o("service", "isTable", ["type"])], L.prototype, "readIsTableFromService", null), r([m({ type: Number, json: { origins: { service: { read: { source: "id" } }, "portal-item": { read: false, write: { target: "id" } } }, read: false } })], L.prototype, "layerId", void 0), r([m(v)], L.prototype, "maxScale", void 0), r([o("service", "maxScale", ["maxScale", "effectiveMaxScale"])], L.prototype, "readMaxScale", null), r([m(j)], L.prototype, "minScale", void 0), r([o("service", "minScale", ["minScale", "effectiveMinScale"])], L.prototype, "readMinScale", null), r([m({ type: String })], L.prototype, "objectIdField", void 0), r([o("service", "objectIdField", ["objectIdField", "fields"])], L.prototype, "readObjectIdFieldFromService", null), r([m(a4("preferredTimeReference"))], L.prototype, "preferredTimeZone", void 0), r([m({ type: [n], readOnly: true })], L.prototype, "relationships", void 0), r([m({ type: Boolean })], L.prototype, "returnM", void 0), r([m({ type: Boolean })], L.prototype, "returnZ", void 0), r([m({ readOnly: true, json: { write: false } })], L.prototype, "serverGens", void 0), r([m({ readOnly: true })], L.prototype, "serviceDefinitionExpression", void 0), r([o("service", "serviceDefinitionExpression", ["definitionQuery", "definitionExpression"])], L.prototype, "readServiceDefinitionExpression", null), r([m({ type: String, readOnly: true, json: { read: false, origins: { service: { read: true } } } })], L.prototype, "serviceItemId", void 0), r([m()], L.prototype, "sourceJSON", void 0), r([m({ type: f, json: { origins: { service: { read: { source: "extent.spatialReference" } } } } })], L.prototype, "spatialReference", void 0), r([m({ type: String, readOnly: true, json: { origins: { service: { read: true } } } })], L.prototype, "subtypeField", void 0), r([m({ type: [n7], readOnly: true, json: { read: false, origins: { service: { read: true } } } })], L.prototype, "subtypes", void 0), r([m({ type: String, json: { read: { source: "timeInfo.trackIdField" } } })], L.prototype, "trackIdField", void 0), r([m({ type: [String], readOnly: true })], L.prototype, "uniqueIdFields", void 0), r([o("service", "uniqueIdFields", ["uniqueIdInfo.OIDFieldContainsHashValue", "uniqueIdInfo.fields"])], L.prototype, "readUniqueIdFields", null), r([m(y)], L.prototype, "url", null), r([r3("url")], L.prototype, "writeUrl", null), r([m({ json: { origins: { service: { read: true } }, read: false } })], L.prototype, "version", void 0), r([o("service", "version", ["currentVersion", "capabilities", "drawingInfo", "hasAttachments", "htmlPopupType", "relationships", "timeInfo", "typeIdField", "types"])], L.prototype, "readVersion", null), r([m({ readOnly: true })], L.prototype, "isUrlHostModified", null), L = r([a2("esri.layers.mixins.FeatureLayerBase")], L), L;
};

export {
  V2 as V,
  k3 as k
};
//# sourceMappingURL=chunk-2SK5ARBZ.js.map
