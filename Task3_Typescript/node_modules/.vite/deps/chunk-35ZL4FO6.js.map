{
  "version": 3,
  "sources": ["../../@arcgis/lumina/dist/proxyExports-Cdzj7WL_.js", "../../@arcgis/lumina/dist/controllers/index.js", "../../@esri/calcite-components/dist/chunks/useT9n.js"],
  "sourcesContent": ["import { d as setParentController, e as retrieveParentControllers, o as setAmbientChildController, t as trackKey, h as bypassReadOnly } from \"./Controller-BQOv8BAL.js\";\r\nconst proxyExports = (Class) => (...args) => {\r\n  const ambientControllers = retrieveParentControllers();\r\n  const instance = new Class(...args);\r\n  const initialExports = instance.exports;\r\n  setParentController(ambientControllers.at(-1));\r\n  const manager = instance.component.manager;\r\n  manager.W(instance, initialExports);\r\n  instance.watchExports(manager.W.bind(manager, instance));\r\n  setAmbientChildController(instance);\r\n  const hostCandidates = [instance.component, ...ambientControllers].reverse();\r\n  return trackKey(\r\n    hostCandidates,\r\n    (resolution) => resolution === void 0 ? void 0 : setProxy(instance, resolution, initialExports),\r\n    initialExports\r\n  );\r\n};\r\nconst setProxy = (controller, { host, key, isReactive: assignedToProp }, initialExports) => {\r\n  const genericHost = host;\r\n  const controllerValueChanged = genericHost[key] !== controller.exports;\r\n  const hostValueChanged = genericHost[key] !== initialExports;\r\n  const controllerUpdatedExports = initialExports !== controller.exports;\r\n  if (controllerValueChanged && !hostValueChanged && controllerUpdatedExports) {\r\n    genericHost[key] = controller.exports;\r\n  }\r\n  const isProxyExportsOnComponent = host === controller.component;\r\n  if (isProxyExportsOnComponent) {\r\n    if (assignedToProp) {\r\n      const manager = controller.component.manager;\r\n      if (hostValueChanged) {\r\n        manager.W(controller, genericHost[key]);\r\n      }\r\n      controller.onUpdate((changes) => {\r\n        if (changes.has(key)) {\r\n          const value = genericHost[key];\r\n          if (value !== controller.exports) {\r\n            manager.W(controller, value);\r\n          }\r\n        }\r\n      });\r\n    }\r\n    controller.O = assignedToProp ? void 0 : key;\r\n  }\r\n  const isReadOnly = controller.component.constructor.elementProperties.get(key)?.readOnly;\r\n  controller.watchExports(() => {\r\n    if (genericHost[key] === controller.exports) {\r\n      return;\r\n    }\r\n    if (isReadOnly) {\r\n      bypassReadOnly(() => {\r\n        genericHost[key] = controller.exports;\r\n      });\r\n    } else {\r\n      genericHost[key] = controller.exports;\r\n    }\r\n  });\r\n};\r\nexport {\r\n  proxyExports as p\r\n};\r\n", "import { C as Controller, s as setAmbientComponent, i as isPromise, d as setParentController, e as retrieveParentControllers, t as trackKey, r as retrieveComponent, f as createEventFactory } from \"../Controller-BQOv8BAL.js\";\r\nimport { G, h, g, c, n, m, k, l, j } from \"../Controller-BQOv8BAL.js\";\r\nimport { p as proxyExports } from \"../proxyExports-Cdzj7WL_.js\";\r\nimport { isServer } from \"lit\";\r\nimport { observeAncestorsMutation, isEsriInternalEnv, getElementAttribute, getElementLocales, startLocaleObserver } from \"@arcgis/components-utils\";\r\nconst makeController = (constructor) => proxy(void 0, constructor);\r\nconst makeGenericController = (constructor) => (component) => proxy(\r\n  component,\r\n  /**\r\n   * GenericController is identical to Controller, in all except for typing.\r\n   * So dying a type-cast here so as not to needlessly add one more object\r\n   * to the prototype chain\r\n   */\r\n  constructor\r\n);\r\nclass FunctionalController extends Controller {\r\n  constructor(component, constructor) {\r\n    super(component);\r\n    const originalExports = this.exports;\r\n    try {\r\n      setAmbientComponent(this.component);\r\n      const value = constructor(this.component, this);\r\n      const constructorChangedExports = this.exports !== originalExports;\r\n      if (isPromise(value)) {\r\n        if (!constructorChangedExports) {\r\n          this.setProvisionalExports(value);\r\n        }\r\n        const resolved = value.then((result) => {\r\n          this.exports = result;\r\n          super.catchUpLifecycle();\r\n        }).catch((error) => {\r\n          this.P.reject(error);\r\n          console.error(error);\r\n        });\r\n        this.onLoad(async () => await resolved);\r\n      } else {\r\n        if (!constructorChangedExports || value !== void 0) {\r\n          this.exports = value;\r\n        }\r\n        queueMicrotask(() => super.catchUpLifecycle());\r\n      }\r\n    } catch (error) {\r\n      this.P.reject(error);\r\n      console.error(error);\r\n    }\r\n  }\r\n  /** Noop - will be called in the constructor instead */\r\n  catchUpLifecycle() {\r\n    return;\r\n  }\r\n}\r\nconst proxy = proxyExports(FunctionalController);\r\nconst useWatchAttributes = (attributes, callback) => new AttributeWatchController(attributes, callback);\r\nclass AttributeWatchController extends Controller {\r\n  #observer;\r\n  #attributes;\r\n  #callback;\r\n  constructor(attributes, callback) {\r\n    super();\r\n    if (isServer) {\r\n      return;\r\n    }\r\n    this.#attributes = attributes;\r\n    this.#callback = callback;\r\n    this.#observer = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (attributes.includes(mutation.attributeName)) {\r\n          callback.call(\r\n            this.component,\r\n            this.component.el.getAttribute(mutation.attributeName),\r\n            mutation.oldValue,\r\n            mutation.attributeName\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }\r\n  hostConnected() {\r\n    this.#attributes.forEach((attribute) => {\r\n      if (this.component.el.hasAttribute(attribute)) {\r\n        this.#callback.call(this.component, null, this.component.el.getAttribute(attribute), attribute);\r\n      }\r\n    });\r\n    this.#observer.observe(this.component.el, {\r\n      attributes: true,\r\n      attributeOldValue: true,\r\n      attributeFilter: this.#attributes\r\n    });\r\n  }\r\n  hostDisconnected() {\r\n    this.#observer.disconnect();\r\n  }\r\n}\r\nconst load = makeController;\r\nconst toFunction = (Class) => (...args) => {\r\n  const ambientControllers = retrieveParentControllers();\r\n  const instance = new Class(...args);\r\n  setParentController(ambientControllers.at(-1));\r\n  return instance;\r\n};\r\nconst useMedia = (query) => makeController((_component, controller) => {\r\n  const media = globalThis.matchMedia(query);\r\n  const changed = () => {\r\n    controller.exports = media.matches;\r\n  };\r\n  changed();\r\n  controller.onLifecycle(() => {\r\n    media.addEventListener(\"change\", changed);\r\n    return () => media.removeEventListener(\"change\", changed);\r\n  });\r\n  return void 0;\r\n});\r\nconst defaultDirection = \"ltr\";\r\nconst useDirection = () => makeController((component, controller) => {\r\n  controller.exports = defaultDirection;\r\n  controller.onLifecycle(() => {\r\n    const callback = () => {\r\n      const dir = getElementAttribute(component.el, \"dir\", defaultDirection);\r\n      controller.exports = dir === \"rtl\" ? \"rtl\" : \"ltr\";\r\n    };\r\n    callback();\r\n    return observeAncestorsMutation(component.el, [\"dir\"], callback);\r\n  });\r\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\r\n    trackKey(\r\n      component,\r\n      (resolved) => {\r\n        if (resolved?.key === \"dir\") {\r\n          throw new Error(\r\n            `Do not assign this controller to a prop called \\`dir\\` as that will overwrite the \\`dir\\` attribute on the host element - component should not be setting the \\`dir\\` attribute on itself. Instead, assign this controller to a property called \\`direction\\`.`\r\n          );\r\n        }\r\n      },\r\n      controller.exports\r\n    );\r\n  }\r\n  return void 0;\r\n});\r\nconst makeT9nController = (getAssetPath) => (options = {}) => (\r\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\r\n  makeController((component, controller) => {\r\n    const locale = getElementLocales(component.el);\r\n    const pending = { [\"_lang\"]: locale.lang, [\"_t9nLocale\"]: locale.t9nLocale, [\"_loading\"]: true };\r\n    const componentWithOverrides = component;\r\n    controller.onLifecycle(\r\n      () => startLocaleObserver(\r\n        component.el,\r\n        () => getAssetPath(\"./assets\"),\r\n        ({ t9nLocale, t9nStrings, lang }) => {\r\n          const withoutOverrides = {\r\n            ...t9nStrings,\r\n            [\"_lang\"]: lang,\r\n            [\"_t9nLocale\"]: t9nLocale,\r\n            [\"_loading\"]: false\r\n          };\r\n          controller.exports = withoutOverrides;\r\n          const label = t9nStrings.componentLabel;\r\n          if (typeof label === \"string\" && \"label\" in component && component.label == null) {\r\n            component.label ??= label;\r\n          }\r\n          applyOverrides(componentWithOverrides.messageOverrides);\r\n        },\r\n        options.name\r\n      )\r\n    );\r\n    const applyOverrides = (messageOverrides) => {\r\n      const currentValue = controller.exports;\r\n      const rawMessages = currentValue[\"_original\"] ?? currentValue;\r\n      const updated = deepMerge(rawMessages, messageOverrides);\r\n      if (messageOverrides) {\r\n        updated[\"_original\"] = rawMessages;\r\n      }\r\n      controller.exports = updated;\r\n    };\r\n    if (\"messageOverrides\" in componentWithOverrides) {\r\n      controller.onUpdate((changes) => {\r\n        if (changes.has(\"messageOverrides\")) {\r\n          applyOverrides(componentWithOverrides.messageOverrides);\r\n        }\r\n      });\r\n    }\r\n    if (options.blocking) {\r\n      controller.setProvisionalExports(pending, false);\r\n      return controller.ready;\r\n    } else {\r\n      return pending;\r\n    }\r\n  })\r\n);\r\nconst deepMerge = (original, overwrites) => {\r\n  if (!overwrites) {\r\n    return original;\r\n  }\r\n  const merged = { ...original };\r\n  Object.entries(overwrites).forEach(([key, value]) => {\r\n    if (typeof value === \"object\") {\r\n      merged[key] = deepMerge(original[key], value);\r\n    } else {\r\n      merged[key] = value ?? original[key];\r\n    }\r\n  });\r\n  return merged;\r\n};\r\nconst usePropertyChange = (_component) => propertyChangeController;\r\nconst eventName = \"arcgisPropertyChange\";\r\nconst propertyChangeController = (...toWatch) => {\r\n  const component = retrieveComponent();\r\n  const eventEmitter = createEventFactory(eventName, void 0, component);\r\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\r\n    toWatch.forEach((prop) => {\r\n      const descriptor = component.constructor.elementProperties.get(prop);\r\n      const isProp = descriptor !== void 0 && descriptor.state !== true;\r\n      if (!isProp) {\r\n        throw new Error(\r\n          `For usePropertyChange to emit event on \"${prop}\" property change, you should add @property() to ${prop} in ${component.el.localName}`\r\n        );\r\n      }\r\n    });\r\n  }\r\n  let isFirst = true;\r\n  component.manager.onUpdated((changes) => {\r\n    if (isFirst || !component.el.isConnected) {\r\n      isFirst = false;\r\n      return;\r\n    }\r\n    for (const name of toWatch) {\r\n      if (changes.has(name)) {\r\n        eventEmitter.emit({ name });\r\n      }\r\n    }\r\n  });\r\n  if (process.env.NODE_ENV !== \"production\" && isEsriInternalEnv()) {\r\n    trackKey(\r\n      component,\r\n      (resolution) => {\r\n        if (resolution === void 0 || resolution.isReactive || resolution.key !== eventName) {\r\n          throw new Error(\r\n            `For consistency, usePropertyChange must be assigned to an arcgisPropertyChange property and that property should not have @property() or @state() decorators: arcgisPropertyChange = usePropertyChange<this>()(\"prop1\", \"prop2\");`\r\n          );\r\n        }\r\n      },\r\n      eventEmitter\r\n    );\r\n  }\r\n  return eventEmitter;\r\n};\r\nexport {\r\n  Controller,\r\n  G as GenericController,\r\n  h as bypassReadOnly,\r\n  g as bypassSetter,\r\n  c as controllerSymbol,\r\n  n as getControllersCount,\r\n  m as isController,\r\n  k as keyTrackResolve,\r\n  load,\r\n  makeController,\r\n  makeGenericController,\r\n  makeT9nController,\r\n  proxyExports,\r\n  retrieveComponent,\r\n  toFunction,\r\n  trackKey,\r\n  l as trackPropKey,\r\n  j as trackPropertyKey,\r\n  useDirection,\r\n  useMedia,\r\n  usePropertyChange,\r\n  useWatchAttributes\r\n};\r\n", "/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\r\nv3.2.1 */\r\nimport { makeT9nController } from \"@arcgis/lumina/controllers\";\r\nimport { g as getAssetPath } from \"./runtime.js\";\r\nconst useT9n = makeT9nController(getAssetPath);\r\nexport {\r\n  useT9n as u\r\n};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;AACA,IAAM,eAAe,CAAC,UAAU,IAAI,SAAS;AAC3C,QAAM,qBAAqB,0BAA0B;AACrD,QAAM,WAAW,IAAI,MAAM,GAAG,IAAI;AAClC,QAAM,iBAAiB,SAAS;AAChC,sBAAoB,mBAAmB,GAAG,EAAE,CAAC;AAC7C,QAAM,UAAU,SAAS,UAAU;AACnC,UAAQ,EAAE,UAAU,cAAc;AAClC,WAAS,aAAa,QAAQ,EAAE,KAAK,SAAS,QAAQ,CAAC;AACvD,4BAA0B,QAAQ;AAClC,QAAM,iBAAiB,CAAC,SAAS,WAAW,GAAG,kBAAkB,EAAE,QAAQ;AAC3E,SAAO;AAAA,IACL;AAAA,IACA,CAAC,eAAe,eAAe,SAAS,SAAS,SAAS,UAAU,YAAY,cAAc;AAAA,IAC9F;AAAA,EACF;AACF;AACA,IAAM,WAAW,CAAC,YAAY,EAAE,MAAM,KAAK,YAAY,eAAe,GAAG,mBAAmB;AAC1F,QAAM,cAAc;AACpB,QAAM,yBAAyB,YAAY,GAAG,MAAM,WAAW;AAC/D,QAAM,mBAAmB,YAAY,GAAG,MAAM;AAC9C,QAAM,2BAA2B,mBAAmB,WAAW;AAC/D,MAAI,0BAA0B,CAAC,oBAAoB,0BAA0B;AAC3E,gBAAY,GAAG,IAAI,WAAW;AAAA,EAChC;AACA,QAAM,4BAA4B,SAAS,WAAW;AACtD,MAAI,2BAA2B;AAC7B,QAAI,gBAAgB;AAClB,YAAM,UAAU,WAAW,UAAU;AACrC,UAAI,kBAAkB;AACpB,gBAAQ,EAAE,YAAY,YAAY,GAAG,CAAC;AAAA,MACxC;AACA,iBAAW,SAAS,CAAC,YAAY;AAC/B,YAAI,QAAQ,IAAI,GAAG,GAAG;AACpB,gBAAM,QAAQ,YAAY,GAAG;AAC7B,cAAI,UAAU,WAAW,SAAS;AAChC,oBAAQ,EAAE,YAAY,KAAK;AAAA,UAC7B;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AACA,eAAW,IAAI,iBAAiB,SAAS;AAAA,EAC3C;AACA,QAAM,aAAa,WAAW,UAAU,YAAY,kBAAkB,IAAI,GAAG,GAAG;AAChF,aAAW,aAAa,MAAM;AAC5B,QAAI,YAAY,GAAG,MAAM,WAAW,SAAS;AAC3C;AAAA,IACF;AACA,QAAI,YAAY;AACd,qBAAe,MAAM;AACnB,oBAAY,GAAG,IAAI,WAAW;AAAA,MAChC,CAAC;AAAA,IACH,OAAO;AACL,kBAAY,GAAG,IAAI,WAAW;AAAA,IAChC;AAAA,EACF,CAAC;AACH;;;ACnDA,IAAM,iBAAiB,CAAC,gBAAgB,MAAM,QAAQ,WAAW;AACjE,IAAM,wBAAwB,CAAC,gBAAgB,CAAC,cAAc;AAAA,EAC5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA;AACF;AACA,IAAM,uBAAN,cAAmC,WAAW;AAAA,EAC5C,YAAY,WAAW,aAAa;AAClC,UAAM,SAAS;AACf,UAAM,kBAAkB,KAAK;AAC7B,QAAI;AACF,0BAAoB,KAAK,SAAS;AAClC,YAAM,QAAQ,YAAY,KAAK,WAAW,IAAI;AAC9C,YAAM,4BAA4B,KAAK,YAAY;AACnD,UAAI,UAAU,KAAK,GAAG;AACpB,YAAI,CAAC,2BAA2B;AAC9B,eAAK,sBAAsB,KAAK;AAAA,QAClC;AACA,cAAM,WAAW,MAAM,KAAK,CAAC,WAAW;AACtC,eAAK,UAAU;AACf,gBAAM,iBAAiB;AAAA,QACzB,CAAC,EAAE,MAAM,CAAC,UAAU;AAClB,eAAK,EAAE,OAAO,KAAK;AACnB,kBAAQ,MAAM,KAAK;AAAA,QACrB,CAAC;AACD,aAAK,OAAO,YAAY,MAAM,QAAQ;AAAA,MACxC,OAAO;AACL,YAAI,CAAC,6BAA6B,UAAU,QAAQ;AAClD,eAAK,UAAU;AAAA,QACjB;AACA,uBAAe,MAAM,MAAM,iBAAiB,CAAC;AAAA,MAC/C;AAAA,IACF,SAAS,OAAO;AACd,WAAK,EAAE,OAAO,KAAK;AACnB,cAAQ,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AAAA;AAAA,EAEA,mBAAmB;AACjB;AAAA,EACF;AACF;AACA,IAAM,QAAQ,aAAa,oBAAoB;AAC/C,IAAM,qBAAqB,CAAC,YAAY,aAAa,IAAI,yBAAyB,YAAY,QAAQ;AACtG,IAAM,2BAAN,cAAuC,WAAW;AAAA,EAChD;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,YAAY,UAAU;AAChC,UAAM;AACN,QAAI,UAAU;AACZ;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,YAAY,IAAI,iBAAiB,CAAC,cAAc;AACnD,gBAAU,QAAQ,CAAC,aAAa;AAC9B,YAAI,WAAW,SAAS,SAAS,aAAa,GAAG;AAC/C,mBAAS;AAAA,YACP,KAAK;AAAA,YACL,KAAK,UAAU,GAAG,aAAa,SAAS,aAAa;AAAA,YACrD,SAAS;AAAA,YACT,SAAS;AAAA,UACX;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB;AACd,SAAK,YAAY,QAAQ,CAAC,cAAc;AACtC,UAAI,KAAK,UAAU,GAAG,aAAa,SAAS,GAAG;AAC7C,aAAK,UAAU,KAAK,KAAK,WAAW,MAAM,KAAK,UAAU,GAAG,aAAa,SAAS,GAAG,SAAS;AAAA,MAChG;AAAA,IACF,CAAC;AACD,SAAK,UAAU,QAAQ,KAAK,UAAU,IAAI;AAAA,MACxC,YAAY;AAAA,MACZ,mBAAmB;AAAA,MACnB,iBAAiB,KAAK;AAAA,IACxB,CAAC;AAAA,EACH;AAAA,EACA,mBAAmB;AACjB,SAAK,UAAU,WAAW;AAAA,EAC5B;AACF;AA8CA,IAAM,oBAAoB,CAACA,kBAAiB,CAAC,UAAU,CAAC;AAAA;AAAA,EAEtD,eAAe,CAAC,WAAW,eAAe;AACxC,UAAM,SAAS,kBAAkB,UAAU,EAAE;AAC7C,UAAM,UAAU,EAAE,CAAC,OAAO,GAAG,OAAO,MAAM,CAAC,YAAY,GAAG,OAAO,WAAW,CAAC,UAAU,GAAG,KAAK;AAC/F,UAAM,yBAAyB;AAC/B,eAAW;AAAA,MACT,MAAM;AAAA,QACJ,UAAU;AAAA,QACV,MAAMA,cAAa,UAAU;AAAA,QAC7B,CAAC,EAAE,WAAW,YAAY,KAAK,MAAM;AACnC,gBAAM,mBAAmB;AAAA,YACvB,GAAG;AAAA,YACH,CAAC,OAAO,GAAG;AAAA,YACX,CAAC,YAAY,GAAG;AAAA,YAChB,CAAC,UAAU,GAAG;AAAA,UAChB;AACA,qBAAW,UAAU;AACrB,gBAAM,QAAQ,WAAW;AACzB,cAAI,OAAO,UAAU,YAAY,WAAW,aAAa,UAAU,SAAS,MAAM;AAChF,sBAAU,UAAU;AAAA,UACtB;AACA,yBAAe,uBAAuB,gBAAgB;AAAA,QACxD;AAAA,QACA,QAAQ;AAAA,MACV;AAAA,IACF;AACA,UAAM,iBAAiB,CAAC,qBAAqB;AAC3C,YAAM,eAAe,WAAW;AAChC,YAAM,cAAc,aAAa,WAAW,KAAK;AACjD,YAAM,UAAU,UAAU,aAAa,gBAAgB;AACvD,UAAI,kBAAkB;AACpB,gBAAQ,WAAW,IAAI;AAAA,MACzB;AACA,iBAAW,UAAU;AAAA,IACvB;AACA,QAAI,sBAAsB,wBAAwB;AAChD,iBAAW,SAAS,CAAC,YAAY;AAC/B,YAAI,QAAQ,IAAI,kBAAkB,GAAG;AACnC,yBAAe,uBAAuB,gBAAgB;AAAA,QACxD;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,QAAQ,UAAU;AACpB,iBAAW,sBAAsB,SAAS,KAAK;AAC/C,aAAO,WAAW;AAAA,IACpB,OAAO;AACL,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AAAA;AAEH,IAAM,YAAY,CAAC,UAAU,eAAe;AAC1C,MAAI,CAAC,YAAY;AACf,WAAO;AAAA,EACT;AACA,QAAM,SAAS,EAAE,GAAG,SAAS;AAC7B,SAAO,QAAQ,UAAU,EAAE,QAAQ,CAAC,CAAC,KAAK,KAAK,MAAM;AACnD,QAAI,OAAO,UAAU,UAAU;AAC7B,aAAO,GAAG,IAAI,UAAU,SAAS,GAAG,GAAG,KAAK;AAAA,IAC9C,OAAO;AACL,aAAO,GAAG,IAAI,SAAS,SAAS,GAAG;AAAA,IACrC;AAAA,EACF,CAAC;AACD,SAAO;AACT;;;ACrMA,IAAM,SAAS,kBAAkB,YAAY;",
  "names": ["getAssetPath"]
}
