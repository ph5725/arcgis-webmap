{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/layers/support/layerUtils.js", "../../@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/interfaces.js", "../../@arcgis/core/views/3d/webgl-engine/collections/Component/Material/shader/ComponentData.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js", "../../@arcgis/core/views/3d/layers/support/edgeUtils.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nfunction t(t){return\"fill\"===t.type}function e(t){return\"extrude\"===t.type}export{e as isExtrudeSymbol3DLayer,t as isFillSymbol3DLayer};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nvar A;!function(A){A[A.TRANSPARENT=0]=\"TRANSPARENT\",A[A.OPAQUE=1]=\"OPAQUE\"}(A||(A={}));export{A as Transparency};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{neverReached as o}from\"../../../../../../../core/compilerUtils.js\";import{packFloatRGBA as e}from\"../../../../../../../core/floatRGBA.js\";import{DecodeSymbolColor as r}from\"./DecodeSymbolColor.glsl.js\";import{ShaderOutput as t}from\"../../../../core/shaderLibrary/ShaderOutput.js\";import{RgbaFloatEncoding as n}from\"../../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float4DrawUniform as a}from\"../../../../core/shaderModules/Float4DrawUniform.js\";import{glsl as d,If as l}from\"../../../../core/shaderModules/glsl.js\";import{IntegerDrawUniform as c}from\"../../../../core/shaderModules/IntegerDrawUniform.js\";import{Texture2DDrawUniform as i}from\"../../../../core/shaderModules/Texture2DDrawUniform.js\";import{olidEnabled as s}from\"../../../../effects/geometry/olidUtils.js\";import{VertexAttribute as x}from\"../../../../lib/VertexAttribute.js\";var C;!function(o){o[o.Uniform=0]=\"Uniform\",o[o.Varying=1]=\"Varying\",o[o.COUNT=2]=\"COUNT\"}(C||(C={}));const m=429496.7296;function f(o,r){e(o/m*.5+.5,r)}function u(e,r){switch(r.componentData){case C.Varying:return v(e,r);case C.Uniform:return p(e,r);case C.COUNT:return;default:o(r.componentData)}}function v(o,e){const{vertex:a,fragment:l}=o;a.include(n),a.uniforms.add(new i(\"componentColorTex\",(o=>o.componentParameters.texture.texture))),o.attributes.add(x.COMPONENTINDEX,\"float\"),o.varyings.add(\"vExternalColorMixMode\",\"mediump float\"),o.varyings.add(\"vExternalColor\",\"vec4\");const c=e.output===t.ObjectAndLayerIdColor;c&&o.varyings.add(\"vObjectAndLayerIdColor\",\"vec4\"),o.include(r),a.constants.add(\"stride\",\"float\",s()?3:2),a.code.add(d`vec2 getComponentTextureCoordinates(float componentIndex, float typeOffset) {\r\nfloat index = componentIndex * stride + typeOffset;\r\nfloat texSize = float(textureSize(componentColorTex, 0).x);\r\nfloat coordX = mod(index, texSize);\r\nfloat coordY = floor(index / texSize);\r\nreturn vec2(coordX, coordY) + 0.5;\r\n}`),a.code.add(d`\r\n  vec4 _readComponentColor() {\r\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 0.0);\r\n    return texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\r\n   }\r\n\r\n  float readElevationOffset() {\r\n    vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 1.0);\r\n    vec4 encodedElevation = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\r\n    return uninterpolatedRGBAToFloat(encodedElevation) * ${d.float(m)};\r\n  }\r\n\r\n  ${c?d`\r\n          void forwardObjectAndLayerIdColor() {\r\n            vec2 textureCoordinates = getComponentTextureCoordinates(componentIndex, 2.0);\r\n            vObjectAndLayerIdColor = texelFetch(componentColorTex, ivec2(textureCoordinates), 0);\r\n          }`:d`void forwardObjectAndLayerIdColor() {}`}\r\n\r\n  vec4 forwardExternalColor(out bool castShadows) {\r\n    vec4 componentColor = _readComponentColor() * 255.0;\r\n\r\n    float shadowFlag = mod(componentColor.b * 255.0, 2.0);\r\n    componentColor.b -= shadowFlag;\r\n    castShadows = shadowFlag >= 1.0;\r\n\r\n    int decodedColorMixMode;\r\n    vExternalColor = decodeSymbolColor(componentColor, decodedColorMixMode) * 0.003921568627451; // = 1/255;\r\n    vExternalColorMixMode = float(decodedColorMixMode) + 0.5; // add 0.5 to avoid interpolation artifacts\r\n\r\n    return vExternalColor;\r\n  }\r\n`),l.code.add(d`\r\n  void readExternalColor(out vec4 externalColor, out int externalColorMixMode) {\r\n    externalColor = vExternalColor;\r\n    externalColorMixMode = int(vExternalColorMixMode);\r\n  }\r\n\r\n  void outputObjectAndLayerIdColor() {\r\n     ${c?d`fragColor = vObjectAndLayerIdColor;`:\"\"}\r\n  }\r\n`)}function p(o,e){const{vertex:r,fragment:n}=o;o.varyings.add(\"vExternalColor\",\"vec4\"),r.uniforms.add(new a(\"externalColor\",(o=>o.componentParameters.externalColor))).code.add(d`float readElevationOffset() {\r\nreturn 0.0;\r\n}\r\nvoid forwardObjectAndLayerIdColor() {}\r\nvec4 forwardExternalColor(out bool castShadows) {\r\nvExternalColor = externalColor;\r\ncastShadows = true;\r\nreturn externalColor;\r\n}`);const i=e.output===t.ObjectAndLayerIdColor;n.uniforms.add(new c(\"externalColorMixMode\",(o=>o.componentParameters.externalColorMixMode))).code.add(d`\r\n    void readExternalColor(out vec4 color, out int colorMixMode) {\r\n      color = vExternalColor;\r\n      colorMixMode = externalColorMixMode;\r\n    }\r\n\r\n    void outputObjectAndLayerIdColor() {\r\n      ${l(i,\"fragColor = vec4(0, 0, 0, 0);\")}\r\n    }\r\n  `)}export{u as ComponentData,C as ComponentDataType,f as encodeElevationOffset,m as maxElevationOffset};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{maxElevationOffset as o}from\"../../../collections/Component/Material/shader/ComponentData.glsl.js\";import{NormalAttribute as e}from\"../../../core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{DoublePrecision as r}from\"../../../core/shaderLibrary/util/DoublePrecision.glsl.js\";import{RgbaFloatEncoding as t}from\"../../../core/shaderLibrary/util/RgbaFloatEncoding.glsl.js\";import{Float3DrawUniform as a}from\"../../../core/shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as l}from\"../../../core/shaderModules/Float3PassUniform.js\";import{glsl as n}from\"../../../core/shaderModules/glsl.js\";import{Matrix3DrawUniform as d}from\"../../../core/shaderModules/Matrix3DrawUniform.js\";import{Matrix3PassUniform as m}from\"../../../core/shaderModules/Matrix3PassUniform.js\";import{Matrix4BindUniform as i}from\"../../../core/shaderModules/Matrix4BindUniform.js\";import{Texture2DDrawUniform as s}from\"../../../core/shaderModules/Texture2DDrawUniform.js\";import{VertexAttribute as c}from\"../../../lib/VertexAttribute.js\";function f(f,v){const{vertex:u}=f;u.include(t),f.include(e,v);const{silhouette:x,legacy:p,spherical:w}=v;u.uniforms.add(new s(\"componentDataTex\",(o=>o.componentDataTexture))),f.attributes.add(c.COMPONENTINDEX,\"float\");const M=0,F=1,T=2,h=3,P=8,V=128;u.constants.add(\"lineWidthFractionFactor\",\"float\",8),u.constants.add(\"extensionLengthOffset\",\"float\",128),u.code.add(n`\r\n    vec2 _componentTextureCoords(float componentIndex, float fieldOffset) {\r\n      float fieldIndex = ${n.float(h)}  * componentIndex + fieldOffset;\r\n      float texSize = float(textureSize(componentDataTex, 0).x);\r\n      float colIndex = mod(fieldIndex, texSize);\r\n      float rowIndex = floor(fieldIndex / texSize);\r\n\r\n      return vec2(colIndex, rowIndex) + 0.5;\r\n    }\r\n\r\n    struct ComponentData {\r\n      vec4 color;\r\n      vec3 normal;\r\n      vec3 normal2;\r\n      float lineWidth;\r\n      float extensionLength;\r\n      float type;\r\n      float verticalOffset;\r\n    };\r\n\r\n    ComponentData readComponentData() {\r\n      vec2 colorIndex = _componentTextureCoords(componentIndex, ${n.float(M)});\r\n      vec2 otherIndex = _componentTextureCoords(componentIndex, ${n.float(F)});\r\n      vec2 verticalOffsetIndex = _componentTextureCoords(float(componentIndex), ${n.float(T)} );\r\n      vec3 normal = normalModel();\r\n      vec3 normal2 = ${x?n`decompressNormal(normal2Compressed)`:n`normal`};\r\n\r\n      vec4 colorValue = texelFetch(componentDataTex, ivec2(colorIndex), 0);\r\n      vec4 otherValue = texelFetch(componentDataTex, ivec2(otherIndex), 0);\r\n      float verticalOffset = uninterpolatedRGBAToFloat(texelFetch(componentDataTex, ivec2(verticalOffsetIndex), 0)) * ${n.float(o)};\r\n\r\n      return ComponentData(\r\n        vec4(colorValue.rgb, colorValue.a * otherValue.w), // otherValue.w stores separate opacity\r\n        normal, normal2,\r\n        otherValue.x * (255.0 / ${n.float(P)} ),\r\n        otherValue.y * 255.0 - ${n.float(V)},\r\n        -(otherValue.z * 255.0) + 0.5, // SOLID (=0/255) needs to be > 0.0, SKETCHY (=1/255) needs to be <= 0;\r\n        verticalOffset\r\n      );\r\n    }\r\n  `),p?u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\r\nreturn (model * vec4(normal, 0.0)).xyz;\r\n}\r\nvec3 _modelToViewNormal(vec3 normal) {\r\nreturn (localView * model * vec4(normal, 0.0)).xyz;\r\n}`):(u.uniforms.add(new d(\"transformNormalGlobalFromModel\",(o=>o.transformNormalGlobalFromModel))),u.code.add(n`vec3 _modelToWorldNormal(vec3 normal) {\r\nreturn transformNormalGlobalFromModel * normal;\r\n}`)),x?(f.attributes.add(c.NORMAL2COMPRESSED,\"vec2\"),u.code.add(n`vec3 worldNormal(ComponentData data) {\r\nreturn _modelToWorldNormal(normalize(data.normal + data.normal2));\r\n}`)):u.code.add(n`vec3 worldNormal(ComponentData data) {\r\nreturn _modelToWorldNormal(data.normal);\r\n}`),p?u.code.add(n`void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\r\nworldPos = (model * vec4(modelPos, 1.0)).xyz;\r\nviewPos = (localView * vec4(worldPos, 1.0)).xyz;\r\n}`):(u.include(r,v),u.uniforms.add(new m(\"transformViewFromCameraRelativeRS\",(o=>o.transformViewFromCameraRelativeRS)),new d(\"transformWorldFromModelRS\",(o=>o.transformWorldFromModelRS)),new a(\"transformWorldFromModelTL\",(o=>o.transformWorldFromModelTL)),new a(\"transformWorldFromModelTH\",(o=>o.transformWorldFromModelTH)),new l(\"transformWorldFromViewTL\",(o=>o.transformWorldFromViewTL)),new l(\"transformWorldFromViewTH\",(o=>o.transformWorldFromViewTH))),u.code.add(n`\r\n      void worldAndViewFromModelPosition(vec3 modelPos, float verticalOffset, out vec3 worldPos, out vec3 viewPos) {\r\n        vec3 rotatedModelPosition = transformWorldFromModelRS * modelPos;\r\n\r\n        vec3 transformCameraRelativeFromModel = dpAdd(\r\n          transformWorldFromModelTL,\r\n          transformWorldFromModelTH,\r\n          -transformWorldFromViewTL,\r\n          -transformWorldFromViewTH\r\n        );\r\n\r\n        worldPos = transformCameraRelativeFromModel + rotatedModelPosition;\r\n\r\n        if (verticalOffset != 0.0) {\r\n          vec3 vUp = ${w?\"normalize(transformWorldFromModelTL + rotatedModelPosition);\":\"vec3(0.0, 0.0, 1.0);\"}\r\n          worldPos += verticalOffset * vUp;\r\n        }\r\n\r\n        viewPos = transformViewFromCameraRelativeRS * worldPos;\r\n      }\r\n    `)),u.uniforms.add(new i(\"transformProjFromView\",(o=>o.camera.projectionMatrix))).code.add(n`vec4 projFromViewPosition(vec3 position) {\r\nreturn transformProjFromView * vec4(position, 1.0);\r\n}`),u.code.add(n`float calculateExtensionLength(float extensionLength, float lineLength) {\r\nreturn extensionLength / (log2(max(1.0, 256.0 / lineLength)) * 0.2 + 1.0);\r\n}`)}function v(o){return o===u.Sketch||o===u.Mixed}var u,x;!function(o){o[o.Solid=0]=\"Solid\",o[o.Sketch=1]=\"Sketch\",o[o.Mixed=2]=\"Mixed\",o[o.COUNT=3]=\"COUNT\"}(u||(u={})),function(o){o[o.REGULAR=0]=\"REGULAR\",o[o.SILHOUETTE=1]=\"SILHOUETTE\"}(x||(x={}));export{x as EdgeSilhouette,u as EdgeType,f as EdgeUtil,v as usesSketchLogic};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport e from\"../../../../Color.js\";import\"../../../../core/has.js\";import{pt2px as n}from\"../../../../core/screenUtils.js\";import{fromValues as r,fromArray as t}from\"../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";import{isExtrudeSymbol3DLayer as o,isFillSymbol3DLayer as i}from\"./layerUtils.js\";import{Transparency as s}from\"../../webgl-engine/lib/edgeRendering/interfaces.js\";import{EdgeType as l}from\"../../webgl-engine/shaders/sources/edgeRenderer/EdgeUtil.glsl.js\";function c(e){return e&&e.enabled&&(o(e)||i(e))&&null!=e.edges}function u(e){return e&&e.enabled&&e.edges||null}function a(e,n){return f(u(e),n)}function f(o,i){if(null==o)return null;const s=null!=o.color?t(e.toUnitRGBA(o.color)):r(0,0,0,0),l=n(o.size),c=n(o.extensionLength);switch(o.type){case\"solid\":return g({color:s,size:l,extensionLength:c,...i});case\"sketch\":return p({color:s,size:l,extensionLength:c,...i});default:return}}function g(e){return{...m,...e,type:l.Solid}}function p(e){return{...d,...e,type:l.Sketch}}const m={color:r(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:s.OPAQUE,hasSlicePlane:!1},d={color:r(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:s.OPAQUE,hasSlicePlane:!1};export{a as createMaterial,f as createMaterialFromEdges,g as createSolidEdgeMaterial,c as hasEdges};\r\n"],
  "mappings": ";;;;;;;;;;;;AAIA,SAAS,EAAEA,IAAE;AAAC,SAAM,WAASA,GAAE;AAAI;AAAC,SAAS,EAAEA,IAAE;AAAC,SAAM,cAAYA,GAAE;AAAI;;;ACA1E,IAAI;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,cAAY,CAAC,IAAE,eAAcA,GAAEA,GAAE,SAAO,CAAC,IAAE;AAAQ,EAAE,MAAI,IAAE,CAAC,EAAE;;;ACA+wB,IAAI;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,QAAM,CAAC,IAAE;AAAO,EAAE,MAAI,IAAE,CAAC,EAAE;;;AC8Er5B,IAAIC;AAAJ,IAAM;AAAE,CAAC,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,QAAM,CAAC,IAAE,SAAQA,GAAEA,GAAE,SAAO,CAAC,IAAE,UAASA,GAAEA,GAAE,QAAM,CAAC,IAAE,SAAQA,GAAEA,GAAE,QAAM,CAAC,IAAE;AAAO,EAAED,OAAIA,KAAE,CAAC,EAAE,GAAE,SAASC,IAAE;AAAC,EAAAA,GAAEA,GAAE,UAAQ,CAAC,IAAE,WAAUA,GAAEA,GAAE,aAAW,CAAC,IAAE;AAAY,EAAE,MAAI,IAAE,CAAC,EAAE;;;AC9EuO,SAAS,EAAEC,IAAE;AAAC,SAAOA,MAAGA,GAAE,YAAU,EAAEA,EAAC,KAAG,EAAEA,EAAC,MAAI,QAAMA,GAAE;AAAK;AAAC,SAASC,GAAED,IAAE;AAAC,SAAOA,MAAGA,GAAE,WAASA,GAAE,SAAO;AAAI;AAAC,SAASE,GAAEF,IAAEG,IAAE;AAAC,SAAO,EAAEF,GAAED,EAAC,GAAEG,EAAC;AAAC;AAAC,SAAS,EAAEC,IAAEC,IAAE;AAAC,MAAG,QAAMD,GAAE,QAAO;AAAK,QAAM,IAAE,QAAMA,GAAE,QAAMH,GAAE,EAAE,WAAWG,GAAE,KAAK,CAAC,IAAE,EAAE,GAAE,GAAE,GAAE,CAAC,GAAEE,KAAE,EAAEF,GAAE,IAAI,GAAEG,KAAE,EAAEH,GAAE,eAAe;AAAE,UAAOA,GAAE,MAAK;AAAA,IAAC,KAAI;AAAQ,aAAO,EAAE,EAAC,OAAM,GAAE,MAAKE,IAAE,iBAAgBC,IAAE,GAAGF,GAAC,CAAC;AAAA,IAAE,KAAI;AAAS,aAAO,EAAE,EAAC,OAAM,GAAE,MAAKC,IAAE,iBAAgBC,IAAE,GAAGF,GAAC,CAAC;AAAA,IAAE;AAAQ;AAAA,EAAM;AAAC;AAAC,SAAS,EAAEL,IAAE;AAAC,SAAM,EAAC,GAAGQ,IAAE,GAAGR,IAAE,MAAKC,GAAE,MAAK;AAAC;AAAC,SAAS,EAAED,IAAE;AAAC,SAAM,EAAC,GAAG,GAAE,GAAGA,IAAE,MAAKC,GAAE,OAAM;AAAC;AAAC,IAAMO,KAAE,EAAC,OAAM,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,MAAK,GAAE,iBAAgB,GAAE,SAAQ,GAAE,oBAAmB,EAAE,QAAO,eAAc,MAAE;AAA1G,IAA4G,IAAE,EAAC,OAAM,EAAE,GAAE,GAAE,GAAE,GAAE,GAAE,MAAK,GAAE,iBAAgB,GAAE,SAAQ,GAAE,oBAAmB,EAAE,QAAO,eAAc,MAAE;",
  "names": ["t", "A", "o", "u", "o", "e", "u", "a", "n", "o", "i", "l", "c", "m"]
}
