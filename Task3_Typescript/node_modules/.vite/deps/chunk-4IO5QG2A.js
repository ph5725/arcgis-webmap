import {
  n,
  r as r2
} from "./chunk-NL6QZ27X.js";
import {
  s
} from "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/geometry/support/MeshVertexAttributes.js
var g;
var p = g = class extends l {
  constructor(t) {
    super(t), this.color = null, this.position = new Float64Array(0), this.uv = null, this.normal = null, this.tangent = null;
  }
  castColor(t) {
    return n(t, Uint8Array, [Uint8ClampedArray], { loggerTag: ".color=", stride: 4 }, i.getLogger(this));
  }
  castPosition(t) {
    t && t instanceof Float32Array && i.getLogger(this).warn(".position=", "Setting position attribute from a Float32Array may cause precision problems. Consider storing data in a Float64Array or a regular number array");
    return n(t, Float64Array, [Float32Array], { loggerTag: ".position=", stride: 3 }, i.getLogger(this));
  }
  castUv(t) {
    return n(t, Float32Array, [Float64Array], { loggerTag: ".uv=", stride: 2 }, i.getLogger(this));
  }
  castNormal(t) {
    return n(t, Float32Array, [Float64Array], { loggerTag: ".normal=", stride: 3 }, i.getLogger(this));
  }
  castTangent(t) {
    return n(t, Float32Array, [Float64Array], { loggerTag: ".tangent=", stride: 4 }, i.getLogger(this));
  }
  clone() {
    const t = { position: a(this.position), uv: a(this.uv), normal: a(this.normal), tangent: a(this.tangent), color: a(this.color) };
    return new g(t);
  }
  clonePositional() {
    const t = { position: a(this.position), normal: a(this.normal), tangent: a(this.tangent), uv: this.uv, color: this.color };
    return new g(t);
  }
  get usedMemory() {
    return this.position.byteLength + (this.uv?.byteLength ?? 0) + (this.normal?.byteLength ?? 0) + (this.tangent?.byteLength ?? 0) + (this.color?.byteLength ?? 0);
  }
};
r([m({ json: { write: r2 } })], p.prototype, "color", void 0), r([s("color")], p.prototype, "castColor", null), r([m({ nonNullable: true, json: { write: r2 } })], p.prototype, "position", void 0), r([s("position")], p.prototype, "castPosition", null), r([m({ json: { write: r2 } })], p.prototype, "uv", void 0), r([s("uv")], p.prototype, "castUv", null), r([m({ json: { write: r2 } })], p.prototype, "normal", void 0), r([s("normal")], p.prototype, "castNormal", null), r([m({ json: { write: r2 } })], p.prototype, "tangent", void 0), r([s("tangent")], p.prototype, "castTangent", null), p = g = r([a2("esri.geometry.support.MeshVertexAttributes")], p);

export {
  p
};
//# sourceMappingURL=chunk-4IO5QG2A.js.map
