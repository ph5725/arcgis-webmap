{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/SSAO.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{set as e}from\"../core/libs/gl-matrix-2/math/vec2.js\";import{create as r}from\"../core/libs/gl-matrix-2/factories/vec2f64.js\";import{ScreenSpacePass as t}from\"../views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js\";import{ReadDepth as o}from\"../views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js\";import{CameraSpace as a}from\"../views/3d/webgl-engine/core/shaderLibrary/util/CameraSpace.glsl.js\";import{Float2BindUniform as i}from\"../views/3d/webgl-engine/core/shaderModules/Float2BindUniform.js\";import{Float2PassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js\";import{FloatBindUniform as s}from\"../views/3d/webgl-engine/core/shaderModules/FloatBindUniform.js\";import{FloatPassUniform as c}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as l}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DPassUniform as u}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{ShaderBuilder as f}from\"../views/webgl/ShaderBuilder.js\";const d=16;function m(){const r=new f,m=r.fragment;return r.include(t),r.include(a),m.include(o),m.uniforms.add(new s(\"radius\",(e=>v(e.camera)))).code.add(l`vec3 sphere[16] = vec3[16](\r\nvec3(0.186937, 0.0, 0.0),\r\nvec3(0.700542, 0.0, 0.0),\r\nvec3(-0.864858, -0.481795, -0.111713),\r\nvec3(-0.624773, 0.102853, -0.730153),\r\nvec3(-0.387172, 0.260319, 0.007229),\r\nvec3(-0.222367, -0.642631, -0.707697),\r\nvec3(-0.01336, -0.014956, 0.169662),\r\nvec3(0.122575, 0.1544, -0.456944),\r\nvec3(-0.177141, 0.85997, -0.42346),\r\nvec3(-0.131631, 0.814545, 0.524355),\r\nvec3(-0.779469, 0.007991, 0.624833),\r\nvec3(0.308092, 0.209288,0.35969),\r\nvec3(0.359331, -0.184533, -0.377458),\r\nvec3(0.192633, -0.482999, -0.065284),\r\nvec3(0.233538, 0.293706, -0.055139),\r\nvec3(0.417709, -0.386701, 0.442449)\r\n);\r\nfloat fallOffFunction(float vv, float vn, float bias) {\r\nfloat f = max(radius * radius - vv, 0.0);\r\nreturn f * f * f * max(vn - bias, 0.0);\r\n}`),m.code.add(l`float aoValueFromPositionsAndNormal(vec3 C, vec3 n_C, vec3 Q) {\r\nvec3 v = Q - C;\r\nfloat vv = dot(v, v);\r\nfloat vn = dot(normalize(v), n_C);\r\nreturn fallOffFunction(vv, vn, 0.1);\r\n}`),r.outputs.add(\"fragOcclusion\",\"float\"),m.uniforms.add(new u(\"normalMap\",(e=>e.normalTexture)),new u(\"depthMap\",(e=>e.depthTexture)),new c(\"projScale\",(e=>e.projScale)),new u(\"rnm\",(e=>e.noiseTexture)),new n(\"rnmScale\",((r,t)=>e(p,t.camera.fullWidth/r.noiseTexture.descriptor.width,t.camera.fullHeight/r.noiseTexture.descriptor.height))),new c(\"intensity\",(e=>e.intensity)),new i(\"screenSize\",(r=>e(p,r.camera.fullWidth,r.camera.fullHeight)))).main.add(l`\r\n    float depth = depthFromTexture(depthMap, uv);\r\n\r\n    // Early out if depth is out of range, such as in the sky\r\n    if (depth >= 1.0 || depth <= 0.0) {\r\n      fragOcclusion = 1.0;\r\n      return;\r\n    }\r\n\r\n    // get the normal of current fragment\r\n    ivec2 iuv = ivec2(uv * vec2(textureSize(normalMap, 0)));\r\n    vec4 norm4 = texelFetch(normalMap, iuv, 0);\r\n    if(norm4.a != 1.0) {\r\n      fragOcclusion = 1.0;\r\n      return;\r\n    }\r\n    vec3 norm = normalize(norm4.xyz * 2.0 - 1.0);\r\n\r\n    float currentPixelDepth = linearizeDepth(depth);\r\n    vec3 currentPixelPos = reconstructPosition(gl_FragCoord.xy, currentPixelDepth);\r\n\r\n    float sum = 0.0;\r\n    vec3 tapPixelPos;\r\n\r\n    vec3 fres = normalize(2.0 * texture(rnm, uv * rnmScale).xyz - 1.0);\r\n\r\n    // note: the factor 2.0 should not be necessary, but makes ssao much nicer.\r\n    // bug or deviation from CE somewhere else?\r\n    float ps = projScale / (2.0 * currentPixelPos.z * zScale.x + zScale.y);\r\n\r\n    for(int i = 0; i < ${l.int(d)}; ++i) {\r\n      vec2 unitOffset = reflect(sphere[i], fres).xy;\r\n      vec2 offset = vec2(-unitOffset * radius * ps);\r\n\r\n      // don't use current or very nearby samples\r\n      if( abs(offset.x) < 2.0 || abs(offset.y) < 2.0){\r\n        continue;\r\n      }\r\n\r\n      vec2 tc = vec2(gl_FragCoord.xy + offset);\r\n      if (tc.x < 0.0 || tc.y < 0.0 || tc.x > screenSize.x || tc.y > screenSize.y) continue;\r\n      vec2 tcTap = tc / screenSize;\r\n      float occluderFragmentDepth = linearDepthFromTexture(depthMap, tcTap);\r\n\r\n      tapPixelPos = reconstructPosition(tc, occluderFragmentDepth);\r\n\r\n      sum += aoValueFromPositionsAndNormal(currentPixelPos, norm, tapPixelPos);\r\n    }\r\n\r\n    // output the result\r\n    float A = max(1.0 - sum * intensity / float(${l.int(d)}), 0.0);\r\n\r\n    // Anti-tone map to reduce contrast and drag dark region farther: (x^0.2 + 1.2 * x^4) / 2.2\r\n    A = (pow(A, 0.2) + 1.2 * A * A * A * A) / 2.2;\r\n\r\n    fragOcclusion = A;\r\n  `),r}function v(e){return Math.max(10,20*e.computeScreenPixelSizeAtDist(Math.abs(4*e.relativeElevation)))}const p=r(),g=Object.freeze(Object.defineProperty({__proto__:null,build:m,getRadius:v},Symbol.toStringTag,{value:\"Module\"}));export{g as S,m as b,v as g};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAImjC,IAAMA,KAAE;AAAG,SAAS,IAAG;AAAC,QAAM,IAAE,IAAI,KAAEC,KAAE,EAAE;AAAS,SAAO,EAAE,QAAQC,EAAC,GAAE,EAAE,QAAQ,CAAC,GAAED,GAAE,QAAQ,CAAC,GAAEA,GAAE,SAAS,IAAI,IAAI,EAAE,UAAU,CAAAC,OAAG,EAAEA,GAAE,MAAM,CAAE,CAAC,EAAE,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAqB5sC,GAAEF,GAAE,KAAK,IAAIE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKb,GAAE,EAAE,QAAQ,IAAI,iBAAgB,OAAO,GAAEF,GAAE,SAAS,IAAI,IAAIG,GAAE,aAAa,CAAAF,OAAGA,GAAE,aAAc,GAAE,IAAIE,GAAE,YAAY,CAAAF,OAAGA,GAAE,YAAa,GAAE,IAAI,EAAE,aAAa,CAAAA,OAAGA,GAAE,SAAU,GAAE,IAAIE,GAAE,OAAO,CAAAF,OAAGA,GAAE,YAAa,GAAE,IAAIA,GAAE,YAAY,CAACG,IAAE,MAAI,EAAE,GAAE,EAAE,OAAO,YAAUA,GAAE,aAAa,WAAW,OAAM,EAAE,OAAO,aAAWA,GAAE,aAAa,WAAW,MAAM,CAAE,GAAE,IAAI,EAAE,aAAa,CAAAH,OAAGA,GAAE,SAAU,GAAE,IAAII,GAAE,cAAc,CAAAD,OAAG,EAAE,GAAEA,GAAE,OAAO,WAAUA,GAAE,OAAO,UAAU,CAAE,CAAC,EAAE,KAAK,IAAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA8B/aA,GAAE,IAAIH,EAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAoBiBG,GAAE,IAAIH,EAAC,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMvD,GAAE;AAAC;AAAC,SAAS,EAAEE,IAAE;AAAC,SAAO,KAAK,IAAI,IAAG,KAAGA,GAAE,6BAA6B,KAAK,IAAI,IAAEA,GAAE,iBAAiB,CAAC,CAAC;AAAC;AAAC,IAAM,IAAE,EAAE;AAAV,IAAY,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,GAAE,WAAU,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["d", "m", "e", "n", "s", "r", "o"]
}
