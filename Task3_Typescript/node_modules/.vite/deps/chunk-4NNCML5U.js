import {
  i as i2,
  j
} from "./chunk-XMAXGUBN.js";
import {
  K,
  Le,
  W,
  he,
  ie,
  ne,
  re,
  te,
  ye,
  z
} from "./chunk-Q7K6M7G6.js";
import {
  lt
} from "./chunk-DKS7UUDR.js";
import {
  Z
} from "./chunk-JEYXDNAT.js";
import {
  h,
  i,
  r as r2
} from "./chunk-NY6S6EMV.js";
import {
  a as a2,
  r
} from "./chunk-AQGMTI4V.js";
import {
  e,
  n,
  t
} from "./chunk-6QA2BVC5.js";
import {
  f
} from "./chunk-N3A2BVTW.js";
import {
  _,
  c
} from "./chunk-Q6XRAGMA.js";
import {
  a
} from "./chunk-VHLUKPRH.js";

// node_modules/@arcgis/core/arcade/geometry/constructors.js
function u(e2, t2, l = null) {
  const s = i3(e2, true);
  if (void 0 !== s.hasm && (s.hasM = s.hasm, delete s.hasm), void 0 !== s.hasz && (s.hasZ = s.hasz, delete s.hasz), void 0 !== s.spatialreference && (s.spatialReference = s.spatialreference, delete s.spatialreference), s.spatialReference || (s.spatialReference = t2), void 0 !== s.curverings) {
    const n2 = T(s.curverings, s.hasZ, s.hasM, S);
    if (null == n2) return null;
    s.curveRings = n2.arrays, delete s.curverings, delete s.rings, s.hasZ = n2.hasZ, s.hasM = n2.hasM;
  } else if (void 0 !== s.rings) {
    const n2 = T(s.rings, s.hasZ, s.hasM, k);
    if (null == n2) return null;
    s.rings = n2.arrays, s.hasZ = n2.hasZ, s.hasM = n2.hasM;
  }
  if (void 0 !== s.curvepaths) {
    const n2 = T(s.curvepaths, s.hasZ, s.hasM, S);
    if (null == n2) return null;
    s.curvePaths = n2.arrays, delete s.curvepaths, delete s.paths, s.hasZ = n2.hasZ, s.hasM = n2.hasM;
  } else if (void 0 !== s.paths) {
    const n2 = T(s.paths, s.hasZ, s.hasM, k);
    if (null == n2) return null;
    s.paths = n2.arrays, s.hasZ = n2.hasZ, s.hasM = n2.hasM;
  }
  if (void 0 !== s.points) {
    const n2 = L(s.points, s.hasZ, s.hasM);
    if (null == n2) return null;
    s.points = n2.array, s.hasZ = n2.hasZ, s.hasM = n2.hasM;
  }
  const u2 = f(s);
  if (null != l && u2?.type !== l) throw new a2(null, r.InvalidParameter, null);
  return u2;
}
function i3(n2, r3 = false) {
  const t2 = {};
  for (const l of n2.keys()) {
    const s = r3 ? l.toLowerCase() : l, a3 = n2.attributes[l];
    t2[s] = W(a3) ? i3(a3) : a3;
  }
  return t2;
}
var o = Symbol("NoValue");
function h2(n2) {
  return Array.isArray(n2) && n2.length > 0 ? n2[0] : te(n2) && n2.length() > 0 ? n2.get(0) : o;
}
function f2(n2) {
  const r3 = h2(h2(n2));
  return r3 === o || Array.isArray(r3) || te(r3) || r3 instanceof _ ? n2 : [n2];
}
var c2 = 0;
function y(n2) {
  return a(n2, c2) ?? c2;
}
function m(n2) {
  return "number" == typeof n2 && !Number.isNaN(n2);
}
var p = null;
function d(n2) {
  return a(n2, p) ?? p;
}
function g(n2) {
  return "number" == typeof n2 && !Number.isNaN(n2) || null === n2;
}
function v(n2) {
  return !(n2.length < 2) && ("number" == typeof n2[0] && !Number.isNaN(n2[0]) && ("number" == typeof n2[1] && !Number.isNaN(n2[1])));
}
function M(n2) {
  return v(n2) ? n2.length > 2 ? n2.slice(0, 2) : n2 : null;
}
function Z2(n2) {
  return v(n2) ? m(n2[2]) ? n2.length > 3 ? n2.slice(0, 3) : n2 : [n2[0], n2[1], y(n2[2])] : null;
}
function A(n2) {
  return v(n2) ? n2.length >= 3 && !g(n2[2]) ? [n2[0], n2[1], d(n2[2])] : n2.length > 3 ? n2.slice(0, 3) : n2 : null;
}
function N(n2) {
  return v(n2) ? m(n2[2]) && g(n2[3]) ? n2.length > 4 ? n2.slice(0, 4) : n2 : [n2[0], n2[1], y(n2[2]), d(n2[3])] : null;
}
function b(n2) {
  return [n2.x, n2.y];
}
function w(n2) {
  return [n2.x, n2.y, n2.z ?? c2];
}
function P(n2) {
  return [n2.x, n2.y, n2.m ?? p];
}
function I(n2) {
  return [n2.x, n2.y, n2.z ?? c2, n2.m ?? p];
}
function j2(e2, l, s) {
  if (te(e2) && (e2 = e2.toArray()), !Array.isArray(e2) || 2 !== e2.length) throw new a2(null, r.InvalidParameter, null);
  const a3 = k(e2[0], l, s);
  if (null == a3) return null;
  const u2 = k(e2[1], b, M);
  return null == u2 ? null : { c: [a3, u2] };
}
function x(e2, l, s) {
  if (te(e2) && (e2 = e2.toArray()), !Array.isArray(e2) || 4 !== e2.length && 7 !== e2.length) throw new a2(null, r.InvalidParameter, null);
  const a3 = k(e2[0], l, s);
  if (null == a3) return null;
  const u2 = k(e2[1], b, M);
  if (null == u2) return null;
  const i4 = e2[2];
  if (0 !== i4 && 1 !== i4) throw new a2(null, r.InvalidParameter, null);
  const o2 = e2[3];
  if (0 !== o2 && 1 !== o2) throw new a2(null, r.InvalidParameter, null);
  if (4 === e2.length) return { a: [a3, u2, i4, o2] };
  const h3 = e2[4];
  if ("number" != typeof h3) throw new a2(null, r.InvalidParameter, null);
  if (Number.isNaN(h3)) return null;
  const f3 = e2[5];
  if ("number" != typeof f3) throw new a2(null, r.InvalidParameter, null);
  if (Number.isNaN(f3)) return null;
  const c3 = e2[6];
  if ("number" != typeof c3) throw new a2(null, r.InvalidParameter, null);
  return Number.isNaN(c3) ? null : { a: [a3, u2, i4, o2, h3, f3, c3] };
}
function z2(e2, l, s) {
  if (te(e2) && (e2 = e2.toArray()), !Array.isArray(e2) || 3 !== e2.length) throw new a2(null, r.InvalidParameter, null);
  const a3 = k(e2[0], l, s);
  if (null == a3) return null;
  const u2 = k(e2[1], b, M);
  if (null == u2) return null;
  const i4 = k(e2[2], b, M);
  return null == i4 ? null : { b: [a3, u2, i4] };
}
function R(n2, r3) {
  return n2 ? r3 ? N : Z2 : r3 ? A : M;
}
function F(n2, r3) {
  return n2 ? r3 ? I : w : r3 ? P : b;
}
function k(n2, r3, e2) {
  return Array.isArray(n2) ? e2(n2) : n2 instanceof _ ? r3(n2) : te(n2) ? e2(n2.toArray()) : null;
}
function S(n2, r3, l) {
  return Array.isArray(n2) ? l(n2) : W(n2) ? n2.hasField("c") ? j2(n2.field("c"), r3, l) : n2.hasField("a") ? x(n2.field("a"), r3, l) : n2.hasField("b") ? z2(n2.field("b"), r3, l) : null : n2 instanceof _ ? r3(n2) : te(n2) ? l(n2.toArray()) : null;
}
function U(n2, r3, e2, l) {
  const s = [];
  if (Array.isArray(n2)) for (const t2 of n2) {
    const n3 = r3(t2, e2, l);
    null != n3 && s.push(n3);
  }
  else if (te(n2)) for (let t2 = 0; t2 < n2.length(); t2++) {
    const a3 = r3(n2.get(t2), e2, l);
    null != a3 && s.push(a3);
  }
  return s;
}
function C(n2, r3, e2) {
  return Array.isArray(n2) ? n2.length >= r3 : te(n2) ? n2.length() >= r3 : n2 instanceof _ && n2[e2];
}
function E(n2, r3, e2) {
  return void 0 === n2 && void 0 === r3 ? { hasZ: C(e2, 3, "hasZ"), hasM: C(e2, 4, "hasM") } : void 0 === n2 ? true === r3 ? { hasZ: C(e2, 4, "hasZ"), hasM: true } : { hasZ: C(e2, 3, "hasZ"), hasM: false } : void 0 === r3 ? true === n2 ? { hasZ: true, hasM: C(e2, 4, "hasM") } : { hasZ: false, hasM: C(e2, 3, "hasM") } : { hasZ: true === n2, hasM: true === r3 };
}
function L(n2, r3, e2) {
  const t2 = h2(n2);
  if (t2 === o) return null;
  const { hasZ: l, hasM: s } = E(r3, e2, t2);
  return { array: U(n2, k, F(l, s), R(l, s)), hasZ: l, hasM: s };
}
function T(n2, r3, e2, l) {
  const s = h2(h2(n2 = f2(n2)));
  if (s === o) return null;
  const { hasZ: a3, hasM: u2 } = E(r3, e2, s), i4 = F(a3, u2), c3 = R(a3, u2), y2 = [];
  if (Array.isArray(n2)) for (let t2 = 0; t2 < n2.length; t2++) y2.push(U(n2[t2], l, i4, c3));
  else if (te(n2)) for (let t2 = 0; t2 < n2.length(); t2++) y2.push(U(n2.get(t2), l, i4, c3));
  return { arrays: y2, hasZ: a3, hasM: u2 };
}

// node_modules/@arcgis/core/arcade/Feature.js
var D = class _D {
  constructor() {
    this.arcadeDeclaredClass = "esri.arcade.Feature", this._optimizedGeomDefinition = null, this._geometry = null, this.attributes = null, this._layer = null, this._fieldTypesFixed = true, this.fieldsIndex = null, this.contextTimeZone = null, this.immutable = true, this._fieldsToFixDataTypes = null, this.immutable = true;
  }
  static createFromGraphic(e2, t2) {
    const i4 = new _D();
    return i4.contextTimeZone = t2 ?? null, i4._geometry = null != e2.geometry ? e2.geometry : null, void 0 === e2.attributes || null === e2.attributes ? i4.attributes = {} : i4.attributes = e2.attributes, e2._sourceLayer ? (i4._layer = e2._sourceLayer, i4._fieldTypesFixed = false) : e2._layer ? (i4._layer = e2._layer, i4._fieldTypesFixed = false) : e2.layer && "fields" in e2.layer ? (i4._layer = e2.layer, i4._fieldTypesFixed = false) : e2.sourceLayer && "fields" in e2.sourceLayer && (i4._layer = e2.sourceLayer, i4._fieldTypesFixed = false), i4._layer && !i4._fieldTypesFixed && (i4.fieldsIndex = this.hydrateFieldsIndex(i4._layer)), i4;
  }
  static createFromArcadeFeature(e2) {
    if (e2 instanceof _D) {
      const t3 = new _D();
      return t3._fieldTypesFixed = e2._fieldTypesFixed, t3.attributes = e2.attributes, t3._geometry = e2._geometry, t3._optimizedGeomDefinition = e2._optimizedGeomDefinition, e2._layer && (t3._layer = e2._layer), t3.fieldsIndex = e2.fieldsIndex, t3.contextTimeZone = e2.contextTimeZone, t3;
    }
    const t2 = {};
    for (const i4 of e2.keys()) t2[i4] = e2.field(i4);
    return _D.createFromGraphicLikeObject(e2.geometry(), t2, e2.fullSchema(), e2.contextTimeZone);
  }
  static createFromOptimisedFeature(e2, t2, i4) {
    const s = new _D();
    return s._geometry = e2.geometry ? { geometry: e2.geometry } : null, s._optimizedGeomDefinition = i4, s.attributes = e2.attributes || {}, s._layer = t2, s._fieldTypesFixed = false, s;
  }
  static createFromArcadeDictionary(e2, t2) {
    const s = new _D();
    return s.attributes = e2.field("attributes"), null !== s.attributes && s.attributes instanceof j ? (s.attributes = s.attributes.attributes, null === s.attributes && (s.attributes = {})) : s.attributes = {}, s._geometry = e2.field("geometry"), null !== s._geometry && (s._geometry instanceof j ? s._geometry = u(s._geometry, t2) : s._geometry instanceof c || (s._geometry = null)), s;
  }
  static createFromGraphicLikeObject(e2, t2, i4 = null, s) {
    const r3 = new _D();
    return r3.contextTimeZone = s ?? null, null === t2 && (t2 = {}), r3.attributes = t2, r3._geometry = null != e2 ? e2 : null, r3._layer = i4, r3._layer && (r3._fieldTypesFixed = false, r3.fieldsIndex = this.hydrateFieldsIndex(r3._layer)), r3;
  }
  static hydrateFieldsIndex(e2) {
    return null === e2 ? null : K(e2) ? e2.getFieldsIndex() : e2.fieldsIndex ? e2.fieldsIndex : Z.fromLayerJSON({ datesInUnknownTimezone: e2.datesInUnknownTimezone, fields: e2.fields, timeInfo: e2.timeInfo, editFieldsInfo: e2.editFieldsInfo, dateFieldsTimeReference: e2.dateFieldsTimeReference ?? { timeZone: "UTC", respectsDaylightSaving: false } });
  }
  repurposeFromGraphicLikeObject(e2, t2, i4 = null) {
    null === t2 && (t2 = {}), this.attributes = t2, this._geometry = e2 ?? null, this._layer = i4, this._layer ? this._fieldTypesFixed = false : this._fieldTypesFixed = true;
  }
  castToText(e2 = false) {
    false === this._fieldTypesFixed && this._fixFieldTypes();
    const t2 = ye(this.attributes, { useNumbersForDates: e2 });
    return '{"geometry":' + (null === this.geometry() ? "null" : he(this.geometry())) + ',"attributes":' + t2 + "}";
  }
  _fixFieldTypes() {
    if (this._fieldsToFixDataTypes && this._fieldsToFixDataTypes?.length > 0) return this._fixAllFields(this._fieldsToFixDataTypes), void (this._fieldTypesFixed = true);
    const e2 = [], t2 = this._layer.fields;
    for (let i4 = 0; i4 < t2.length; i4++) {
      const s = t2[i4], { name: r3, type: o2 } = s;
      switch (o2) {
        case "date":
        case "esriFieldTypeDate":
          e2.push({ field: r3, dataType: "date" });
          break;
        case "date-only":
        case "esriFieldTypeDateOnly":
          e2.push({ field: r3, dataType: "date-only" });
          break;
        case "time-only":
        case "esriFieldTypeTimeOnly":
          e2.push({ field: r3, dataType: "time-only" });
          break;
        case "timestamp-offset":
        case "esriFieldTypeTimestampOffset":
          e2.push({ field: r3, dataType: "timestamp-offset" });
          break;
        case "geometry":
        case "esriFieldTypeGeometry":
          e2.push({ field: r3, dataType: "geometry" });
      }
    }
    this._fieldsToFixDataTypes = e2, e2.length > 0 && this._fixAllFields(e2), this._fieldTypesFixed = true;
  }
  isUnknownDateTimeField(e2) {
    return "unknown" === this.fieldsIndex?.getTimeZone(e2);
  }
  _fixAllFields(t2) {
    this.attributes = { ...this.attributes };
    const i4 = this.contextTimeZone ?? "system";
    for (let s = 0; s < t2.length; s++) {
      const r3 = t2[s].field, o2 = t2[s].dataType;
      let n2 = this.attributes[r3];
      if (void 0 === n2) {
        for (const t3 in this.attributes) if (t3.toLowerCase() === r3.toLowerCase()) {
          if (n2 = this.attributes[t3], null !== n2) {
            if ("time-only" === o2) {
              ie(n2) || (this.attributes[t3] = r2.fromReader(n2.toString()));
              break;
            }
            if ("date-only" === o2) {
              re(n2) || (this.attributes[t3] = i.fromReader(n2.toString()));
              break;
            }
            if ("timestamp-offset" === o2) {
              ne(n2) || (this.attributes[t3] = h.fromReaderAsTimeStampOffset(n2.toString()));
              break;
            }
            if ("date" === o2) {
              const s2 = this.isUnknownDateTimeField(t3);
              n2 instanceof Date ? this.attributes[t3] = s2 ? h.unknownDateJSToArcadeDate(n2) : h.dateJSAndZoneToArcadeDate(n2, i4) : ne(n2) || (this.attributes[t3] = s2 ? h.unknownEpochToArcadeDate(n2) : h.epochToArcadeDate(n2, i4));
            }
            "geometry" === o2 && (this.attributes[t3] = null);
          }
          break;
        }
      } else if (null !== n2) {
        if ("time-only" === o2) {
          ie(n2) ? this.attributes[r3] = n2 : this.attributes[r3] = r2.fromReader(n2.toString());
          continue;
        }
        if ("date-only" === o2) {
          re(n2) ? this.attributes[r3] = n2 : this.attributes[r3] = i.fromReader(n2.toString());
          continue;
        }
        if ("timestamp-offset" === o2) {
          ne(n2) ? this.attributes[r3] = n2 : this.attributes[r3] = h.fromReaderAsTimeStampOffset(n2.toString());
          continue;
        }
        if ("date" === o2) {
          const t3 = this.isUnknownDateTimeField(r3);
          ne(n2) ? this.attributes[r3] = n2 : n2 instanceof Date ? this.attributes[r3] = t3 ? h.unknownDateJSToArcadeDate(n2) : h.dateJSAndZoneToArcadeDate(n2, i4) : this.attributes[r3] = t3 ? h.unknownEpochToArcadeDate(n2) : h.epochToArcadeDate(n2, i4);
          continue;
        }
        if ("geometry" === o2) {
          this.attributes[r3] = null;
          continue;
        }
      }
    }
  }
  geometry() {
    return null === this._geometry || this._geometry instanceof c || (this._optimizedGeomDefinition ? (this._geometry = f(lt(this._geometry, this._optimizedGeomDefinition.geometryType, this._optimizedGeomDefinition.hasZ, this._optimizedGeomDefinition.hasM)), this._geometry.spatialReference = this._optimizedGeomDefinition.spatialReference) : this._geometry = f(this._geometry)), this._geometry;
  }
  field(e2) {
    this._fieldTypesFixed || this._fixFieldTypes();
    const t2 = this.attributes[e2];
    if (void 0 !== t2) return t2;
    const i4 = e2.toLowerCase();
    for (const s in this.attributes) if (s.toLowerCase() === i4) return this.attributes[s];
    if (this._hasFieldDefinition(i4)) return null;
    throw new a2(null, r.FieldNotFound, null, { key: e2 });
  }
  _hasFieldDefinition(e2) {
    if (null === this._layer) return false;
    for (let t2 = 0; t2 < this._layer.fields.length; t2++) {
      if (this._layer.fields[t2].name.toLowerCase() === e2) return true;
    }
    return false;
  }
  setField(t2, i4) {
    if (this.immutable) throw new a2(null, r.Immutable, null);
    if (i4 instanceof Date && (i4 = this.isUnknownDateTimeField(t2) ? h.unknownDateJSToArcadeDate(i4) : h.dateJSToArcadeDate(i4)), false === z(i4)) throw new a2(null, r.TypeNotAllowedInFeature, null);
    const o2 = t2.toLowerCase();
    if (void 0 === this.attributes[t2]) {
      for (const e2 in this.attributes) if (e2.toLowerCase() === o2) return void (this.attributes[e2] = i4);
      this.attributes[t2] = i4;
    } else this.attributes[t2] = i4;
  }
  hasField(e2) {
    const t2 = e2.toLowerCase();
    if (void 0 !== this.attributes[e2]) return true;
    for (const i4 in this.attributes) if (i4.toLowerCase() === t2) return true;
    return !!this._hasFieldDefinition(t2);
  }
  keys() {
    let e2 = [];
    const t2 = {};
    for (const i4 in this.attributes) e2.push(i4), t2[i4.toLowerCase()] = 1;
    if (null !== this._layer) for (let i4 = 0; i4 < this._layer.fields.length; i4++) {
      const s = this._layer.fields[i4];
      1 !== t2[s.name.toLowerCase()] && e2.push(s.name);
    }
    return e2 = e2.sort(), e2;
  }
  static parseAttributesFromDictionary(e2) {
    const t2 = {};
    for (const i4 in e2.attributes) {
      const o2 = e2.attributes[i4];
      if (!z(o2)) throw new a2(null, r.InvalidParameter, null);
      t2[i4] = o2;
    }
    return t2;
  }
  static fromJson(e2, t2) {
    let i4 = null;
    null !== e2.geometry && void 0 !== e2.geometry && (i4 = f(e2.geometry));
    const o2 = {};
    if (null !== e2.attributes && void 0 !== e2.attributes) for (const n2 in e2.attributes) {
      const t3 = e2.attributes[n2];
      if (null === t3) o2[n2] = t3;
      else {
        if (!(e(t3) || n(t3) || t(t3) || ne(t3) || ie(t3) || re(t3))) throw new a2(null, r.InvalidParameter, null);
        o2[n2] = t3;
      }
    }
    return _D.createFromGraphicLikeObject(i4, o2, null, t2 ?? null);
  }
  fullSchema() {
    return this._layer;
  }
  gdbVersion() {
    if (null === this._layer) return "";
    const e2 = this._layer.gdbVersion;
    return void 0 === e2 ? "" : "" === e2 && this._layer.capabilities?.isVersioned ? "SDE.DEFAULT" : e2;
  }
  castAsJson(e2) {
    const t2 = { attributes: {}, geometry: true === e2?.keepGeometryType ? this.geometry() : this.geometry()?.toJSON() ?? null };
    for (const i4 in this.attributes) {
      const s = this.attributes[i4];
      void 0 !== s && (t2.attributes[i4] = Le(s, e2));
    }
    return t2;
  }
  async castAsJsonAsync(e2 = null, t2) {
    return this.castAsJson(t2);
  }
};
i2(D);

export {
  u,
  D
};
//# sourceMappingURL=chunk-4NNCML5U.js.map
