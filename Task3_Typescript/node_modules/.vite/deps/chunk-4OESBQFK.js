import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  U
} from "./chunk-A3VAC24F.js";
import {
  i3 as i,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";

// node_modules/@arcgis/core/core/CollectionFlattener.js
var l = class extends V {
  constructor(t) {
    super(t), this.getCollections = null;
  }
  initialize() {
    this.addHandles(i(() => this._refresh(), U));
  }
  destroy() {
    this.getCollections = null;
  }
  _refresh() {
    const t = null != this.getCollections ? this.getCollections() : null;
    if (null == t) return void this.removeAll();
    let o = 0;
    for (const e of t) null != e && (o = this._processCollection(o, e));
    this.splice(o);
  }
  _createNewInstance(t) {
    return new V(t);
  }
  _processCollection(t, o) {
    if (!o) return t;
    const e = this.itemFilterFunction ?? ((t2) => !!t2);
    for (const s of o) if (s) {
      if (e(s)) {
        const o2 = this.indexOf(s, t);
        o2 >= 0 ? o2 !== t && this.reorder(s, t) : this.add(s, t), ++t;
      }
      if (this.getChildrenFunction) {
        const o2 = this.getChildrenFunction(s);
        if (Array.isArray(o2)) for (const e2 of o2) t = this._processCollection(t, e2);
        else t = this._processCollection(t, o2);
      }
    }
    return t;
  }
};
r([m()], l.prototype, "getCollections", void 0), r([m()], l.prototype, "getChildrenFunction", void 0), r([m()], l.prototype, "itemFilterFunction", void 0), l = r([a("esri.core.CollectionFlattener")], l);

export {
  l
};
//# sourceMappingURL=chunk-4OESBQFK.js.map
