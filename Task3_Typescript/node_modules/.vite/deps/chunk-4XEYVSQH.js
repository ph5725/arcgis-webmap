import {
  o as o5
} from "./chunk-QY6CN52R.js";
import {
  a as a4,
  i as i4
} from "./chunk-U3CE4V5Z.js";
import {
  c as c3
} from "./chunk-2ZADANKQ.js";
import {
  e as e6
} from "./chunk-TTPBKTNJ.js";
import {
  n as n5
} from "./chunk-ZPAWXU2P.js";
import {
  E
} from "./chunk-BGR5EVZD.js";
import {
  i as i3
} from "./chunk-QNHQE3IL.js";
import {
  a as a3
} from "./chunk-DRLVYVHZ.js";
import {
  e as e5
} from "./chunk-UZRZVWLE.js";
import {
  e as e3
} from "./chunk-NZPABYQQ.js";
import {
  e as e4
} from "./chunk-CCHJ3WNU.js";
import {
  n as n4
} from "./chunk-DRAQJS2F.js";
import {
  o as o4,
  s as s2
} from "./chunk-TMFB3DKM.js";
import {
  i as i2
} from "./chunk-7FAVUXK2.js";
import {
  a as a2
} from "./chunk-IVNFIIVI.js";
import {
  m as m3
} from "./chunk-FEGY3M6U.js";
import {
  e as e2,
  n,
  u
} from "./chunk-6QA2BVC5.js";
import {
  c as c2,
  f,
  i,
  l,
  m as m2,
  n as n3,
  o as o3,
  r as r3,
  x
} from "./chunk-DNZK6PPI.js";
import {
  c,
  n as n2,
  o as o2
} from "./chunk-RACDQ3AL.js";
import {
  o,
  r as r2,
  s
} from "./chunk-FPSA4NFH.js";
import {
  b,
  e3 as e,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  h
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoubleConfiguration.js
var s3 = class extends a4 {
  constructor() {
    super(...arguments), this.instancedDoublePrecision = false, this.hasModelTransformation = false;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultTechniqueConfiguration.js
var a5 = class extends s3 {
  constructor() {
    super(...arguments), this.output = n5.Color, this.oitPass = o5.NONE, this.hasSlicePlane = false, this.hasHighlightMixTexture = false, this.bindType = a3.Pass, this.writeDepth = true;
  }
};
r([i4({ count: n5.COUNT })], a5.prototype, "output", void 0), r([i4({ count: o5.COUNT })], a5.prototype, "oitPass", void 0), r([i4()], a5.prototype, "hasSlicePlane", void 0), r([i4()], a5.prototype, "hasHighlightMixTexture", void 0);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/screenSizePerspectiveUtils.js
function u2(e9) {
  return Math.abs(e9 * e9 * e9);
}
function f2(e9, t3, a6) {
  const r4 = a6.parameters;
  return C.scale = Math.min(r4.divisor / (t3 - r4.offset), 1), C.factor = u2(e9), C;
}
function m4(t3, a6) {
  return o(t3 * Math.max(a6.scale, a6.minScaleFactor), t3, a6.factor);
}
function h2(e9, t3, a6) {
  const r4 = f2(e9, t3, a6);
  return r4.minScaleFactor = 0, m4(1, r4);
}
function d(e9, t3, a6, r4) {
  r4.scale = h2(e9, t3, a6), r4.factor = 0, r4.minScaleFactor = a6.minScaleFactor;
}
function p(e9, t3, a6 = [0, 0]) {
  const r4 = Math.min(Math.max(t3.scale, t3.minScaleFactor), 1);
  return a6[0] = e9[0] * r4, a6[1] = e9[1] * r4, a6;
}
function v(e9, t3, a6, r4) {
  return m4(e9, f2(t3, a6, r4));
}
var g = { curvatureDependent: { min: { curvature: s(10), tiltAngle: s(12), scaleFallOffFactor: 0.5 }, max: { curvature: s(70), tiltAngle: s(40), scaleFallOffFactor: 0.8 } }, scaleStart: 0.3, scaleFallOffRange: 0.65, minPixelSize: 0 };
var C = { scale: 0, factor: 0, minScaleFactor: 0 };
var D = E();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/MaterialUtil.js
function i5(r4, i6, n8, o8, l3) {
  let s5 = (n8.screenLength || 0) * r4.pixelRatio;
  null != l3 && (s5 = v(s5, o8, i6, l3));
  const a6 = s5 * Math.tan(0.5 * r4.fovY) / (0.5 * r4.fullHeight);
  return r2(a6 * i6, n8.minWorldLength || 0, null != n8.maxWorldLength ? n8.maxWorldLength : 1 / 0);
}
function n6(t3, e9) {
  let i6 = false;
  for (const n8 in e9) {
    const o8 = e9[n8];
    void 0 !== o8 && (Array.isArray(o8) ? Array.isArray(t3[n8]) && h(o8, t3[n8]) || (t3[n8] = o8.slice(), i6 = true) : t3[n8] !== o8 && (i6 = true, t3[n8] = o8));
  }
  return i6;
}
var o6 = { multiply: 1, ignore: 2, replace: 3, tint: 4 };

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/DefaultVertexAttributeLocations.js
var E2 = /* @__PURE__ */ new Map([[e5.POSITION, 0], [e5.NORMAL, 1], [e5.NORMALCOMPRESSED, 1], [e5.UV0, 2], [e5.UVI, 2], [e5.COLOR, 3], [e5.COLORFEATUREATTRIBUTE, 3], [e5.SIZE, 4], [e5.TANGENT, 4], [e5.CENTEROFFSETANDDISTANCE, 5], [e5.SYMBOLCOLOR, 5], [e5.FEATUREATTRIBUTE, 6], [e5.INSTANCEFEATUREATTRIBUTE, 6], [e5.OLIDCOLOR, 6], [e5.INSTANCEOBJECTANDLAYERIDCOLOR, 6], [e5.INSTANCECOLOR, 7], [e5.ROTATION, 8], [e5.INSTANCEMODEL, 8], [e5.INSTANCEMODELNORMAL, 12], [e5.INSTANCEMODELORIGINHI, 11], [e5.INSTANCEMODELORIGINLO, 15]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Material.js
var n7 = class {
  constructor(r4, i6) {
    this.id = e(), this.supportsEdges = false, this.vertexAttributeLocations = E2, this._renderPriority = 0, this._parameters = new i6(), n6(this._parameters, r4), this.validateParameters(this._parameters);
  }
  get parameters() {
    return this._parameters;
  }
  update(e9) {
    return false;
  }
  setParameters(e9, r4 = true) {
    n6(this._parameters, e9) && (this.validateParameters(this._parameters), r4 && this._parametersChanged());
  }
  validateParameters(e9) {
  }
  shouldRender(e9) {
    return this.visible && this.isVisibleForOutput(e9.output) && (!this.parameters.isDecoration || e9.bind.decorations) && 0 !== (this.parameters.renderOccluded & e9.renderOccludedMask);
  }
  isVisibleForOutput(e9) {
    return true;
  }
  get renderPriority() {
    return this._renderPriority;
  }
  set renderPriority(e9) {
    e9 !== this._renderPriority && (this._renderPriority = e9, this._parametersChanged());
  }
  _parametersChanged() {
    this.repository?.materialChanged(this);
  }
  get renderOccludedFlags() {
    return this.visible ? this.parameters.renderOccluded : o7.None;
  }
  get hasEmissions() {
    return false;
  }
  getConfiguration(e9, t3, s5 = new a5()) {
    return s5.output = e9, s5.hasHighlightMixTexture = e9 === n5.Highlight && null != t3.highlightMixTexture, s5;
  }
};
var o7;
!function(e9) {
  e9[e9.None = 0] = "None", e9[e9.Occlude = 1] = "Occlude", e9[e9.Transparent = 2] = "Transparent", e9[e9.OccludeAndTransparent = 4] = "OccludeAndTransparent", e9[e9.OccludeAndTransparentStencil = 8] = "OccludeAndTransparentStencil", e9[e9.Opaque = 16] = "Opaque";
}(o7 || (o7 = {}));
var d2 = class extends c3 {
  constructor() {
    super(...arguments), this.renderOccluded = o7.Occlude, this.isDecoration = false;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float4sPassUniform.js
var e7 = class extends i3 {
  constructor(s5, e9, o8) {
    super(s5, "vec4", a3.Pass, (r4, o9, t3) => r4.setUniform4fv(s5, e9(o9, t3)), o8);
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/FloatsPassUniform.js
var s4 = class extends i3 {
  constructor(r4, s5, e9) {
    super(r4, "float", a3.Pass, (o8, e10, t3) => o8.setUniform1fv(r4, s5(e10, t3)), e9);
  }
};

// node_modules/@arcgis/core/views/3d/support/debugFlags.js
var T = class extends b {
  constructor() {
    super(...arguments), this.SCENEVIEW_HITTEST_RETURN_INTERSECTOR = false, this.DECONFLICTOR_SHOW_VISIBLE = false, this.DECONFLICTOR_SHOW_INVISIBLE = false, this.DECONFLICTOR_SHOW_GRID = false, this.LABELS_SHOW_BORDER = false, this.TEXT_SHOW_BASELINE = false, this.TEXT_SHOW_BORDER = false, this.OVERLAY_DRAW_DEBUG_TEXTURE = false, this.OVERLAY_SHOW_CENTER = false, this.SHOW_POI = false, this.TESTS_DISABLE_OPTIMIZATIONS = false, this.TESTS_DISABLE_FAST_UPDATES = false, this.DRAW_MESH_GEOMETRY_NORMALS = false, this.FEATURE_TILE_FETCH_SHOW_TILES = false, this.FEATURE_TILE_TREE_SHOW_TILES = false, this.TERRAIN_TILE_TREE_SHOW_TILES = false, this.I3S_TREE_SHOW_TILES = false, this.I3S_SHOW_MODIFICATIONS = false, this.LOD_INSTANCE_RENDERER_DISABLE_UPDATES = false, this.LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL = false, this.EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES = false, this.LINE_WIREFRAMES = false;
  }
};
r([m()], T.prototype, "SCENEVIEW_HITTEST_RETURN_INTERSECTOR", void 0), r([m()], T.prototype, "DECONFLICTOR_SHOW_VISIBLE", void 0), r([m()], T.prototype, "DECONFLICTOR_SHOW_INVISIBLE", void 0), r([m()], T.prototype, "DECONFLICTOR_SHOW_GRID", void 0), r([m()], T.prototype, "LABELS_SHOW_BORDER", void 0), r([m()], T.prototype, "TEXT_SHOW_BASELINE", void 0), r([m()], T.prototype, "TEXT_SHOW_BORDER", void 0), r([m()], T.prototype, "OVERLAY_DRAW_DEBUG_TEXTURE", void 0), r([m()], T.prototype, "OVERLAY_SHOW_CENTER", void 0), r([m()], T.prototype, "SHOW_POI", void 0), r([m()], T.prototype, "TESTS_DISABLE_OPTIMIZATIONS", void 0), r([m()], T.prototype, "TESTS_DISABLE_FAST_UPDATES", void 0), r([m()], T.prototype, "DRAW_MESH_GEOMETRY_NORMALS", void 0), r([m()], T.prototype, "FEATURE_TILE_FETCH_SHOW_TILES", void 0), r([m()], T.prototype, "FEATURE_TILE_TREE_SHOW_TILES", void 0), r([m()], T.prototype, "TERRAIN_TILE_TREE_SHOW_TILES", void 0), r([m()], T.prototype, "I3S_TREE_SHOW_TILES", void 0), r([m()], T.prototype, "I3S_SHOW_MODIFICATIONS", void 0), r([m()], T.prototype, "LOD_INSTANCE_RENDERER_DISABLE_UPDATES", void 0), r([m()], T.prototype, "LOD_INSTANCE_RENDERER_COLORIZE_BY_LEVEL", void 0), r([m()], T.prototype, "EDGES_SHOW_HIDDEN_TRANSPARENT_EDGES", void 0), r([m()], T.prototype, "LINE_WIREFRAMES", void 0), T = r([a("esri.views.3d.support.debugFlags")], T);
var t = new T();

// node_modules/@arcgis/core/views/3d/layers/support/FastSymbolUpdates.js
var U;
var j;
!function(e9) {
  e9[e9.Undefined = 0] = "Undefined", e9[e9.DefinedSize = 1] = "DefinedSize", e9[e9.DefinedScale = 2] = "DefinedScale";
}(U || (U = {})), function(e9) {
  e9[e9.Undefined = 0] = "Undefined", e9[e9.DefinedAngle = 1] = "DefinedAngle";
}(j || (j = {}));
var V = class {
  constructor(e9) {
    this.field = e9;
  }
};
var M = class extends V {
  constructor(e9) {
    super(e9), this.minSize = [0, 0, 0], this.maxSize = [0, 0, 0], this.offset = [0, 0, 0], this.factor = [0, 0, 0], this.type = [U.Undefined, U.Undefined, U.Undefined], this.fallback = [0, 0, 0];
  }
};
var I = class extends V {
  constructor(e9) {
    super(e9), this.colors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], this.values = [0, 0, 0, 0, 0, 0, 0, 0], this.fallback = [0, 0, 0, 0];
  }
};
var A = class extends V {
  constructor(e9, t3 = 0) {
    super(e9), this.fallback = t3, this.values = [0, 0, 0, 0, 0, 0, 0, 0], this.opacityValues = [0, 0, 0, 0, 0, 0, 0, 0];
  }
};
var P = class {
};
function T2(e9) {
  return null != e9;
}
function F(e9, t3) {
  e9 && e9.push(t3);
}
function R(e9, t3, o8, i6 = e3()) {
  const n8 = e9 || 0, s5 = t3 || 0, r4 = o8 || 0;
  return 0 !== n8 && x(i6, i6, -n8 / 180 * Math.PI), 0 !== s5 && l(i6, i6, s5 / 180 * Math.PI), 0 !== r4 && m2(i6, i6, r4 / 180 * Math.PI), i6;
}
function E3(e9, t3, o8, i6, n8) {
  const s5 = e9.minSize, r4 = e9.maxSize;
  if (e9.useSymbolValue) {
    const e10 = i6.symbolSize[o8];
    return t3.minSize[o8] = e10, t3.maxSize[o8] = e10, t3.offset[o8] = t3.minSize[o8], t3.factor[o8] = 0, t3.type[o8] = U.DefinedSize, true;
  }
  if (T2(e9.field)) return T2(e9.stops) ? 2 === e9.stops.length && n(e9.stops[0].size) && n(e9.stops[1].size) ? (_(e9.stops[0].size, e9.stops[1].size, e9.stops[0].value, e9.stops[1].value, t3, o8), t3.type[o8] = U.DefinedSize, true) : (F(n8, "Could not convert size info: stops only supported with 2 elements"), false) : n(s5) && n(r4) && T2(e9.minDataValue) && T2(e9.maxDataValue) ? (_(s5, r4, e9.minDataValue, e9.maxDataValue, t3, o8), t3.type[o8] = U.DefinedSize, true) : "unknown" === e9.valueUnit ? (F(n8, "Could not convert size info: proportional size not supported"), false) : null != m3[e9.valueUnit] ? (t3.minSize[o8] = -1 / 0, t3.maxSize[o8] = 1 / 0, t3.offset[o8] = 0, t3.factor[o8] = 1 / m3[e9.valueUnit], t3.type[o8] = U.DefinedSize, true) : (F(n8, "Could not convert size info: scale-dependent size not supported"), false);
  if (!T2(e9.field)) {
    if (e9.stops?.[0] && n(e9.stops[0].size)) return t3.minSize[o8] = e9.stops[0].size, t3.maxSize[o8] = e9.stops[0].size, t3.offset[o8] = t3.minSize[o8], t3.factor[o8] = 0, t3.type[o8] = U.DefinedSize, true;
    if (n(s5)) return t3.minSize[o8] = s5, t3.maxSize[o8] = s5, t3.offset[o8] = s5, t3.factor[o8] = 0, t3.type[o8] = U.DefinedSize, true;
  }
  return F(n8, "Could not convert size info: unsupported variant of sizeInfo"), false;
}
function _(e9, t3, o8, i6, n8, s5) {
  const r4 = Math.abs(i6 - o8) > 0 ? (t3 - e9) / (i6 - o8) : 0;
  n8.minSize[s5] = r4 > 0 ? e9 : t3, n8.maxSize[s5] = r4 > 0 ? t3 : e9, n8.offset[s5] = e9 - o8 * r4, n8.factor[s5] = r4;
}
function q(e9, t3, o8, i6) {
  if (e9.normalizationField || e9.valueRepresentation) return F(i6, "Could not convert size info: unsupported property"), null;
  if (!u(e9.field)) return F(i6, "Could not convert size info: field is not a string"), null;
  if (t3.size) {
    if (e9.field) if (t3.size.field) {
      if (e9.field !== t3.size.field) return F(i6, "Could not convert size info: multiple fields in use"), null;
    } else t3.size.field = e9.field;
  } else t3.size = new M(e9.field), s2(t3.size.fallback, o8.fallbackSize);
  let n8;
  switch (e9.axis) {
    case "width":
      return n8 = E3(e9, t3.size, 0, o8, i6), n8 ? t3 : null;
    case "height":
      return n8 = E3(e9, t3.size, 2, o8, i6), n8 ? t3 : null;
    case "depth":
      return n8 = E3(e9, t3.size, 1, o8, i6), n8 ? t3 : null;
    case "width-and-depth":
      return n8 = E3(e9, t3.size, 0, o8, i6), n8 && E3(e9, t3.size, 1, o8, i6), n8 ? t3 : null;
    case null:
    case void 0:
    case "all":
      return n8 = E3(e9, t3.size, 0, o8, i6), n8 = n8 && E3(e9, t3.size, 1, o8, i6), n8 = n8 && E3(e9, t3.size, 2, o8, i6), n8 ? t3 : null;
    default:
      return F(i6, `Could not convert size info: unknown axis "${e9.axis}""`), null;
  }
}
function $(e9, t3, o8) {
  for (let n8 = 0; n8 < 3; ++n8) {
    let o9 = t3.unitInMeters;
    e9.type[n8] === U.DefinedSize && (o9 *= t3.modelSize[n8], e9.type[n8] = U.DefinedScale), e9.minSize[n8] = e9.minSize[n8] / o9, e9.maxSize[n8] = e9.maxSize[n8] / o9, e9.offset[n8] = e9.offset[n8] / o9, e9.factor[n8] = e9.factor[n8] / o9;
  }
  let i6;
  if (e9.type[0] !== U.Undefined) i6 = 0;
  else if (e9.type[1] !== U.Undefined) i6 = 1;
  else {
    if (e9.type[2] === U.Undefined) return F(o8, "No size axis contains a valid size or scale"), false;
    i6 = 2;
  }
  for (let n8 = 0; n8 < 3; ++n8) e9.type[n8] === U.Undefined && (e9.minSize[n8] = e9.minSize[i6], e9.maxSize[n8] = e9.maxSize[i6], e9.offset[n8] = e9.offset[i6], e9.factor[n8] = e9.factor[i6], e9.type[n8] = e9.type[i6]);
  return true;
}
function B(e9, t3, o8) {
  e9[4 * t3] = o8.r / 255, e9[4 * t3 + 1] = o8.g / 255, e9[4 * t3 + 2] = o8.b / 255, e9[4 * t3 + 3] = o8.a;
}
function L2(e9, t3, o8, i6) {
  if (e9.normalizationField) return F(i6, "Could not convert color info: unsupported property"), null;
  if (e2(e9.field)) {
    if (!e9.stops) return F(i6, "Could not convert color info: missing stops or colors"), null;
    {
      if (e9.stops.length > 8) return F(i6, "Could not convert color info: too many color stops"), null;
      t3.color = new I(e9.field);
      const n8 = e9.stops;
      for (let e10 = 0; e10 < 8; ++e10) {
        const o9 = n8[Math.min(e10, n8.length - 1)];
        t3.color.values[e10] = o9.value, B(t3.color.colors, e10, o9.color);
      }
      a2(t3.color.fallback, o8.fallbackColor);
    }
  } else {
    if (!(e9.stops && e9.stops.length >= 0)) return F(i6, "Could not convert color info: no field and no colors/stops"), null;
    {
      const i7 = e9.stops && e9.stops.length >= 0 && e9.stops[0].color;
      t3.color = new I(null);
      for (let e10 = 0; e10 < 8; e10++) t3.color.values[e10] = 1 / 0, B(t3.color.colors, e10, i7);
      a2(t3.color.fallback, o8.fallbackColor);
    }
  }
  return t3;
}
function O(e9, t3, o8, i6) {
  if (e9.normalizationField) return F(i6, "Could not convert opacity info: unsupported property"), null;
  if (e2(e9.field)) {
    if (!e9.stops) return F(i6, "Could not convert opacity info: missing stops or opacities"), null;
    {
      if (e9.stops.length > 8) return F(i6, "Could not convert opacity info: too many opacity stops"), null;
      t3.opacity = new A(e9.field, o8.fallbackColor[3]);
      const n8 = e9.stops;
      for (let e10 = 0; e10 < 8; ++e10) {
        const o9 = n8[Math.min(e10, n8.length - 1)];
        t3.opacity.values[e10] = o9.value, t3.opacity.opacityValues[e10] = o9.opacity;
      }
    }
  } else {
    if (!(e9.stops && e9.stops.length >= 0)) return F(i6, "Could not convert opacity info: no field and no opacities/stops"), null;
    {
      const i7 = e9.stops && e9.stops.length >= 0 ? e9.stops[0].opacity : 0;
      t3.opacity = { field: null, values: [0, 0, 0, 0, 0, 0, 0, 0], opacityValues: [0, 0, 0, 0, 0, 0, 0, 0], fallback: o8.fallbackColor[3] };
      for (let e10 = 0; e10 < 8; e10++) t3.opacity.values[e10] = 1 / 0, t3.opacity.opacityValues[e10] = i7;
    }
  }
  return t3;
}
function G(e9, t3, o8) {
  const i6 = 2 === o8 && "arithmetic" === e9.rotationType;
  t3.offset[o8] = i6 ? 90 : 0, t3.factor[o8] = i6 ? -1 : 1, t3.type[o8] = 1;
}
function H(e9, t3, o8) {
  if (!e2(e9.field)) return F(o8, "Could not convert rotation info: field is not a string"), null;
  if (t3.rotation) {
    if (e9.field) if (t3.rotation.field) {
      if (e9.field !== t3.rotation.field) return F(o8, "Could not convert rotation info: multiple fields in use"), null;
    } else t3.rotation.field = e9.field;
  } else t3.rotation = { field: e9.field, offset: [0, 0, 0], factor: [1, 1, 1], type: [0, 0, 0] };
  switch (e9.axis) {
    case "tilt":
      return G(e9, t3.rotation, 0), t3;
    case "roll":
      return G(e9, t3.rotation, 1), t3;
    case null:
    case void 0:
    case "heading":
      return G(e9, t3.rotation, 2), t3;
    default:
      return F(o8, `Could not convert rotation info: unknown axis "${e9.axis}""`), null;
  }
}
var J = class {
  constructor({ supports: e9, modelSize: t3, symbolSize: o8, unitInMeters: i6, anchor: n8, scale: s5, rotation: r4, fallbackColor: l3, fallbackSize: a6 }) {
    this.supports = e9, this.modelSize = t3 ?? c(), this.symbolSize = o8 ?? c(), this.unitInMeters = i6 ?? 1, this.anchor = n8 ?? o2(), this.scale = s5 ?? c(), this.rotation = r4 ?? o2(), this.fallbackColor = l3 ?? i2(), this.fallbackSize = a6 ?? c();
  }
};
function K(e9, t3, o8) {
  if (!e9) return null;
  const i6 = e9.reduce((e10, i7) => {
    if (!e10) return e10;
    if (i7.valueExpression) return F(o8, "Could not convert visual variables: arcade expressions not supported"), null;
    switch (i7.type) {
      case "size":
        return t3.supports.size ? q(i7, e10, t3, o8) : e10;
      case "color":
        return t3.supports.color ? L2(i7, e10, t3, o8) : e10;
      case "opacity":
        return t3.supports.opacity ? O(i7, e10, t3, o8) : null;
      case "rotation":
        return t3.supports.rotation ? H(i7, e10, o8) : e10;
      default:
        return null;
    }
  }, new P());
  return !(e9.length > 0 && i6) || i6.size || i6.color || i6.opacity || i6.rotation ? i6?.size && !$(i6.size, t3, o8) ? null : i6 : null;
}
var Q2 = class {
  constructor(e9, t3, o8) {
    this.visualVariables = e9, this.materialParameters = t3, this.requiresShaderTransformation = o8;
  }
};
function W(e9, t3) {
  if (!e9) return null;
  if (e6()) return null;
  if (t.TESTS_DISABLE_FAST_UPDATES) return null;
  const o8 = K(e9.visualVariables, t3);
  return o8 ? new Q2(o8, ee(o8, t3), !!o8.size) : null;
}
function X(e9, t3, o8) {
  if (!t3 || !e9) return false;
  const i6 = e9.visualVariables, n8 = K(t3.visualVariables, o8);
  return !!n8 && (!!(Y(i6.size, n8.size, "size") && Y(i6.color, n8.color, "color") && Y(i6.rotation, n8.rotation, "rotation") && Y(i6.opacity, n8.opacity, "opacity")) && (e9.visualVariables = n8, e9.materialParameters = ee(n8, o8), e9.requiresShaderTransformation = !!n8.size, true));
}
function Y(e9, t3, o8) {
  if (!!e9 != !!t3) return false;
  if (e9 && e9.field !== t3?.field) return false;
  if (e9 && "rotation" === o8) {
    const o9 = e9, i6 = t3;
    for (let e10 = 0; e10 < 3; e10++) if (o9.type[e10] !== i6.type[e10] || o9.offset[e10] !== i6.offset[e10] || o9.factor[e10] !== i6.factor[e10]) return false;
  }
  return true;
}
var Z = class extends c3 {
  constructor(e9) {
    super(), this.vvSize = e9?.size ?? null, this.vvColor = e9?.color ?? null, this.vvOpacity = e9?.opacity ?? null;
  }
};
function ee(e9, n8) {
  const s5 = new Z(e9);
  return s5.vvSize && (s5.vvSymbolAnchor = n8.anchor, o3(re), R(n8.rotation[2], n8.rotation[0], n8.rotation[1], re), s5.vvSymbolRotationMatrix = s5.vvSymbolRotationMatrix || e4(), n4(s5.vvSymbolRotationMatrix, re)), s5;
}
function te(e9, t3, o8) {
  if (!e9.vvSize) return o8;
  n3(ne, o8);
  const i6 = e9.vvSymbolRotationMatrix;
  return r3(re, i6[0], i6[1], i6[2], 0, i6[3], i6[4], i6[5], 0, i6[6], i6[7], i6[8], 0, 0, 0, 0, 1), c2(ne, ne, re), oe(se, e9, t3), f(ne, ne, se), i(ne, ne, e9.vvSymbolAnchor), ne;
}
function oe(t3, o8, i6) {
  if (!o8.vvSize) return o4(t3, 1, 1, 1), t3;
  if (Number.isNaN(i6[0])) return s2(t3, o8.vvSize.fallback);
  for (let n8 = 0; n8 < 3; ++n8) {
    const s5 = o8.vvSize.offset[n8] + i6[0] * o8.vvSize.factor[n8];
    t3[n8] = r2(s5, o8.vvSize.minSize[n8], o8.vvSize.maxSize[n8]);
  }
  return t3;
}
function ie(e9, t3) {
  const o8 = null == e9 ? 0 : t3.attributes[e9];
  return "number" == typeof o8 && isFinite(o8) ? o8 : NaN;
}
var ne = e3();
var se = n2();
var re = e3();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/VisualVariablePassParameters.js
var t2 = class extends Z {
  constructor() {
    super(...arguments), this.renderOccluded = o7.Occlude, this.isDecoration = false;
  }
};
var e8 = 8;

export {
  E2 as E,
  a5 as a,
  m4 as m,
  d,
  p,
  i5 as i,
  n6 as n,
  o6 as o,
  n7 as n2,
  o7 as o2,
  d2,
  e7 as e,
  s4 as s,
  t,
  J,
  W,
  X,
  te,
  oe,
  ie,
  t2,
  e8 as e2
};
//# sourceMappingURL=chunk-4XEYVSQH.js.map
