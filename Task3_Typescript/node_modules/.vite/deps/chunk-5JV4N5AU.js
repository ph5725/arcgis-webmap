import {
  e as e4,
  e2 as e5,
  s
} from "./chunk-4XEYVSQH.js";
import {
  e as e3
} from "./chunk-7KQYSRGY.js";
import {
  o2 as o
} from "./chunk-ZPAWXU2P.js";
import {
  e as e2
} from "./chunk-FYCLQ3SU.js";
import {
  n
} from "./chunk-6EOJZ6DP.js";
import {
  e
} from "./chunk-UZRZVWLE.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js
function n2(n3, s2) {
  const { vertex: u, attributes: c } = n3;
  s2.hasVvInstancing && (s2.vvSize || s2.vvColor) && c.add(e.INSTANCEFEATUREATTRIBUTE, "vec4"), s2.vvSize ? (u.uniforms.add(new e2("vvSizeMinSize", (o2) => o2.vvSize.minSize)), u.uniforms.add(new e2("vvSizeMaxSize", (o2) => o2.vvSize.maxSize)), u.uniforms.add(new e2("vvSizeOffset", (o2) => o2.vvSize.offset)), u.uniforms.add(new e2("vvSizeFactor", (o2) => o2.vvSize.factor)), u.uniforms.add(new e2("vvSizeFallback", (o2) => o2.vvSize.fallback)), u.uniforms.add(new o("vvSymbolRotationMatrix", (o2) => o2.vvSymbolRotationMatrix)), u.uniforms.add(new e2("vvSymbolAnchor", (o2) => o2.vvSymbolAnchor)), u.code.add(n`vec3 vvScale(vec4 _featureAttribute) {
if (isnan(_featureAttribute.x)) {
return vvSizeFallback;
}
return clamp(vvSizeOffset + _featureAttribute.x * vvSizeFactor, vvSizeMinSize, vvSizeMaxSize);
}
vec4 vvTransformPosition(vec3 position, vec4 _featureAttribute) {
return vec4(vvSymbolRotationMatrix * ( vvScale(_featureAttribute) * (position + vvSymbolAnchor)), 1.0);
}`), u.code.add(n`
      const float eps = 1.192092896e-07;
      vec4 vvTransformNormal(vec3 _normal, vec4 _featureAttribute) {
        vec3 scale = max(vvScale(_featureAttribute), eps);
        return vec4(vvSymbolRotationMatrix * _normal / scale, 1.0);
      }

      ${s2.hasVvInstancing ? n`
      vec4 vvLocalNormal(vec3 _normal) {
        return vvTransformNormal(_normal, instanceFeatureAttribute);
      }

      vec4 localPosition() {
        return vvTransformPosition(position, instanceFeatureAttribute);
      }` : ""}
    `)) : u.code.add(n`vec4 localPosition() { return vec4(position, 1.0); }
vec4 vvLocalNormal(vec3 _normal) { return vec4(_normal, 1.0); }`), s2.vvColor ? (u.constants.add("vvColorNumber", "int", e5), u.uniforms.add(new s("vvColorValues", (o2) => o2.vvColor.values, e5), new e4("vvColorColors", (o2) => o2.vvColor.colors, e5), new e3("vvColorFallback", (o2) => o2.vvColor.fallback)), u.code.add(n`
      vec4 interpolateVVColor(float value) {
        if (isnan(value)) {
          return vvColorFallback;
        }

        if (value <= vvColorValues[0]) {
          return vvColorColors[0];
        }

        for (int i = 1; i < vvColorNumber; ++i) {
          if (vvColorValues[i] >= value) {
            float f = (value - vvColorValues[i-1]) / (vvColorValues[i] - vvColorValues[i-1]);
            return mix(vvColorColors[i-1], vvColorColors[i], f);
          }
        }
        return vvColorColors[vvColorNumber - 1];
      }

      vec4 vvGetColor(vec4 featureAttribute) {
        return interpolateVVColor(featureAttribute.y);
      }

      ${s2.hasVvInstancing ? n`
            vec4 vvColor() {
              return vvGetColor(instanceFeatureAttribute);
            }` : "vec4 vvColor() { return vec4(1.0); }"}
    `)) : u.code.add(n`vec4 vvColor() { return vec4(1.0); }`);
}

export {
  n2 as n
};
//# sourceMappingURL=chunk-5JV4N5AU.js.map
