import {
  d
} from "./chunk-W32FQSGL.js";
import {
  i as i2
} from "./chunk-EUGUM3DF.js";
import {
  f,
  s,
  u
} from "./chunk-SYPTUUSZ.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  c,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  H
} from "./chunk-ZWFY3WY5.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/rest/networks/support/QueryAssociationsResult.js
var p = class extends l {
  constructor(o) {
    super(o), this.associations = [];
  }
};
r([m({ type: [d], json: { write: true } })], p.prototype, "associations", void 0), p = r([a("esri.rest.networks.support.QueryAssociationsResult")], p);

// node_modules/@arcgis/core/rest/networks/queryAssociations.js
function a2(e) {
  const { returnDeletes: t, elements: o, gdbVersion: n, moment: s2 } = e.toJSON();
  return { returnDeletes: t, elements: JSON.stringify(o.map((e2) => ({ globalId: e2.globalId, networkSourceId: e2.networkSourceId, terminalId: e2.terminalId }))), types: JSON.stringify(e.types.map((e2) => i2.toJSON(e2))).replaceAll('"connectivity"', '"junctionJunctionConnectivity"'), gdbVersion: n, moment: s2 ?? Date.now() };
}
async function p2(r2, p3, m2) {
  const u2 = f(r2), l2 = { ...a2(p3), f: "json" }, y = u({ ...u2.query, ...l2 }), d2 = s(y, { ...m2, method: "post" }), f2 = `${u2.path}/associations/query`, { data: g } = await H(f2, d2), j = p.fromJSON(g);
  return p3.types.includes("connectivity") && c(i.getLogger("esri/rest/networks/support/QueryAssociationsParameters"), "types", { replacement: "Please use 'junction-junction-connectivity' instead of 'connectivity'.", see: "https://arcg.is/11Tr8a#types", version: "4.29", warnOnce: true }), j;
}

export {
  p2 as p
};
//# sourceMappingURL=chunk-6HTDRV3E.js.map
