import {
  E,
  I,
  S as S2,
  _ as _2,
  o,
  t as t3
} from "./chunk-WGTPS6U6.js";
import {
  f as f5
} from "./chunk-524UHFSB.js";
import {
  L as L2
} from "./chunk-P4YXQBLK.js";
import {
  s as s4
} from "./chunk-YN3U6WZN.js";
import {
  i as i3,
  ie,
  le,
  r as r3,
  r2 as r4
} from "./chunk-VFUR4QXG.js";
import {
  ut
} from "./chunk-DKS7UUDR.js";
import {
  s as s2
} from "./chunk-JOVQBCRD.js";
import {
  u as u4,
  y as y3
} from "./chunk-7TPOIM4Y.js";
import {
  L
} from "./chunk-OFHPFWHF.js";
import {
  e as e3
} from "./chunk-VNLFNBKT.js";
import {
  d as d2,
  p as p4
} from "./chunk-FSVG2RRX.js";
import {
  c,
  p as p3
} from "./chunk-WIICHW3C.js";
import {
  a as a3,
  l as l4,
  p as p2
} from "./chunk-XPKVLOAO.js";
import {
  s as s3
} from "./chunk-GESOBEYT.js";
import {
  c as c2,
  p as p5
} from "./chunk-E7YVYF37.js";
import {
  A,
  l as l5,
  n as n4
} from "./chunk-GG4VLKUY.js";
import {
  c as c3,
  f as f4
} from "./chunk-6MFKAT6L.js";
import {
  u as u3
} from "./chunk-NOWX6W7R.js";
import {
  p as p6
} from "./chunk-OQ76WPLD.js";
import {
  g as g2
} from "./chunk-B6C7UPBZ.js";
import {
  f as f3
} from "./chunk-IUQBXXYO.js";
import {
  l,
  n as n2,
  p
} from "./chunk-XLF2NMGX.js";
import {
  t
} from "./chunk-X5GD6LFD.js";
import {
  d,
  j,
  l as l2,
  v,
  w
} from "./chunk-G4PMFSAZ.js";
import {
  S
} from "./chunk-OTCYHWWG.js";
import {
  t as t2
} from "./chunk-OTSYE6UT.js";
import {
  m as m4
} from "./chunk-AGDHKBKD.js";
import {
  m as m3
} from "./chunk-HUVZEBBO.js";
import {
  E as E2
} from "./chunk-GOWWJ2HE.js";
import {
  R
} from "./chunk-7ZMGKXLG.js";
import {
  m as m2
} from "./chunk-6TS2ZJL4.js";
import {
  h
} from "./chunk-L7EN54WK.js";
import {
  O,
  Q
} from "./chunk-7NMH5MM5.js";
import {
  q
} from "./chunk-YX2VTIZR.js";
import {
  n as n3
} from "./chunk-LYSDGL5S.js";
import {
  g
} from "./chunk-SRJX4QLW.js";
import {
  l as l3
} from "./chunk-KE3WBZYL.js";
import {
  I as I2,
  g as g3
} from "./chunk-VCRP2PLV.js";
import {
  e as e2
} from "./chunk-BDLVUYG2.js";
import {
  f as f2
} from "./chunk-N3A2BVTW.js";
import {
  y as y2
} from "./chunk-IGYEHOTB.js";
import {
  P
} from "./chunk-52HWRRRQ.js";
import {
  y
} from "./chunk-OGOQOMMV.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _
} from "./chunk-Q6XRAGMA.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  U
} from "./chunk-OXSERRAR.js";
import {
  b,
  e,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i as i2
} from "./chunk-3NBBZ43U.js";
import {
  n
} from "./chunk-VOLWOTEG.js";
import {
  H
} from "./chunk-ZWFY3WY5.js";
import {
  u
} from "./chunk-S7IJH524.js";
import {
  u3 as u2
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/rest/knowledgeGraph/ProtoFeatureCollection.js
var t4 = class {
  constructor() {
    this.version = "", this.queryResult = new e4();
  }
};
var e4 = class {
  constructor() {
    this.featureResult = new i4();
  }
};
var i4 = class {
  constructor() {
    this.objectIdFieldName = "", this.uniqueIdField = new r5(), this.globalIdFieldName = "", this.geohashFieldName = "", this.geometryProperties = new a4(), this.geometryType = null, this.spatialReference = new f(), this.exceededTransferLimit = false, this.hasZ = false, this.hasM = false, this.transform = new h2(), this.fields = [], this.fieldNameToAttributeIndexMap = {}, this.values = [], this.features = [], this.geometryFields = [];
  }
};
var r5 = class {
  constructor() {
    this.name = "", this.isSystemMaintained = false;
  }
};
var a4 = class {
  constructor() {
    this.shapeAreaFieldName = "", this.shapeLengthFieldName = "", this.units = "";
  }
};
var h2 = class {
  constructor() {
    this.quantizeOriginPosition = "upperLeft", this.scale = new n5(), this.translate = new o2();
  }
};
var n5 = class {
  constructor() {
    this.xScale = 0, this.yScale = 0, this.mScale = 0, this.zScale = 0;
  }
};
var o2 = class {
  constructor() {
    this.xTranslate = 0, this.yTranslate = 0, this.mTranslate = 0, this.zTranslate = 0;
  }
};
var c4 = class {
  constructor() {
    this.name = "", this.fieldType = "esriFieldTypeString", this.alias = "", this.sqlType = "sqlTypeVarchar", this.domain = "", this.defaultValue = "";
  }
};
var l6 = class {
  constructor() {
    this.attributes = [], this.compressedGeometry = new E3(), this.centroid = new E3(), this.aggregateGeometries = [];
  }
};
var E3 = class {
  constructor() {
    this.geometryType = null, this.lengths = [], this.coords = [];
  }
};
var T;
!function(s8) {
  s8.ELEMENTUID = "ELEMENTUID", s8.TYPENAME = "TYPENAME";
}(T || (T = {}));
var m5 = [T.ELEMENTUID, T.TYPENAME];
var d3;
var N;
!function(s8) {
  s8[s8.ELEMENTUID = 0] = "ELEMENTUID", s8[s8.TYPENAME = 1] = "TYPENAME";
}(d3 || (d3 = {})), function(s8) {
  s8[s8.ELEMENTUID = 0] = "ELEMENTUID", s8[s8.TYPENAME = 1] = "TYPENAME", s8[s8.FROMUID = 2] = "FROMUID", s8[s8.TOUID = 3] = "TOUID";
}(N || (N = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmSerializedLayerData.js
var e5;
var l7;
var s5;
var T2;
!function(e6) {
  e6[e6.featureResult = 0] = "featureResult", e6[e6.countResult = 1] = "countResult", e6[e6.idsResult = 2] = "idsResult";
}(e5 || (e5 = {})), function(e6) {
  e6[e6.upperLeft = 0] = "upperLeft", e6[e6.lowerLeft = 1] = "lowerLeft";
}(l7 || (l7 = {})), function(e6) {
  e6[e6.sqlTypeBigInt = 0] = "sqlTypeBigInt", e6[e6.sqlTypeBinary = 1] = "sqlTypeBinary", e6[e6.sqlTypeBit = 2] = "sqlTypeBit", e6[e6.sqlTypeChar = 3] = "sqlTypeChar", e6[e6.sqlTypeDate = 4] = "sqlTypeDate", e6[e6.sqlTypeDecimal = 5] = "sqlTypeDecimal", e6[e6.sqlTypeDouble = 6] = "sqlTypeDouble", e6[e6.sqlTypeFloat = 7] = "sqlTypeFloat", e6[e6.sqlTypeGeometry = 8] = "sqlTypeGeometry", e6[e6.sqlTypeGUID = 9] = "sqlTypeGUID", e6[e6.sqlTypeInteger = 10] = "sqlTypeInteger", e6[e6.sqlTypeLongNVarchar = 11] = "sqlTypeLongNVarchar", e6[e6.sqlTypeLongVarbinary = 12] = "sqlTypeLongVarbinary", e6[e6.sqlTypeLongVarchar = 13] = "sqlTypeLongVarchar", e6[e6.sqlTypeNChar = 14] = "sqlTypeNChar", e6[e6.sqlTypeNVarChar = 15] = "sqlTypeNVarChar", e6[e6.sqlTypeOther = 16] = "sqlTypeOther", e6[e6.sqlTypeReal = 17] = "sqlTypeReal", e6[e6.sqlTypeSmallInt = 18] = "sqlTypeSmallInt", e6[e6.sqlTypeSqlXml = 19] = "sqlTypeSqlXml", e6[e6.sqlTypeTime = 20] = "sqlTypeTime", e6[e6.sqlTypeTimestamp = 21] = "sqlTypeTimestamp", e6[e6.sqlTypeTimestamp2 = 22] = "sqlTypeTimestamp2", e6[e6.sqlTypeTinyInt = 23] = "sqlTypeTinyInt", e6[e6.sqlTypeVarbinary = 24] = "sqlTypeVarbinary", e6[e6.sqlTypeVarchar = 25] = "sqlTypeVarchar";
}(s5 || (s5 = {})), function(e6) {
  e6[e6.OID_ARRAY = 0] = "OID_ARRAY", e6[e6.GLOBALID_ARRAY = 1] = "GLOBALID_ARRAY", e6[e6.STRING_ARRAY = 2] = "STRING_ARRAY", e6[e6.IDENTIFIER_ARRAY = 3] = "IDENTIFIER_ARRAY";
}(T2 || (T2 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToFeatureFactories.js
function d4(s8) {
  const r8 = new t4();
  r8.version = s8.version;
  const n6 = s8.get_query_result();
  if (0 !== n6.results_type.value) throw new Error("Got a non-feature collection type");
  const l9 = n6.get_feature_result(), i7 = r8.queryResult.featureResult;
  i7.objectIdFieldName = l9.objectid_field_name, i7.exceededTransferLimit = l9.exceeded_transfer_limit, i7.hasM = l9.has_m, i7.hasZ = l9.has_z, i7.geometryType = i3[l9.geometry_type.value], i7.globalIdFieldName = l9.globalid_field_name, i7.geohashFieldName = l9.geohash_field_name;
  const c8 = i7.uniqueIdField, d8 = l9.unique_id_field;
  c8.name = d8.name, c8.isSystemMaintained = d8.isSystemMaintained;
  const p11 = i7.geometryProperties, _4 = l9.geometry_properties;
  p11.shapeAreaFieldName = _4.shapeAreaFieldName, p11.shapeLengthFieldName = _4.shapeLengthFieldName, p11.units = _4.units;
  const y6 = i7.spatialReference, h5 = l9.spatial_reference;
  y6.wkid = h5.wkid, y6.latestWkid = h5.latestWkid, y6.vcsWkid = h5.vcsWkid, y6.latestVcsWkid = h5.latestVcsWkid, y6.wkt = h5.wkt, i7.transform = g4(l9.transform);
  const v3 = i7.fields, T3 = i7.fieldNameToAttributeIndexMap, w3 = l9.fields, z2 = w3.size();
  for (let e6 = 0; e6 < z2; e6++) {
    const t8 = w3.get(e6), a7 = m6(t8);
    v3.push(a7), T3[a7.name] = e6, t8.delete();
  }
  w3.delete();
  const F2 = i7.values, S4 = l9.values_count();
  for (let e6 = 0; e6 < S4; e6++) F2.push(l9.get_value_at(e6));
  const k2 = i7.features, b5 = l9.features, q2 = b5.size();
  if (q2 > 0) {
    for (const e6 of m5) if (void 0 === T3[e6]) throw new Error(`Feature collection missing required attribute: ${e6}`);
  }
  for (let e6 = 0; e6 < q2; e6++) {
    const t8 = new l6(), s9 = b5.get(e6), r9 = t8.attributes, n7 = s9.attributes_count();
    for (let e7 = 0; e7 < n7; e7++) r9.push(s9.get_attribute_at(e7));
    const o6 = s9.get_compressed_geometry();
    o6 && (t8.compressedGeometry = u5(o6), t8.centroid = u5(s9.get_centroid()));
    const l10 = t8.aggregateGeometries, i8 = s9.aggregate_geometries, c9 = i8.size();
    for (let e7 = 0; e7 < c9; e7++) {
      const t9 = i8.get(e7), a7 = u5(t9);
      l10.push(a7), t9.delete();
    }
    i8.delete(), k2.push(t8), s9.delete();
  }
  b5.delete();
  const W = i7.geometryFields, x = l9.geometry_fields, N2 = x.size();
  for (let e6 = 0; e6 < N2; e6++) {
    const t8 = x.get(e6), a7 = f6(t8);
    W.push(a7), t8.delete();
  }
  return x.delete(), r8;
}
function u5(e6) {
  const t8 = new E3();
  t8.geometryType = i3[e6.geometry_type.value];
  const a7 = [], s8 = [];
  for (let r8 = 0; r8 < e6.lengths.length; r8++) a7.push(e6.lengths[r8]);
  for (let r8 = 0; r8 < e6.coords.length; r8++) s8.push(e6.coords[r8]);
  return t8.lengths = a7, t8.coords = s8, t8;
}
function m6(e6) {
  const t8 = new c4();
  return t8.name = e6.name, t8.alias = e6.alias, t8.fieldType = r4[e6.field_type.value], t8.sqlType = s5[e6.sql_type.value], t8.domain = e6.domain, t8.defaultValue = e6.default_value, t8;
}
function f6(e6) {
  const t8 = m6(e6);
  return t8.geometryType = i3[e6.geometry_type.value], t8;
}
function g4(e6) {
  const t8 = new h2();
  t8.quantizeOriginPosition = l7[e6.quantizeOriginPosition.value];
  const a7 = t8.scale, r8 = e6.scale;
  a7.xScale = r8.xScale, a7.yScale = r8.yScale, a7.mScale = r8.mScale, a7.zScale = r8.zScale;
  const n6 = t8.translate, o6 = e6.translate;
  return n6.xTranslate = o6.xTranslate, n6.yTranslate = o6.yTranslate, n6.mTranslate = o6.mTranslate, n6.zTranslate = o6.zTranslate, t8;
}

// node_modules/@arcgis/core/applications/KnowledgeStudio/resourceSerializationUtils.js
async function p7(e6) {
  const t8 = [], r8 = { generateAllSublayers: false, namedTypeDefinitions: /* @__PURE__ */ new Map() };
  return e6.entitiesUrl && t8.push(E4(e6.entitiesUrl).then((e7) => {
    I3(e7, r8);
  })), e6.relationshipsUrl && t8.push(E4(e6.relationshipsUrl).then((e7) => {
    I3(e7, r8);
  })), await Promise.all(t8), r8;
}
async function m7(e6, t8) {
  t8 ??= false;
  const r8 = { generateAllSublayers: t8, namedTypeDefinitions: /* @__PURE__ */ new Map() };
  return await k(e6).then((e7) => {
    M(e7, r8);
  }), r8;
}
async function h3(e6) {
  const r8 = await r3(), i7 = new r8.MapOfObjectIdentifierSets();
  b2(i7, r8, e6);
  const n6 = new r8.MapOfObjectIdentifierSetsEncoder();
  try {
    n6.set_map_of_identifier_sets(i7), n6.encode();
    const e7 = n6.get_encoding_result();
    if (0 !== e7.error.error_code) throw new s("knowledge-graph:layer-support-utils", e7.error.error_message);
    const r9 = structuredClone(e7.get_byte_buffer());
    return n6.delete(), r9;
  } finally {
    i7.delete();
  }
}
function b2(e6, t8, r8) {
  for (const [i7, n6] of r8.namedTypeDefinitions) {
    if (!n6.members || n6.useAllData) continue;
    const r9 = n6.members.keys();
    let s8 = false, a7 = true;
    const o6 = new t8.ObjectIdArray(), l9 = new t8.StringArray(), c8 = new t8.GlobalIdArray(), d8 = new t8.IdentifierArray(), u7 = new t8.ObjectIdentifierSet();
    for (const e7 of r9) a7 && (s8 = !isNaN(Number(e7)), a7 = false), s8 ? o6.add_objectid(Number(e7)) : (l9.add_string(e7), c8.add_globalid(e7)), d8.add_identifier(e7);
    u7.set_oid_array(o6), u7.set_string_array(l9), u7.set_globalid_array(c8), u7.set_identifier_array(d8), o6.delete(), l9.delete(), c8.delete(), d8.delete(), e6.put_identifier_set(i7, u7), u7.delete();
  }
  return e6;
}
async function E4(t8) {
  const r8 = await H(t8, { responseType: "array-buffer" });
  return F(await r8.data);
}
async function F(e6) {
  const r8 = new (await r3()).FeatureCollectionDecoder(), i7 = r8.decode(new Uint8Array(e6));
  if (0 !== i7.error_code) throw new s("knowledge-graph:layer-support-utils", i7.error_message);
  const n6 = r8.get_feature_collection(), s8 = d4(n6);
  return r8.delete(), s8;
}
async function k(t8) {
  const r8 = await H(t8, { responseType: "array-buffer" }), i7 = await r8.data;
  return A2(new Uint8Array(i7));
}
async function A2(e6) {
  const r8 = new (await r3()).MapOfObjectIdentifierSetsDecoder(), i7 = r8.decode(new Uint8Array(e6)), n6 = /* @__PURE__ */ new Map();
  if (0 !== i7.error_code) throw new s("knowledge-graph:layer-support-utils", i7.error_message);
  const s8 = r8.get_map_of_identifier_sets(), a7 = s8.keys, o6 = a7.size();
  for (let l9 = 0; l9 < o6; l9++) {
    const e7 = a7.get(l9), r9 = s8.query_identifier_set(e7), i8 = [];
    if (r9.id_array_type.value === T2.GLOBALID_ARRAY) {
      const e8 = r9.get_globalid_array(), t8 = e8.count();
      for (let r10 = 0; r10 < t8; r10++) i8.push(e8.get_globalid_at(r10));
    } else if (r9.id_array_type.value === T2.IDENTIFIER_ARRAY) {
      const e8 = r9.get_identifier_array(), t8 = e8.count();
      for (let r10 = 0; r10 < t8; r10++) i8.push(e8.get_identifier_at(r10).toString());
    } else if (r9.id_array_type.value === T2.STRING_ARRAY) {
      const e8 = r9.get_string_array(), t8 = e8.count();
      for (let r10 = 0; r10 < t8; r10++) i8.push(e8.get_string_at(r10));
    } else {
      if (r9.id_array_type.value !== T2.OID_ARRAY) throw new s("knowledge-graph:layer-support-utils", "Tried to encode an unexpected ID Array type.");
      {
        const e8 = r9.get_oid_array(), t8 = e8.count();
        for (let r10 = 0; r10 < t8; r10++) i8.push(e8.get_objectid_at(r10).toString());
      }
    }
    n6.set(e7, i8);
  }
  return r8.delete(), n6;
}
function I3(e6, t8) {
  if (!e6?.queryResult?.featureResult) return t8;
  const i7 = e6.queryResult.featureResult.fieldNameToAttributeIndexMap;
  for (const a7 of e6.queryResult.featureResult.features) {
    const e7 = a7.attributes[i7[T.TYPENAME]], o6 = u(t8.namedTypeDefinitions, e7, () => ({ useAllData: false, members: /* @__PURE__ */ new Map() })), l9 = a7.attributes[i7[T.ELEMENTUID]];
    if (a7.compressedGeometry?.coords?.length > 0) {
      let e8 = a7.compressedGeometry.lengths;
      "esriGeometryPoint" === a7.compressedGeometry.geometryType && (e8 = []), o6.members.set(l9, { id: l9, linkChartLocation: new e3(e8, a7.compressedGeometry.coords) });
    } else o6.members.set(l9, { id: l9 });
  }
  return t8;
}
function M(e6, t8) {
  for (const [i7, n6] of e6) {
    const e7 = u(t8.namedTypeDefinitions, i7, () => ({ useAllData: false, members: /* @__PURE__ */ new Map() }));
    for (const t9 of n6) e7.members.has(t9) || e7.members.set(t9, { id: t9 });
  }
  return t8;
}
var D = { fetchAndConvertSerializedLinkChart: (e6) => p7(e6) };

// node_modules/@arcgis/core/layers/knowledgeGraph/SessionMemoryStorage.js
var o3 = class _o {
  constructor() {
    this._featureLookup = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _o.instance || (_o.instance = new _o()), _o.instance;
  }
  static resetInstance() {
    _o.instance && (_o.instance = null);
  }
  deleteFromStore(e6) {
    e6.forEach((e7) => {
      this._featureLookup.delete(e7);
    });
  }
  readFromStoreByList(e6) {
    const t8 = [];
    return e6.forEach((e7) => {
      const r8 = this.readFromStoreById(e7);
      r8 && t8.push(r8);
    }), t8;
  }
  readFromStoreById(e6) {
    return this._featureLookup.get(e6) ?? null;
  }
  writeToStore(o6, n6, p11) {
    const a7 = [];
    return o6.forEach((o7) => {
      if (!o7?.id) return;
      o7.properties || (o7.properties = []);
      let u7, c8 = null;
      if (p11 && o7.properties[p11] && (c8 = ut(o7.properties[p11])), "originId" in o7 && "destinationId" in o7 && (o7.properties[I] = o7.originId, o7.properties[t3] = o7.destinationId), o7.properties[n6] = o7.id, o7.id && this._featureLookup.has(o7.id) && this._featureLookup.get(o7.id).attributes) {
        const t8 = this._featureLookup.get(o7.id), i7 = JSON.parse(JSON.stringify(Object.assign(t8.attributes, o7.properties)));
        p11 && o7.properties[p11] && (i7[p11] = f2(o7.properties[p11])), u7 = new s2(c8 ? JSON.parse(JSON.stringify(c8)) : t8?.geometry ? JSON.parse(JSON.stringify(t8.geometry)) : null, i7, null, o7.properties[n6]);
      } else u7 = new s2(c8 ? JSON.parse(JSON.stringify(c8)) : null, o7.properties, null, o7.properties[n6]);
      this._featureLookup.set(`${o7.typeName ? `${o7.typeName}__${o7.id}` : o7.id}`, u7), a7.push(u7);
    }), a7;
  }
};

// node_modules/@arcgis/core/libs/linkchartlayout/LinkChartLayout.js
var t5;
var r6 = null;
function a5() {
  return t5 || (t5 = import("./lclayout-QOS4W3MJ.js").then((e6) => e6.l).then(({ default: t8 }) => t8({ locateFile: (t9) => n(`esri/libs/linkchartlayout/${t9}`) })).then((e6) => {
    s6(e6);
  }), t5);
}
function s6(e6) {
  r6 = e6;
}
var i5;
var o4;
var u6;
var l8;
!function(e6) {
  e6[e6.None = 0] = "None", e6[e6.IsMovable = 1] = "IsMovable", e6[e6.IsGeographic = 2] = "IsGeographic", e6[e6.IsRoot = 4] = "IsRoot", e6[e6.IsOld = 8] = "IsOld";
}(i5 || (i5 = {})), function(e6) {
  e6[e6.Success = 0] = "Success", e6[e6.Error = 1] = "Error", e6[e6.Canceled = 2] = "Canceled";
}(o4 || (o4 = {})), function(e6) {
  e6[e6.Regular = 0] = "Regular", e6[e6.Curved = 1] = "Curved", e6[e6.Recursive = 2] = "Recursive";
}(u6 || (u6 = {})), function(e6) {
  e6[e6.right = 0] = "right", e6[e6.left = 1] = "left", e6[e6.top = 2] = "top", e6[e6.bottom = 3] = "bottom";
}(l8 || (l8 = {}));
var c5 = { none: 0, "start-only": 1, "start-and-end": 2 };
function y4(e6) {
  const t8 = { ...{ timeDirection: "right", timeBannerUTCOffsetInMinutes: 0, eventsTicksVisualization: "start-and-end", showDurationLineForNonZeroDurationEntityEvents: true, durationLineWidth: 5, entityPositionAtDurationRatio: 1, showNonZeroDurationIntervalBounds: false, separateTimeOverlaps: true, separateTimelineOverlaps: true, moveFirstBends: true, secondBendRatio: 0.3, lineSeparationMultiplier: 1, spaceSeparatedLinesEvenly: false, useBezierCurves: false, separatedLineShapeRatio: 0 }, ...e6?.toJSON() ?? {}, eventsTicksVisualization: e6?.eventsTicksVisualization ?? "start-and-end" };
  return { ...t8, timeDirection: { value: l8[t8.timeDirection] ?? l8.right }, eventsTicksVisualization: { value: c5[t8.eventsTicksVisualization] ?? c5["start-and-end"] } };
}
function E5(e6, t8, n6, a7, s8, i7) {
  const u7 = n6.length, l9 = s8.length, c8 = Float64Array.BYTES_PER_ELEMENT, y6 = Uint32Array.BYTES_PER_ELEMENT, E7 = Uint8Array.BYTES_PER_ELEMENT, p11 = 16, f9 = p11 + u7 * (E7 + 2 * c8) + l9 * (2 * y6), d8 = r6._malloc(f9);
  try {
    const E8 = d8 + p11 - d8 % p11, f10 = E8 + u7 * c8, v3 = f10 + u7 * c8, A4 = v3 + l9 * y6, b5 = A4 + l9 * y6, P3 = () => [r6.HEAPF64.subarray(E8 >> 3, (E8 >> 3) + u7), r6.HEAPF64.subarray(f10 >> 3, (f10 >> 3) + u7), r6.HEAPU32.subarray(v3 >> 2, (v3 >> 2) + l9), r6.HEAPU32.subarray(A4 >> 2, (A4 >> 2) + l9), r6.HEAPU8.subarray(b5, b5 + u7)], [_4, h5, m11, L4, g7] = P3();
    _4.set(n6), h5.set(a7), m11.set(s8), L4.set(i7), g7.set(t8);
    const C2 = e6(u7, b5, E8, f10, l9, v3, A4);
    let H2 = null, F2 = null;
    if (C2.value === o4.Success) {
      const e7 = r6.getLayoutLinksTypes(), t9 = r6.getLayoutLinksVerticesEndIndices(), n7 = r6.getLayoutLinksVertices(), a8 = r6.countLayoutLinksVertices();
      !l9 || e7 && t9 ? a8 && !n7 ? C2.value = o4.Error : (H2 = { types: new Uint8Array(r6.HEAPU8.subarray(e7, e7 + l9)), vertexEndIndex: new Uint32Array(r6.HEAPU32.subarray(t9 >> 2, (t9 >> 2) + l9)), vertices: new Float64Array(r6.HEAPF64.subarray(n7 >> 3, (n7 >> 3) + 2 * a8)) }, F2 = r6.getAuxiliaryGraphicElements()) : C2.value = o4.Error;
    }
    const [T3, R2, B, U2, N2] = P3();
    return n6.set(T3), a7.set(R2), s8.set(B), i7.set(U2), t8.set(N2), { status: C2.value, links: H2, graphics: F2 };
  } finally {
    r6._free(d8), r6.cleanupLayout();
  }
}
var p8 = 2;
var f7 = 1;
var d5 = -1;
var v2;
var A3;
var b3;
var P2;
var _3;
var h4;
var m8;
var L3;
var g5;
!function(e6) {
  function t8() {
    return r6.getMinIdealEdgeLength();
  }
  function n6(e7, t9, n7, a7, s8, i7, o6 = p8, u7 = f7, l9 = d5) {
    return E5((t10, n8, a8, s9, i8, c8, y6) => r6.applyForceDirectedLayout(e7, t10, n8, a8, s9, i8, c8, y6, o6, u7, l9), t9, n7, a7, s8, i7);
  }
  e6.getMinIdealEdgeLength = t8, e6.apply = n6;
}(v2 || (v2 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7, o6 = p8, u7 = f7, l9 = d5) {
    return E5((t10, n7, a8, s9, i8, c8, y6) => r6.applyCommunityLayout(e7, t10, n7, a8, s9, i8, c8, y6, o6, u7, l9), t9, n6, a7, s8, i7);
  }
  e6.apply = t8;
}(A3 || (A3 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7) {
    return E5((t10, n7, a8, s9, i8, o6, u7) => r6.applySimpleLayout(e7, t10, n7, a8, s9, i8, o6, u7), t9, n6, a7, s8, i7);
  }
  e6.apply = t8;
}(b3 || (b3 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7) {
    return E5((t10, n7, a8, s9, i8, o6, u7) => r6.applyHierarchicalLayout(e7, t10, n7, a8, s9, i8, o6, u7), t9, n6, a7, s8, i7);
  }
  e6.apply = t8;
}(P2 || (P2 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7) {
    return E5((t10, n7, a8, s9, i8, o6, u7) => r6.applyRadialTreeLayout(e7, t10, n7, a8, s9, i8, o6, u7), t9, n6, a7, s8, i7);
  }
  e6.apply = t8;
}(_3 || (_3 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7) {
    return E5((t10, n7, a8, s9, i8, o6, u7) => r6.applySmartTreeLayout(e7, t10, n7, a8, s9, i8, o6, u7), t9, n6, a7, s8, i7);
  }
  e6.apply = t8;
}(h4 || (h4 = {})), function(e6) {
  function t8(e7, t9, n6, a7, s8, i7, u7, l9, c8, p11, f9, d8) {
    return E5((t10, n7, a8, u8, l10, E7, v3) => {
      if (s8.length !== t10) return { value: o4.Error };
      if (i7.length !== t10) return { value: o4.Error };
      if (c8.length !== l10) return { value: o4.Error };
      if (p11.length !== l10) return { value: o4.Error };
      const A4 = Float64Array.BYTES_PER_ELEMENT, b5 = 16, P3 = r6._malloc(b5 + t10 * A4), _4 = r6._malloc(b5 + t10 * A4), h5 = r6._malloc(b5 + l10 * A4), m11 = r6._malloc(b5 + l10 * A4), L4 = P3 + b5 - P3 % b5, g7 = _4 + b5 - _4 % b5, C2 = h5 + b5 - h5 % b5, H2 = m11 + b5 - m11 % b5;
      try {
        return r6.HEAPF64.subarray(L4 >> 3, (L4 >> 3) + t10).set(s8), r6.HEAPF64.subarray(g7 >> 3, (g7 >> 3) + t10).set(i7), r6.HEAPF64.subarray(C2 >> 3, (C2 >> 3) + l10).set(c8), r6.HEAPF64.subarray(H2 >> 3, (H2 >> 3) + l10).set(p11), r6.applyChronologicalLayout(e7, t10, n7, a8, u8, L4, g7, l10, E7, v3, C2, H2, f9, y4(d8));
      } finally {
        r6._free(P3), r6._free(_4), r6._free(h5), r6._free(m11);
      }
    }, t9, n6, a7, u7, l9);
  }
  e6.apply = t8;
}(m8 || (m8 = {})), function(e6) {
  e6[e6.Undirected = 0] = "Undirected", e6[e6.Directed = 1] = "Directed", e6[e6.Reversed = 2] = "Reversed";
}(L3 || (L3 = {})), function(e6) {
  e6[e6.ByCC_Raw = 0] = "ByCC_Raw", e6[e6.ByCC_NormalizeGlobally = 1] = "ByCC_NormalizeGlobally", e6[e6.ByCC_NormalizeByCC = 2] = "ByCC_NormalizeByCC";
}(g5 || (g5 = {}));

// node_modules/@arcgis/core/linkChart/enums.js
var o5 = i2()({ none: "none", startAndEnd: "start-and-end", startOnly: "start-only" });
var r7 = i2()({ absoluteValue: "absolute-value", multiplier: "multiplier" });
var a6 = /* @__PURE__ */ new Map([["basic-grid", "basic-grid"], ["geographic-organic-standard", "geographic-organic-standard"], ["hierarchical-bottom-to-top", "hierarchical-bottom-to-top"], ["hierarchical-top-to-bottom", "hierarchical-bottom-to-top"], ["organic-community", "organic-community"], ["organic-fusiform", "organic-standard"], ["organic-leaf-circle", "organic-standard"], ["organic-standard", "organic-standard"], ["radial-node-centric", "radial-root-centric"], ["radial-root-centric", "radial-root-centric"], ["tree-bottom-to-top", "tree-left-to-right"], ["tree-left-to-right", "tree-left-to-right"], ["tree-right-to-left", "tree-left-to-right"], ["tree-top-to-bottom", "tree-left-to-right"], ["chronological-mono-timeline", "chronological-mono-timeline"], ["chronological-multi-timeline", "chronological-multi-timeline"]]);

// node_modules/@arcgis/core/layers/knowledgeGraph/supportUtils.js
function d7(o6, e6) {
  const t8 = /* @__PURE__ */ new Map();
  if (e6.dataModel?.relationshipTypes) for (const r8 of e6.dataModel.relationshipTypes) r8.name && t8.set(r8.name, []);
  for (const r8 of o6) t8.has(r8.typeName) && t8.get(r8.typeName)?.push(r8.id);
  return t8;
}
async function g6(o6, e6, t8) {
  const r8 = [], n6 = d7(o6, e6), i7 = {}, s8 = [];
  for (const [c8, y6] of n6) {
    if (y6.length < 1) continue;
    const o7 = `${c8}_ids`;
    i7[o7] = y6, s8.push(`MATCH (n)-[r:${c8}]->(m) WHERE id(r) in $${o7} RETURN id(n), labels(n)[0], id(m), labels(m)[0]`);
  }
  if (0 === s8.length) return [];
  const a7 = s8.join(" UNION "), l9 = new s4({ openCypherQuery: a7, bindParameters: i7 }), m11 = (await ie(e6, l9, t8?.requestOptions)).resultRowsStream.getReader();
  for (; ; ) {
    const { done: o7, value: e7 } = await m11.read();
    if (o7) break;
    for (const t9 of e7) r8.push({ id: t9[0], typeName: t9[1] }), r8.push({ id: t9[2], typeName: t9[3] });
  }
  return r8;
}
var C = (o6) => a6.get(o6) ?? "radial-root-centric";
function S3(o6) {
  if (!o6.spatialReference.isWGS84) throw new s("knowledge-graph:layer-support-utils", "The utilsExtentToInBoundsRings function only supports WGS84 spatial references.");
  return o6.clone().normalize().map((o7) => [[o7.xmin, o7.ymin], [o7.xmin, o7.ymax], [o7.xmax, o7.ymax], [o7.xmax, o7.ymin], [o7.xmin, o7.ymin]]);
}

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js
var E6 = class extends b {
  constructor(e6) {
    super(e6), this._processingCacheUpdatesLookup = /* @__PURE__ */ new Map(), this.knowledgeGraph = null, this.inclusionModeDefinition = { generateAllSublayers: true, namedTypeDefinitions: /* @__PURE__ */ new Map() }, this.entityTypeNames = /* @__PURE__ */ new Set(), this.relationshipTypeNames = /* @__PURE__ */ new Set(), this.geographicLookup = /* @__PURE__ */ new Map(), this.sublayerCaches = /* @__PURE__ */ new Map(), this.nodeConnectionsLookup = /* @__PURE__ */ new Map(), this.relationshipConnectionsLookup = /* @__PURE__ */ new Map(), this.memberIdTypeLookup = /* @__PURE__ */ new Map();
    const t8 = /* @__PURE__ */ new Map();
    e6.knowledgeGraph.dataModel.entityTypes?.forEach((i7) => {
      i7.name && (t8.set(i7.name, "entity"), this._processingCacheUpdatesLookup.set(i7.name, []), e6.inclusionModeDefinition && !e6.inclusionModeDefinition?.generateAllSublayers || this.entityTypeNames.add(i7.name), i7.properties?.forEach((e7) => {
        e7.geometryType && "esriGeometryNull" !== e7.geometryType && this.geographicLookup.set(i7.name, { name: e7.name ?? "", geometryType: e7.geometryType });
      }));
    }), e6.knowledgeGraph.dataModel.relationshipTypes?.forEach((i7) => {
      i7.name && (t8.set(i7.name, "relationship"), this._processingCacheUpdatesLookup.set(i7.name, []), e6.inclusionModeDefinition && !e6.inclusionModeDefinition?.generateAllSublayers || this.relationshipTypeNames.add(i7.name), i7.properties?.forEach((e7) => {
        e7.geometryType && "esriGeometryNull" !== e7.geometryType && this.geographicLookup.set(i7.name, { name: e7.name ?? "", geometryType: e7.geometryType });
      }));
    }), e6.inclusionModeDefinition?.namedTypeDefinitions.forEach((i7, s8) => {
      if ("entity" === t8.get(s8)) this.entityTypeNames.add(s8);
      else {
        if ("relationship" !== t8.get(s8)) return i.getLogger(this).warn(`A named type, ${s8}, was in the inclusion list that wasn't in the data model and will be removed`), void e6.inclusionModeDefinition?.namedTypeDefinitions.delete(s8);
        this.relationshipTypeNames.add(s8);
      }
      const a7 = /* @__PURE__ */ new Map();
      i7.members?.forEach((e7) => {
        u(this.memberIdTypeLookup, e7.id, () => /* @__PURE__ */ new Set()).add(s8);
        const t9 = this.getById(e7.id);
        t9 && a7.set(e7.id, t9);
      }), this.sublayerCaches.set(s8, a7);
    });
  }
  addToLayer(e6) {
    e6.forEach(({ typeName: e7, id: t8 }) => {
      if (!this.inclusionModeDefinition) throw new s("knowledge-graph:layer-data-manager", "You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
      if (this.inclusionModeDefinition.namedTypeDefinitions.has(e7)) {
        if (this.inclusionModeDefinition.namedTypeDefinitions.has(e7)) {
          const i7 = this.inclusionModeDefinition.namedTypeDefinitions.get(e7);
          i7.members || (i7.members = /* @__PURE__ */ new Map()), i7.members.set(t8, { id: t8 }), u(this.memberIdTypeLookup, t8, () => /* @__PURE__ */ new Set()).add(e7);
        }
      } else {
        const i7 = /* @__PURE__ */ new Map();
        i7.set(t8, { id: t8 }), this.inclusionModeDefinition.namedTypeDefinitions.set(e7, { useAllData: false, members: i7 }), u(this.memberIdTypeLookup, t8, () => /* @__PURE__ */ new Set()).add(e7);
      }
    });
  }
  getById(e6) {
    return o3.getInstance().readFromStoreById(e6);
  }
  async getData(e6, t8, i7) {
    if (t8.objectType.name && this.inclusionModeDefinition?.namedTypeDefinitions && this.inclusionModeDefinition.namedTypeDefinitions.size > 0 && !this.inclusionModeDefinition.namedTypeDefinitions.has(t8.objectType.name)) return [];
    let n6;
    if (n6 = e6 || new R({ where: "1=1", outFields: ["*"] }), "link-chart" === t8.parentCompositeLayer.type) {
      const e7 = t8.parentCompositeLayer, i8 = this._processingCacheUpdatesLookup.get(t8.objectType.name ?? ""), o6 = n6.outFields;
      o6 && 1 === o6.length && o6[0] === _2 && "1=1" === n6.where || await Promise.all(i8 ?? []);
      const s8 = this.sublayerCaches.has(t8.objectType.name ?? "") ? Array.from(this.sublayerCaches.get(t8.objectType.name)?.values()) : [], a7 = [];
      return s8.forEach((i9) => {
        if (this.relationshipTypeNames.has(t8.objectType.name)) {
          i9.geometry = e7.relationshipLinkChartDiagramLookup.get(i9.attributes[t8.objectIdField]);
          const n7 = this.memberIdTypeLookup.get(i9.attributes[I]), o7 = this.memberIdTypeLookup.get(i9.attributes[t3]), s9 = this._isEndEntitySpatial(n7, i9, I), a8 = this._isEndEntitySpatial(o7, i9, t3);
          i9.attributes[E] = Number(s9 && a8);
        } else {
          i9.geometry = e7.entityLinkChartDiagramLookup.get(i9.attributes[t8.objectIdField]);
          const n7 = this.geographicLookup.get(t8.objectType.name);
          n7 && i9.attributes[n7.name] ? i9.attributes[E] = 1 : i9.attributes[E] = 0;
        }
        i9.attributes[S2] = i9.geometry, a7.push(i9);
      }), a7;
    }
    return this.retrieveDataFromService(n6, t8, i7);
  }
  async getConnectedRecordIds(e6, t8, i7) {
    const n6 = [];
    let o6 = "";
    const s8 = this._getNamedTypeIdMapFromNodeIds(e6);
    if (t8 && 0 !== t8?.length) {
      for (const e7 of t8) o6 = o6 + e7 + "|";
      o6 = o6.slice(0, -1);
    }
    const a7 = {}, r8 = [];
    for (const [l9, m11] of s8) {
      const e7 = `${l9}_ids`;
      a7[e7] = m11, t8 && 0 !== t8?.length ? r8.push(`MATCH (n:${l9}) WHERE id(n) IN $${e7} WITH n MATCH (n)-[r:${o6}]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`) : r8.push(`MATCH (n:${l9}) WHERE id(n) IN $${e7} WITH n MATCH (n)-[r]-(m) RETURN id(r), type(r), id(m), labels(m)[0]`);
    }
    if (!r8.length) return n6;
    const p11 = r8.join(" UNION "), d8 = (await ie(this.knowledgeGraph, new s4({ openCypherQuery: p11, bindParameters: a7 }), { signal: i7?.signal })).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e7, value: t9 } = await d8.read();
      if (e7) break;
      for (let i8 = 0; i8 < t9.length; i8++) {
        const e8 = t9[i8];
        n6.push({ id: e8[0], typeName: e8[1] }), n6.push({ id: e8[2], typeName: e8[3] });
      }
    }
    return n6;
  }
  async getRelationshipsBetweenNodes(e6, t8, i7) {
    const n6 = this._getNamedTypeIdMapFromNodeIds(e6);
    if (0 === n6.size) return [];
    const o6 = { relationshipExclusionIds: t8, possibleConnectionEntityIds: e6 }, s8 = [];
    for (const [d8, l9] of n6.entries()) {
      const e7 = `${d8}_ids`;
      o6[e7] = l9, s8.push(`MATCH (n:${d8}) WHERE id(n) IN $${e7} WITH n MATCH (n)-[r]->(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`);
    }
    const a7 = s8.join(" UNION "), r8 = [], p11 = (await ie(this.knowledgeGraph, new s4({ openCypherQuery: a7, bindParameters: o6 }), { signal: i7?.signal })).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e7, value: t9 } = await p11.read();
      if (e7) break;
      for (let i8 = 0; i8 < t9.length; i8++) {
        const e8 = t9[i8];
        r8.push({ id: e8[0], typeName: e8[1] });
      }
    }
    return r8;
  }
  async getRelationshipsFromNodes(e6, t8, i7, n6) {
    const o6 = this._getNamedTypeIdMapFromNodeIds(e6);
    if (0 === o6.size || 0 === t8.length) return [];
    const s8 = { relationshipExclusionIds: i7, possibleConnectionEntityIds: t8 }, a7 = [];
    for (const [m11, h5] of o6.entries()) {
      const e7 = `${m11}_ids`;
      s8[e7] = h5, a7.push(`MATCH (n:${m11}) WHERE id(n) IN $${e7} WITH n MATCH (n)-[r]-(m) WHERE id(m) IN $possibleConnectionEntityIds AND NOT id(r) IN $relationshipExclusionIds RETURN id(r), type(r)`);
    }
    const r8 = a7.join(" UNION "), p11 = /* @__PURE__ */ new Map(), d8 = (await ie(this.knowledgeGraph, new s4({ openCypherQuery: r8, bindParameters: s8 }), { signal: n6?.signal })).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e7, value: t9 } = await d8.read();
      if (e7) break;
      for (let i8 = 0; i8 < t9.length; i8++) {
        const e8 = t9[i8];
        let n7 = p11.get(e8[1]);
        n7 || (n7 = /* @__PURE__ */ new Set(), p11.set(e8[1], n7)), n7.add(e8[0]);
      }
    }
    const l9 = [];
    for (const [m11, h5] of p11) for (const e7 of h5) l9.push({ id: e7, typeName: m11 });
    return l9;
  }
  async refreshCacheContent(e6, t8, n6, a7 = true, r8) {
    const p11 = o3.getInstance(), d8 = [], l9 = /* @__PURE__ */ new Map(), m11 = /* @__PURE__ */ new Map();
    this.knowledgeGraph.dataModel.entityTypes?.forEach((e7) => {
      e7.name && m11.set(e7.name, e7);
    }), this.knowledgeGraph.dataModel.relationshipTypes?.forEach((e7) => {
      e7.name && m11.set(e7.name, e7);
    }), e6 || this.inclusionModeDefinition ? e6 ? e6.forEach((e7) => {
      if (this.memberIdTypeLookup.has(e7)) for (const t9 of this.memberIdTypeLookup.get(e7)) l9.has(t9) ? l9.get(t9)?.push(e7) : l9.set(t9, [e7]);
    }) : this.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e7, t9) => {
      e7.useAllData ? l9.set(t9, null) : e7.members && e7.members.forEach((e8) => {
        l9.has(t9) && null !== l9.get(t9) ? l9.get(t9)?.push(e8.id) : l9.set(t9, [e8.id]);
      });
    }) : (this.knowledgeGraph.dataModel.entityTypes?.forEach((e7) => {
      e7.name && l9.set(e7.name, null);
    }), this.knowledgeGraph.dataModel.entityTypes?.forEach((e7) => {
      e7.name && l9.set(e7.name, null);
    }));
    for (const [s8, h5] of l9) {
      const e7 = new Set(h5), l10 = new Promise((d9, l11) => {
        const c8 = async () => {
          const d10 = /* @__PURE__ */ new Set(), l12 = [];
          let c9, u7 = "", f9 = false;
          if (t8 || m11.get(s8)?.properties?.forEach((e8) => {
            e8.name && d10.add(e8.name);
          }), n6 && this.geographicLookup.has(s8)) {
            const e8 = this.geographicLookup.get(s8)?.name;
            e8 && d10.add(e8);
          }
          if (this.entityTypeNames.has(s8)) u7 = `MATCH (n:${s8}) ${h5 ? "WHERE id(n) IN $ids " : ""}return ID(n)`, d10.forEach((e8) => {
            u7 += `, n.${e8}`, l12.push(e8);
          });
          else {
            if (!this.relationshipTypeNames.has(s8)) throw new s("knowledge-graph:layer-data-manager", `The graph type of ${s8} could not be determined. Was this type set in the KG data model and inclusion definition?`);
            f9 = true, u7 = `MATCH ()-[n:${s8}]->() ${h5 ? "WHERE id(n) IN $ids " : ""}return ID(n), id(startNode(n)), id(endNode(n))`, d10.forEach((e8) => {
              u7 += `, n.${e8}`, l12.push(e8);
            });
          }
          c9 = new s4(h5 ? { openCypherQuery: u7, bindParameters: { ids: h5 } } : { openCypherQuery: u7 });
          const g7 = (await ie(this.knowledgeGraph, c9, { signal: r8?.signal })).resultRowsStream.getReader();
          for (; ; ) {
            const { done: t9, value: i7 } = await g7.read();
            if (t9) break;
            const n7 = [];
            for (let s9 = 0; s9 < i7.length; s9++) {
              const t10 = i7[s9];
              let a8 = 0, r10 = 0;
              const p12 = { properties: {} };
              for (p12.id = t10[a8], a8++, r10++, f9 && (p12.originId = t10[a8], a8++, r10++, p12.destinationId = t10[a8], a8++, r10++, u(this.nodeConnectionsLookup, p12.originId, () => /* @__PURE__ */ new Set()).add(p12.id), u(this.nodeConnectionsLookup, p12.destinationId, () => /* @__PURE__ */ new Set()).add(p12.id), u(this.relationshipConnectionsLookup, p12.id, () => [p12.originId, p12.destinationId])); a8 < t10.length; a8++) p12.properties[l12[a8 - r10]] = t10[a8];
              e7.delete(p12.id), n7.push(p12);
            }
            const r9 = p11.writeToStore(n7, _2, this.geographicLookup.get(s8)?.name);
            this.sublayerCaches.has(s8) || this.sublayerCaches.set(s8, /* @__PURE__ */ new Map()), a7 && !this.inclusionModeDefinition?.namedTypeDefinitions.has(s8) && this.inclusionModeDefinition?.namedTypeDefinitions.set(s8, { useAllData: false, members: /* @__PURE__ */ new Map() }), a7 && !this.inclusionModeDefinition?.namedTypeDefinitions.get(s8).members && (this.inclusionModeDefinition.namedTypeDefinitions.get(s8).members = /* @__PURE__ */ new Map());
            const d11 = this.sublayerCaches.get(s8);
            r9.forEach((e8) => {
              d11?.set(e8.attributes[_2], e8), a7 && !this.inclusionModeDefinition?.namedTypeDefinitions.get(s8).members.has(e8.attributes[_2]) && (this.inclusionModeDefinition?.namedTypeDefinitions.get(s8).members.set(e8.attributes[_2], { id: e8.attributes[_2] }), u(this.memberIdTypeLookup, e8.attributes[_2], () => /* @__PURE__ */ new Set()).add(s8));
            });
          }
          const b5 = this.inclusionModeDefinition?.namedTypeDefinitions.get(s8);
          if (b5) for (const t9 of e7) b5.members?.delete(t9);
        };
        c8().then(() => {
          d9(null);
        }).catch((e8) => {
          "AbortError" === e8.name ? d9(null) : l11(e8);
        });
      });
      d8.push(l10), this._processingCacheUpdatesLookup.get(s8)?.push(l10);
    }
    if (await Promise.all(d8), r8?.signal?.aborted) throw u2();
  }
  removeFromLayer(e6) {
    const t8 = /* @__PURE__ */ new Set(), i7 = new Set(e6.map((e7) => e7.id));
    for (const n6 of e6) t8.add(n6.typeName), 1 === this.memberIdTypeLookup.get(n6.id)?.size ? this.memberIdTypeLookup.delete(n6.id) : this.memberIdTypeLookup.get(n6.id)?.delete(n6.typeName), this.inclusionModeDefinition?.namedTypeDefinitions.forEach((e7, t9) => {
      t9 === n6.typeName && e7.members?.has(n6.id) && e7.members.delete(n6.id);
    });
    t8.forEach((e7) => {
      this.sublayerCaches.get(e7)?.forEach((t9, n6) => {
        i7.has(n6) && this.sublayerCaches.get(e7)?.delete(n6);
      });
    });
  }
  async retrieveDataFromService(e6, t8, n6) {
    const o6 = o3.getInstance(), s8 = /* @__PURE__ */ new Set(), r8 = [];
    let p11, u7 = "", f9 = [];
    const g7 = "relationship" === t8.graphType, b5 = this.inclusionModeDefinition?.namedTypeDefinitions?.get(t8.objectType.name)?.useAllData, D2 = t8.parentCompositeLayer.sublayerIdsCache.get(t8.objectType.name);
    let E7 = !b5 && D2 ? Array.from(D2).sort() : null;
    if (this.inclusionModeDefinition?.namedTypeDefinitions?.get(t8.objectType.name)?.useAllData) this.inclusionModeDefinition?.namedTypeDefinitions?.get(t8.objectType.name)?.useAllData && null != e6.objectIds && (E7 = e6.objectIds);
    else if (null != e6.objectIds && E7 && E7.length > 0) {
      const t9 = e6.objectIds;
      e6.objectIds = E7.filter((e7) => t9.includes(e7));
    } else if (null != e6.objectIds) E7 = e6.objectIds;
    else {
      if (this.inclusionModeDefinition?.namedTypeDefinitions.has(t8.objectType.name) && (!this.inclusionModeDefinition.namedTypeDefinitions.get(t8.objectType.name)?.members || this.inclusionModeDefinition.namedTypeDefinitions.get(t8.objectType.name)?.members?.size < 1)) return e6.objectIds = [], [];
      e6.objectIds = E7;
    }
    if (null != e6.outFields) {
      const i7 = e6.outFields;
      i7.includes("*") ? t8.fields.forEach((e7) => {
        s8.add(e7.name);
      }) : i7.forEach((e7) => {
        e7 !== _2 && e7 !== t8.geometryFieldName && s8.add(e7);
      });
    }
    if (null != e6.geometry) {
      const n7 = e6.geometry;
      let o7;
      const y6 = t8.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition, f10 = y6?.spatialReference, b6 = y6?.serviceCapabilities?.geometryCapabilities;
      let w3 = b6?.geometryMaxBoundingRectangleSizeX, I4 = b6?.geometryMaxBoundingRectangleSizeY;
      if ("point" === n7.type) {
        let e7 = n7;
        e7.spatialReference?.isWGS84 || (await Q(e7.spatialReference, U), e7 = O(e7, U)), o7 = new z({ spatialReference: U, xmin: e7.x - 1e-4, ymin: e7.y - 1e-4, xmax: e7.x + 1e-4, ymax: e7.y + 1e-4 });
      } else n7?.extent?.spatialReference && !n7.spatialReference?.isWGS84 ? (await Q(n7.extent.spatialReference, U), o7 = O(n7.extent, U)) : o7 = n7.extent;
      if (w3 && I4 && f10) {
        if (4326 !== f10.wkid) {
          const e7 = new z({ spatialReference: f10, xmax: w3, ymax: I4 }), t9 = O(e7, U);
          w3 = t9.xmax, I4 = t9.ymax;
        }
        if (o7.xmax - o7.xmin > w3) throw new s("knowledge-graph:layer-data-manager", `Extent x bounds should be within ${w3}° latitude, limit exceeded`);
        if (o7.ymax - o7.ymin > I4) throw new s("knowledge-graph:layer-data-manager", `Extent y bounds should be within ${I4}° longitude, limit exceeded`);
      }
      if (null != e6.where && "1=1" !== e6.where) {
        const i7 = await e2(e6.where.toUpperCase(), t8.fieldsIndex);
        t8.fields.forEach((e7) => {
          i7.fieldNames.includes(e7.name) && s8.add(e7.name);
        });
      }
      u7 = g7 ? `Match ()-[n:${t8.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t8.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))` : `Match (n:${t8.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t8.geometryFieldName}) return ID(n)`, t8.geometryFieldName && s8.add(t8.geometryFieldName), s8.forEach((e7) => {
        u7 += `, n.${e7}`, r8.push(e7);
      }), p11 = new s4({ openCypherQuery: u7, bindParameters: { param_filter_geom: new P({ rings: S3(o7) }) } });
    } else {
      let i7 = "";
      if (null != e6.where && "1=1" !== e6.where) {
        const n8 = await e2(e6.where, t8.fieldsIndex);
        t8.fields.forEach((e7) => {
          n8.fieldNames.includes(e7.name) && s8.add(e7.name);
        });
        const o8 = /* @__PURE__ */ new Set(["column-reference", "string", "number", "binary-expression"]), r9 = /* @__PURE__ */ new Set(["=", "<", "<=", "<>", ">", ">=", "AND", "OR", "LIKE"]);
        let p12 = false;
        const d8 = (e7) => {
          if ("column-reference" === e7.type) return `n.${e7.column}`;
          if ("string" === e7.type) return `'${e7.value}'`;
          if ("number" === e7.type) return `${e7.value}`;
          if ("binary-expression" === e7.type && o8.has(e7.left.type) && o8.has(e7.right.type) && r9.has(e7.operator)) return `${d8(e7.left)} ${e7.operator} ${d8(e7.right)}`;
          if ("binary-expression" === e7.type && "LIKE" === e7.operator) {
            let t9 = "";
            if ("function" === e7.left.type && "column-reference" === e7.left.args.value[0].type) t9 += `lower(n.${e7.left.args.value[0].column})`;
            else {
              if ("column-reference" !== e7.left.type) return p12 = true, "";
              t9 += `lower(n.${e7.left.column})`;
            }
            if (t9 += " CONTAINS (", "string" !== e7.right.type) return p12 = true, "";
            {
              let i8 = e7.right.value;
              "%" === i8.charAt(0) && (i8 = i8.slice(1)), "%" === i8.charAt(i8.length - 1) && (i8 = i8.slice(0, -1)), t9 += `'${i8.toLowerCase()}')`;
            }
            return t9;
          }
          return p12 = true, "";
        };
        i7 = d8(n8.parseTree), p12 && (i7 = "");
      }
      let n7 = "";
      n7 = g7 ? `Match ()-[n:${t8.objectType.name}]->()` : `Match (n:${t8.objectType.name})`;
      let o7 = false;
      E7 && (o7 = true, n7 += " WHERE ID(n) IN $ids"), i7 && (n7 += o7 ? " AND" : " WHERE", n7 += ` ${i7}`), n7 += " return ID(n)", g7 && (n7 += ", id(startNode(n)), id(endNode(n))"), e6.returnGeometry && t8.geometryFieldName && s8.add(t8.geometryFieldName), s8.forEach((e7) => {
        n7 += `, n.${e7}`, r8.push(e7);
      }), p11 = new s4(E7 ? { openCypherQuery: n7, bindParameters: { ids: E7 } } : { openCypherQuery: n7 });
    }
    const N2 = (await ie(t8.parentCompositeLayer.dataManager.knowledgeGraph, p11, n6)).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e7, value: i7 } = await N2.read();
      if (e7) break;
      const n7 = [];
      for (let t9 = 0; t9 < i7.length; t9++) {
        const e8 = i7[t9];
        let o7 = 0, s9 = 0;
        const a7 = { properties: {} };
        for (a7.id = e8[o7], o7++, s9++, g7 && (a7.originId = e8[o7], o7++, s9++, a7.destinationId = e8[o7], o7++, s9++); o7 < e8.length; o7++) a7.properties[r8[o7 - s9]] = e8[o7];
        n7.push(a7);
      }
      f9 = f9.concat(o6.writeToStore(n7, _2, t8.parentCompositeLayer.dataManager.geographicLookup.get(t8.objectType.name)?.name));
    }
    return f9;
  }
  _isEndEntitySpatial(e6, t8, i7) {
    for (const n6 of e6 ?? []) if (this.entityTypeNames.has(n6)) {
      const e7 = this.geographicLookup.get(n6), o6 = e7 && this.sublayerCaches.get(n6)?.get(t8.attributes[i7]);
      if (e7 && o6?.attributes[e7.name]) return true;
    }
    return false;
  }
  _getNamedTypeIdMapFromNodeIds(e6) {
    const t8 = /* @__PURE__ */ new Map();
    return e6.forEach((e7) => {
      if (this.memberIdTypeLookup.has(e7)) for (const i7 of this.memberIdTypeLookup.get(e7)) {
        if (!this.entityTypeNames.has(i7)) return;
        t8.has(i7) ? t8.get(i7)?.push(e7) : t8.set(i7, [e7]);
      }
    }), t8;
  }
};
r([m()], E6.prototype, "knowledgeGraph", void 0), r([m()], E6.prototype, "inclusionModeDefinition", void 0), r([m()], E6.prototype, "entityTypeNames", void 0), r([m()], E6.prototype, "relationshipTypeNames", void 0), r([m()], E6.prototype, "geographicLookup", void 0), r([m()], E6.prototype, "sublayerCaches", void 0), r([m()], E6.prototype, "nodeConnectionsLookup", void 0), r([m()], E6.prototype, "relationshipConnectionsLookup", void 0), r([m()], E6.prototype, "memberIdTypeLookup", void 0), E6 = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphLayerDataManager")], E6);

// node_modules/@arcgis/core/layers/knowledgeGraph/layerUtils.js
var t6 = { initializeLayersFromClientData: async (e6, n6, o6) => {
  if (n6 || (n6 = [...e6.layers, ...e6.tables].map((e7) => e7.graphTypeName)), 0 === n6?.length) return;
  const r8 = /* @__PURE__ */ new Map();
  for (const a7 of n6) r8.set(a7, s7(e6, a7));
  const l9 = await le(e6.dataManager.knowledgeGraph, Array.from(r8.values()), { requestOptions: { signal: o6?.signal } });
  for (const a7 of [...e6.layers, ...e6.tables]) {
    const n7 = a7.objectType.name;
    if (null == n7) continue;
    const o7 = l9.get(s7(e6, n7));
    if (o7) {
      const e7 = JSON.parse(o7);
      null === e7 || "object" != typeof e7 || e7.hasOwnProperty("showLabels") || (e7.showLabels = false), a7.read(e7, { origin: "service" });
    }
  }
} };
var s7 = (e6, n6) => "knowledge-graph" === e6.type ? `${n6}/Map` : `${n6}/LinkChart/LinkChartSubLayer`;
async function i6(e6, n6, o6) {
  return t6.initializeLayersFromClientData(e6, n6, o6);
}
var b4 = ["#4a0932", "#b31515", "#18382e", "#a64f1b", "#102432", "#8c213f", "#ed9310", "#2c6954", "#144d59", "#ffc730", "#75351e", "#454f4b", "#78b1c2", "#191921", "#8f8f82", "#9be0c0", "#dbb658", "#87b051", "#11495c", "#c43541", "#9c5596", "#44498b", "#ad9d63", "#86afb3", "#5c98ca", "#b0bfa2", "#73241f", "#b86b53", "#d9d78c", "#3e756d", "#f260a1", "#a0d17d", "#c27c30", "#eb82eb", "#ffdf3c", "#ffb259", "#ab52b3", "#3cccb4", "#0095ba", "#d92b30"];
var c7 = "#8f8f82";
function f8(n6) {
  return n6 < 0 || n6 >= b4.length ? new l3(c7) : new l3(b4[n6]);
}
function m10(e6) {
  const n6 = e6.toArray();
  return new n3({ data: { type: "CIMSymbolReference", symbol: { type: "CIMLineSymbol", symbolLayers: [{ type: "CIMSolidStroke", enable: true, style: "solid", width: 0.75, color: n6 }, { type: "CIMVectorMarker", enable: true, size: 6, markerPlacement: { type: "CIMMarkerPlacementOnLine", angleToLine: true, relativeTo: "LineMiddle" }, frame: { xmin: -10, ymin: -5, xmax: 0, ymax: 5 }, markerGraphics: [{ type: "CIMMarkerGraphic", geometry: { rings: [[[-12, -3.47], [-12, 3.6], [1.96, -0.03], [-12, -3.47]]] }, symbol: { type: "CIMPolygonSymbol", symbolLayers: [{ type: "CIMSolidFill", enable: true, color: n6 }] } }] }] } } });
}
function p9(e6) {
  let n6 = "ESRI__ID", o6 = 4;
  for (const a7 of e6) if (a7.name) {
    if ("name" === a7.name.toLowerCase()) {
      n6 = a7.name;
      break;
    }
    a7.name.toLowerCase().includes("name") ? (n6 = a7.name, o6 = 2) : "esriFieldTypeString" === a7.fieldType && o6 > 3 && (n6 = a7.name, o6 = 3);
  }
  return n6;
}
function y5(e6, a7, r8) {
  const t8 = { color: [80, 80, 80], haloColor: [255, 255, 255], haloSize: 0.7, font: { size: 10, weight: "normal" } }, s8 = new A({ labelExpressionInfo: new n4({ expression: "ESRI__ID" === r8 ? `${a7}` : `$feature.${r8}` }), labelPlacement: "above-center", symbol: new g(t8) }), i7 = new A({ labelExpressionInfo: new n4({ expression: `'${a7}' + IIf($feature.ESRI__AggregationCount>1, ' (' + $feature.ESRI__AggregationCount + ')', '')` }), labelPlacement: "center-along", labelPosition: "parallel", repeatLabel: false, symbol: new g({ ...t8, yoffset: "12px" }) });
  return "entity" === e6 ? [s8] : [i7];
}
function w2(e6, a7, r8) {
  const t8 = { color: [255, 255, 255], haloColor: [0, 0, 0], haloSize: 0.7, font: { size: 10, weight: "bold" } }, s8 = "ESRI__ID" === r8 ? `${e6}` : `$feature.${r8}`;
  return "point" === a7 ? [new A({ labelExpressionInfo: new n4({ expression: s8 }), labelPlacement: "above-center", symbol: new g(t8) })] : "polyline" === a7 ? [new A({ labelExpressionInfo: new n4({ expression: s8 }), labelPlacement: "center-along", repeatLabel: true, symbol: new g(t8) })] : "polygon" === a7 ? [new A({ labelExpressionInfo: new n4({ expression: s8 }), labelPlacement: "always-horizontal", symbol: new g(t8) })] : null;
}

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayerBase.js
var t7 = s3();
var p10 = (s8) => {
  let p11 = class extends s8 {
    constructor() {
      super(...arguments), this.fields = [], this.fieldsIndex = null;
    }
  };
  return r([m(t7.fields)], p11.prototype, "fields", void 0), r([m(t7.fieldsIndex)], p11.prototype, "fieldsIndex", void 0), p11 = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphSublayerBase")], p11), p11;
};

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayer.js
function fe(e6) {
  if (!e6.json) return e6;
  e6.json.write = ge(e6.json.write);
  const t8 = e6.json.origins;
  if (!t8) return e6;
  let r8;
  for (r8 in t8) {
    const e7 = t8[r8];
    e7 && (e7.write = ge(e7.write));
  }
  return e6;
}
function ge(e6) {
  return "object" == typeof e6 && e6 ? (false !== e6.enabled && (e6.overridePolicy = je(e6)), e6) : true === e6 ? be() : e6;
}
function je(e6) {
  const { target: t8, writer: r8, overridePolicy: i7, ...o6 } = e6;
  return function(e7, t9) {
    const r9 = we.call(this, e7, t9);
    return r9.enabled ? { ...o6, ...r9 } : r9;
  };
}
function be() {
  return { overridePolicy: we };
}
function we(e6, t8) {
  const r8 = !!this.geometryType;
  let i7 = { enabled: r8 };
  return r8 && (i7 = { ...i7, ...Te.call(this, e6, t8) }), i7;
}
function Te(e6, t8) {
  return { ignoreOrigin: this.originIdOf(t8) > e.DEFAULTS };
}
var Ie = class extends p10(a3(d2(c(p(p5(c3(t(f3(S(h)))))))))) {
  constructor(e6) {
    super(e6), this.blendMode = "normal", this.capabilities = y3(false, true), this.charts = null, this.definitionExpression = null, this.displayField = "", this.displayFilterEnabled = true, this.displayFilterInfo = null, this.effect = null, this.elevationInfo = null, this.featureEffect = null, this.graphType = null, this.labelsVisible = true, this.layerType = null, this.legendEnabled = true, this.maxScale = 0, this.minScale = 0, this.objectIdField = _2, this.objectType = null, this.opacity = 1, this.orderBy = null, this.parent = null, this.parentCompositeLayer = null, this.persistenceEnabled = true, this.popupEnabled = true, this.popupTemplate = null, this.refreshInterval = 0, this.source = { openPorts: () => this.load().then(() => {
      const e7 = new MessageChannel();
      return new E2(e7.port1, { channel: e7, client: { queryFeatures: (e8, t8 = {}) => {
        const r8 = R.fromJSON(e8);
        return this.queryFeaturesJSON(r8, t8);
      } } }), [e7.port2];
    }) }, this.type = "knowledge-graph-sublayer", this.useViewTime = true, this.visible = true;
  }
  get userHasUpdateItemPrivileges() {
    return !!this.parent?.userHasUpdateItemPrivileges;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e6) {
    const t8 = this._normalizeFeatureReduction(e6);
    this._set("featureReduction", t8);
  }
  get fields() {
    const e6 = [];
    return this.objectType?.properties?.forEach((t8) => {
      const r8 = "esriFieldTypeOID" === t8.fieldType ? "esriFieldTypeInteger" : t8.fieldType;
      e6.push(m2.fromJSON({ name: t8.name, type: r8, alias: t8.alias, defaultValue: t8.defaultValue, editable: t8.editable, nullable: t8.nullable }));
    }), e6.push(m2.fromJSON({ name: this.objectIdField, type: "esriFieldTypeString", alias: this.objectIdField, editable: false }), m2.fromJSON({ name: o, type: "esriFieldTypeInteger", alias: o, editable: false }), m2.fromJSON({ name: E, type: "esriFieldTypeInteger", alias: E, editable: false })), e6;
  }
  get geometryType() {
    if ("link-chart" === this.parentCompositeLayer?.type) return "relationship" === this.graphType ? "polyline" : "point";
    const e6 = this.parentCompositeLayer?.dataManager.geographicLookup.get(this.objectType?.name), t8 = e6?.geometryType;
    return t8 && "esriGeometryNull" !== t8 ? y2.fromJSON(t8) : null;
  }
  get geometryFieldName() {
    if ("link-chart" === this.parentCompositeLayer?.type) return S2;
    const e6 = this.parentCompositeLayer?.dataManager.geographicLookup.get(this.objectType?.name);
    return e6?.name ?? null;
  }
  get graphTypeName() {
    return this.objectType?.name;
  }
  get hasM() {
    const e6 = this.parentCompositeLayer?.dataManager.geographicLookup.get(this.objectType?.name), t8 = e6?.name, r8 = t8 ? this.objectType?.properties?.[t8] : null;
    return r8?.hasM ?? false;
  }
  get hasZ() {
    const e6 = this.parentCompositeLayer?.dataManager.geographicLookup.get(this.objectType?.name), t8 = e6?.name, r8 = t8 ? this.objectType?.properties?.[t8] : null;
    return r8?.hasZ ?? false;
  }
  set labelingInfo(e6) {
    this._set("labelingInfo", e6);
  }
  get labelingInfo() {
    if (this._isOverridden("labelingInfo")) return this._get("labelingInfo");
    if (!this.objectType || !this.parentCompositeLayer || !this.graphTypeName) return null;
    const e6 = this.objectType.properties ? p9(this.objectType.properties) : "ESRI__ID";
    return "link-chart" === this.parentCompositeLayer.type ? y5(this.graphType, this.graphTypeName, e6) : w2(this.graphTypeName, this.geometryType, e6);
  }
  set renderer(e6) {
    g3(e6, this.fieldsIndex), this._set("renderer", e6);
  }
  get renderer() {
    if (this._isOverridden("renderer")) return this._get("renderer");
    const e6 = this.parentCompositeLayer?.dataManager?.knowledgeGraph?.dataModel, t8 = [...e6?.entityTypes ?? [], ...e6?.relationshipTypes ?? []].map((e7) => e7.name).indexOf(this.graphTypeName), r8 = f8(t8);
    if ("link-chart" === this.parentCompositeLayer?.type) {
      if ("relationship" === this.graphType) return new m3({ type: "simple", symbol: m10(r8) });
      const e7 = t2(u4(y2.toJSON("point")).renderer);
      return L(e7.symbol, r8), e7;
    }
    const i7 = t2(u4(y2.toJSON(this.geometryType)).renderer);
    return L(i7.symbol, r8), i7;
  }
  get spatialReference() {
    return this.parentCompositeLayer?.dataManager?.knowledgeGraph?.dataModel?.spatialReference ?? f.WGS84;
  }
  set timeInfo(e6) {
    this._set("timeInfo", e6);
  }
  get title() {
    return this._isOverridden("title") ? this._get("title") : this.graphTypeName;
  }
  set title(e6) {
    this._set("title", e6);
  }
  writeTitle(e6, t8) {
    t8.title = e6 ?? "Layer";
  }
  createPopupTemplate(e6) {
    return p6(this, e6);
  }
  createQuery() {
    return new R({ where: "1=1", outFields: ["*"] });
  }
  getField(e6) {
    return this.fieldsIndex.get(e6);
  }
  getFieldDomain(e6, t8) {
    return null;
  }
  async queryFeatures(e6, t8) {
    await this.load();
    const { resolvedQuery: r8, queryEngine: i7 } = await this._setupQueryObjects(e6), o6 = g2.fromJSON(await i7.executeQuery(r8.toJSON(), t8?.signal));
    return o6.features.forEach((e7) => {
      e7.sourceLayer = this;
    }), o6;
  }
  async queryFeaturesJSON(e6, t8) {
    await this.load();
    const { resolvedQuery: r8, queryEngine: i7 } = await this._setupQueryObjects(e6);
    return await i7.executeQuery(r8.toJSON(), t8?.signal);
  }
  async queryFeatureCount(e6, t8) {
    await this.load();
    const { resolvedQuery: r8, queryEngine: i7 } = await this._setupQueryObjects(e6);
    return i7.executeQueryForCount(r8.toJSON(), t8?.signal);
  }
  async queryExtent(e6 = {}, t8) {
    await this.load();
    const r8 = { ...e6, returnGeometry: true }, { resolvedQuery: i7, queryEngine: o6 } = await this._setupQueryObjects(r8), s8 = await o6.executeQueryForExtent(i7.toJSON(), t8?.signal);
    let n6;
    return n6 = null != s8.extent?.xmin && null != s8.extent?.xmax && null != s8.extent?.ymin && null != s8.extent?.ymax ? new z(s8.extent) : new z(), { count: s8.count, extent: n6 };
  }
  async queryObjectIds(e6, t8) {
    await this.load();
    const r8 = R.from(e6);
    let i7;
    if ("link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine) i7 = this._cachedQueryEngine;
    else {
      const e7 = await this.parentCompositeLayer.dataManager.getData(r8, this, t8);
      i7 = this.loadQueryEngine(e7);
    }
    return await i7.executeQueryForIds(r8.toJSON(), t8?.signal);
  }
  loadQueryEngine(e6) {
    const t8 = new f5({ geometryType: y2.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ }), r8 = new L2({ fieldsIndex: this.fieldsIndex.toJSON(), geometryType: y2.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ, featureIdInfo: { type: "object-id", fieldName: this.objectIdField }, spatialReference: this.spatialReference.toJSON(), timeInfo: this.timeInfo?.toJSON(), featureStore: t8 });
    return r8.featureStore.addMany(e6), r8;
  }
  async refreshCachedQueryEngine() {
    const e6 = await this.parentCompositeLayer.dataManager.getData(new R({ where: "1=1", outFields: [_2] }), this);
    this._cachedQueryEngine = this.loadQueryEngine(e6);
  }
  load(e6) {
    return this.addResolvingPromise(this.parent.load(e6).then(() => I2(this.timeInfo, this.fieldsIndex))), Promise.resolve(this);
  }
  async _setupQueryObjects(e6, t8) {
    const r8 = R.from(e6), i7 = r8.geometry;
    if (i7 && !i7.spatialReference?.isWGS84 && (await Q(i7.spatialReference, U), r8.geometry = O(i7 instanceof P || i7 instanceof y || i7 instanceof _ ? i7 : i7.extent, U)), "link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine) return { resolvedQuery: r8, queryEngine: this._cachedQueryEngine };
    const o6 = await this.parentCompositeLayer.dataManager.getData(r8, this, t8);
    return { resolvedQuery: r8, queryEngine: this.loadQueryEngine(o6) };
  }
};
function ve(e6, t8, r8) {
  const o6 = [["ESRI__AGGREGATION_COUNT", o], ["ESRI__ORIGIN_ID", I], ["ESRI__DESTINATION_ID", t3], ["ESRI__LAYOUT_GEOMETRY", S2]];
  try {
    for (const t9 of e6) for (const [e7, r9] of o6) t9.labelExpression = t9.labelExpression?.replaceAll(e7, r9), t9.labelExpressionInfo?.expression && (t9.labelExpressionInfo.expression = t9.labelExpressionInfo.expression.replaceAll(e7, r9));
  } catch (s8) {
    i.getLogger(this).warn("Error updating labelingInfo", s8);
  }
  return l5(e6, t8, r8);
}
r([m(fe(a(n2)))], Ie.prototype, "blendMode", void 0), r([m()], Ie.prototype, "capabilities", void 0), r([m({ readOnly: true })], Ie.prototype, "userHasUpdateItemPrivileges", null), r([m({ json: { origins: { "web-scene": { write: false } }, write: be() } })], Ie.prototype, "charts", void 0), r([m({ readOnly: true })], Ie.prototype, "defaultPopupTemplate", null), r([m({ type: String, json: { origins: { service: { read: false } }, name: "layerDefinition.definitionExpression", write: { ignoreOrigin: true } } })], Ie.prototype, "definitionExpression", void 0), r([m()], Ie.prototype, "displayField", void 0), r([m(fe(a(p2)))], Ie.prototype, "displayFilterEnabled", void 0), r([m(fe(a(l4)))], Ie.prototype, "displayFilterInfo", void 0), r([m(fe(a(l)))], Ie.prototype, "effect", void 0), r([m()], Ie.prototype, "elevationInfo", void 0), r([m(fe(a(p3)))], Ie.prototype, "featureEffect", void 0), r([m(fe(a(p4)))], Ie.prototype, "featureReduction", null), r([m()], Ie.prototype, "fields", null), r([m()], Ie.prototype, "geometryType", null), r([m()], Ie.prototype, "geometryFieldName", null), r([m({ type: ["entity", "relationship"], nonNullable: true, json: { write: { isRequired: true, ignoreOrigin: true } } })], Ie.prototype, "graphType", void 0), r([m({ type: String, nonNullable: true, json: { write: { isRequired: true, ignoreOrigin: true } } })], Ie.prototype, "graphTypeName", null), r([m()], Ie.prototype, "hasM", null), r([m()], Ie.prototype, "hasZ", null), r([m({ type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } }, write: { ignoreOrigin: true } } })], Ie.prototype, "id", void 0), r([m({ type: Boolean, value: true, nonNullable: true, json: { name: "showLabels", default: false, write: { overridePolicy() {
  return { enabled: !!this.geometryType, alwaysWriteDefaults: true, ignoreOrigin: true };
} } } })], Ie.prototype, "labelsVisible", void 0), r([m({ type: [A], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: ve, write: be() } })], Ie.prototype, "labelingInfo", null), r([m({ readOnly: true, json: { read: false, write: { writer(e6, t8) {
  switch (this.parentCompositeLayer?.type) {
    case "link-chart":
      t8.layerType = "LinkChartSubLayer";
      break;
    case "knowledge-graph":
      t8.layerType = this.geometryType ? "KnowledgeGraphSubLayer" : "KnowledgeGraphSubTable";
  }
}, isRequired: true, ignoreOrigin: true, writerEnsuresNonNull: true } } })], Ie.prototype, "layerType", void 0), r([m(fe(a(d)))], Ie.prototype, "legendEnabled", void 0), r([m(fe(a(v)))], Ie.prototype, "maxScale", void 0), r([m(fe(a(j)))], Ie.prototype, "minScale", void 0), r([m()], Ie.prototype, "objectIdField", void 0), r([m()], Ie.prototype, "objectType", void 0), r([m(fe(a(w)))], Ie.prototype, "opacity", void 0), r([m(fe(a(c2)))], Ie.prototype, "orderBy", void 0), r([m({ clonable: false })], Ie.prototype, "parent", void 0), r([m()], Ie.prototype, "parentCompositeLayer", void 0), r([m(fe(a(l2)))], Ie.prototype, "popupEnabled", void 0), r([m({ type: q, json: { name: "popupInfo", write: { ignoreOrigin: true } } })], Ie.prototype, "popupTemplate", void 0), r([m({ type: Number, json: { write: { overridePolicy: Te } } })], Ie.prototype, "refreshInterval", void 0), r([m({ types: m4, json: { name: "layerDefinition.drawingInfo.renderer", write: be() } })], Ie.prototype, "renderer", null), r([m()], Ie.prototype, "source", void 0), r([m()], Ie.prototype, "spatialReference", null), r([m({ type: u3, json: { name: "layerDefinition.timeInfo", write: true, origins: { "web-document": { name: "layerDefinition.timeInfo", read: true, write: true }, "portal-item": { name: "layerDefinition.timeInfo", read: true, write: true } } } })], Ie.prototype, "timeInfo", null), r([m({ type: String, json: { write: { isRequired: true, ignoreOrigin: true, writerEnsuresNonNull: true } } })], Ie.prototype, "title", null), r([r2("title")], Ie.prototype, "writeTitle", null), r([m({ json: { read: false } })], Ie.prototype, "type", void 0), r([m(fe(a(f4)))], Ie.prototype, "useViewTime", void 0), r([m({ type: Boolean, json: { name: "visibility", write: be() } })], Ie.prototype, "visible", void 0), Ie = r([a2("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")], Ie);

export {
  m7 as m,
  h3 as h,
  D,
  o3 as o,
  a5 as a,
  i5 as i,
  o4 as o2,
  u6 as u,
  v2 as v,
  A3 as A,
  b3 as b,
  P2 as P,
  _3 as _,
  h4 as h2,
  m8 as m2,
  g6 as g,
  C,
  E6 as E,
  i6 as i2,
  Ie
};
//# sourceMappingURL=chunk-6SUT35DV.js.map
