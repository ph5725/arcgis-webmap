import {
  O
} from "./chunk-UGHHK55N.js";
import {
  a
} from "./chunk-2KVNXQA7.js";
import {
  w
} from "./chunk-VHLUKPRH.js";
import {
  i2
} from "./chunk-ZWFY3WY5.js";
import {
  u2 as u
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/support/basemapEnsureType.js
var f = () => i.getLogger("esri.support.basemapUtils");
function p() {
  return {};
}
function l(e) {
  for (const r in e) {
    const s = e[r];
    u(s), delete e[r];
  }
}
function m(r, s) {
  let o;
  if ("string" == typeof r) {
    const n = r in a, a2 = !n && r.includes("/");
    if (!n && !a2) {
      if (i2()) f().warn(`Unable to find basemap definition for: ${r}. See available styles at https://developers.arcgis.com/rest/basemap-styles/`);
      else {
        const e = Object.entries(a).filter(([e2, r2]) => r2.classic || r2.is3d).map(([e2]) => `"${e2}"`).sort().join(", ");
        f().warn(`Unable to find basemap definition for: ${r}. Try one of these: ${e}`);
      }
      return null;
    }
    s && (o = s[r]), o || (o = n ? O.fromId(r) : new O({ style: { id: r } }), s && (s[r] = o));
  } else o = w(O, r);
  return o?.destroyed && (f().warn("The provided basemap is already destroyed", { basemap: o }), o = null), o;
}

export {
  p,
  l,
  m
};
//# sourceMappingURL=chunk-6U2RA2A3.js.map
