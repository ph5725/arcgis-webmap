import {
  r
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/arcade/executionError.js
var r2;
!function(e2) {
  e2.AsyncNotEnabled = "AsyncNotEnabled", e2.ModulesNotSupported = "ModulesNotSupported", e2.CircularModules = "CircularModules", e2.CannotCompareDateAndTime = "CannotCompareDateAndTime", e2.NeverReach = "NeverReach", e2.UnsupportedHashType = "UnsupportedHashType", e2.InvalidParameter = "InvalidParameter", e2.FeatureSetDoesNotHaveSubtypes = "FeatureSetDoesNotHaveSubtypes", e2.UnexpectedToken = "UnexpectedToken", e2.Unrecognized = "Unrecognized", e2.UnrecognizedType = "UnrecognizedType", e2.MaximumCallDepth = "MaximumCallDepth", e2.BooleanConditionRequired = "BooleanConditionRequired", e2.TypeNotAllowedInFeature = "TypeNotAllowedInFeature", e2.KeyMustBeString = "KeyMustBeString", e2.WrongNumberOfParameters = "WrongNumberOfParameters", e2.CallNonFunction = "CallNonFunction", e2.NoFunctionInTemplateLiteral = "NoFunctionInTemplateLiteral", e2.NoFunctionInDictionary = "NoFunctionInDictionary", e2.NoFunctionInArray = "NoFunctionInArray", e2.AssignModuleFunction = "AssignModuleFunction", e2.LogicExpressionOrAnd = "LogicExpressionOrAnd", e2.LogicalExpressionOnlyBoolean = "LogicalExpressionOnlyBoolean", e2.FunctionNotFound = "FunctionNotFound", e2.InvalidMemberAccessKey = "InvalidMemberAccessKey", e2.UnsupportedUnaryOperator = "UnsupportUnaryOperator", e2.InvalidIdentifier = "InvalidIdentifier", e2.MemberOfNull = "MemberOfNull", e2.UnsupportedOperator = "UnsupportedOperator", e2.Cancelled = "Cancelled", e2.ModuleAccessorMustBeString = "ModuleAccessorMustBeString", e2.ModuleExportNotFound = "ModuleExportNotFound", e2.Immutable = "Immutable", e2.OutOfBounds = "OutOfBounds", e2.IllegalResult = "IllegalResult", e2.FieldNotFound = "FieldNotFound", e2.PortalRequired = "PortalRequired", e2.LogicError = "LogicError", e2.ArrayAccessorMustBeNumber = "ArrayAccessMustBeNumber", e2.KeyAccessorMustBeString = "KeyAccessorMustBeString", e2.WrongSpatialReference = "WrongSpatialReference", e2.CannotChangeTimeZoneTime = "CannotChangeTimeZoneTime", e2.CannotChangeTimeZoneDateOnly = "CannotChangeTimeZoneDateOnly";
}(r2 || (r2 = {}));
var o = { [r2.TypeNotAllowedInFeature]: "Feature attributes only support dates, numbers, strings, guids.", [r2.LogicError]: "Logic error - {reason}", [r2.CannotCompareDateAndTime]: "Cannot compare date or dateonly with timeonly types", [r2.NeverReach]: "Encountered unreachable logic", [r2.AsyncNotEnabled]: "Async Arcade must be enabled for this script", [r2.ModuleAccessorMustBeString]: "Module accessor must be a string", [r2.ModuleExportNotFound]: "Module has no export with provided identifier", [r2.ModulesNotSupported]: "Current profile does not support modules", [r2.ArrayAccessorMustBeNumber]: "Array accessor must be a number", [r2.FunctionNotFound]: "Function not found", [r2.FieldNotFound]: "Key not found - {key}", [r2.CircularModules]: "Circular module dependencies are not allowed", [r2.Cancelled]: "Execution cancelled", [r2.UnsupportedHashType]: "Type not supported in hash function", [r2.IllegalResult]: "Value is not a supported return type", [r2.PortalRequired]: "Portal is required", [r2.InvalidParameter]: "Invalid parameter", [r2.WrongNumberOfParameters]: "Call with wrong number of parameters", [r2.Unrecognized]: "Unrecognized code structure", [r2.UnrecognizedType]: "Unrecognized type", [r2.WrongSpatialReference]: "Cannot work with geometry in this spatial reference. It is different to the execution spatial reference", [r2.BooleanConditionRequired]: "Conditions must use booleans", [r2.NoFunctionInDictionary]: "Dictionaries cannot contain functions.", [r2.NoFunctionInArray]: "Arrays cannot contain functions.", [r2.NoFunctionInTemplateLiteral]: "Template Literals do not expect functions by value.", [r2.KeyAccessorMustBeString]: "Accessor must be a string", [r2.KeyMustBeString]: "Object keys must be a string", [r2.Immutable]: "Object is immutable", [r2.UnexpectedToken]: "Unexpected token", [r2.MemberOfNull]: "Cannot access property of null object", [r2.MaximumCallDepth]: "Exceeded maximum function depth", [r2.OutOfBounds]: "Out of bounds", [r2.InvalidIdentifier]: "Identifier not recognized", [r2.CallNonFunction]: "Expression is not a function", [r2.InvalidMemberAccessKey]: "Cannot access value using a key of this type", [r2.AssignModuleFunction]: "Cannot assign function to module variable", [r2.UnsupportedUnaryOperator]: "Unsupported unary operator", [r2.UnsupportedOperator]: "Unsupported operator", [r2.LogicalExpressionOnlyBoolean]: "Logical expressions must be boolean", [r2.LogicExpressionOrAnd]: "Logical expression can only be combined with || or &&", [r2.CannotChangeTimeZoneTime]: "Cannot change the timezone of a Time", [r2.CannotChangeTimeZoneDateOnly]: "Cannot change the timezone of a DateOnly", [r2.FeatureSetDoesNotHaveSubtypes]: "FeatureSet does not have subtypes" };
var n = class extends Error {
  constructor(...e2) {
    super(...e2);
  }
};
var t = class _t extends n {
  constructor(e2, r3) {
    super(s(r3) + e2.message, { cause: e2 }), this.loc = null, Error.captureStackTrace && Error.captureStackTrace(this, _t), r3?.loc && (this.loc = r3.loc);
  }
};
var a = class _a extends Error {
  constructor(r3, n2, t2, c2) {
    super("Execution error - " + s(t2) + r(o[n2], c2)), this.loc = null, this.declaredRootClass = "esri.arcade.arcadeexecutionerror", Error.captureStackTrace && Error.captureStackTrace(this, _a), t2?.loc && (this.loc = t2.loc);
  }
};
function s(e2) {
  return e2 && e2.loc ? `Line : ${e2.loc.start?.line}, ${e2.loc.start?.column}: ` : "";
}
var c = class _c extends Error {
  constructor(r3, n2, t2, a2) {
    super("Compilation error - " + s(t2) + r(o[n2], a2)), this.loc = null, this.declaredRootClass = "esri.arcade.arcadecompilationerror", Error.captureStackTrace && Error.captureStackTrace(this, _c), t2?.loc && (this.loc = t2.loc);
  }
};
var i = class _i extends Error {
  constructor() {
    super("Uncompilable code structures"), this.declaredRootClass = "esri.arcade.arcadeuncompilableerror", Error.captureStackTrace && Error.captureStackTrace(this, _i);
  }
};
function u(e2, r3, o3) {
  return "esri.arcade.arcadeexecutionerror" === o3.declaredRootClass || "esri.arcade.arcadecompilationerror" === o3.declaredRootClass ? null === o3.loc && r3?.loc ? new t(o3, { cause: o3 }) : o3 : ("esri.arcade.featureset.support.featureseterror" === o3.declaredRootClass || "esri.arcade.featureset.support.sqlerror" === o3.declaredRootClass || o3.declaredRootClass, r3?.loc ? new t(o3, { cause: o3 }) : o3);
}
var l;
!function(e2) {
  e2.UnrecognizedUri = "UnrecognizedUri", e2.UnsupportedUriProtocol = "UnsupportedUriProtocol";
}(l || (l = {}));
var d = { [l.UnrecognizedUri]: "Unrecognized uri - {uri}", [l.UnsupportedUriProtocol]: "Unrecognized uri protocol" };
var p = class _p extends Error {
  constructor(r3, o3) {
    super(r(d[r3], o3)), this.declaredRootClass = "esri.arcade.arcademoduleerror", Error.captureStackTrace && Error.captureStackTrace(this, _p);
  }
};

// node_modules/@arcgis/core/arcade/enum.js
function o2(r3) {
  return r3.toLowerCase().replaceAll(/[\s-]+/g, "");
}
var e = class {
  constructor(r3, t2) {
    const e2 = /* @__PURE__ */ new Map();
    for (const n2 of r3) {
      const r4 = o2(n2);
      if (e2.has(r4)) throw new Error(`${n2} already added as ${e2.get(r4)}`);
      e2.set(r4, n2);
    }
    if (null != t2) for (const [n2, s2] of t2) {
      const r4 = o2(n2);
      if (e2.has(r4)) throw new Error(`${n2} already associated with ${e2.get(r4)}`);
      e2.set(r4, s2);
    }
    this._enumMap = e2;
  }
  lookup(r3) {
    return this._enumMap.get(o2(r3));
  }
  get(o3) {
    const e2 = this.lookup(o3);
    if (null == e2) throw new a(null, r2.InvalidParameter, null);
    return e2;
  }
};

export {
  r2 as r,
  a,
  c,
  i,
  u,
  l,
  p,
  o2 as o,
  e
};
//# sourceMappingURL=chunk-AQGMTI4V.js.map
