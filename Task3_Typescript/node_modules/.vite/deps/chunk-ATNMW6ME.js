import {
  f as f4
} from "./chunk-C4ANG4R2.js";
import {
  f as f3,
  m as m5,
  o as o3
} from "./chunk-I7UBWPZD.js";
import {
  A as A2
} from "./chunk-YWGFBTRS.js";
import {
  d,
  j,
  k,
  w,
  z as z3
} from "./chunk-BHCIAS6L.js";
import {
  h as h2
} from "./chunk-OIO2MYQF.js";
import {
  p as p3
} from "./chunk-4IO5QG2A.js";
import {
  B,
  E as E2,
  F,
  G as G2,
  O as O2,
  R,
  g as g3,
  h as h3,
  k as k2,
  nt,
  w as w2
} from "./chunk-DHCIRPC3.js";
import {
  a as a5,
  r as r4
} from "./chunk-24KTNAIE.js";
import {
  i as i4
} from "./chunk-TNKA4BMD.js";
import {
  a as a6
} from "./chunk-VKKELZ6R.js";
import {
  m as m6
} from "./chunk-DLD56RZZ.js";
import {
  c as c6,
  l as l2,
  t as t2,
  u as u4
} from "./chunk-3SJIVSAT.js";
import {
  i as i2,
  i2 as i3
} from "./chunk-HXR4TQII.js";
import {
  b
} from "./chunk-FQ4JUVCN.js";
import {
  e as e3,
  r as r3
} from "./chunk-3LL6ALVC.js";
import {
  e
} from "./chunk-NZPABYQQ.js";
import {
  e as e2
} from "./chunk-CCHJ3WNU.js";
import {
  n as n3
} from "./chunk-DRAQJS2F.js";
import {
  A,
  E,
  N,
  c as c5,
  g as g2,
  o as o2,
  u as u3,
  z as z2
} from "./chunk-TMFB3DKM.js";
import {
  L
} from "./chunk-7NMH5MM5.js";
import {
  o
} from "./chunk-UGTICYU7.js";
import {
  Q,
  c as c3,
  f,
  m as m4,
  t,
  u as u2
} from "./chunk-FKFXOPPT.js";
import {
  D,
  I,
  O,
  c as c4,
  f as f2,
  p as p2
} from "./chunk-DNZK6PPI.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  _ as _2,
  a as a4,
  n as n2,
  r as r2
} from "./chunk-RACDQ3AL.js";
import {
  a as a2
} from "./chunk-TVM3SZJR.js";
import {
  P
} from "./chunk-52HWRRRQ.js";
import {
  a as a3,
  l
} from "./chunk-A3VAC24F.js";
import {
  p
} from "./chunk-SRQCQD63.js";
import {
  m as m3
} from "./chunk-FIRNXFAH.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _,
  c as c2
} from "./chunk-Q6XRAGMA.js";
import {
  m,
  m2
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  G,
  Rt
} from "./chunk-LQFTAGIV.js";
import {
  c3 as c,
  g,
  h,
  s as s2,
  u3 as u
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  n
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/geometry/support/meshErrors.js
var t3 = "Mesh must be loaded before applying operations";
var e4 = "Provided component is not part of the list of components";
var n4 = "Expected polygon to be a Polygon instance";
var s3 = "Expected location to be a Point instance";
var i5 = class extends s {
  constructor() {
    super("invalid-input:location", s3);
  }
};

// node_modules/@arcgis/core/geometry/support/meshUtils/geographicUtils.js
function t4(o4, t5, i6, a8) {
  if (void 0 !== a8) {
    m2(o4(), "option: geographic", { replacement: "Use mesh `vertexSpace` and spatial reference to control how operations are performed instead.", version: "4.30", warnOnce: true });
    const c8 = "local" === t5.type;
    if (!t2(t5) || a8 === c8) return i6.isGeographic || i6.isWebMercator && a8;
    o4().warnOnce(`Specifying the 'geographic' parameter (${a8}) for a Mesh vertex space of type "${t5.type}" is not supported. This parameter will be ignored.`);
  }
  switch (t5.type) {
    case "georeferenced":
      return i6.isGeographic;
    case "local":
      return i6.isGeographic || i6.isWebMercator;
  }
}

// node_modules/@arcgis/core/geometry/support/meshUtils/centerAt.js
var g4 = () => i.getLogger("esri.geometry.support.meshUtils.centerAt");
function u5(e5, t5, r5) {
  if (!e5.vertexAttributes?.position) return;
  const { vertexSpace: i6 } = e5, o4 = r5?.origin ?? e5.origin, n5 = t4(g4, i6, o4.spatialReference, r5?.geographic);
  t2(i6) ? x(e5, t5, o4) : n5 ? v(e5, t5, o4) : R2(e5, t5, o4);
}
function x(e5, o4, s4) {
  const { vertexSpace: c8 } = e5;
  if (!t2(c8)) return;
  const f7 = h4, m9 = b2;
  if (!i4(o4, m9, e5.spatialReference)) return void F(g4(), o4.spatialReference, e5.spatialReference, O2);
  if (!i4(s4, f7, e5.spatialReference)) {
    const t5 = e5.origin;
    return f7[0] = t5.x, f7[1] = t5.y, f7[2] = t5.z, void F(g4(), s4.spatialReference, e5.spatialReference, O2);
  }
  const u9 = c5(A3, m9, f7);
  c8.origin = u3(n2(), c8.origin, u9);
}
function v(e5, t5, r5) {
  const i6 = r2(r5.x, r5.y, r5.z ?? 0), n5 = B(e5, new i3({ origin: i6 }));
  if (!n5) return;
  const a8 = r2(t5.x, t5.y, t5.z ?? 0), f7 = B({ vertexAttributes: n5, spatialReference: e5.spatialReference, vertexSpace: new i3({ origin: a8 }) }, i2.absolute);
  if (!f7) return;
  const { position: p6, normal: l4, tangent: g7 } = f7;
  e5.vertexAttributes.position = p6, e5.vertexAttributes.normal = l4, e5.vertexAttributes.tangent = g7, e5.vertexAttributesChanged();
}
function R2(e5, t5, r5) {
  const i6 = h4, o4 = b2;
  if (i4(t5, o4, e5.spatialReference)) {
    if (!i4(r5, i6, e5.spatialReference)) {
      const t6 = e5.origin;
      return i6[0] = t6.x, i6[1] = t6.y, i6[2] = t6.z, void F(g4(), r5.spatialReference, e5.spatialReference, O2);
    }
    j2(e5.vertexAttributes.position, o4, i6), e5.vertexAttributesChanged();
  } else F(g4(), t5.spatialReference, e5.spatialReference, O2);
}
function j2(e5, t5, r5) {
  if (e5) for (let i6 = 0; i6 < e5.length; i6 += 3) for (let o4 = 0; o4 < 3; o4++) e5[i6 + o4] += t5[o4] - r5[o4];
}
var b2 = n2();
var h4 = n2();
var A3 = n2();

// node_modules/@arcgis/core/geometry/support/meshUtils/extent.js
function l3(r5) {
  const { spatialReference: f7, vertexSpace: l4, untransformedBounds: d4 } = r5, g7 = f(d4, u6);
  if (t2(l4) && r5.transform && r4(g7, g7, r5.transform.localMatrix), "georeferenced" === l4.type) {
    const r6 = l4.origin;
    return r6 && a5(g7, g7, r6), c3(m4(g7), f7);
  }
  const y3 = a6(f7), B3 = l4.origin;
  if (!L(y3, f7)) {
    const [r6, t5, e5] = B3;
    return new z({ xmin: r6, ymin: t5, zmin: e5, xmax: r6, ymax: t5, zmax: e5, spatialReference: f7 });
  }
  return m6(f7, B3, x2, y3), r4(g7, g7, x2), o(g7, y3, 0, g7, f7, 0), c3(m4(g7), f7);
}
var x2 = e();
var u6 = t(24);

// node_modules/@arcgis/core/geometry/support/meshUtils/loadExternal.js
async function u7(t5, s4, r5) {
  switch (s4.source.type) {
    case "client":
    case "service":
      return f5(t5, s4, r5);
    case "loadable":
      return s4.source.load(t5, r5);
    default:
      n(s4.source);
  }
}
async function f5(e5, t5, n5) {
  const { source: o4 } = t5, { loadGLTFMesh: i6 } = await h(import("./loadGLTFMesh-TLMD2OTP.js"), n5), l4 = await p4(o4, n5);
  s2(n5);
  const a8 = i6(new _({ x: 0, y: 0, z: 0, spatialReference: e5.spatialReference }), l4.url, { resolveFile: m7(l4), signal: n5?.signal, expectedType: l4.type, unitConversionDisabled: t5.unitConversionDisabled });
  a8.then(() => l4.dispose(), () => l4.dispose());
  const { vertexAttributes: u9, components: f7 } = await a8;
  e5.vertexAttributes = u9, e5.components = f7;
}
function m7(e5) {
  const t5 = Rt(e5.url);
  return (s4) => {
    const r5 = G(s4, t5, t5), n5 = r5 ? r5.replace(/^ *\.\//, "") : null;
    return (n5 ? e5.files.get(n5) : null) ?? s4;
  };
}
async function p4(e5, s4) {
  switch (e5.type) {
    case "client":
      return Array.isArray(e5.files) ? y(e5.files) : h5(e5.files);
    case "service":
      return w3(e5.assets, s4);
    default:
      throw new s("mesh-load-external:invalid-source", "Invalid source type");
  }
}
async function d2(e5, t5) {
  const { parts: s4, assetMimeType: n5, assetName: o4 } = e5;
  if (1 === s4.length) return new M(s4[0].partUrl);
  const i6 = await e5.toBlob(t5);
  return s2(t5), M.fromBlob(i6, R3(o4, n5));
}
function h5(e5) {
  return M.fromBlob(e5, R3(e5.name, e5.type));
}
function y(e5) {
  if (!e5.length) throw new s("mesh-load-external:missing-assets", "There must be at least one file to load");
  return j3(e5.map((e6) => ({ name: e6.name, mimeType: e6.type, source: h5(e6) })));
}
async function w3(e5, s4) {
  if (!e5.length) throw new s("mesh-load-external:missing-assets", "There must be at least one file to load");
  const l4 = await g(e5.map(async (e6) => {
    const t5 = await d2(e6);
    return s2(s4), { name: e6.assetName, mimeType: e6.assetMimeType, source: t5 };
  }));
  if (c(s4)) throw l4.forEach((e6) => e6.source.dispose()), u();
  return j3(l4);
}
var g5 = /^model\/gltf\+json$/;
var b3 = /^model\/gltf-binary$/;
var v2 = /\.gltf$/i;
var x3 = /\.glb$/i;
function T({ mimeType: e5, source: t5, name: s4 }) {
  return g5.test(e5) || v2.test(s4) ? { url: t5.url, type: "gltf" } : b3.test(e5) || x3.test(s4) ? { url: t5.url, type: "glb" } : null;
}
function j3(e5) {
  const s4 = /* @__PURE__ */ new Map();
  let r5 = null, n5 = null;
  for (const t5 of e5) {
    const { source: e6, name: o5 } = t5;
    r5 ??= T(t5), "ESRI3DO_NORM.glb" === o5 && (n5 = T(t5)), s4.set(o5, e6.url), e6.files.forEach((e7, t6) => s4.set(t6, e7));
  }
  const o4 = n5 ?? r5;
  if (null == o4) throw new s("mesh-load-external:missing-files", "Missing files to load external mesh source");
  return new M(o4.url, () => e5.forEach(({ source: e6 }) => e6.dispose()), s4, o4.type);
}
var M = class _M {
  constructor(e5, t5 = () => {
  }, s4 = /* @__PURE__ */ new Map(), r5) {
    this.url = e5, this.dispose = t5, this.files = s4, this.type = r5;
  }
  static fromBlob(e5, t5) {
    const s4 = URL.createObjectURL(e5);
    return new _M(s4, () => URL.revokeObjectURL(s4), void 0, t5);
  }
};
function R3(e5, t5) {
  return g5.test(t5) || v2.test(e5) ? "gltf" : b3.test(t5) || v2.test(e5) ? "glb" : void 0;
}

// node_modules/@arcgis/core/geometry/support/meshUtils/Metadata.js
var a7 = class extends a2 {
  constructor(e5) {
    super(e5), this.externalSources = new V(), this._explicitDisplaySource = null, this.georeferenced = false, this.addHandles(a3(() => this.externalSources, "after-remove", ({ item: e6 }) => {
      e6 === this._explicitDisplaySource && (this._explicitDisplaySource = null);
    }, { sync: true, onListenerRemove: () => this._explicitDisplaySource = null }));
  }
  get displaySource() {
    return this._explicitDisplaySource ?? this._implicitDisplaySource;
  }
  set displaySource(e5) {
    if (null != e5 && !o3(e5)) throw new Error("Cannot use this source for display: it is not in a supported format.");
    this._explicitDisplaySource = e5, e5 && this.externalSources.every((r5) => !m5(r5, e5)) && this.externalSources.add(e5);
  }
  clearSources() {
    this.externalSources.removeAll();
  }
  getExternalSourcesOnService(e5) {
    return this.externalSources.items.filter((r5) => f3(r5, e5));
  }
  get _implicitDisplaySource() {
    return this.externalSources.find(o3);
  }
};
r([m()], a7.prototype, "externalSources", void 0), r([m()], a7.prototype, "displaySource", null), r([m()], a7.prototype, "_implicitDisplaySource", null), r([m()], a7.prototype, "_explicitDisplaySource", void 0), r([m()], a7.prototype, "georeferenced", void 0), a7 = r([a("esri.geometry.support.meshUtils.Metadata")], a7);

// node_modules/@arcgis/core/geometry/support/meshUtils/primitives.js
function c7() {
  const { faceDescriptions: t5, faceVertexOffsets: e5, uvScales: r5 } = F2, n5 = 4 * t5.length, o4 = new Float64Array(3 * n5), s4 = new Float32Array(3 * n5), a8 = new Float32Array(2 * n5), i6 = new Uint32Array(2 * t5.length * 3);
  let l4 = 0, c8 = 0, f7 = 0, u9 = 0;
  for (let h7 = 0; h7 < t5.length; h7++) {
    const n6 = t5[h7], p6 = l4 / 3;
    for (const t6 of e5) i6[u9++] = p6 + t6;
    const m9 = n6.corners;
    for (let t6 = 0; t6 < 4; t6++) {
      const e6 = m9[t6];
      let i7 = 0;
      a8[f7++] = 0.25 * r5[t6][0] + n6.uvOrigin[0], a8[f7++] = n6.uvOrigin[1] - 0.25 * r5[t6][1];
      for (let t7 = 0; t7 < 3; t7++) 0 !== n6.axis[t7] ? (o4[l4++] = 0.5 * n6.axis[t7], s4[c8++] = n6.axis[t7]) : (o4[l4++] = 0.5 * e6[i7++], s4[c8++] = 0);
    }
  }
  return { position: o4, normal: s4, uv: a8, faces: i6 };
}
function f6(t5, e5) {
  const r5 = t5.components[0], n5 = r5.faces, s4 = b4[e5], a8 = 6 * s4, i6 = new Array(6), l4 = new Array(n5.length - 6);
  let c8 = 0, f7 = 0;
  for (let o4 = 0; o4 < n5.length; o4++) o4 >= a8 && o4 < a8 + 6 ? i6[c8++] = n5[o4] : l4[f7++] = n5[o4];
  if (null != t5.vertexAttributes.uv) {
    const e6 = new Float32Array(t5.vertexAttributes.uv), r6 = 4 * s4 * 2, n6 = [0, 1, 1, 1, 1, 0, 0, 0];
    for (let t6 = 0; t6 < n6.length; t6++) e6[r6 + t6] = n6[t6];
    t5.vertexAttributes.uv = e6;
  }
  return t5.components = [new h2({ faces: i6, material: r5.material }), new h2({ faces: l4 })], t5;
}
function u8(t5 = 0) {
  const e5 = Math.round(8 * 2 ** t5), r5 = 2 * e5, n5 = (e5 - 1) * (r5 + 1) + 2 * r5, o4 = new Float64Array(3 * n5), s4 = new Float32Array(3 * n5), a8 = new Float32Array(2 * n5), i6 = new Uint32Array(3 * ((e5 - 1) * r5 * 2));
  let l4 = 0, c8 = 0, f7 = 0, u9 = 0;
  for (let h7 = 0; h7 <= e5; h7++) {
    const t6 = h7 / e5 * Math.PI + 0.5 * Math.PI, n6 = Math.cos(t6), p6 = Math.sin(t6);
    O3[2] = p6;
    const m9 = 0 === h7 || h7 === e5, w5 = m9 ? r5 - 1 : r5;
    for (let v4 = 0; v4 <= w5; v4++) {
      const t7 = v4 / w5 * 2 * Math.PI;
      O3[0] = -Math.sin(t7) * n6, O3[1] = Math.cos(t7) * n6;
      for (let e6 = 0; e6 < 3; e6++) o4[l4] = 0.5 * O3[e6], s4[l4] = O3[e6], ++l4;
      a8[c8++] = (v4 + (m9 ? 0.5 : 0)) / r5, a8[c8++] = h7 / e5, 0 !== h7 && v4 !== r5 && (h7 !== e5 && (i6[f7++] = u9, i6[f7++] = u9 + 1, i6[f7++] = u9 - r5), 1 !== h7 && (i6[f7++] = u9, i6[f7++] = u9 - r5, i6[f7++] = u9 - r5 - 1)), u9++;
    }
  }
  return { position: o4, normal: s4, uv: a8, faces: i6 };
}
function h6(t5 = 0) {
  const e5 = 5, r5 = Math.round(16 * 2 ** t5), n5 = (e5 - 1) * (r5 + 1) + 2 * r5, o4 = new Float64Array(3 * n5), s4 = new Float32Array(3 * n5), a8 = new Float32Array(2 * n5), i6 = new Uint32Array(3 * (4 * r5));
  let l4 = 0, c8 = 0, f7 = 0, u9 = 0, h7 = 0;
  for (let p6 = 0; p6 <= e5; p6++) {
    const t6 = 0 === p6 || p6 === e5, n6 = p6 <= 1 || p6 >= e5 - 1, m9 = 2 === p6 || 4 === p6, w5 = t6 ? r5 - 1 : r5;
    for (let v4 = 0; v4 <= w5; v4++) {
      const g7 = v4 / w5 * 2 * Math.PI, A5 = t6 ? 0 : 0.5;
      O3[0] = A5 * Math.sin(g7), O3[1] = A5 * -Math.cos(g7), O3[2] = p6 <= 2 ? 0.5 : -0.5;
      for (let t7 = 0; t7 < 3; t7++) o4[l4++] = O3[t7], s4[c8++] = n6 ? 2 === t7 ? p6 <= 1 ? 1 : -1 : 0 : 2 === t7 ? 0 : O3[t7] / A5;
      a8[f7++] = (v4 + (t6 ? 0.5 : 0)) / r5, a8[f7++] = p6 <= 1 ? 1 * p6 / 3 : p6 <= 3 ? 1 * (p6 - 2) / 3 + 1 / 3 : 1 * (p6 - 4) / 3 + 2 / 3, m9 || 0 === p6 || v4 === r5 || (p6 !== e5 && (i6[u9++] = h7, i6[u9++] = h7 + 1, i6[u9++] = h7 - r5), 1 !== p6 && (i6[u9++] = h7, i6[u9++] = h7 - r5, i6[u9++] = h7 - r5 - 1)), h7++;
    }
  }
  return { position: o4, normal: s4, uv: a8, faces: i6 };
}
function p5(t5, e5) {
  const r5 = "number" == typeof e5 ? e5 : null != e5 ? e5.width : 1, n5 = "number" == typeof e5 ? e5 : null != e5 ? e5.height : 1;
  switch (t5) {
    case "up":
    case "down":
      return { width: r5, depth: n5 };
    case "north":
    case "south":
      return { width: r5, height: n5 };
    case "east":
    case "west":
      return { depth: r5, height: n5 };
  }
}
function m8(t5) {
  const e5 = A4.facingAxisOrderSwap[t5], r5 = A4.position, n5 = A4.normal, o4 = new Float64Array(r5.length), s4 = new Float32Array(n5.length);
  let a8 = 0;
  for (let i6 = 0; i6 < 4; i6++) {
    const t6 = a8;
    for (let i7 = 0; i7 < 3; i7++) {
      const l4 = e5[i7], c8 = Math.abs(l4) - 1, f7 = l4 >= 0 ? 1 : -1;
      o4[a8] = r5[t6 + c8] * f7, s4[a8] = n5[t6 + c8] * f7, a8++;
    }
  }
  return { position: o4, normal: s4, uv: new Float32Array(A4.uv), faces: new Uint32Array(A4.faces), isPlane: true };
}
var w4 = 1;
var v3 = 2;
var g6 = 3;
var A4 = { position: [-0.5, -0.5, 0, 0.5, -0.5, 0, 0.5, 0.5, 0, -0.5, 0.5, 0], normal: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1], uv: [0, 1, 1, 1, 1, 0, 0, 0], faces: [0, 1, 2, 0, 2, 3], facingAxisOrderSwap: { east: [g6, w4, v3], west: [-3, -1, v3], north: [-1, g6, v3], south: [w4, -3, v3], up: [w4, v3, g6], down: [w4, -2, -3] } };
function x4(t5, e5, r5) {
  t5.isPlane || y2(t5), M2(t5, d3(r5?.size, r5?.unit, e5.spatialReference));
  const n5 = l2(e5, r5), l4 = e5.spatialReference.isGeographic ? l2(e5) : n5, c8 = B({ vertexAttributes: t5, vertexSpace: l4, spatialReference: e5.spatialReference }, n5, { allowBufferReuse: true });
  return { vertexAttributes: new p3({ ...c8, uv: t5.uv }), vertexSpace: n5, components: [new h2({ faces: t5.faces, material: r5?.material || null })], spatialReference: e5.spatialReference };
}
function y2(t5) {
  for (let e5 = 0; e5 < t5.position.length; e5 += 3) t5.position[e5 + 2] += 0.5;
}
function d3(t5, e5, r5) {
  const n5 = nt(e5, r5);
  if (null == t5 && 1 === n5) return null;
  if (null == t5) return [n5, n5, n5];
  if ("number" == typeof t5) {
    const e6 = t5 * n5;
    return [e6, e6, e6];
  }
  return [null != t5.width ? t5.width * n5 : n5, null != t5.depth ? t5.depth * n5 : n5, null != t5.height ? t5.height * n5 : n5];
}
function M2(t5, n5) {
  if (null != n5) {
    S[0] = n5[0], S[4] = n5[1], S[8] = n5[2];
    for (let r5 = 0; r5 < t5.position.length; r5 += 3) {
      for (let e5 = 0; e5 < 3; e5++) O3[e5] = t5.position[r5 + e5];
      N(O3, O3, S);
      for (let e5 = 0; e5 < 3; e5++) t5.position[r5 + e5] = O3[e5];
    }
    if (n5[0] !== n5[1] || n5[1] !== n5[2]) {
      S[0] = 1 / n5[0], S[4] = 1 / n5[1], S[8] = 1 / n5[2];
      for (let n6 = 0; n6 < t5.normal.length; n6 += 3) {
        for (let e5 = 0; e5 < 3; e5++) O3[e5] = t5.normal[n6 + e5];
        N(O3, O3, S), A(O3, O3);
        for (let e5 = 0; e5 < 3; e5++) t5.normal[n6 + e5] = O3[e5];
      }
    }
  }
}
var F2 = { faceDescriptions: [{ axis: [0, -1, 0], uvOrigin: [0, 0.625], corners: [[-1, -1], [1, -1], [1, 1], [-1, 1]] }, { axis: [1, 0, 0], uvOrigin: [0.25, 0.625], corners: [[-1, -1], [1, -1], [1, 1], [-1, 1]] }, { axis: [0, 1, 0], uvOrigin: [0.5, 0.625], corners: [[1, -1], [-1, -1], [-1, 1], [1, 1]] }, { axis: [-1, 0, 0], uvOrigin: [0.75, 0.625], corners: [[1, -1], [-1, -1], [-1, 1], [1, 1]] }, { axis: [0, 0, 1], uvOrigin: [0, 0.375], corners: [[-1, -1], [1, -1], [1, 1], [-1, 1]] }, { axis: [0, 0, -1], uvOrigin: [0, 0.875], corners: [[-1, 1], [1, 1], [1, -1], [-1, -1]] }], uvScales: [[0, 0], [1, 0], [1, 1], [0, 1]], faceVertexOffsets: [0, 1, 2, 0, 2, 3] };
var b4 = { south: 0, east: 1, north: 2, west: 3, up: 4, down: 5 };
var O3 = n2();
var S = e2();

// node_modules/@arcgis/core/geometry/support/meshUtils/rotate.js
var O4 = () => i.getLogger("esri.geometry.support.meshUtils.rotate");
function B2(t5, e5, r5) {
  if (!t5.vertexAttributes?.position || 0 === e5[3]) return;
  const { spatialReference: o4, vertexSpace: i6 } = t5, n5 = r5?.origin ?? t5.origin, s4 = r5?.geographic, a8 = t4(O4, i6, o4, s4);
  c6(t5) ? G3(t5, e5, n5) : a8 ? H(t5, e5, n5) : I2(t5, e5, n5);
}
function G3(t5, e5, r5) {
  t5.transform ??= new A2();
  const { vertexSpace: l4, transform: c8, spatialReference: f7 } = t5, [u9, x5, h7] = l4.origin, R4 = new _({ x: u9, y: x5, z: h7, spatialReference: f7 }), d4 = K;
  if (R4.equals(r5)) o2(d4, 0, 0, 0);
  else if (!k2(d4, r5, t5)) return void F(O4(), r5.spatialReference, f7, O2);
  b(Z, w(e5), z3(e5));
  const S2 = D(N2, Z, a4, _2, d4), { localMatrix: U } = c8, q3 = c4(N2, S2, U);
  c8.scale = O(n2(), q3), f2(q3, q3, z2(K, c8.scale));
  const z5 = c8.rotationAxis;
  c8.rotation = k(q3), 0 === c8.rotationAngle && (c8.rotationAxis = z5), c8.translation = I(n2(), q3);
}
function H(t5, r5, o4) {
  const i6 = t5.spatialReference, n5 = a6(i6), s4 = Y;
  if (!i4(o4, s4, n5) && (F(O4(), o4.spatialReference, n5, "Falling back to mesh origin"), !i4(t5.origin, s4, n5))) return void F(O4(), t5.origin.spatialReference, n5);
  const a8 = t5.vertexAttributes.position, l4 = t5.vertexAttributes.normal, c8 = t5.vertexAttributes.tangent, m9 = new Float64Array(a8.length), f7 = null != l4 ? new Float32Array(l4.length) : null, p6 = null != c8 ? new Float32Array(c8.length) : null;
  m6(n5, s4, W, n5), n3(X, W);
  const g7 = Q2;
  N(w(Q2), w(r5), X), g7[3] = r5[3], g3(a8, i6, m9, n5) && (null == l4 || null == f7 || E2(l4, a8, i6, m9, n5, f7)) && (null == c8 || null == p6 || w2(c8, a8, i6, m9, n5, p6)) ? (J(m9, g7, 3, s4), h3(m9, n5, a8, i6) && (null == l4 || null == f7 || (J(f7, g7, 3), R(f7, a8, i6, m9, n5, l4))) && (null == c8 || null == p6 || (J(p6, g7, 4), G2(p6, a8, i6, m9, n5, c8))) ? t5.vertexAttributesChanged() : F(O4(), n5, i6)) : F(O4(), i6, n5);
}
function I2(t5, e5, r5) {
  const o4 = Y;
  if (!i4(r5, o4, t5.spatialReference)) {
    const e6 = t5.origin;
    return o4[0] = e6.x, o4[1] = e6.y, o4[2] = e6.z, void F(O4(), r5.spatialReference, t5.spatialReference, O2);
  }
  J(t5.vertexAttributes.position, e5, 3, o4), J(t5.vertexAttributes.normal, e5, 3), J(t5.vertexAttributes.tangent, e5, 4), t5.vertexAttributesChanged();
}
function J(t5, e5, r5, o4 = a4) {
  if (null != t5) {
    p2(W, z3(e5), w(e5));
    for (let e6 = 0; e6 < t5.length; e6 += r5) {
      for (let r6 = 0; r6 < 3; r6++) K[r6] = t5[e6 + r6] - o4[r6];
      E(K, K, W);
      for (let r6 = 0; r6 < 3; r6++) t5[e6 + r6] = K[r6] + o4[r6];
    }
  }
}
var K = n2();
var N2 = e();
var Q2 = j();
var W = e();
var X = e2();
var Y = n2();
var Z = e3();

// node_modules/@arcgis/core/geometry/support/meshUtils/scale.js
var k3 = () => i.getLogger("esri.geometry.support.meshUtils.scale");
function q(e5, t5, r5) {
  if (!e5.vertexAttributes?.position) return;
  const { vertexSpace: o4, spatialReference: i6 } = e5, n5 = r5?.origin ?? e5.origin, s4 = r5?.geographic, a8 = t4(k3, o4, i6, s4);
  c6(e5) ? z4(e5, t5, n5) : a8 ? L2(e5, t5, n5) : M3(e5, t5, n5);
}
function z4(e5, s4, f7) {
  e5.transform ??= new A2();
  const { vertexSpace: u9, transform: x5, spatialReference: h7 } = e5, [A5, d4, y3] = u9.origin, w5 = new _({ x: A5, y: d4, z: y3, spatialReference: h7 }), F3 = T2;
  if (w5.equals(f7)) o2(F3, 0, 0, 0);
  else if (!k2(F3, f7, e5)) return void F(k3(), f7.spatialReference, h7, O2);
  const S2 = o2(V2, s4, s4, s4), U = D(D2, r3, a4, S2, F3), { localMatrix: q3 } = x5, z5 = c4(D2, U, q3);
  x5.scale = O(n2(), z5), f2(z5, z5, z2(T2, x5.scale));
  const L3 = x5.rotationAxis;
  x5.rotation = k(z5), 0 === x5.rotationAngle && (x5.rotationAxis = L3), x5.translation = I(n2(), z5);
}
function L2(e5, t5, r5) {
  const o4 = e5.spatialReference, i6 = a6(o4), n5 = E3;
  if (!i4(r5, n5, i6) && (F(k3(), r5.spatialReference, i6, "Falling back to mesh origin"), !i4(e5.origin, n5, i6))) return void F(k3(), e5.origin.spatialReference, i6);
  const s4 = e5.vertexAttributes.position, a8 = e5.vertexAttributes.normal, l4 = e5.vertexAttributes.tangent, c8 = new Float64Array(s4.length), f7 = null != a8 ? new Float32Array(a8.length) : null, m9 = null != l4 ? new Float32Array(l4.length) : null;
  g3(s4, o4, c8, i6) && (null == a8 || null == f7 || E2(a8, s4, o4, c8, i6, f7)) && (null == l4 || null == m9 || w2(l4, s4, o4, c8, i6, m9)) ? (P2(c8, t5, n5), h3(c8, i6, s4, o4) && (null == a8 || null == f7 || R(f7, s4, o4, c8, i6, a8)) && (null == l4 || null == m9 || G2(m9, s4, o4, c8, i6, l4)) ? e5.vertexAttributesChanged() : F(k3(), i6, o4)) : F(k3(), o4, i6);
}
function M3(e5, t5, r5) {
  const o4 = E3;
  if (!i4(r5, o4, e5.spatialReference)) {
    const t6 = e5.origin;
    return o4[0] = t6.x, o4[1] = t6.y, o4[2] = t6.z, void F(k3(), r5.spatialReference, e5.spatialReference, O2);
  }
  P2(e5.vertexAttributes.position, t5, o4), e5.vertexAttributesChanged();
}
function P2(e5, t5, r5 = a4) {
  if (e5) for (let o4 = 0; o4 < e5.length; o4 += 3) {
    for (let t6 = 0; t6 < 3; t6++) T2[t6] = e5[o4 + t6] - r5[t6];
    g2(T2, T2, t5);
    for (let t6 = 0; t6 < 3; t6++) e5[o4 + t6] = T2[t6] + r5[t6];
  }
}
var T2 = n2();
var V2 = n2();
var D2 = e();
var E3 = n2();

// node_modules/@arcgis/core/geometry/Mesh.js
var H2;
var K2 = { base: null, key: "type", defaultKeyValue: "georeferenced", typeMap: { georeferenced: i2, local: i3 } };
var q2 = H2 = class extends p.LoadableMixin(m3.EsriPromiseMixin(c2)) {
  constructor(e5) {
    super(e5), this.components = null, this.vertexSpace = new i2(), this.transform = null, this.metadata = new a7(), this.hasZ = true, this.hasM = false, this.vertexAttributes = new p3(), this.type = "mesh";
  }
  initialize() {
    (0 === this.metadata.externalSources.length || this.vertexAttributes.position.length) && (this.loadStatus = "loaded"), this.when(() => {
      this.addHandles(l(() => ({ vertexAttributes: this.vertexAttributes, components: this.components?.map((e5) => e5.clone()) }), () => this._clearSources(), { once: true, sync: true }));
    });
  }
  get hasExtent() {
    return this.loaded ? this.vertexAttributes.position.length > 0 && (!this.components || this.components.length > 0) : null != this.metadata.displaySource?.extent;
  }
  get _transformedExtent() {
    const { spatialReference: e5, vertexSpace: t5 } = this, r5 = this;
    return l3({ get transform() {
      return r5.transform;
    }, vertexSpace: t5, spatialReference: e5, untransformedBounds: this._untransformedBounds });
  }
  get _untransformedBounds() {
    const { vertexAttributes: { position: e5 }, components: t5 } = this;
    return 0 === e5.length || 0 === t5?.length ? u2(Q) : m4(e5);
  }
  get origin() {
    const e5 = u4(this.vertexSpace, this.spatialReference);
    if (null != e5) return e5;
    const { center: t5, zmin: r5 } = this._transformedExtent;
    return new _({ x: t5.x, y: t5.y, z: r5, spatialReference: this.spatialReference });
  }
  get extent() {
    return this.loaded || null == this.metadata?.displaySource?.extent ? this._transformedExtent : this.metadata.displaySource.extent.clone();
  }
  addComponent(e5) {
    this._checkIfLoaded("addComponent()") && (this.components || (this.components = []), this.components.push(h2.from(e5)), this.notifyChange("components"));
  }
  removeComponent(e5) {
    if (this._checkIfLoaded("removeComponent()")) {
      if (this.components) {
        const t5 = this.components.indexOf(e5);
        if (-1 !== t5) return this.components.splice(t5, 1), void this.notifyChange("components");
      }
      i.getLogger(this).error("removeComponent()", e4);
    }
  }
  rotate(e5, t5, r5, o4) {
    return d(e5, t5, r5, J2), B2(this, J2, o4), this;
  }
  offset(e5, t5, r5) {
    if (!this._checkIfLoaded("offset()")) return this;
    const { vertexSpace: o4, vertexAttributes: s4 } = this, n5 = s4?.position;
    if (!n5) return this;
    if (t2(o4)) {
      const [s5, n6, i6] = o4.origin;
      o4.origin = r2(s5 + e5, n6 + t5, i6 + r5);
    } else {
      for (let o5 = 0; o5 < n5.length; o5 += 3) n5[o5] += e5, n5[o5 + 1] += t5, n5[o5 + 2] += r5;
      this.vertexAttributesChanged();
    }
    return this;
  }
  scale(e5, t5) {
    return this._checkIfLoaded("scale()") ? (q(this, e5, t5), this) : this;
  }
  centerAt(e5, t5) {
    return this._checkIfLoaded("centerAt()") ? (u5(this, e5, t5), this) : this;
  }
  load(e5) {
    const { metadata: { displaySource: t5 } } = this;
    return t5 && this.addResolvingPromise(u7(this, t5, e5)), Promise.resolve(this);
  }
  addExternalSources(e5) {
    this.metadata.externalSources.addMany(e5);
  }
  updateDisplaySource(e5) {
    this.metadata.displaySource = e5;
  }
  clone() {
    return this.cloneAndModifyVertexAttributes(this.vertexAttributes.clone(), this.vertexSpace.clone(), { preserveMetadata: true });
  }
  cloneAndModifyVertexAttributes(e5, t5, r5) {
    let o4 = null;
    if (this.components) {
      const e6 = /* @__PURE__ */ new Map(), t6 = /* @__PURE__ */ new Map();
      o4 = this.components.map((r6) => r6.cloneWithDeduplication(e6, t6));
    }
    const s4 = { components: o4, spatialReference: this.spatialReference, vertexAttributes: e5, vertexSpace: t5, transform: this.transform?.clone() ?? null, metadata: r5?.preserveMetadata ? this.metadata.clone() : new a7() };
    return new H2(s4);
  }
  cloneShallow() {
    return new H2({ components: this.components, spatialReference: this.spatialReference, vertexAttributes: this.vertexAttributes, vertexSpace: this.vertexSpace.clone(), transform: this.transform, metadata: this.metadata });
  }
  vertexAttributesChanged() {
    this.notifyChange("vertexAttributes");
  }
  async toBinaryGLTF(e5) {
    const [{ toBinaryGLTF: t5 }] = await Promise.all([import("./gltfexport-22VFEB4J.js"), this.load(e5)]);
    return s2(e5), await t5(this, e5);
  }
  get usedMemory() {
    return this.components ? this.components.reduce((e5, t5) => e5 + t5.memoryUsage, this.vertexAttributes.usedMemory) : this.vertexAttributes.usedMemory;
  }
  _clearSources() {
    this.metadata.clearSources();
  }
  _checkIfLoaded(e5) {
    return !!this.loaded || (i.getLogger(this).error(e5, t3), false);
  }
  static createBox(e5, t5) {
    if (!(e5 instanceof _)) return i.getLogger(this.prototype).error(".createBox()", s3), null;
    const r5 = new H2(x4(c7(), e5, t5));
    return t5?.imageFace && "all" !== t5.imageFace ? f6(r5, t5.imageFace) : r5;
  }
  static createSphere(e5, t5) {
    return e5 instanceof _ ? new H2(x4(u8(t5?.densificationFactor || 0), e5, t5)) : (i.getLogger(this.prototype).error(".createSphere()", s3), null);
  }
  static createCylinder(e5, t5) {
    return e5 instanceof _ ? new H2(x4(h6(t5?.densificationFactor || 0), e5, t5)) : (i.getLogger(this.prototype).error(".createCylinder()", s3), null);
  }
  static createPlane(e5, t5) {
    if (!(e5 instanceof _)) return i.getLogger(this.prototype).error(".createPlane()", s3), null;
    const r5 = t5?.facing ?? "up", s4 = p5(r5, t5?.size);
    return new H2(x4(m8(r5), e5, { ...t5, size: s4 }));
  }
  static createFromPolygon(e5, t5) {
    if (!(e5 instanceof P)) return i.getLogger(this.prototype).error(".createFromPolygon()", n4), null;
    const r5 = f4(e5);
    return new H2({ vertexAttributes: new p3({ position: r5.position }), components: [new h2({ faces: r5.faces, shading: "flat", material: t5?.material ?? null })], spatialReference: e5.spatialReference, vertexSpace: new i2() });
  }
  static async createFromGLTF(e5, t5, r5) {
    if (!(e5 instanceof _)) {
      const e6 = new i5();
      throw i.getLogger(this.prototype).error(".createfromGLTF()", e6.message), e6;
    }
    const { loadGLTFMesh: s4 } = await h(import("./loadGLTFMesh-TLMD2OTP.js"), r5);
    return new H2(await s4(e5, t5, r5));
  }
  static createWithExternalSource(e5, t5, r5) {
    const o4 = r5?.extent ?? null, { spatialReference: s4 } = e5, n5 = r5?.transform?.clone() ?? new A2(), i6 = l2(e5, r5), a8 = r5?.unitConversionDisabled, p6 = { source: t5, extent: o4, unitConversionDisabled: a8 }, c8 = new a7();
    return c8.externalSources.push(p6), new H2({ metadata: c8, transform: n5, vertexSpace: i6, spatialReference: s4 });
  }
  static createIncomplete(e5, r5) {
    const { spatialReference: o4 } = e5, s4 = r5?.transform?.clone() ?? new A2(), n5 = l2(e5, r5), i6 = new H2({ transform: s4, vertexSpace: n5, spatialReference: o4 });
    return i6.addResolvingPromise(Promise.reject(new s("mesh-incomplete", "Mesh resources are not complete"))), i6;
  }
};
r([m({ type: [h2], json: { write: true } })], q2.prototype, "components", void 0), r([m({ nonNullable: true, types: K2, constructOnly: true, json: { write: true } })], q2.prototype, "vertexSpace", void 0), r([m({ type: A2, json: { write: true } })], q2.prototype, "transform", void 0), r([m({ constructOnly: true })], q2.prototype, "metadata", void 0), r([m()], q2.prototype, "hasExtent", null), r([m()], q2.prototype, "_transformedExtent", null), r([m()], q2.prototype, "_untransformedBounds", null), r([m()], q2.prototype, "origin", null), r([m({ readOnly: true, json: { read: false } })], q2.prototype, "extent", null), r([m({ readOnly: true, json: { read: false, write: true, default: true } })], q2.prototype, "hasZ", void 0), r([m({ readOnly: true, json: { read: false, write: true, default: false } })], q2.prototype, "hasM", void 0), r([m({ type: p3, nonNullable: true, json: { write: true } })], q2.prototype, "vertexAttributes", void 0), q2 = H2 = r([a("esri.geometry.Mesh")], q2);
var J2 = j();

export {
  q2 as q
};
//# sourceMappingURL=chunk-ATNMW6ME.js.map
