import {
  S,
  c as c2,
  u as u2
} from "./chunk-NOGWEW4X.js";
import {
  e as e3,
  i as i2
} from "./chunk-ZCZERMS4.js";
import {
  S as S2,
  a,
  c2 as c,
  d,
  d2,
  f2 as f,
  g,
  i,
  j2,
  u2 as u3,
  w
} from "./chunk-LYSDGL5S.js";
import {
  g as g2
} from "./chunk-SRJX4QLW.js";
import {
  a as a2
} from "./chunk-KUP5BM5G.js";
import {
  m as m2,
  u
} from "./chunk-HNQNVI5C.js";
import {
  m
} from "./chunk-G34OBNLT.js";
import {
  l
} from "./chunk-KE3WBZYL.js";
import {
  e as e2
} from "./chunk-MUKDJQWB.js";
import {
  j
} from "./chunk-YBJ5GVXQ.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  s
} from "./chunk-XWG6QGFK.js";
import {
  e
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/symbols/support/defaults3D.js
var w2 = j2.fromSimpleMarkerSymbol(S);
var S3 = c.fromSimpleLineSymbol(u2);
var j3 = g.fromSimpleFillSymbol(c2);
var b = new a({ symbolLayers: new V([new d({ material: { color: e3 }, edges: new i({ size: e2(1), color: new l(i2) }) })]) });
var L = new c({ symbolLayers: new V([new d2({ material: { color: new l([0, 0, 0]) }, size: e2(1) })]) });
var D = new g({ symbolLayers: new V([new d({ outline: { color: new l([0, 0, 0]), size: e2(1) } })]) });
function d3(o) {
  if (null == o) return null;
  switch (o.type) {
    case "mesh":
      return b;
    case "point":
    case "multipoint":
      return w2;
    case "polyline":
      return S3;
    case "polygon":
    case "extent":
      return j3;
  }
  return null;
}

// node_modules/@arcgis/core/symbols/support/symbolConversion.js
var S4 = "#useCIMFallbackSymbology()";
var g3 = { retainId: false, ignoreDrivers: false, hasLabelingContext: true };
function u4(u6, d4 = g3) {
  if (!u6) return { symbol: null };
  const { retainId: D2 = g3.retainId, ignoreDrivers: M = g3.ignoreDrivers, hasLabelingContext: j4 = g3.hasLabelingContext, retainCIM: C = g3.retainCIM, cimFallbackEnabled: I = g3.cimFallbackEnabled } = d4;
  let k = null;
  if (S2(u6) || u6 instanceof u3) k = u6.clone();
  else if ("cim" === u6.type) {
    const e4 = u6.data?.symbol?.type;
    switch (e4) {
      case "CIMPointSymbol":
        k = C ? u6.clone() : j2.fromCIMSymbol(u6);
        break;
      case "CIMLineSymbol":
        I && (k = L.clone(), d4?.logWarning?.(S4, "Unsupported CIM line symbology converted to fallback 3D line symbology"));
        break;
      case "CIMPolygonSymbol":
        I && (k = D.clone(), d4?.logWarning?.(S4, "Unsupported CIM polygon symbology converted to fallback 3D polygon symbology"));
    }
    if (!k) return { error: new s("symbol-conversion:unsupported-cim-symbol", `CIM symbol of type '${e4 || "unknown"}' is unsupported in 3D`, { symbol: u6 }) };
  } else if (u6 instanceof m) k = c.fromSimpleLineSymbol(u6);
  else if (u6 instanceof u) k = j2.fromSimpleMarkerSymbol(u6);
  else if (u6 instanceof a2) k = j2.fromPictureMarkerSymbol(u6);
  else if (u6 instanceof m2) k = d4.geometryType && "mesh" === d4.geometryType ? a.fromSimpleFillSymbol(u6) : g.fromSimpleFillSymbol(u6);
  else {
    if (!(u6 instanceof g2)) return { error: new s("symbol-conversion:unsupported-2d-symbol", `2D symbol of type '${u6.type || u6.declaredClass}' is unsupported in 3D`, { symbol: u6 }) };
    k = j4 ? f.fromTextSymbol(u6) : j2.fromTextSymbol(u6);
  }
  return D2 && k && "cim" !== k.type && (k.id = u6.id), !M || "cim" === k.type || k instanceof u3 || k.symbolLayers.forEach((o) => o.ignoreDrivers = true), { symbol: k };
}

// node_modules/@arcgis/core/symbols/support/jsonUtils.js
function i3(e4, n, t, r) {
  const s2 = a3(e4, {}, { context: r, isLabelSymbol: false });
  null != s2 && e(t, s2, n);
}
function p(e4, o, n, t) {
  const r = a3(e4, {}, { context: t, isLabelSymbol: true });
  null != r && (o[n] = r);
}
function m3(e4) {
  return S2(e4) || e4 instanceof u3;
}
function y(e4) {
  return "polygon-3d" === e4?.type || "line-3d" === e4?.type;
}
function a3(o, t, s2) {
  if (null == o) return null;
  const { context: l2, isLabelSymbol: i4 } = s2, p2 = l2?.origin, a4 = l2?.messages;
  if ("web-scene" === p2 && !m3(o)) {
    const n = u4(o, { retainCIM: true, hasLabelingContext: i4 });
    return null != n.symbol ? n.symbol.write(t, l2) : (a4?.push(new s("symbol:unsupported", `Symbols of type '${o.declaredClass}' are not supported in scenes. Use 3D symbology instead when working with WebScene and SceneView`, { symbol: o, context: l2, error: n.error })), null);
  }
  return j(l2?.layer) && y(o) ? (a4?.push(new s("symbol:unsupported", `Symbols of type '${o.declaredClass}' are not supported on layers of type '${l2?.layer?.declaredClass}'.`, { symbol: o, context: l2 })), null) : ("web-map" === p2 || "portal-item" === p2 && !j(l2?.layer)) && m3(o) ? (a4?.push(new s("symbol:unsupported", `Symbols of type '${o.declaredClass}' are not supported in web maps and portal items. Use 2D symbology and CIMSymbol instead when working with MapView`, { symbol: o, context: l2 })), null) : o.write(t, l2);
}
function u5(e4, o) {
  return w(e4, null, o);
}

export {
  d3 as d,
  g3 as g,
  u4 as u,
  i3 as i,
  p,
  u5 as u2
};
//# sourceMappingURL=chunk-BFUOEOXA.js.map
