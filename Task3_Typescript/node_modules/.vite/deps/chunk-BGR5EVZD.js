import {
  c as c2,
  f,
  f2
} from "./chunk-QLJ6JQFC.js";
import {
  e as e2
} from "./chunk-CCHJ3WNU.js";
import {
  A,
  E,
  I,
  P,
  _,
  c,
  g,
  j,
  o,
  p as p2,
  q,
  r as r2,
  s,
  u,
  v
} from "./chunk-TMFB3DKM.js";
import {
  n as n3,
  r
} from "./chunk-7FAVUXK2.js";
import {
  L,
  a
} from "./chunk-IVNFIIVI.js";
import {
  p
} from "./chunk-DNZK6PPI.js";
import {
  e
} from "./chunk-7BWCD63N.js";
import {
  n as n2,
  t as t2
} from "./chunk-RACDQ3AL.js";
import {
  n
} from "./chunk-7Z3AF3B2.js";
import {
  b,
  l
} from "./chunk-FPSA4NFH.js";
import {
  t
} from "./chunk-TKYAZCMB.js";

// node_modules/@arcgis/core/core/ObjectStack.js
var s2 = class {
  constructor(t3) {
    this._allocator = t3, this._items = [], this._itemsPtr = 0, this._grow();
  }
  get() {
    return 0 === this._itemsPtr && t(() => this._reset()), this._itemsPtr === this._items.length && this._grow(), this._items[this._itemsPtr++];
  }
  _reset() {
    const t3 = Math.min(3 * Math.max(8, this._itemsPtr), this._itemsPtr + 3 * i);
    this._items.length = Math.min(t3, this._items.length), this._itemsPtr = 0;
  }
  _grow() {
    for (let t3 = 0; t3 < Math.max(8, Math.min(this._items.length, i)); t3++) this._items.push(this._allocator());
  }
};
var i = 1024;

// node_modules/@arcgis/core/geometry/support/ray.js
function b2(i2) {
  return i2 ? h2(t2(i2.origin), t2(i2.direction)) : h2(n2(), n2());
}
function h2(i2, r4) {
  return { origin: i2, direction: r4 };
}
function k(i2, r4) {
  const n5 = O.get();
  return n5.origin = i2, n5.direction = r4, n5;
}
function v2(i2, r4 = b2()) {
  return q2(i2.origin, i2.direction, r4);
}
function S(i2, r4, n5 = b2()) {
  return s(n5.origin, i2), c(n5.direction, r4, i2), n5;
}
function q2(i2, r4, n5 = b2()) {
  return s(n5.origin, i2), s(n5.direction, r4), n5;
}
function w(i2, r4) {
  const n5 = _(c2.get(), A(c2.get(), i2.direction), c(c2.get(), r4, i2.origin));
  return P(n5, n5);
}
function y(i2, r4, n5) {
  const t3 = P(i2.direction, c(n5, r4, i2.origin));
  return u(n5, i2.origin, g(n5, i2.direction, t3)), n5;
}
var O = new s2(() => b2());
var U = n2();
var z = n2();
var A2 = n2();
var B = e2();

// node_modules/@arcgis/core/geometry/support/sphereUtils.js
function n4(n5, a2) {
  const c3 = r2(n5), i2 = l(n5[2] / c3), r4 = Math.atan2(n5[1] / c3, n5[0] / c3);
  return o(a2, c3, i2, r4), a2;
}

// node_modules/@arcgis/core/chunks/sphere.js
var C = E2();
function E2() {
  return n3();
}
var _2 = L;
var k2 = L;
function w2(t3, r4) {
  return a(r4, t3);
}
function O2(t3, r4) {
  return r(t3[0], t3[1], t3[2], r4);
}
function T(t3) {
  return t3;
}
function z2(t3) {
  t3[0] = t3[1] = t3[2] = t3[3] = 0;
}
function L2(t3, r4) {
  return t3[0] = t3[1] = t3[2] = 0, t3[3] = r4, t3;
}
function N(t3) {
  return t3[3];
}
function U2(t3) {
  return t3;
}
function V(t3, r4, n5, s4) {
  return r(t3, r4, n5, s4);
}
function Z(t3, r4, n5) {
  return t3 !== n5 && (n5[0] = t3[0], n5[1] = t3[1], n5[2] = t3[2]), n5[3] = t3[3] + r4, n5;
}
function B2(t3, r4, n5) {
  return t3 !== n5 && w2(t3, n5), n5;
}
function D(t3, r4) {
  return r4;
}
function F(t3, r4, n5) {
  if (null == r4) return false;
  if (!Y(t3, r4, X)) return false;
  let { t0: s4, t1: o2 } = X;
  if ((s4 < 0 || o2 < s4 && o2 > 0) && (s4 = o2), s4 < 0) return false;
  if (n5) {
    const { origin: t4, direction: o3 } = r4;
    n5[0] = t4[0] + o3[0] * s4, n5[1] = t4[1] + o3[1] * s4, n5[2] = t4[2] + o3[2] * s4;
  }
  return true;
}
function I2(t3, r4, n5) {
  const s4 = S(r4, n5);
  if (!Y(t3, s4, X)) return [];
  const { origin: o2, direction: e3 } = s4, { t0: i2, t1: a2 } = X, c3 = (r5) => {
    const n6 = n2();
    return q(n6, o2, e3, r5), $(t3, n6, n6);
  };
  return Math.abs(i2 - a2) < e() ? [c3(i2)] : [c3(i2), c3(a2)];
}
var X = { t0: 0, t1: 0 };
function Y(t3, r4, n5) {
  const { origin: s4, direction: o2 } = r4, e3 = G;
  e3[0] = s4[0] - t3[0], e3[1] = s4[1] - t3[1], e3[2] = s4[2] - t3[2];
  const i2 = o2[0] * o2[0] + o2[1] * o2[1] + o2[2] * o2[2];
  if (0 === i2) return false;
  const a2 = 2 * (o2[0] * e3[0] + o2[1] * e3[1] + o2[2] * e3[2]), c3 = a2 * a2 - 4 * i2 * (e3[0] * e3[0] + e3[1] * e3[1] + e3[2] * e3[2] - t3[3] * t3[3]);
  if (c3 < 0) return false;
  const u2 = Math.sqrt(c3);
  return n5.t0 = (-a2 - u2) / (2 * i2), n5.t1 = (-a2 + u2) / (2 * i2), true;
}
var G = n2();
function H(t3, r4) {
  return F(t3, r4, null);
}
function J(t3, r4, n5) {
  if (F(t3, r4, n5)) return n5;
  const a2 = K(t3, r4, c2.get());
  return u(n5, r4.origin, g(c2.get(), r4.direction, p2(r4.origin, a2) / r2(r4.direction))), n5;
}
function K(t3, n5, s4) {
  const e3 = c2.get(), u2 = f2.get();
  _(e3, n5.origin, n5.direction);
  const f3 = N(t3);
  _(s4, e3, n5.origin), g(s4, s4, 1 / r2(s4) * f3);
  const m = rt(t3, n5.origin), l2 = f(n5.origin, s4);
  return p(u2, l2 + m, e3), E(s4, s4, u2), s4;
}
function Q(t3, r4, n5, s4) {
  const o2 = N(t3), e3 = o2 * o2, i2 = r4 + 0.5 * Math.PI, a2 = n5 * n5 + e3 - 2 * Math.cos(i2) * n5 * o2, c3 = Math.sqrt(a2), u2 = a2 - e3;
  if (u2 <= 0) return 0.5;
  const f3 = Math.sqrt(u2), m = Math.acos(f3 / c3) - Math.asin(o2 / (c3 / Math.sin(i2)));
  return Math.min(1, (m + 0.5 * s4) / s4);
}
function W(t3, r4, n5) {
  return F(t3, r4, n5) ? n5 : (y(r4, U2(t3), n5), $(t3, n5, n5));
}
function $(t3, r4, n5) {
  const e3 = c(c2.get(), r4, U2(t3)), a2 = g(c2.get(), e3, t3[3] / r2(e3));
  return u(n5, a2, U2(t3));
}
function tt(t3, r4) {
  const n5 = c(c2.get(), r4, U2(t3)), s4 = j(n5), o2 = t3[3] * t3[3];
  return Math.sqrt(Math.abs(s4 - o2));
}
function rt(r4, n5) {
  const s4 = c(c2.get(), n5, U2(r4)), o2 = r2(s4), e3 = N(r4), a2 = e3 + Math.abs(e3 - o2);
  return b(e3 / a2);
}
var nt = n2();
function st(t3, r4, n5, s4) {
  const o2 = c(nt, r4, U2(t3));
  switch (n5) {
    case n.X: {
      const t4 = n4(o2, nt)[2];
      return o(s4, -Math.sin(t4), Math.cos(t4), 0);
    }
    case n.Y: {
      const t4 = n4(o2, nt), r5 = t4[1], n6 = t4[2], e3 = Math.sin(r5);
      return o(s4, -e3 * Math.cos(n6), -e3 * Math.sin(n6), Math.cos(r5));
    }
    case n.Z:
      return A(s4, o2);
    default:
      return;
  }
}
function ot(t3, r4) {
  const n5 = c(ct, r4, U2(t3));
  return r2(n5) - t3[3];
}
function et(t3, r4, n5, e3) {
  const i2 = ot(t3, r4), a2 = st(t3, r4, n.Z, ct), c3 = g(ct, a2, n5 - i2);
  return u(e3, r4, c3);
}
function it(t3, r4) {
  const s4 = v(U2(t3), r4), o2 = N(t3);
  return s4 <= o2 * o2;
}
function at(t3, r4, n5 = n3()) {
  const s4 = p2(U2(t3), U2(r4)), o2 = t3[3], i2 = r4[3];
  return s4 + i2 < o2 ? (a(n5, t3), n5) : s4 + o2 < i2 ? (a(n5, r4), n5) : (I(n5, U2(t3), U2(r4), (s4 + i2 - o2) / (2 * s4)), n5[3] = (s4 + o2 + i2) / 2, n5);
}
var ct = n2();
var ut = E2();
var ft = Object.freeze(Object.defineProperty({ __proto__: null, NullSphere: C, altitudeAt: ot, angleToSilhouette: rt, axisAt: st, cameraFrustumCoverage: Q, clear: z2, closestPoint: W, closestPointOnSilhouette: K, containsPoint: it, copy: w2, create: E2, distanceToSilhouette: tt, elevate: Z, equals: k2, exactEquals: _2, fromCenterAndRadius: O2, fromRadius: L2, fromValues: V, getCenter: U2, getExtent: D, getRadius: N, intersectLine: I2, intersectRay: F, intersectRayClosestSilhouette: J, intersectsRay: H, projectPoint: $, setAltitudeAt: et, setExtent: B2, tmpSphere: ut, union: at, wrap: T }, Symbol.toStringTag, { value: "Module" }));

export {
  s2 as s,
  b2 as b,
  k,
  v2 as v,
  S,
  w,
  C,
  E2 as E,
  _2 as _,
  w2,
  O2 as O,
  T,
  N,
  U2 as U,
  V,
  I2 as I,
  H,
  $,
  it,
  ft
};
//# sourceMappingURL=chunk-BGR5EVZD.js.map
