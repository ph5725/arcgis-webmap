// node_modules/@arcgis/core/views/webgl/capabilities/DebugRendererInfo.js
var e = class {
  constructor(e2) {
    this.getUnmaskedRenderer = e2;
  }
};
function n(n3) {
  const r2 = n3.getExtension("WEBGL_debug_renderer_info");
  return r2 ? new e(() => n3.getParameter(r2.UNMASKED_RENDERER_WEBGL)) : null;
}

// node_modules/@arcgis/core/views/webgl/capabilities.js
var r;
function t() {
  return r ??= l(), r;
}
var o = class {
  constructor() {
    this.available = false, this.majorPerformanceCaveat = false, this.maxTextureSize = 0, this.supportsVertexShaderSamplers = false, this.supportsHighPrecisionFragment = false, this.supportsColorBufferFloat = false, this.supportsColorBufferFloatBlend = false, this.supportsColorBufferHalfFloat = false, this.unmaskedRenderer = "unloaded";
  }
};
function n2(r2) {
  if ("undefined" == typeof WebGL2RenderingContext) return null;
  const t2 = document.createElement("canvas");
  if (!t2) return null;
  let o2 = t2.getContext("webgl2", { failIfMajorPerformanceCaveat: true });
  if (null == o2 && (o2 = t2.getContext("webgl2"), null != o2 && (r2.majorPerformanceCaveat = true, r2.unmaskedRenderer = n(o2)?.getUnmaskedRenderer() ?? "unknown")), null == o2) return o2;
  r2.available = true, r2.maxTextureSize = o2.getParameter(o2.MAX_TEXTURE_SIZE), r2.supportsVertexShaderSamplers = o2.getParameter(o2.MAX_VERTEX_TEXTURE_IMAGE_UNITS) > 0;
  const n3 = o2.getShaderPrecisionFormat(o2.FRAGMENT_SHADER, o2.HIGH_FLOAT);
  return n3 && (r2.supportsHighPrecisionFragment = n3.precision > 0), o2;
}
function l() {
  const e2 = new o(), r2 = n2(e2);
  return null == r2 || (e2.supportsColorBufferFloat = null !== r2.getExtension("EXT_color_buffer_float"), e2.supportsColorBufferFloatBlend = null !== r2.getExtension("EXT_float_blend"), e2.supportsColorBufferHalfFloat = e2.supportsColorBufferFloat || null !== r2.getExtension("EXT_color_buffer_half_float")), e2;
}

export {
  n,
  t
};
//# sourceMappingURL=chunk-CHTPXQAG.js.map
