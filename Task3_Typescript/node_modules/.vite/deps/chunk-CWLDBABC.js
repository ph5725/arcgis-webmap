import {
  S
} from "./chunk-37WACOMS.js";
import {
  c as c5,
  p as p2,
  r as r6
} from "./chunk-56ZY2WLU.js";
import {
  o as o3
} from "./chunk-QY6CN52R.js";
import {
  I as I2,
  L
} from "./chunk-ZN7Z7TAB.js";
import {
  C as C2
} from "./chunk-ZPAWXU2P.js";
import {
  E as E2,
  U
} from "./chunk-BGR5EVZD.js";
import {
  e as e6
} from "./chunk-UZRZVWLE.js";
import {
  A as A2,
  e as e4
} from "./chunk-LG4SF54U.js";
import {
  s as s4,
  t as t3
} from "./chunk-67CCONUO.js";
import {
  J,
  T,
  f,
  g as g2,
  h as h2,
  l,
  m,
  o as o2,
  p,
  y as y3
} from "./chunk-6DBRCIDV.js";
import {
  s as s3
} from "./chunk-YSRSL2SU.js";
import {
  e as e2,
  r as r4,
  t as t2
} from "./chunk-NZPABYQQ.js";
import {
  e as e3
} from "./chunk-CCHJ3WNU.js";
import {
  c as c4
} from "./chunk-H6F6O2KE.js";
import {
  y as y2
} from "./chunk-DRAQJS2F.js";
import {
  A as A3,
  C,
  D,
  e as e5,
  i as i2,
  r as r5
} from "./chunk-BZYXFNL4.js";
import {
  A,
  E,
  I,
  R,
  W,
  _,
  c as c3,
  g,
  o,
  q,
  r as r3,
  s as s2,
  u as u2,
  v
} from "./chunk-TMFB3DKM.js";
import {
  l as l2
} from "./chunk-H7XUEHGR.js";
import {
  Z,
  d,
  u
} from "./chunk-FKFXOPPT.js";
import {
  G,
  H,
  c as c2,
  h,
  n as n2,
  s
} from "./chunk-DNZK6PPI.js";
import {
  n,
  r as r2,
  t
} from "./chunk-RACDQ3AL.js";
import {
  e3 as e
} from "./chunk-N3XLUQJI.js";
import {
  r
} from "./chunk-3TBMFSPB.js";
import {
  c2 as c,
  i,
  y2 as y
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/AttributeArray.js
function e7(e10) {
  if (e10.length < y) return Array.from(e10);
  if (Array.isArray(e10)) return Float64Array.from(e10);
  if (!("BYTES_PER_ELEMENT" in e10)) return Array.from(e10);
  switch (e10.BYTES_PER_ELEMENT) {
    case 1:
      return Uint8Array.from(e10);
    case 2:
      return i(e10) ? l().from(e10) : c(e10) ? Uint16Array.from(e10) : Int16Array.from(e10);
    case 4:
      return Float32Array.from(e10);
    default:
      return Float64Array.from(e10);
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/BoundingInfo.js
var o4 = class _o {
  constructor(i6, e10, o6) {
    this.primitiveIndices = i6, this._numIndexPerPrimitive = e10, this.position = o6, this._children = void 0, s3(i6.length >= 1), s3(3 === o6.size || 4 === o6.size);
    const { data: c8, size: l5, indices: m7 } = o6;
    s3(m7.length % this._numIndexPerPrimitive === 0), s3(m7.length >= i6.length * this._numIndexPerPrimitive);
    const d4 = i6.length;
    let u5 = l5 * m7[this._numIndexPerPrimitive * i6[0]];
    a.clear(), a.push(u5);
    const f6 = r2(c8[u5], c8[u5 + 1], c8[u5 + 2]), x3 = t(f6);
    for (let t4 = 0; t4 < d4; ++t4) {
      const e11 = this._numIndexPerPrimitive * i6[t4];
      for (let i7 = 0; i7 < this._numIndexPerPrimitive; ++i7) {
        u5 = l5 * m7[e11 + i7], a.push(u5);
        let t5 = c8[u5];
        f6[0] = Math.min(t5, f6[0]), x3[0] = Math.max(t5, x3[0]), t5 = c8[u5 + 1], f6[1] = Math.min(t5, f6[1]), x3[1] = Math.max(t5, x3[1]), t5 = c8[u5 + 2], f6[2] = Math.min(t5, f6[2]), x3[2] = Math.max(t5, x3[2]);
      }
    }
    this.bbMin = f6, this.bbMax = x3;
    const P3 = I(n(), this.bbMin, this.bbMax, 0.5);
    this.radius = 0.5 * Math.max(Math.max(x3[0] - f6[0], x3[1] - f6[1]), x3[2] - f6[2]);
    let v5 = this.radius * this.radius;
    for (let t4 = 0; t4 < a.length; ++t4) {
      u5 = a.at(t4);
      const i7 = c8[u5] - P3[0], e11 = c8[u5 + 1] - P3[1], s6 = c8[u5 + 2] - P3[2], r8 = i7 * i7 + e11 * e11 + s6 * s6;
      if (r8 <= v5) continue;
      const n4 = Math.sqrt(r8), h6 = 0.5 * (n4 - this.radius);
      this.radius = this.radius + h6, v5 = this.radius * this.radius;
      const o7 = h6 / n4;
      P3[0] += i7 * o7, P3[1] += e11 * o7, P3[2] += s6 * o7;
    }
    this.center = P3, a.clear();
  }
  getChildren() {
    if (this._children || v(this.bbMin, this.bbMax) <= 1) return this._children;
    const i6 = I(n(), this.bbMin, this.bbMax, 0.5), s6 = this.primitiveIndices.length, r8 = new Uint8Array(s6), h6 = new Array(8);
    for (let t4 = 0; t4 < 8; ++t4) h6[t4] = 0;
    const { data: a3, size: c8, indices: l5 } = this.position;
    for (let t4 = 0; t4 < s6; ++t4) {
      let e10 = 0;
      const s7 = this._numIndexPerPrimitive * this.primitiveIndices[t4];
      let n4 = c8 * l5[s7], o6 = a3[n4], m8 = a3[n4 + 1], d5 = a3[n4 + 2];
      for (let i7 = 1; i7 < this._numIndexPerPrimitive; ++i7) {
        n4 = c8 * l5[s7 + i7];
        const t5 = a3[n4], e11 = a3[n4 + 1], r9 = a3[n4 + 2];
        t5 < o6 && (o6 = t5), e11 < m8 && (m8 = e11), r9 < d5 && (d5 = r9);
      }
      o6 < i6[0] && (e10 |= 1), m8 < i6[1] && (e10 |= 2), d5 < i6[2] && (e10 |= 4), r8[t4] = e10, ++h6[e10];
    }
    let m7 = 0;
    for (let t4 = 0; t4 < 8; ++t4) h6[t4] > 0 && ++m7;
    if (m7 < 2) return;
    const d4 = new Array(8);
    for (let t4 = 0; t4 < 8; ++t4) d4[t4] = h6[t4] > 0 ? new Uint32Array(h6[t4]) : void 0;
    for (let t4 = 0; t4 < 8; ++t4) h6[t4] = 0;
    for (let t4 = 0; t4 < s6; ++t4) {
      const i7 = r8[t4];
      d4[i7][h6[i7]++] = this.primitiveIndices[t4];
    }
    this._children = new Array();
    for (let t4 = 0; t4 < 8; ++t4) void 0 !== d4[t4] && this._children.push(new _o(d4[t4], this._numIndexPerPrimitive, this.position));
    return this._children;
  }
  static prune() {
    a.prune();
  }
};
var a = new r({ deallocator: null });

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/geometryDataUtils.js
function i3(r8, o6) {
  if (!r8) return false;
  const { size: i6, data: c8, indices: f6 } = r8;
  o(o6, 0, 0, 0), o(m2, 0, 0, 0);
  let g3 = 0, d4 = 0;
  for (let p6 = 0; p6 < f6.length - 2; p6 += 3) {
    const r9 = f6[p6] * i6, h6 = f6[p6 + 1] * i6, j3 = f6[p6 + 2] * i6;
    o(a2, c8[r9], c8[r9 + 1], c8[r9 + 2]), o(l3, c8[h6], c8[h6 + 1], c8[h6 + 2]), o(u3, c8[j3], c8[j3 + 1], c8[j3 + 2]);
    const z3 = S(a2, l3, u3);
    z3 ? (u2(a2, a2, l3), u2(a2, a2, u3), g(a2, a2, 1 / 3 * z3), u2(o6, o6, a2), g3 += z3) : (u2(m2, m2, a2), u2(m2, m2, l3), u2(m2, m2, u3), d4 += 3);
  }
  return (0 !== d4 || 0 !== g3) && (0 !== g3 ? (g(o6, o6, 1 / g3), true) : 0 !== d4 && (g(o6, m2, 1 / d4), true));
}
function c6(e10, r8) {
  if (!e10) return false;
  const { size: o6, data: s6, indices: i6 } = e10;
  o(r8, 0, 0, 0);
  let c8 = -1, f6 = 0;
  for (let t4 = 0; t4 < i6.length; t4++) {
    const e11 = i6[t4] * o6;
    c8 !== e11 && (r8[0] += s6[e11], r8[1] += s6[e11 + 1], r8[2] += s6[e11 + 2], f6++), c8 = e11;
  }
  return f6 > 1 && g(r8, r8, 1 / f6), f6 > 0;
}
function f2(o6, s6, i6) {
  if (!o6) return false;
  o(i6, 0, 0, 0), o(m2, 0, 0, 0);
  let c8 = 0, f6 = 0;
  const { size: u5, data: g3, indices: d4 } = o6, p6 = d4.length - 1, h6 = p6 + (s6 ? 2 : 0);
  for (let t4 = 0; t4 < h6; t4 += 2) {
    const o7 = t4 < p6 ? t4 + 1 : 0, s7 = d4[t4 < p6 ? t4 : p6] * u5, h7 = d4[o7] * u5;
    a2[0] = g3[s7], a2[1] = g3[s7 + 1], a2[2] = g3[s7 + 2], l3[0] = g3[h7], l3[1] = g3[h7 + 1], l3[2] = g3[h7 + 2], g(a2, u2(a2, a2, l3), 0.5);
    const j3 = W(a2, l3);
    j3 > 0 ? (u2(i6, i6, g(a2, a2, j3)), c8 += j3) : 0 === c8 && (u2(m2, m2, a2), f6++);
  }
  return 0 !== c8 ? (g(i6, i6, 1 / c8), true) : 0 !== f6 && (g(i6, m2, 1 / f6), true);
}
var a2 = n();
var l3 = n();
var u3 = n();
var m2 = n();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/IntersectableGeometry.js
var n3;
!function(n4) {
  n4[n4.Mesh = 0] = "Mesh", n4[n4.Point = 1] = "Point", n4[n4.Line = 2] = "Line";
}(n3 || (n3 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Object3DStateID.js
var c7 = class {
  constructor() {
    this.uid = e();
  }
};
var e8 = class extends c7 {
  constructor(s6) {
    super(), this.highlightName = s6, this.channel = t3.Highlight;
  }
};
var r7 = class extends c7 {
  constructor() {
    super(...arguments), this.channel = t3.MaskOccludee;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/Geometry.js
var p3 = class _p {
  constructor(i6, e10, s6 = null, h6 = n3.Mesh, r8 = null, o6 = -1) {
    this.material = i6, this.mapPositions = s6, this.type = h6, this.objectAndLayerIdColor = r8, this.edgeIndicesLength = o6, this.highlights = /* @__PURE__ */ new Set(), this._highlightOptionsCounts = /* @__PURE__ */ new Map(), this.id = e(), this.visible = true, this._attributes = /* @__PURE__ */ new Map(), this._boundingInfo = null;
    for (const [t4, a3] of e10) this._attributes.set(t4, { ...a3, indices: e4(a3.indices) }), t4 === e6.POSITION && (this.edgeIndicesLength = this.edgeIndicesLength < 0 ? this._attributes.get(t4).indices.length : this.edgeIndicesLength);
  }
  instantiate(t4 = {}) {
    const i6 = new _p(t4.material || this.material, [], this.mapPositions, this.type, this.objectAndLayerIdColor, this.edgeIndicesLength);
    return this._attributes.forEach((t5, e10) => {
      t5.exclusive = false, i6._attributes.set(e10, t5);
    }), i6._boundingInfo = this._boundingInfo, i6.transformation = t4.transformation || this.transformation, i6;
  }
  get attributes() {
    return this._attributes;
  }
  getMutableAttribute(t4) {
    let i6 = this._attributes.get(t4);
    return i6 && !i6.exclusive && (i6 = { ...i6, exclusive: true, data: e7(i6.data) }, this._attributes.set(t4, i6)), i6;
  }
  setAttributeData(t4, i6) {
    const e10 = this._attributes.get(t4);
    e10 ? this._attributes.set(t4, { ...e10, exclusive: true, data: i6 }) : c4() && console.warn(`Setting undefined attribute ${t4} data`);
  }
  get indexCount() {
    const t4 = this._attributes.values().next().value?.indices;
    return t4?.length ?? 0;
  }
  get faceCount() {
    return this.indexCount / 3;
  }
  get boundingInfo() {
    return this._boundingInfo ??= this._calculateBoundingInfo(), this._boundingInfo;
  }
  computeAttachmentOrigin(t4) {
    return !!(this.type === n3.Mesh ? this._computeAttachmentOriginTriangles(t4) : this.type === n3.Line ? this._computeAttachmentOriginLines(t4) : this._computeAttachmentOriginPoints(t4)) && (null != this._transformation && E(t4, t4, this._transformation), true);
  }
  _computeAttachmentOriginTriangles(t4) {
    const i6 = this.attributes.get(e6.POSITION);
    return i3(i6, t4);
  }
  _computeAttachmentOriginLines(t4) {
    const i6 = this.attributes.get(e6.POSITION);
    return f2(i6, b(this.material.parameters, i6), t4);
  }
  _computeAttachmentOriginPoints(t4) {
    const i6 = this.attributes.get(e6.POSITION);
    return c6(i6, t4);
  }
  invalidateBoundingInfo() {
    this._boundingInfo = null;
  }
  _calculateBoundingInfo() {
    const t4 = this.attributes.get(e6.POSITION);
    if (!t4 || 0 === t4.indices.length) return null;
    const i6 = this.type === n3.Mesh ? 3 : 1;
    s3(t4.indices.length % i6 === 0, "Indexing error: " + t4.indices.length + " not divisible by " + i6);
    const e10 = A2(t4.indices.length / i6);
    return new o4(e10, i6, t4);
  }
  get transformation() {
    return this._transformation ?? r4;
  }
  set transformation(t4) {
    this._transformation = t4 && t4 !== r4 ? t2(t4) : null;
  }
  get highlightNames() {
    return this._highlightOptionsCounts;
  }
  get hasHighlights() {
    return this._highlightOptionsCounts.size > 0;
  }
  foreachHighlightOptions(t4) {
    this._highlightOptionsCounts.forEach((i6, e10) => t4(e10));
  }
  allocateIdAndHighlight(t4) {
    const i6 = new e8(t4);
    return this.addHighlight(i6);
  }
  addHighlight(t4) {
    this.highlights.add(t4);
    const { highlightName: i6 } = t4, e10 = (this._highlightOptionsCounts.get(i6) ?? 0) + 1;
    return this._highlightOptionsCounts.set(i6, e10), t4;
  }
  removeHighlight(t4) {
    if (this.highlights.delete(t4)) {
      const { highlightName: i6 } = t4, e10 = this._highlightOptionsCounts.get(i6) ?? 0;
      e10 <= 1 ? this._highlightOptionsCounts.delete(i6) : this._highlightOptionsCounts.set(i6, e10 - 1);
    }
  }
};
function b(t4, i6) {
  return !(!("isClosed" in t4) || !t4.isClosed) && i6.indices.length > 2;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/OrderIndependentTransparency.js
var f3 = r6(A3.ONE, A3.ZERO, A3.ONE, A3.ONE_MINUS_SRC_ALPHA);
function i4(r8) {
  return r8 === o3.FrontFace ? null : f3;
}
function p4(r8) {
  switch (r8) {
    case o3.NONE:
      return c5;
    case o3.ColorAlpha:
      return f3;
    case o3.FrontFace:
    case o3.COUNT:
      return null;
  }
}
function N(r8) {
  if (r8.draped) return null;
  switch (r8.oitPass) {
    case o3.NONE:
    case o3.FrontFace:
      return r8.writeDepth ? p2 : null;
    case o3.ColorAlpha:
    case o3.COUNT:
      return null;
  }
}
var O = 5e5;
var h3 = { factor: -1, units: -2 };
function m3({ oitPass: r8, enableOffset: t4 }) {
  return t4 && r8 === o3.ColorAlpha ? h3 : null;
}
function E3(r8, n4 = C.LESS) {
  return r8 === o3.NONE || r8 === o3.FrontFace ? n4 : C.LEQUAL;
}
function F(t4, u5) {
  const a3 = C2(u5);
  return t4 === o3.ColorAlpha ? a3 ? { buffers: [e5, i2, r5] } : { buffers: [e5, i2] } : a3 ? { buffers: [e5, i2] } : null;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RayIntersections.js
var h4 = class {
  constructor(t4 = false, n4 = true) {
    this.isVerticalRay = t4, this.normalRequired = n4;
  }
};
var m4 = u();
function p5(n4, o6, i6, e10, s6, c8) {
  if (!n4.visible) return;
  const r8 = R(S2, e10, i6), f6 = (t4, n5, o7) => {
    c8(t4, o7, n5);
  }, m7 = new h4(false, o6.options.normalRequired);
  if (n4.boundingInfo) {
    s3(n4.type === n3.Mesh);
    const t4 = o6.tolerance;
    b2(n4.boundingInfo, i6, r8, t4, s6, m7, f6);
  } else {
    const t4 = n4.attributes.get(e6.POSITION), o7 = t4.indices;
    q2(i6, r8, 0, o7.length / 3, o7, t4.data, t4.stride, s6, m7, f6);
  }
}
var M = n();
function b2(t4, n4, o6, i6, e10, s6, r8) {
  if (null == t4) return;
  const a3 = w(o6, M);
  if (Z(m4, t4.bbMin), d(m4, t4.bbMax), null != e10 && e10.applyToAabb(m4), C3(m4, n4, a3, i6)) {
    const { primitiveIndices: c8, position: f6 } = t4, a4 = c8 ? c8.length : f6.indices.length / 3;
    if (a4 > N2) {
      const c9 = t4.getChildren();
      if (void 0 !== c9) {
        for (const t5 of c9) b2(t5, n4, o6, i6, e10, s6, r8);
        return;
      }
    }
    V(n4, o6, 0, a4, f6.indices, f6.data, f6.stride, c8, e10, s6, r8);
  }
}
var d2 = n();
function x(n4, o6, i6, e10, s6, c8, r8, f6, a3) {
  const { data: u5, stride: l5 } = c8;
  q2(n4, R(S2, o6, n4), i6, e10, s6, u5, l5, r8, f6, a3);
}
function y4(t4, n4, o6, i6, e10, s6, c8, r8) {
  const f6 = t4[0], a3 = t4[1], u5 = t4[2], l5 = n4[0], h6 = n4[1], m7 = n4[2];
  for (let p6 = o6; p6 < i6; ++p6) {
    const t5 = 3 * p6, n5 = t5 + 1, o7 = t5 + 2, i7 = s6 * t5, M2 = e10[i7], b5 = e10[i7 + 1], x3 = e10[i7 + 2], g3 = s6 * n5, y6 = s6 * o7, T3 = e10[g3] - M2, V3 = e10[g3 + 1] - b5, q4 = e10[g3 + 2] - x3, j3 = e10[y6] - M2, I4 = e10[y6 + 1] - b5, v5 = e10[y6 + 2] - x3, A8 = h6 * v5 - I4 * m7, B3 = m7 * j3 - v5 * l5, O5 = l5 * I4 - j3 * h6, k2 = T3 * A8 + V3 * B3 + q4 * O5;
    if (Math.abs(k2) <= P) continue;
    const w3 = f6 - M2, C4 = a3 - b5, G3 = u5 - x3, N4 = w3 * A8 + C4 * B3 + G3 * O5;
    if (k2 > 0) {
      if (N4 < 0 || N4 > k2) continue;
    } else if (N4 > 0 || N4 < k2) continue;
    const S4 = C4 * q4 - V3 * G3, U3 = G3 * T3 - q4 * w3, z3 = w3 * V3 - T3 * C4, D2 = l5 * S4 + h6 * U3 + m7 * z3;
    if (k2 > 0) {
      if (D2 < 0 || N4 + D2 > k2) continue;
    } else if (D2 > 0 || N4 + D2 < k2) continue;
    const E5 = (j3 * S4 + I4 * U3 + v5 * z3) / k2;
    if (E5 >= 0) {
      r8(E5, p6, c8 ? R2(T3, V3, q4, j3, I4, v5, d2) : null);
    }
  }
}
function V(t4, n4, o6, i6, e10, s6, c8, r8, f6, a3, u5) {
  const l5 = t4[0], h6 = t4[1], m7 = t4[2], p6 = n4[0], M2 = n4[1], b5 = n4[2], { normalRequired: x3 } = a3;
  for (let g3 = o6; g3 < i6; ++g3) {
    const t5 = r8[g3], n5 = 3 * t5, o7 = c8 * e10[n5];
    let i7 = s6[o7], a4 = s6[o7 + 1], y6 = s6[o7 + 2];
    const T3 = c8 * e10[n5 + 1];
    let V3 = s6[T3], q4 = s6[T3 + 1], j3 = s6[T3 + 2];
    const I4 = c8 * e10[n5 + 2];
    let v5 = s6[I4], A8 = s6[I4 + 1], B3 = s6[I4 + 2];
    null != f6 && ([i7, a4, y6] = f6.applyToVertex(i7, a4, y6, g3), [V3, q4, j3] = f6.applyToVertex(V3, q4, j3, g3), [v5, A8, B3] = f6.applyToVertex(v5, A8, B3, g3));
    const O5 = V3 - i7, k2 = q4 - a4, w3 = j3 - y6, C4 = v5 - i7, G3 = A8 - a4, N4 = B3 - y6, S4 = M2 * N4 - G3 * b5, U3 = b5 * C4 - N4 * p6, z3 = p6 * G3 - C4 * M2, D2 = O5 * S4 + k2 * U3 + w3 * z3;
    if (Math.abs(D2) <= P) continue;
    const E5 = l5 - i7, F3 = h6 - a4, H2 = m7 - y6, J2 = E5 * S4 + F3 * U3 + H2 * z3;
    if (D2 > 0) {
      if (J2 < 0 || J2 > D2) continue;
    } else if (J2 > 0 || J2 < D2) continue;
    const K = F3 * w3 - k2 * H2, L3 = H2 * O5 - w3 * E5, Q = E5 * k2 - O5 * F3, W2 = p6 * K + M2 * L3 + b5 * Q;
    if (D2 > 0) {
      if (W2 < 0 || J2 + W2 > D2) continue;
    } else if (W2 > 0 || J2 + W2 < D2) continue;
    const X = (C4 * K + G3 * L3 + N4 * Q) / D2;
    if (X >= 0) {
      u5(X, t5, x3 ? R2(O5, k2, w3, C4, G3, N4, d2) : null);
    }
  }
}
function q2(i6, e10, s6, c8, r8, f6, a3, u5, l5, h6) {
  const m7 = e10, p6 = U2, M2 = Math.abs(m7[0]), b5 = Math.abs(m7[1]), d4 = Math.abs(m7[2]), x3 = M2 >= b5 ? M2 >= d4 ? 0 : 2 : b5 >= d4 ? 1 : 2, g3 = x3, y6 = m7[g3] < 0 ? 2 : 1, T3 = (x3 + y6) % 3, V3 = (x3 + (3 - y6)) % 3, q4 = m7[T3] / m7[g3], R5 = m7[V3] / m7[g3], B3 = 1 / m7[g3], O5 = j, k2 = I3, w3 = v2, { normalRequired: C4 } = l5;
  for (let j3 = s6; j3 < c8; ++j3) {
    const e11 = 3 * j3, s7 = a3 * r8[e11];
    o(p6[0], f6[s7 + 0], f6[s7 + 1], f6[s7 + 2]);
    const c9 = a3 * r8[e11 + 1];
    o(p6[1], f6[c9 + 0], f6[c9 + 1], f6[c9 + 2]);
    const l6 = a3 * r8[e11 + 2];
    o(p6[2], f6[l6 + 0], f6[l6 + 1], f6[l6 + 2]), u5 && (s2(p6[0], u5.applyToVertex(p6[0][0], p6[0][1], p6[0][2], j3)), s2(p6[1], u5.applyToVertex(p6[1][0], p6[1][1], p6[1][2], j3)), s2(p6[2], u5.applyToVertex(p6[2][0], p6[2][1], p6[2][2], j3))), R(O5, p6[0], i6), R(k2, p6[1], i6), R(w3, p6[2], i6);
    const m8 = O5[T3] - q4 * O5[g3], M3 = O5[V3] - R5 * O5[g3], b6 = k2[T3] - q4 * k2[g3], d5 = k2[V3] - R5 * k2[g3], x4 = w3[T3] - q4 * w3[g3], y7 = w3[V3] - R5 * w3[g3], I4 = x4 * d5 - y7 * b6, v5 = m8 * y7 - M3 * x4, G3 = b6 * M3 - d5 * m8;
    if ((I4 < 0 || v5 < 0 || G3 < 0) && (I4 > 0 || v5 > 0 || G3 > 0)) continue;
    const N4 = I4 + v5 + G3;
    if (0 === N4) continue;
    const P3 = I4 * (B3 * O5[g3]) + v5 * (B3 * k2[g3]) + G3 * (B3 * w3[g3]);
    if (P3 * Math.sign(N4) < 0) continue;
    const S4 = P3 / N4;
    if (S4 >= 0) {
      h6(S4, j3, C4 ? A4(p6) : null);
    }
  }
}
var j = n();
var I3 = n();
var v2 = n();
function R2(t4, o6, s6, c8, r8, f6, a3) {
  return o(B, t4, o6, s6), o(O2, c8, r8, f6), _(a3, B, O2), A(a3, a3), a3;
}
function A4(n4) {
  return R(B, n4[1], n4[0]), R(O2, n4[2], n4[0]), _(d2, B, O2), A(d2, d2), d2;
}
var B = n();
var O2 = n();
function w(t4, o6) {
  return o(o6, 1 / t4[0], 1 / t4[1], 1 / t4[2]);
}
function C3(t4, n4, o6, i6) {
  return G2(t4, n4, o6, i6, 1 / 0);
}
function G2(t4, n4, o6, i6, e10) {
  const s6 = (t4[0] - i6 - n4[0]) * o6[0], c8 = (t4[3] + i6 - n4[0]) * o6[0];
  let r8 = Math.min(s6, c8), f6 = Math.max(s6, c8);
  const a3 = (t4[1] - i6 - n4[1]) * o6[1], u5 = (t4[4] + i6 - n4[1]) * o6[1];
  if (f6 = Math.min(f6, Math.max(a3, u5)), f6 < 0) return false;
  if (r8 = Math.max(r8, Math.min(a3, u5)), r8 > f6) return false;
  const l5 = (t4[2] - i6 - n4[2]) * o6[2], h6 = (t4[5] + i6 - n4[2]) * o6[2];
  return f6 = Math.min(f6, Math.max(l5, h6)), !(f6 < 0) && (r8 = Math.max(r8, Math.min(l5, h6)), !(r8 > f6) && r8 < e10);
}
var N2 = 1e3;
var P = 1e-7;
var S2 = n();
var U2 = [n(), n(), n()];

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/RenderSlot.js
var A5;
!function(A8) {
  A8[A8.INTEGRATED_MESH = 0] = "INTEGRATED_MESH", A8[A8.OPAQUE_TERRAIN = 1] = "OPAQUE_TERRAIN", A8[A8.OPAQUE_MATERIAL = 2] = "OPAQUE_MATERIAL", A8[A8.OPAQUE_MATERIAL_WITHOUT_NORMALS = 3] = "OPAQUE_MATERIAL_WITHOUT_NORMALS", A8[A8.TRANSPARENT_MATERIAL = 4] = "TRANSPARENT_MATERIAL", A8[A8.TRANSPARENT_MATERIAL_WITHOUT_NORMALS = 5] = "TRANSPARENT_MATERIAL_WITHOUT_NORMALS", A8[A8.TRANSPARENT_TERRAIN = 6] = "TRANSPARENT_TERRAIN", A8[A8.TRANSPARENT_MATERIAL_WITHOUT_DEPTH = 7] = "TRANSPARENT_MATERIAL_WITHOUT_DEPTH", A8[A8.OCCLUDED_GROUND = 8] = "OCCLUDED_GROUND", A8[A8.OCCLUDER_MATERIAL = 9] = "OCCLUDER_MATERIAL", A8[A8.TRANSPARENT_OCCLUDER_MATERIAL = 10] = "TRANSPARENT_OCCLUDER_MATERIAL", A8[A8.OCCLUSION_PIXELS = 11] = "OCCLUSION_PIXELS", A8[A8.HUD_MATERIAL = 12] = "HUD_MATERIAL", A8[A8.LABEL_MATERIAL = 13] = "LABEL_MATERIAL", A8[A8.LINE_CALLOUTS = 14] = "LINE_CALLOUTS", A8[A8.LINE_CALLOUTS_HUD_DEPTH = 15] = "LINE_CALLOUTS_HUD_DEPTH", A8[A8.OVERLAY = 16] = "OVERLAY", A8[A8.DRAPED_MATERIAL = 17] = "DRAPED_MATERIAL", A8[A8.DRAPED_WATER = 18] = "DRAPED_WATER", A8[A8.VOXEL = 19] = "VOXEL", A8[A8.MAX_SLOTS = 20] = "MAX_SLOTS";
}(A5 || (A5 = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/verticalOffsetUtils.js
var b3 = class {
  constructor() {
    this._transform = e2(), this._transformInverse = new v3({ value: this._transform }, h, e2), this._transformInverseTranspose = new v3(this._transformInverse, s, e2), this._transformTranspose = new v3({ value: this._transform }, s, e2), this._transformInverseRotation = new v3({ value: this._transform }, y2, e3);
  }
  _invalidateLazyTransforms() {
    this._transformInverse.invalidate(), this._transformInverseTranspose.invalidate(), this._transformTranspose.invalidate(), this._transformInverseRotation.invalidate();
  }
  get transform() {
    return this._transform;
  }
  get inverse() {
    return this._transformInverse.value;
  }
  get inverseTranspose() {
    return this._transformInverseTranspose.value;
  }
  get inverseRotation() {
    return this._transformInverseRotation.value;
  }
  get transpose() {
    return this._transformTranspose.value;
  }
  setTransformMatrix(t4) {
    n2(this._transform, t4);
  }
  multiplyTransform(t4) {
    c2(this._transform, this._transform, t4);
  }
  set(t4) {
    n2(this._transform, t4), this._invalidateLazyTransforms();
  }
  setAndInvalidateLazyTransforms(t4, s6) {
    this.setTransformMatrix(t4), this.multiplyTransform(s6), this._invalidateLazyTransforms();
  }
};
var v3 = class {
  constructor(t4, s6, r8) {
    this._original = t4, this._update = s6, this._dirty = true, this._transform = r8();
  }
  invalidate() {
    this._dirty = true;
  }
  get value() {
    return this._dirty && (this._update(this._transform, this._original.value), this._dirty = false), this._transform;
  }
};
var T2 = class {
  constructor(t4 = 0) {
    this.offset = t4, this.tmpVertex = n();
  }
  applyToVertex(t4, s6, r8) {
    const e10 = o(q3, t4, s6, r8), i6 = u2(z, e10, this.localOrigin), a3 = this.offset / r3(i6);
    return q(this.tmpVertex, e10, i6, a3), this.tmpVertex;
  }
  applyToAabb(t4) {
    const s6 = A6, r8 = R3, e10 = B2;
    for (let n4 = 0; n4 < 3; ++n4) s6[n4] = t4[0 + n4] + this.localOrigin[n4], r8[n4] = t4[3 + n4] + this.localOrigin[n4], e10[n4] = s6[n4];
    const i6 = this.applyToVertex(s6[0], s6[1], s6[2]);
    for (let n4 = 0; n4 < 3; ++n4) t4[n4] = i6[n4], t4[n4 + 3] = i6[n4];
    const a3 = (s7) => {
      const r9 = this.applyToVertex(s7[0], s7[1], s7[2]);
      for (let e11 = 0; e11 < 3; ++e11) t4[e11] = Math.min(t4[e11], r9[e11]), t4[e11 + 3] = Math.max(t4[e11 + 3], r9[e11]);
    };
    for (let n4 = 1; n4 < 8; ++n4) {
      for (let t5 = 0; t5 < 3; ++t5) e10[t5] = n4 & 1 << t5 ? r8[t5] : s6[t5];
      a3(e10);
    }
    let o6 = 0;
    for (let n4 = 0; n4 < 3; ++n4) {
      s6[n4] * r8[n4] < 0 && (o6 |= 1 << n4);
    }
    if (0 !== o6 && 7 !== o6) {
      for (let n4 = 0; n4 < 8; ++n4) if (0 === (o6 & n4)) {
        for (let t5 = 0; t5 < 3; ++t5) e10[t5] = o6 & 1 << t5 ? 0 : n4 & 1 << t5 ? s6[t5] : r8[t5];
        a3(e10);
      }
    }
    for (let n4 = 0; n4 < 3; ++n4) t4[n4] -= this.localOrigin[n4], t4[n4 + 3] -= this.localOrigin[n4];
    return t4;
  }
};
var x2 = class {
  constructor(t4 = 0) {
    this.componentLocalOriginLength = 0, this._totalOffset = 0, this._offset = 0, this._tmpVertex = n(), this._tmpMbs = E2(), this._tmpObb = new I2(), this._resetOffset(t4);
  }
  _resetOffset(t4) {
    this._offset = t4, this._totalOffset = t4;
  }
  set offset(t4) {
    this._resetOffset(t4);
  }
  get offset() {
    return this._offset;
  }
  set componentOffset(t4) {
    this._totalOffset = this._offset + t4;
  }
  set localOrigin(t4) {
    this.componentLocalOriginLength = r3(t4);
  }
  applyToVertex(t4, s6, r8) {
    const e10 = o(q3, t4, s6, r8), i6 = o(z, t4, s6, r8 + this.componentLocalOriginLength), a3 = this._totalOffset / r3(i6);
    return q(this._tmpVertex, e10, i6, a3), this._tmpVertex;
  }
  applyToAabb(t4) {
    const s6 = this.componentLocalOriginLength, r8 = t4[0], e10 = t4[1], i6 = t4[2] + s6, a3 = t4[3], o6 = t4[4], n4 = t4[5] + s6, h6 = Math.abs(r8), f6 = Math.abs(e10), l5 = Math.abs(i6), m7 = Math.abs(a3), p6 = Math.abs(o6), c8 = Math.abs(n4), _2 = 0.5 * (1 + Math.sign(r8 * a3)) * Math.min(h6, m7), u5 = 0.5 * (1 + Math.sign(e10 * o6)) * Math.min(f6, p6), g3 = 0.5 * (1 + Math.sign(i6 * n4)) * Math.min(l5, c8), M2 = Math.max(h6, m7), b5 = Math.max(f6, p6), v5 = Math.max(l5, c8), T3 = Math.sqrt(_2 * _2 + u5 * u5 + g3 * g3), x3 = Math.sign(h6 + r8), O5 = Math.sign(f6 + e10), y6 = Math.sign(l5 + i6), d4 = Math.sign(m7 + a3), V3 = Math.sign(p6 + o6), L3 = Math.sign(c8 + n4), j3 = this._totalOffset;
    if (T3 < j3) return t4[0] -= (1 - x3) * j3, t4[1] -= (1 - O5) * j3, t4[2] -= (1 - y6) * j3, t4[3] += d4 * j3, t4[4] += V3 * j3, t4[5] += L3 * j3, t4;
    const I4 = j3 / Math.sqrt(M2 * M2 + b5 * b5 + v5 * v5), w3 = j3 / T3, q4 = w3 - I4, z3 = -q4;
    return t4[0] += r8 * (x3 * z3 + w3), t4[1] += e10 * (O5 * z3 + w3), t4[2] += i6 * (y6 * z3 + w3), t4[3] += a3 * (d4 * q4 + I4), t4[4] += o6 * (V3 * q4 + I4), t4[5] += n4 * (L3 * q4 + I4), t4;
  }
  applyToMbs(t4) {
    const s6 = r3(U(t4)), r8 = this._totalOffset / s6;
    return q(U(this._tmpMbs), U(t4), U(t4), r8), this._tmpMbs[3] = t4[3] + t4[3] * this._totalOffset / s6, this._tmpMbs;
  }
  applyToObb(t4) {
    return L(t4, this._totalOffset, this._totalOffset, l2.Global, this._tmpObb), this._tmpObb;
  }
};
var O3 = class {
  constructor(t4 = 0) {
    this.offset = t4, this.sphere = E2(), this.tmpVertex = n();
  }
  applyToVertex(t4, s6, r8) {
    const e10 = this.objectTransform.transform, i6 = o(q3, t4, s6, r8), a3 = E(i6, i6, e10), o6 = this.offset / r3(a3);
    q(a3, a3, a3, o6);
    const m7 = this.objectTransform.inverse;
    return E(this.tmpVertex, a3, m7), this.tmpVertex;
  }
  applyToMinMax(t4, s6) {
    const r8 = this.offset / r3(t4);
    q(t4, t4, t4, r8);
    const e10 = this.offset / r3(s6);
    q(s6, s6, s6, e10);
  }
  applyToAabb(t4) {
    const s6 = this.offset / Math.sqrt(t4[0] * t4[0] + t4[1] * t4[1] + t4[2] * t4[2]);
    t4[0] += t4[0] * s6, t4[1] += t4[1] * s6, t4[2] += t4[2] * s6;
    const r8 = this.offset / Math.sqrt(t4[3] * t4[3] + t4[4] * t4[4] + t4[5] * t4[5]);
    return t4[3] += t4[3] * r8, t4[4] += t4[4] * r8, t4[5] += t4[5] * r8, t4;
  }
  applyToBoundingSphere(t4) {
    const s6 = r3(U(t4)), r8 = this.offset / s6;
    return q(U(this.sphere), U(t4), U(t4), r8), this.sphere[3] = t4[3] + t4[3] * this.offset / s6, this.sphere;
  }
};
var y5 = new O3();
function d3(t4) {
  return null != t4 ? (y5.offset = t4, y5) : null;
}
var V2 = new x2();
var j2 = new T2();
var q3 = n();
var z = n();
var A6 = n();
var R3 = n();
var B2 = n();

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/internal/bufferWriterUtils.js
function b4(e10, t4, f6, r8 = 1) {
  const { data: o6, indices: i6 } = e10, s6 = t4.typedBuffer, n4 = t4.typedBufferStride, c8 = i6.length;
  if (f6 *= n4, 1 === r8) for (let l5 = 0; l5 < c8; ++l5) s6[f6] = o6[i6[l5]], f6 += n4;
  else for (let l5 = 0; l5 < c8; ++l5) {
    const e11 = o6[i6[l5]];
    for (let t5 = 0; t5 < r8; t5++) s6[f6] = e11, f6 += n4;
  }
}
function m5(e10, t4, f6) {
  const { data: r8, indices: o6 } = e10, i6 = t4.typedBuffer, s6 = t4.typedBufferStride, n4 = o6.length;
  f6 *= s6;
  for (let c8 = 0; c8 < n4; ++c8) {
    const e11 = 2 * o6[c8];
    i6[f6] = r8[e11], i6[f6 + 1] = r8[e11 + 1], f6 += s6;
  }
}
function O4(e10, t4, f6, r8 = 1) {
  const { data: o6, indices: i6 } = e10, s6 = t4.typedBuffer, n4 = t4.typedBufferStride, c8 = i6.length;
  if (f6 *= n4, 1 === r8) for (let l5 = 0; l5 < c8; ++l5) {
    const e11 = 3 * i6[l5];
    s6[f6] = o6[e11], s6[f6 + 1] = o6[e11 + 1], s6[f6 + 2] = o6[e11 + 2], f6 += n4;
  }
  else for (let l5 = 0; l5 < c8; ++l5) {
    const e11 = 3 * i6[l5];
    for (let t5 = 0; t5 < r8; ++t5) s6[f6] = o6[e11], s6[f6 + 1] = o6[e11 + 1], s6[f6 + 2] = o6[e11 + 2], f6 += n4;
  }
}
function h5(e10, t4, f6, r8 = 1) {
  const { data: o6, indices: i6 } = e10, s6 = t4.typedBuffer, n4 = t4.typedBufferStride, c8 = i6.length;
  if (f6 *= n4, 1 === r8) for (let l5 = 0; l5 < c8; ++l5) {
    const e11 = 4 * i6[l5];
    s6[f6] = o6[e11], s6[f6 + 1] = o6[e11 + 1], s6[f6 + 2] = o6[e11 + 2], s6[f6 + 3] = o6[e11 + 3], f6 += n4;
  }
  else for (let l5 = 0; l5 < c8; ++l5) {
    const e11 = 4 * i6[l5];
    for (let t5 = 0; t5 < r8; ++t5) s6[f6] = o6[e11], s6[f6 + 1] = o6[e11 + 1], s6[f6 + 2] = o6[e11 + 2], s6[f6 + 3] = o6[e11 + 3], f6 += n4;
  }
}
function F2(e10, t4, f6) {
  const r8 = e10.typedBuffer, o6 = e10.typedBufferStride;
  t4 *= o6;
  for (let i6 = 0; i6 < f6; ++i6) r8[t4] = 0, r8[t4 + 1] = 0, r8[t4 + 2] = 0, r8[t4 + 3] = 0, t4 += o6;
}
function R4(e10, t4, f6, r8, i6 = 1) {
  if (!t4) return void O4(e10, f6, r8, i6);
  const { data: s6, indices: n4 } = e10, c8 = f6.typedBuffer, l5 = f6.typedBufferStride, d4 = n4.length, u5 = t4[0], a3 = t4[1], p6 = t4[2], g3 = t4[4], B3 = t4[5], y6 = t4[6], b5 = t4[8], m7 = t4[9], h6 = t4[10], F3 = t4[12], I4 = t4[13], T3 = t4[14];
  r8 *= l5;
  let R5 = 0, S4 = 0, E5 = 0;
  const N4 = H(t4) ? (e11) => {
    R5 = s6[e11] + F3, S4 = s6[e11 + 1] + I4, E5 = s6[e11 + 2] + T3;
  } : (e11) => {
    const t5 = s6[e11], f7 = s6[e11 + 1], r9 = s6[e11 + 2];
    R5 = u5 * t5 + g3 * f7 + b5 * r9 + F3, S4 = a3 * t5 + B3 * f7 + m7 * r9 + I4, E5 = p6 * t5 + y6 * f7 + h6 * r9 + T3;
  };
  if (1 === i6) for (let o6 = 0; o6 < d4; ++o6) N4(3 * n4[o6]), c8[r8] = R5, c8[r8 + 1] = S4, c8[r8 + 2] = E5, r8 += l5;
  else for (let o6 = 0; o6 < d4; ++o6) {
    N4(3 * n4[o6]);
    for (let e11 = 0; e11 < i6; ++e11) c8[r8] = R5, c8[r8 + 1] = S4, c8[r8 + 2] = E5, r8 += l5;
  }
}
function S3(e10, t4, f6, r8, s6 = 1) {
  if (!t4) return void O4(e10, f6, r8, s6);
  const { data: n4, indices: c8 } = e10, l5 = t4, d4 = f6.typedBuffer, u5 = f6.typedBufferStride, a3 = c8.length, p6 = l5[0], g3 = l5[1], B3 = l5[2], y6 = l5[4], b5 = l5[5], m7 = l5[6], h6 = l5[8], F3 = l5[9], I4 = l5[10], T3 = !G(l5), R5 = 1e-6, S4 = 1 - R5;
  r8 *= u5;
  let E5 = 0, N4 = 0, A8 = 0;
  const v5 = H(l5) ? (e11) => {
    E5 = n4[e11], N4 = n4[e11 + 1], A8 = n4[e11 + 2];
  } : (e11) => {
    const t5 = n4[e11], f7 = n4[e11 + 1], r9 = n4[e11 + 2];
    E5 = p6 * t5 + y6 * f7 + h6 * r9, N4 = g3 * t5 + b5 * f7 + F3 * r9, A8 = B3 * t5 + m7 * f7 + I4 * r9;
  };
  if (1 === s6) if (T3) for (let o6 = 0; o6 < a3; ++o6) {
    v5(3 * c8[o6]);
    const e11 = E5 * E5 + N4 * N4 + A8 * A8;
    if (e11 < S4 && e11 > R5) {
      const t5 = 1 / Math.sqrt(e11);
      d4[r8] = E5 * t5, d4[r8 + 1] = N4 * t5, d4[r8 + 2] = A8 * t5;
    } else d4[r8] = E5, d4[r8 + 1] = N4, d4[r8 + 2] = A8;
    r8 += u5;
  }
  else for (let o6 = 0; o6 < a3; ++o6) v5(3 * c8[o6]), d4[r8] = E5, d4[r8 + 1] = N4, d4[r8 + 2] = A8, r8 += u5;
  else for (let o6 = 0; o6 < a3; ++o6) {
    if (v5(3 * c8[o6]), T3) {
      const e11 = E5 * E5 + N4 * N4 + A8 * A8;
      if (e11 < S4 && e11 > R5) {
        const t5 = 1 / Math.sqrt(e11);
        E5 *= t5, N4 *= t5, A8 *= t5;
      }
    }
    for (let e11 = 0; e11 < s6; ++e11) d4[r8] = E5, d4[r8 + 1] = N4, d4[r8 + 2] = A8, r8 += u5;
  }
}
function E4(e10, t4, f6, r8, o6 = 1) {
  if (!t4) return void h5(e10, f6, r8, o6);
  const { data: s6, indices: n4 } = e10, c8 = t4, l5 = f6.typedBuffer, d4 = f6.typedBufferStride, u5 = n4.length, a3 = c8[0], p6 = c8[1], g3 = c8[2], B3 = c8[4], y6 = c8[5], b5 = c8[6], m7 = c8[8], O5 = c8[9], F3 = c8[10], I4 = !G(c8), T3 = 1e-6, R5 = 1 - T3;
  if (r8 *= d4, 1 === o6) for (let i6 = 0; i6 < u5; ++i6) {
    const e11 = 4 * n4[i6], t5 = s6[e11], f7 = s6[e11 + 1], o7 = s6[e11 + 2], c9 = s6[e11 + 3];
    let u6 = a3 * t5 + B3 * f7 + m7 * o7, h6 = p6 * t5 + y6 * f7 + O5 * o7, S4 = g3 * t5 + b5 * f7 + F3 * o7;
    if (I4) {
      const e12 = u6 * u6 + h6 * h6 + S4 * S4;
      if (e12 < R5 && e12 > T3) {
        const t6 = 1 / Math.sqrt(e12);
        u6 *= t6, h6 *= t6, S4 *= t6;
      }
    }
    l5[r8] = u6, l5[r8 + 1] = h6, l5[r8 + 2] = S4, l5[r8 + 3] = c9, r8 += d4;
  }
  else for (let i6 = 0; i6 < u5; ++i6) {
    const e11 = 4 * n4[i6], t5 = s6[e11], f7 = s6[e11 + 1], c9 = s6[e11 + 2], u6 = s6[e11 + 3];
    let h6 = a3 * t5 + B3 * f7 + m7 * c9, S4 = p6 * t5 + y6 * f7 + O5 * c9, E5 = g3 * t5 + b5 * f7 + F3 * c9;
    if (I4) {
      const e12 = h6 * h6 + S4 * S4 + E5 * E5;
      if (e12 < R5 && e12 > T3) {
        const t6 = 1 / Math.sqrt(e12);
        h6 *= t6, S4 *= t6, E5 *= t6;
      }
    }
    for (let i7 = 0; i7 < o6; ++i7) l5[r8] = h6, l5[r8 + 1] = S4, l5[r8 + 2] = E5, l5[r8 + 3] = u6, r8 += d4;
  }
}
function N3(e10, t4, f6, r8, o6 = 1) {
  const { data: i6, indices: s6 } = e10, n4 = f6.typedBuffer, c8 = f6.typedBufferStride, l5 = s6.length;
  if (r8 *= c8, t4 !== i6.length || 4 !== t4) if (1 !== o6) if (4 !== t4) for (let d4 = 0; d4 < l5; ++d4) {
    const e11 = 3 * s6[d4];
    for (let t5 = 0; t5 < o6; ++t5) n4[r8] = i6[e11], n4[r8 + 1] = i6[e11 + 1], n4[r8 + 2] = i6[e11 + 2], n4[r8 + 3] = 255, r8 += c8;
  }
  else for (let d4 = 0; d4 < l5; ++d4) {
    const e11 = 4 * s6[d4];
    for (let t5 = 0; t5 < o6; ++t5) n4[r8] = i6[e11], n4[r8 + 1] = i6[e11 + 1], n4[r8 + 2] = i6[e11 + 2], n4[r8 + 3] = i6[e11 + 3], r8 += c8;
  }
  else {
    if (4 === t4) {
      for (let e11 = 0; e11 < l5; ++e11) {
        const t5 = 4 * s6[e11];
        n4[r8] = i6[t5], n4[r8 + 1] = i6[t5 + 1], n4[r8 + 2] = i6[t5 + 2], n4[r8 + 3] = i6[t5 + 3], r8 += c8;
      }
      return;
    }
    for (let e11 = 0; e11 < l5; ++e11) {
      const t5 = 3 * s6[e11];
      n4[r8] = i6[t5], n4[r8 + 1] = i6[t5 + 1], n4[r8 + 2] = i6[t5 + 2], n4[r8 + 3] = 255, r8 += c8;
    }
  }
  else {
    n4[r8] = i6[0], n4[r8 + 1] = i6[1], n4[r8 + 2] = i6[2], n4[r8 + 3] = i6[3];
    const e11 = new Uint32Array(f6.typedBuffer.buffer, f6.start), t5 = c8 / 4, s7 = e11[r8 /= 4];
    r8 += t5;
    const d4 = l5 * o6;
    for (let f7 = 1; f7 < d4; ++f7) e11[r8] = s7, r8 += t5;
  }
}
function A7(e10, t4, f6) {
  const { data: r8, indices: o6 } = e10, i6 = t4.typedBuffer, s6 = t4.typedBufferStride, n4 = o6.length, c8 = r8[0];
  f6 *= s6;
  for (let l5 = 0; l5 < n4; ++l5) i6[f6] = c8, f6 += s6;
}
function v4(r8, o6, i6, s6) {
  c3(w2, r8, o6);
  const n4 = Math.max(Math.sqrt(r3(w2)), 1e-4);
  g(w2, w2, 1 / n4), i6[s6++] = w2[0], i6[s6++] = w2[1], i6[s6++] = w2[2], i6[s6++] = n4;
}
var w2 = n();
function L2(e10, t4, f6, r8, o6 = 1) {
  const i6 = t4.typedBuffer, s6 = t4.typedBufferStride;
  if (r8 *= s6, 1 === o6) for (let n4 = 0; n4 < f6; ++n4) i6[r8] = e10[0], i6[r8 + 1] = e10[1], i6[r8 + 2] = e10[2], i6[r8 + 3] = e10[3], r8 += s6;
  else for (let n4 = 0; n4 < f6; ++n4) for (let t5 = 0; t5 < o6; ++t5) i6[r8] = e10[0], i6[r8 + 1] = e10[1], i6[r8 + 2] = e10[2], i6[r8 + 3] = e10[3], r8 += s6;
}
function k(e10, t4, f6, r8, o6, i6, n4) {
  let c8 = { numItems: 0, numVerticesPerItem: 0 };
  for (const l5 of f6.fields.keys()) {
    const f7 = e10.get(l5), d4 = f7?.indices;
    if (f7 && d4) l5 === e6.POSITION && (c8 = { numItems: 1, numVerticesPerItem: d4.length }), z2(l5, f7, r8, o6, i6, n4);
    else if (l5 === e6.OLIDCOLOR && null != t4) {
      const f8 = e10.get(e6.POSITION)?.indices;
      if (f8) {
        const e11 = f8.length;
        L2(t4, i6.getField(l5, g2), e11, n4);
      }
    }
  }
  return c8;
}
function z2(e10, t4, f6, r8, o6, i6) {
  switch (e10) {
    case e6.POSITION: {
      s3(3 === t4.size);
      const r9 = o6.getField(e10, o2);
      s3(!!r9, `No buffer view for ${e10}`), R4(t4, f6, r9, i6);
      break;
    }
    case e6.NORMAL: {
      s3(3 === t4.size);
      const f7 = o6.getField(e10, o2);
      s3(!!f7, `No buffer view for ${e10}`), S3(t4, r8, f7, i6);
      break;
    }
    case e6.NORMALCOMPRESSED:
    case e6.PROFILERIGHT:
    case e6.PROFILEUP: {
      s3(2 === t4.size);
      const f7 = o6.getField(e10, J);
      s3(!!f7, `No buffer view for ${e10}`), m5(t4, f7, i6);
      break;
    }
    case e6.UV0: {
      s3(2 === t4.size);
      const f7 = o6.getField(e10, p) ?? o6.getField(e10, y3);
      s3(!!f7, `No buffer view for ${e10}`), m5(t4, f7, i6);
      break;
    }
    case e6.UVI: {
      s3(2 === t4.size);
      const f7 = o6.getField(e10, J);
      s3(!!f7, `No buffer view for ${e10}`), m5(t4, f7, i6);
      break;
    }
    case e6.COLOR:
    case e6.SYMBOLCOLOR: {
      const f7 = o6.getField(e10, g2);
      s3(!!f7, `No buffer view for ${e10}`), s3(3 === t4.size || 4 === t4.size), N3(t4, t4.size, f7, i6);
      break;
    }
    case e6.COLORFEATUREATTRIBUTE:
    case e6.OPACITYFEATUREATTRIBUTE:
    case e6.SIZEFEATUREATTRIBUTE: {
      const f7 = o6.getField(e10, f) ?? o6.getField(e10, f);
      s3(!!f7, `No buffer view for ${e10}`), s3(1 === t4.size), A7(t4, f7, i6);
      break;
    }
    case e6.TANGENT: {
      s3(4 === t4.size);
      const r9 = o6.getField(e10, T);
      s3(!!r9, `No buffer view for ${e10}`), E4(t4, f6, r9, i6);
      break;
    }
    case e6.PROFILEVERTEXANDNORMAL: {
      s3(4 === t4.size);
      const f7 = o6.getField(e10, m) ?? o6.getField(e10, T);
      s3(!!f7, `No buffer view for ${e10}`), h5(t4, f7, i6);
      break;
    }
    case e6.PROFILEAUXDATA: {
      s3(3 === t4.size);
      const f7 = o6.getField(e10, h2) ?? o6.getField(e10, o2);
      s3(!!f7, `No buffer view for ${e10}`), O4(t4, f7, i6);
      break;
    }
  }
}

// node_modules/@arcgis/core/views/3d/webgl-engine/materials/DefaultBufferWriter.js
var f4 = class {
  constructor(e10) {
    this.vertexBufferLayout = e10;
  }
  elementCount(e10) {
    return e10.get(e6.POSITION).indices.length;
  }
  write(e10, t4, r8, o6, i6, f6) {
    return k(r8, o6, this.vertexBufferLayout, e10, t4, i6, f6);
  }
  intersect(t4, s6, f6, n4, c8, m7, l5) {
    const a3 = this.vertexBufferLayout.createView(t4).getField(e6.POSITION, o2);
    if (null == a3) return;
    const p6 = R(u4, m7, c8), y6 = 0, b5 = a3.count / 3, d4 = n4.options.normalRequired, j3 = (e10, t5, r8) => {
      l5(e10, r8, t5);
    };
    y4(c8, p6, y6, b5, a3.typedBuffer, a3.typedBufferStride, d4, j3);
  }
};
var u4 = n();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/StencilUtils.js
var i5 = { func: C.LESS };
var s5 = { func: C.ALWAYS };
var e9 = { mask: 255 };
var l4 = { mask: 0 };
var f5 = { function: { func: C.ALWAYS, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: D.KEEP, zFail: D.KEEP, zPass: D.ZERO } };
var o5 = { function: { func: C.ALWAYS, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: D.KEEP, zFail: D.KEEP, zPass: D.REPLACE } };
var P2 = { function: { func: C.EQUAL, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: D.KEEP, zFail: D.KEEP, zPass: D.KEEP } };
var m6 = { function: { func: C.NOTEQUAL, ref: s4.OutlineVisualElementMask, mask: s4.OutlineVisualElementMask }, operation: { fail: D.KEEP, zFail: D.KEEP, zPass: D.KEEP } };

export {
  e7 as e,
  o4 as o,
  n3 as n,
  e8 as e2,
  r7 as r,
  p3 as p,
  i4 as i,
  p4 as p2,
  N,
  O,
  h3 as h,
  m3 as m,
  E3 as E,
  F,
  h4 as h2,
  p5 as p3,
  x,
  C3 as C,
  A5 as A,
  b3 as b,
  d3 as d,
  b4 as b2,
  h5 as h3,
  F2,
  R4 as R,
  S3 as S,
  N3 as N2,
  v4 as v,
  L2 as L,
  k,
  z2 as z,
  f4 as f,
  i5 as i2,
  s5 as s,
  e9 as e3,
  l4 as l,
  f5 as f2,
  o5 as o2,
  P2 as P,
  m6 as m2
};
//# sourceMappingURL=chunk-CWLDBABC.js.map
