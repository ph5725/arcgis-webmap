import {
  e as e2,
  n as n2
} from "./chunk-RVXIJHL6.js";
import {
  E,
  j as j2,
  m,
  x
} from "./chunk-2JAL6FAS.js";
import {
  n
} from "./chunk-VNTS5E5O.js";
import {
  H,
  p
} from "./chunk-TMFB3DKM.js";
import {
  d,
  e,
  j,
  l,
  p as p2,
  q,
  u
} from "./chunk-TNW4TPNP.js";
import {
  r
} from "./chunk-RACDQ3AL.js";

// node_modules/@arcgis/core/views/interactive/sketch/normalizedPoint.js
var l2;
function f(n4, t2, e3) {
  return c(n4, t2, e3);
}
function c(t2 = 0, e3 = 0, o = 0) {
  return r(t2, e3, o);
}
function a(n4) {
  return n4;
}
function s(n4) {
  return n4;
}
function d2(t2, e3, o) {
  return a(r(t2, e3, o));
}
function v(n4) {
  const [t2, e3, o] = n4;
  return n4.length > 3 ? [t2, e3, o, n4[3]] : [t2, e3, o];
}
function p3(n4) {
  return n4[3] = ((n4.length > 3 ? n4[3] : void 0) ?? l2.NONE) | l2.TARGET, n4;
}
function m2(n4) {
  return Boolean(((n4.length > 3 ? n4[3] : void 0) ?? l2.NONE) & l2.TARGET);
}
function N(n4, t2, { coordinateHelper: e3, elevationInfo: o }, r3) {
  return n4 ? E2(e3.vectorToDehydratedPoint(n4, g), t2, o, r3) : null;
}
function E2(n4, t2, e3, r3 = c()) {
  return r3[0] = n4.x, r3[1] = n4.y, r3[2] = n4.z ?? 0, null == t2 || ("2d" === t2.type ? r3[2] = 0 : r3[2] = m(t2, n4, e3, j2) ?? 0), r3;
}
function T(n4, o, r3) {
  return r3 ? (n2(r3, n4[0], n4[1], n4[2], o), r3) : e2(n4[0], n4[1], n4[2], o);
}
function h(n4, o, { z: u2, m: l3 }, f2, c2) {
  const { spatialReference: a2, elevationInfo: s3 } = f2;
  let d4;
  if (null == u2 && null == l3) d4 = void 0;
  else if (null == o || "2d" === o.type) d4 = u2 ?? void 0;
  else {
    d4 = x(o, n4, a2, j2, s3) ?? 0;
  }
  const [v3, p4] = n4;
  return c2 ? n2(c2, v3, p4, d4, a2) : c2 = e2(v3, p4, d4, a2), null != l3 && (c2.m = l3, c2.hasM = true), c2;
}
function y(n4, t2, e3, o, r3 = c()) {
  const [f2, a2] = n4;
  return r3[0] = f2, r3[1] = a2, n4.length > 3 && (r3[3] = n4[3] ?? l2.NONE), "3d" !== e3?.type ? (r3[2] = t2.value, r3) : (r3[2] = E(e3, f2, a2, t2.value, o, t2.elevationInfo, j2) ?? 0, r3);
}
!function(n4) {
  n4[n4.NONE = 0] = "NONE", n4[n4.TARGET = 1] = "TARGET";
}(l2 || (l2 = {}));
var g = e2(0, 0, 0, null);

// node_modules/@arcgis/core/views/interactive/snapping/SnappingDomain.js
var E3;
!function(E5) {
  E5[E5.FEATURE = 1] = "FEATURE", E5[E5.SELF = 2] = "SELF", E5[E5.ALL = 3] = "ALL";
}(E3 || (E3 = {}));

// node_modules/@arcgis/core/views/interactive/snapping/hints/SnappingHint.js
var s2 = class {
  constructor(s3, t2) {
    this.isDraped = s3, this.domain = t2;
  }
};

// node_modules/@arcgis/core/views/interactive/snapping/hints/LineSnappingHint.js
var n3 = class _n extends s2 {
  constructor(t2, e3, s3, n4, r3 = E3.ALL, a2 = true, h2 = true) {
    super(n4, r3), this.type = t2, this.lineStart = e3, this.lineEnd = s3, this.fadeLeft = a2, this.fadeRight = h2;
  }
  equals(e3) {
    return e3 instanceof _n && (this.type === e3.type && H(this.lineStart, e3.lineStart) && H(this.lineEnd, e3.lineEnd) && this.fadeLeft === e3.fadeLeft && this.fadeRight === e3.fadeRight);
  }
  get length() {
    return p(this.lineStart, this.lineEnd);
  }
};

// node_modules/@arcgis/core/views/support/geometry2dUtils.js
function m5(t2, n4) {
  return t2[0] * n4[1] - t2[1] * n4[0];
}
function E4(t2, n4, r3) {
  const e3 = j(r3, n4) / p2(r3);
  return l(t2, r3, e3);
}
function I(t2, r3, s3, o, c2 = s3) {
  return e(x2, o, s3), e(g2, r3, c2), E4(A, g2, x2), u(t2, c2, A);
}
function N2(t2, e3, o, c2) {
  e(x2, e3, o);
  const u2 = c2 / q(x2);
  return d(t2, o, x2, u2);
}
function b(t2, e3) {
  const s3 = t2.start, o = t2.end, c2 = e3.start, u2 = e3.end, i = e(x2, o, s3), f2 = e(M, u2, c2), a2 = m5(i, f2);
  if (Math.abs(a2) <= v2) return [];
  const p4 = e(g2, s3, c2), h2 = m5(f2, p4) / a2, E5 = m5(i, p4) / a2;
  if (h2 >= 0) {
    if (E5 >= 0 || e3.type === j3.LINE) return [d(A, s3, i, h2)];
  } else if (t2.type === j3.LINE && (E5 >= 0 || e3.type === j3.LINE)) return [d(A, s3, i, h2)];
  return [];
}
function d3(t2, e3, s3) {
  const u2 = [], i = e(x2, t2.end, t2.start), f2 = e(M, t2.start, e3), a2 = p2(i), p4 = 2 * j(i, f2), m6 = p4 * p4 - 4 * a2 * (p2(f2) - s3 * s3);
  if (0 === m6) {
    const n4 = -p4 / (2 * a2);
    (t2.type === j3.LINE || n4 >= 0) && u2.push(d(A, t2.start, i, n4));
  } else if (m6 > 0) {
    const n4 = Math.sqrt(m6), e4 = (-p4 + n4) / (2 * a2);
    (t2.type === j3.LINE || e4 >= 0) && u2.push(d(A, t2.start, i, e4));
    const s4 = (-p4 - n4) / (2 * a2);
    (t2.type === j3.LINE || s4 >= 0) && u2.push(d(g2, t2.start, i, s4));
  }
  return u2;
}
var j3;
!function(t2) {
  t2[t2.RAY = 0] = "RAY", t2[t2.LINE = 1] = "LINE";
}(j3 || (j3 = {}));
var v2 = 1e-6;
var x2 = n();
var M = n();
var g2 = n();
var A = n();

export {
  f,
  c,
  a,
  s,
  d2 as d,
  v,
  p3 as p,
  m2 as m,
  N,
  E2 as E,
  T,
  h,
  y,
  E3 as E2,
  s2,
  n3 as n,
  I,
  N2,
  b,
  d3 as d2,
  j3 as j
};
//# sourceMappingURL=chunk-ENM5QFON.js.map
