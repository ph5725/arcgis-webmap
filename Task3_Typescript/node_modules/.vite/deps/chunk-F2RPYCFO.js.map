{
  "version": 3,
  "sources": ["../../@arcgis/core/rest/query/executeForCount.js", "../../@arcgis/core/rest/query/executeForIds.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{parseUrl as o}from\"../utils.js\";import{executeQueryForCount as r}from\"./operations/query.js\";import t from\"../support/Query.js\";async function s(s,i,m,n){const p=o(s),{data:u}=await r(p,t.from(i),m,n);return u.count}export{s as executeForCount};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{parseUrl as r}from\"../utils.js\";import{executeQueryForIds as t}from\"./operations/query.js\";import o from\"../support/Query.js\";async function i(i,n,u,a){const e=r(i),{data:f}=await t(e,o.from(n),u,a);return f.objectIds??s(f.uniqueIds)??[]}function n(r){return!Array.isArray(r[0])}function s(r){if(r)return n(r)?r:r.map((r=>JSON.stringify(r)))}export{i as executeForIds};\r\n"],
  "mappings": ";;;;;;;;;;;;AAIuI,eAAe,EAAEA,IAAEC,IAAE,GAAEC,IAAE;AAAC,QAAMC,KAAE,EAAEH,EAAC,GAAE,EAAC,MAAK,EAAC,IAAE,MAAM,EAAEG,IAAE,EAAE,KAAKF,EAAC,GAAE,GAAEC,EAAC;AAAE,SAAO,EAAE;AAAK;;;ACAzF,eAAe,EAAEE,IAAEC,IAAE,GAAE,GAAE;AAAC,QAAM,IAAE,EAAED,EAAC,GAAE,EAAC,MAAKE,GAAC,IAAE,MAAM,EAAE,GAAE,EAAE,KAAKD,EAAC,GAAE,GAAE,CAAC;AAAE,SAAOC,GAAE,aAAWC,GAAED,GAAE,SAAS,KAAG,CAAC;AAAC;AAAC,SAAS,EAAE,GAAE;AAAC,SAAM,CAAC,MAAM,QAAQ,EAAE,CAAC,CAAC;AAAC;AAAC,SAASC,GAAE,GAAE;AAAC,MAAG,EAAE,QAAO,EAAE,CAAC,IAAE,IAAE,EAAE,IAAK,CAAAC,OAAG,KAAK,UAAUA,EAAC,CAAE;AAAC;",
  "names": ["s", "i", "n", "p", "i", "n", "f", "s", "r"]
}
