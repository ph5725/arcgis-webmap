{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/ReadDepth.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{set as e}from\"../../../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as t}from\"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{Float2BindUniform as r}from\"../../shaderModules/Float2BindUniform.js\";import{glsl as o}from\"../../shaderModules/glsl.js\";function d(e){e.uniforms.add(new r(\"zProjectionMap\",(e=>a(e.camera)))),e.code.add(o`float linearizeDepth(float depth) {\r\nfloat depthNdc = depth * 2.0 - 1.0;\r\nfloat c1 = zProjectionMap[0];\r\nfloat c2 = zProjectionMap[1];\r\nreturn -(c1 / (depthNdc + c2 + 1e-7));\r\n}`),e.code.add(o`float depthFromTexture(sampler2D depthTexture, vec2 uv) {\r\nivec2 iuv = ivec2(uv * vec2(textureSize(depthTexture, 0)));\r\nfloat depth = texelFetch(depthTexture, iuv, 0).r;\r\nreturn depth;\r\n}`),e.code.add(o`float linearDepthFromTexture(sampler2D depthTexture, vec2 uv) {\r\nreturn linearizeDepth(depthFromTexture(depthTexture, uv));\r\n}`)}function a(t){const r=t.projectionMatrix;return e(c,r[14],r[10])}const c=t();export{d as ReadDepth};\r\n"],
  "mappings": ";;;;;;;;;;;;;;AAIiS,SAAS,EAAE,GAAE;AAAC,IAAE,SAAS,IAAI,IAAIA,GAAE,kBAAkB,CAAAC,OAAG,EAAEA,GAAE,MAAM,CAAE,CAAC,GAAE,EAAE,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKjX,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA;AAAA;AAAA,EAIb,GAAE,EAAE,KAAK,IAAIA;AAAA;AAAA,EAEb;AAAC;AAAC,SAAS,EAAE,GAAE;AAAC,QAAM,IAAE,EAAE;AAAiB,SAAO,EAAE,GAAE,EAAE,EAAE,GAAE,EAAE,EAAE,CAAC;AAAC;AAAC,IAAM,IAAE,EAAE;",
  "names": ["o", "e", "n"]
}
