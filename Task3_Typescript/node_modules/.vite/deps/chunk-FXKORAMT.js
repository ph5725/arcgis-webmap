// node_modules/@arcgis/core/core/has.js
var e;
function has(a2) {
  return "function" == typeof e[a2] ? e[a2] = e[a2](globalThis) : e[a2];
}
e = globalThis.dojoConfig?.has || globalThis.esriConfig?.has ? { ...globalThis.dojoConfig?.has, ...globalThis.esriConfig?.has } : {}, has.add = (a2, d2, r4, o4) => {
  (o4 || void 0 === e[a2]) && (e[a2] = d2), r4 && has(a2);
}, has.cache = e, has.add("big-integer-warning-enabled", true), has.add("esri-deprecation-warnings", true), has.add("esri-tests-disable-screenshots", false), has.add("esri-tests-use-full-window", false), has.add("esri-tests-post-to-influx", true), has.add("esri-cim-animations-enable-status", "enabled"), has.add("esri-cim-animations-spotlight", false), has.add("esri-cim-animations-freeze-time", false), (() => {
  has.add("host-webworker", void 0 !== globalThis.WorkerGlobalScope && self instanceof globalThis.WorkerGlobalScope);
  const e4 = "undefined" != typeof window && "undefined" != typeof location && "undefined" != typeof document && window.location === location && window.document === document;
  if (has.add("host-browser", e4), has.add("host-node", "object" == typeof globalThis.process && globalThis.process.versions?.node && globalThis.process.versions.v8), has.add("dom", e4), has("host-browser")) {
    const e5 = navigator, a2 = e5.userAgent, d2 = e5.appVersion, r4 = parseFloat(d2);
    if (has.add("wp", parseFloat(a2.split("Windows Phone")[1]) || void 0), has.add("msapp", parseFloat(a2.split("MSAppHost/")[1]) || void 0), has.add("khtml", d2.includes("Konqueror") ? r4 : void 0), has.add("edge", parseFloat(a2.split("Edge/")[1]) || void 0), has.add("opr", parseFloat(a2.split("OPR/")[1]) || void 0), has.add("webkit", !has("wp") && !has("edge") && parseFloat(a2.split("WebKit/")[1]) || void 0), has.add("chrome", !has("edge") && !has("opr") && parseFloat(a2.split("Chrome/")[1]) || void 0), has.add("android", !has("wp") && parseFloat(a2.split("Android ")[1]) || void 0), has.add("safari", !d2.includes("Safari") || has("wp") || has("chrome") || has("android") || has("edge") || has("opr") ? void 0 : parseFloat(d2.split("Version/")[1])), has.add("mac", d2.includes("Macintosh")), !has("wp") && /(iPhone|iPod|iPad)/.test(a2)) {
      const e6 = RegExp.$1.replace(/P/, "p"), d3 = /OS ([\d_]+)/.test(a2) ? RegExp.$1 : "1", r5 = parseFloat(d3.replace(/_/, ".").replaceAll("_", ""));
      has.add(e6, r5), has.add("ios", r5);
    }
    has("webkit") || (!a2.includes("Gecko") || has("wp") || has("khtml") || has("edge") || has.add("mozilla", r4), has("mozilla") && has.add("ff", parseFloat(a2.split("Firefox/")[1] || a2.split("Minefield/")[1]) || void 0));
  }
})(), (() => {
  if (globalThis.navigator) {
    const e4 = navigator.userAgent, a2 = /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini|IEMobile/i.test(e4), d2 = /iPhone/i.test(e4);
    a2 && has.add("esri-mobile", a2), d2 && has.add("esri-iPhone", d2), has.add("esri-geolocation", !!navigator.geolocation);
  }
  has.add("esri-wasm", "WebAssembly" in globalThis), has.add("esri-performance-mode-frames-between-render", 20), has.add("esri-force-performance-mode", false), has.add("esri-shared-array-buffer", () => {
    const e4 = "SharedArrayBuffer" in globalThis, a2 = false === globalThis.crossOriginIsolated;
    return e4 && !a2;
  }), has.add("wasm-simd", () => {
    const e4 = [0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 10, 1, 8, 0, 65, 0, 253, 15, 253, 98, 11];
    return WebAssembly.validate(new Uint8Array(e4));
  }), has.add("esri-atomics", "Atomics" in globalThis), has.add("esri-workers", "Worker" in globalThis), has.add("web-feat:cache", "caches" in globalThis), has.add("esri-workers-arraybuffer-transfer", !has("safari") || Number(has("safari")) >= 12), has.add("workers-pool-size", 8), has.add("featurelayer-simplify-thresholds", [0.5, 0.5, 0.5, 0.5]), has.add("featurelayer-simplify-payload-size-factors", [1, 1, 4]), has.add("featurelayer-fast-triangulation-enabled", true), has.add("featurelayer-animation-enabled", true), has.add("featurelayer-snapshot-enabled", true), has.add("featurelayer-snapshot-initial-tolerance", 0), has.add("featurelayer-snapshot-point-min-threshold", 8e4), has.add("featurelayer-snapshot-point-max-threshold", 4e5), has.add("featurelayer-snapshot-multipoint-min-threshold", 2e4), has.add("featurelayer-snapshot-multipoint-max-threshold", 1e5), has.add("featurelayer-snapshot-polygon-min-threshold", 1e3), has.add("featurelayer-snapshot-polygon-max-threshold", 2e3), has.add("featurelayer-snapshot-polyline-min-threshold", 1e3), has.add("featurelayer-snapshot-polyline-max-threshold", 2e3), has.add("featurelayer-snapshot-max-vertex-count", 25e4), has.add("featurelayer-snapshot-non-hosted-exceedslimit-enabled", false), has.add("featurelayer-snapshot-concurrency", 4), has.add("featurelayer-snapshot-coverage", 0.1), has.add("featurelayer-query-max-depth", 4), has.add("featurelayer-query-pausing-enabled", false), has.add("featurelayer-query-tile-concurrency", 4), has.add("featurelayer-query-tile-max-features", 6e5), has.add("featurelayer-advanced-symbols", false), has.add("featurelayer-pbf", true), has.add("featurelayer-pbf-statistics", false), has.add("feature-layers-workers", true), has.add("feature-polyline-generalization-factor", 1), has.add("mapview-transitions-duration", 200), has.add("mapview-essential-goto-duration", 200), has.add("mapview-srswitch-adjust-rotation-scale-threshold", 24e6), has.add("mapserver-pbf-version-support", 10.81), has.add("mapservice-popup-identify-max-tolerance", 20), has.add("request-queue-concurrency-hosted", 16), has.add("request-queue-concurrency-non-hosted", 4), has.add("curve-densification-coarse-segments", 128), has.add("curve-densification-max-segments", 2e3), has.add("curve-densification-min-segments", 3), has.add("curve-densification-pixel-deviation", 0.5), has.add("view-readyState-waiting-delay", 1e3), has.add("gradient-depth-bias", 0.01), has.add("gradient-depth-epsilon", 1e-8), has.add("enable-feature:esri-compress-textures", true), has("host-webworker") || has("host-browser") && (has.add("esri-csp-restrictions", () => {
    try {
      new Function();
    } catch {
      return true;
    }
    return false;
  }), has.add("esri-image-decode", () => {
    if ("decode" in new Image()) {
      const e4 = new Image();
      return e4.src = 'data:image/svg+xml;charset=UTF-8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg"></svg>', void e4.decode().then(() => {
        has.add("esri-image-decode", true, true, true);
      }).catch(() => {
        has.add("esri-image-decode", false, true, true);
      });
    }
    return false;
  }), has.add("esri-url-encodes-apostrophe", () => {
    const e4 = window.document.createElement("a");
    return e4.href = "?'", e4.href.includes("?%27");
  }));
})();

// node_modules/@arcgis/core/core/compilerUtils.js
function n(n3) {
}
function o(n3) {
  return () => n3;
}
function r(n3) {
  return n3;
}

// node_modules/@arcgis/core/core/RandomLCG.js
var _t = class _t {
  constructor(t3 = 1) {
    this._seed = t3;
  }
  set seed(e4) {
    this._seed = e4 ?? Math.random() * _t._m;
  }
  getInt() {
    return this._seed = (_t._a * this._seed + _t._c) % _t._m, this._seed;
  }
  getFloat() {
    return this.getInt() / (_t._m - 1);
  }
  getIntRange(t3, e4) {
    return Math.round(this.getFloatRange(t3, e4));
  }
  getFloatRange(e4, s3) {
    const a2 = s3 - e4;
    return e4 + this.getInt() / _t._m * a2;
  }
};
_t._m = 2147483647;
_t._a = 48271;
_t._c = 0;
var t = _t;

// node_modules/@arcgis/core/core/arrayUtils.js
var e2 = 1.5;
var r2 = 1 / e2;
var o2 = 0.5;
function c(t3, n3) {
  return n3 ? t3.filter((t4, e4, r4) => r4.findIndex(n3.bind(null, t4)) === e4) : Array.from(new Set(t3));
}
function s(t3, n3, e4, r4, o4, l2, u2) {
  if (null == t3 && null == r4) return true;
  n3 = Math.max(0, n3), o4 = Math.max(0, o4), e4 = Math.max(0, e4 < 0 ? (t3?.length ?? 0) + e4 : e4), l2 = Math.max(0, l2 < 0 ? (r4?.length ?? 0) + l2 : l2);
  const f2 = e4 - n3;
  if (null == t3 || null == r4 || f2 !== l2 - o4) return false;
  if (u2) {
    for (let i2 = 0; i2 < f2; i2++) if (!u2(t3[n3 + i2], r4[o4 + i2])) return false;
  } else for (let i2 = 0; i2 < f2; i2++) if (t3[n3 + i2] !== r4[o4 + i2]) return false;
  return true;
}
function h(t3, n3, e4) {
  return s(t3, 0, t3?.length ?? 0, n3, 0, n3?.length ?? 0, e4);
}
function d(t3, n3, e4) {
  let r4, o4;
  return e4 ? (r4 = n3.filter((n4) => !t3.some((t4) => e4(t4, n4))), o4 = t3.filter((t4) => !n3.some((n4) => e4(n4, t4)))) : (r4 = n3.filter((n4) => !t3.includes(n4)), o4 = t3.filter((t4) => !n3.includes(t4))), { added: r4, removed: o4 };
}
function m(t3) {
  return t3 && "number" == typeof t3.length;
}
var w = class {
  constructor() {
    this.last = 0;
  }
};
var b = new w();
function y(t3, n3, e4, r4) {
  r4 = r4 || b;
  const o4 = Math.max(0, r4.last - 10);
  for (let u2 = o4; u2 < e4; ++u2) if (t3[u2] === n3) return r4.last = u2, u2;
  const l2 = Math.min(o4, e4);
  for (let u2 = 0; u2 < l2; ++u2) if (t3[u2] === n3) return r4.last = u2, u2;
  return -1;
}
function S(n3, e4, r4, o4) {
  const l2 = r4 ?? n3.length, u2 = y(n3, r(e4), l2, o4);
  if (-1 !== u2) return n3[u2] = n3[l2 - 1], null == r4 && n3.pop(), e4;
}
var j = /* @__PURE__ */ new Set();
function v(t3, n3, e4 = t3.length, r4 = n3.length, o4, l2) {
  if (0 === r4 || 0 === e4) return e4;
  j.clear();
  for (let f2 = 0; f2 < r4; ++f2) j.add(n3[f2]);
  o4 = o4 || b;
  const u2 = Math.max(0, o4.last - 10);
  for (let f2 = u2; f2 < e4; ++f2) if (j.has(t3[f2]) && (l2?.push(t3[f2]), j.delete(t3[f2]), t3[f2] = t3[e4 - 1], --e4, --f2, 0 === j.size || 0 === e4)) return j.clear(), e4;
  for (let f2 = 0; f2 < u2; ++f2) if (j.has(t3[f2]) && (l2?.push(t3[f2]), j.delete(t3[f2]), t3[f2] = t3[e4 - 1], --e4, --f2, 0 === j.size || 0 === e4)) return j.clear(), e4;
  return j.clear(), e4;
}
function A(t3, n3, e4) {
  const r4 = t3.length;
  if (n3 >= r4) return t3.slice();
  const o4 = I(e4), l2 = /* @__PURE__ */ new Set(), u2 = [];
  for (; u2.length < n3; ) {
    const n4 = Math.floor(o4() * r4);
    l2.has(n4) || (l2.add(n4), u2.push(t3[n4]));
  }
  return u2;
}
function I(t3) {
  return t3 ? (C.seed = t3, () => C.getFloat()) : Math.random;
}
var C = new t();
function F(t3, n3) {
  if (!t3) return t3;
  const e4 = I(n3);
  for (let r4 = t3.length - 1; r4 > 0; r4--) {
    const n4 = Math.floor(e4() * (r4 + 1)), o4 = t3[r4];
    t3[r4] = t3[n4], t3[n4] = o4;
  }
  return t3;
}
function G(t3, n3) {
  const e4 = t3.indexOf(n3);
  return -1 !== e4 ? (t3.splice(e4, 1), n3) : null;
}
function L(t3, n3) {
  return null != t3;
}
var R = [];

// node_modules/@arcgis/core/core/typedArrayUtil.js
function n2(n3) {
  return n3 instanceof ArrayBuffer;
}
function r3(n3) {
  return "Int8Array" === n3?.constructor?.name;
}
function t2(n3) {
  return "Uint8Array" === n3?.constructor?.name;
}
function o3(n3) {
  return "Uint8ClampedArray" === n3?.constructor?.name;
}
function u(n3) {
  return "Int16Array" === n3?.constructor?.name;
}
function c2(n3) {
  return "Uint16Array" === n3?.constructor?.name;
}
function e3(n3) {
  return "Int32Array" === n3?.constructor?.name;
}
function a(n3) {
  return "Uint32Array" === n3?.constructor?.name;
}
function i(n3) {
  return "Float16Array" === n3?.constructor?.name;
}
function f(n3) {
  return "Float32Array" === n3?.constructor?.name;
}
function s2(n3) {
  return "Float64Array" === n3?.constructor?.name;
}
function m2(n3) {
  return "buffer" in n3;
}
var y2 = 1024;
function A2(n3) {
  return s2(n3) || f(n3) || e3(n3) || u(n3) || r3(n3);
}
function l(n3) {
  return s2(n3) || f(n3);
}
function U(n3) {
  return s2(n3) ? 179769e303 : i(n3) ? 65504 : f(n3) ? 3402823e32 : a(n3) ? 4294967295 : c2(n3) ? 65535 : t2(n3) || o3(n3) ? 255 : e3(n3) ? 2147483647 : u(n3) ? 32767 : r3(n3) ? 127 : 256;
}
var p = -32768;
var F2 = -2147483648;
var b2 = 2 ** 32 - 1;

export {
  has,
  n,
  o,
  r,
  t,
  e2 as e,
  r2,
  o2,
  c,
  s,
  h,
  d,
  m,
  w,
  y,
  S,
  v,
  A,
  I,
  F,
  G,
  L,
  R,
  n2,
  r3,
  t2,
  o3,
  u,
  c2,
  e3 as e2,
  a,
  i,
  f,
  s2,
  m2,
  y2,
  A2,
  l,
  U,
  p,
  F2
};
//# sourceMappingURL=chunk-FXKORAMT.js.map
