import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  b
} from "./chunk-N3XLUQJI.js";
import {
  n
} from "./chunk-FGWIXJQY.js";

// node_modules/@arcgis/core/core/accessorSupport/diffUtils.js
var o = /* @__PURE__ */ new Set(["esri.Color", "esri.portal.Portal", "esri.symbols.support.Symbol3DAnchorPosition2D", "esri.symbols.support.Symbol3DAnchorPosition3D"]);
function r(e) {
  return e instanceof b;
}
function f(t) {
  return t instanceof V ? Object.keys(t.items) : r(t) ? n(t).keys() : t ? Object.keys(t) : [];
}
function i(t, n2) {
  return t instanceof V ? t.items[n2] : t[n2];
}
function l(t, e) {
  return !(!Array.isArray(t) || !Array.isArray(e)) && t.length !== e.length;
}
function u(t) {
  return t ? t.declaredClass : null;
}
function c(t, e) {
  const n2 = t.diff;
  if (n2 && "function" == typeof n2) return n2(t, e);
  const s2 = f(t), p2 = f(e);
  if (0 === s2.length && 0 === p2.length) return;
  if (!s2.length || !p2.length || l(t, e)) return { type: "complete", oldValue: t, newValue: e };
  const a2 = p2.filter((t2) => !s2.includes(t2)), y2 = s2.filter((t2) => !p2.includes(t2)), d2 = s2.filter((n3) => p2.includes(n3) && i(t, n3) !== i(e, n3)).concat(a2, y2).sort(), m = u(t);
  if (m && o.has(m) && d2.length) return { type: "complete", oldValue: t, newValue: e };
  let h;
  const b2 = r(t) && r(e);
  for (const o2 of d2) {
    const r2 = i(t, o2), f2 = i(e, o2);
    let l2;
    if ((b2 || "function" != typeof r2 && "function" != typeof f2) && (r2 !== f2 && (null != r2 || null != f2))) {
      if (n2 && n2[o2] && "function" == typeof n2[o2]) l2 = n2[o2]?.(r2, f2);
      else if (r2 instanceof Date && f2 instanceof Date) {
        if (r2.getTime() === f2.getTime()) continue;
        l2 = { type: "complete", oldValue: r2, newValue: f2 };
      } else l2 = "object" == typeof r2 && "object" == typeof f2 && u(r2) === u(f2) ? c(r2, f2) : { type: "complete", oldValue: r2, newValue: f2 };
      null != l2 && (null != h ? h.diff[o2] = l2 : h = { type: "partial", diff: { [o2]: l2 } });
    }
  }
  return h;
}
function s(t, e) {
  return p(t, e);
}
function p(t, e) {
  if (null == t) return false;
  const n2 = e.split(".");
  let o2 = t;
  for (const r2 of n2) {
    if ("complete" === o2.type) return true;
    if ("partial" !== o2.type) return false;
    {
      const t2 = o2.diff[r2];
      if (!t2) return false;
      o2 = t2;
    }
  }
  return true;
}
function a(t, e) {
  if (!t) return false;
  if ("partial" === t.type) {
    const n2 = Object.keys(t.diff);
    return 1 === n2.length && n2[0] === e;
  }
  return false;
}
function y(t, e) {
  if ("function" != typeof t && "function" != typeof e && (null != t || null != e)) return null == t || null == e || "object" == typeof t && "object" == typeof e && u(t) !== u(e) ? { type: "complete", oldValue: t, newValue: e } : c(t, e);
}
function d(t) {
  if (null == t) return true;
  switch (t.type) {
    case "complete":
      return false;
    case "collection": {
      const e = t;
      for (const t2 of e.added) if (!d(t2)) return false;
      for (const t2 of e.removed) if (!d(t2)) return false;
      for (const t2 of e.changed) if (!d(t2)) return false;
      return true;
    }
    case "partial":
      for (const e in t.diff) {
        if (!d(t.diff[e])) return false;
      }
      return true;
  }
}

export {
  s,
  p,
  a,
  y,
  d
};
//# sourceMappingURL=chunk-G5DA3EEG.js.map
