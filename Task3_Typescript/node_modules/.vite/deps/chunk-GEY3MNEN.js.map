{
  "version": 3,
  "sources": ["../../@arcgis/core/core/libs/gl-matrix-2/factories/vec4f32.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js", "../../@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js", "../../@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js", "../../@arcgis/core/views/2d/engine/webgl/AFeatureTile.js", "../../@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js", "../../@arcgis/core/views/2d/engine/webgl/PooledUint32Array.js", "../../@arcgis/core/views/2d/engine/webgl/cpuMapped/Buffer.js", "../../@arcgis/core/views/2d/engine/webgl/cpuMapped/MappedMesh.js", "../../@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js", "../../@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js", "../../@arcgis/core/views/2d/engine/webgl/ReshufflePlan.js", "../../@arcgis/core/views/2d/engine/webgl/util/Reader.js", "../../@arcgis/core/views/2d/engine/webgl/mesh/meshDebugUtils.js", "../../@arcgis/core/views/2d/engine/webgl/FeatureTile.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushTileDebugInfo.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js", "../../@arcgis/core/views/2d/engine/webgl/GeometryUtils.js", "../../@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js", "../../@arcgis/core/views/2d/engine/brushes.js", "../../@arcgis/core/views/2d/engine/webgl/Mesh2D.js", "../../@arcgis/core/views/2d/engine/webgl/ClippingInfo.js", "../../@arcgis/core/views/2d/engine/webgl/WGLContainer.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const o=new Float32Array(4);return o[0]=n,o[1]=t,o[2]=r,o[3]=e,o}function e(){return n()}function o(){return r(1,1,1,1)}function u(){return r(1,0,0,0)}function c(){return r(0,1,0,0)}function i(){return r(0,0,1,0)}function f(){return r(0,0,0,1)}const a=e(),l=o(),_=u(),s=c(),y=i(),N=f(),T=Object.freeze(Object.defineProperty({__proto__:null,ONES:l,UNIT_W:N,UNIT_X:_,UNIT_Y:s,UNIT_Z:y,ZEROS:a,clone:t,create:n,fromValues:r,ones:o,unitW:f,unitX:u,unitY:c,unitZ:i,zeros:e},Symbol.toStringTag,{value:\"Module\"}));export{l as ONES,N as UNIT_W,_ as UNIT_X,s as UNIT_Y,y as UNIT_Z,a as ZEROS,t as clone,n as create,r as fromValues,o as ones,f as unitW,u as unitX,c as unitY,i as unitZ,T as v,e as zeros};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color * u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos , 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D filterFlags;\\nuniform highp sampler2D animation;\\nuniform highp sampler2D gpgpu;\\nuniform highp sampler2D visualVariableData;\\nuniform highp sampler2D dataDriven0;\\nuniform highp sampler2D dataDriven1;\\nuniform highp sampler2D dataDriven2;\\nuniform float size;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\\n}\\nhighp vec4 getFilterData(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(filterFlags, coords);\\n}\\nhighp vec4 getAnimation(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(animation, coords);\\n}\\nhighp vec4 getVisualVariableData(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(visualVariableData, coords);\\n}\\nhighp vec4 getDataDriven0(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven0, coords);\\n}\\nhighp vec4 getDataDriven1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven1, coords);\\n}\\nhighp vec4 getGPGPU(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(gpgpu, coords);\\n}\\nhighp vec4 getDataDriven2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven2, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float hittestDist;\\nuniform highp vec2 hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\n#ifdef HITTEST\\nlowp vec4 fillPixelColor = vec4(1.0);\\n#else\\nlowp vec4 fillPixelColor = v_color;\\n#endif\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.common.glsl\":\"uniform float outlineWidth;\\nuniform mediump float sectorThreshold;\\nvarying vec3  v_id;\\nvarying vec3  v_pos;\\nvarying vec2  v_offset;\\nvarying vec4  v_color;\\nvarying float v_size;\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\\nvarying vec2  v_texCoords;\\nvarying float v_outlineWidth;\\nvarying float v_opacity;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\",\"pie.frag\":\"precision highp float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/pie/pie.common.glsl>\\nuniform lowp vec4 colors[numberOfFields];\\nuniform lowp vec4 defaultColor;\\nuniform lowp vec4 othersColor;\\nuniform lowp vec4 outlineColor;\\nuniform float donutRatio;\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn colors[colorIndex];\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nfloat distanceSize = length(v_offset) * v_size;\\nfloat donutSize = donutRatio * v_size;\\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef highlight\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/barycentric.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/pie/pie.common.glsl>\\n#include <materials/hittest/common.glsl>\\nattribute float a_bitSet;\\nattribute vec2  a_offset;\\nattribute vec2  a_texCoords;\\nattribute vec2  a_size;\\nattribute float a_referenceSize;\\nattribute vec2  a_zoomRange;\\nint filterValue(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[numberOfFields]) {\\nif (sectorAngle > sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[numberOfFields]) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_size;\\nvec2  a_offset = a_offset / 16.0;\\nfloat outlineSize = outlineWidth;\\nfloat a_bitSet = a_bitSet;\\nfloat a_referenceSize = a_referenceSize;\\nvec2 a_texCoords = a_texCoords / 4.0;\\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(markerSize.x, markerSize.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData3 = getDataDriven0(a_id);\\nattributeData[0] = filterNaNValues(attributeData3.x);\\nattributeData[1] = filterNaNValues(attributeData3.y);\\nattributeData[2] = filterNaNValues(attributeData3.z);\\nattributeData[3] = filterNaNValues(attributeData3.w);\\n#if (numberOfFields > 4)\\nvec4 attributeData4 = getDataDriven1(a_id);\\nattributeData[4] = filterNaNValues(attributeData4.x);\\nattributeData[5] = filterNaNValues(attributeData4.y);\\nattributeData[6] = filterNaNValues(attributeData4.z);\\nattributeData[7] = filterNaNValues(attributeData4.w);\\n#endif\\n#if (numberOfFields > 8)\\nvec4 attributeData5 = getDataDriven2(a_id);\\nattributeData[8] = filterNaNValues(attributeData5.x);\\nattributeData[9] = filterNaNValues(attributeData5.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[numberOfFields];\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[numberOfFields];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nconst int maxHighlightReasons = 6;\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + maxHighlightReasons);\\n}\\nfloat getHighlightBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 displayViewScreenMat3;\\nuniform highp mat3 displayViewMat3;\\nuniform highp mat3 displayMat3;\\nuniform highp mat3 tileMat3;\\nuniform highp mat3 viewMat3;\\nuniform highp float pixelRatio;\\nuniform mediump float zoomFactor;\\nuniform mediump float antialiasing;\\nuniform mediump float currentScale;\\nuniform mediump float currentZoom;\\nuniform mediump float metersPerSRUnit;\\nuniform mediump float activeReasons;\\nuniform mediump float highlightAll;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\ntarget.rgba = getVisualVariableData(a_id);\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size, in float currentScale) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getFilterData(a_id).x * 255.0);\\n#else\\nreturn getFilterData(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAnimation(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getFilterData(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\\n}\\nfloat checkHighlightBit(float filterFlags, int index) {\\nreturn getHighlightBit(filterFlags, index) * getBit(activeReasons, index);\\n}\\nfloat checkHighlight(float filterFlags) {\\nfloat result = checkHighlightBit(filterFlags, 0);\\nfor (int i = 1; i < maxHighlightReasons; i++) {\\nresult = result + checkHighlightBit(filterFlags, i);\\n}\\nreturn step(0.1, result + highlightAll);\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef inside\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(outside)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(highlight)\\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float colorValues[8];\\nuniform vec4 colors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 minMaxValueAndSize;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float unitMeterRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float opacityValues[8];\\nuniform float opacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float rotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\\n}\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nfloat getVVScaleStopsSize(float currentScale) {\\nfloat outSize;\\nif (currentScale <= values[0]) {\\noutSize = sizes[0];\\n} else {\\nif (currentScale >= values[7]) {\\noutSize = sizes[7];\\n} else {\\nint index;\\nindex = -1;\\nfor (int i = 0; i < 8; i++) {\\nif (values[i] > currentScale) {\\nindex = i;\\nbreak;\\n}\\n}\\nint prevIndex = index - 1;\\nfloat a = currentScale - values[prevIndex];\\nfloat b = values[index] - values[prevIndex];\\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\\n}\\n}\\nreturn outSize;\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 8;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= values[0]) {\\nreturn sizes[0];\\n}\\nif (sizeValue >= values[VV_SIZE_N - 1]) {\\nreturn sizes[VV_SIZE_N - 1];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (values[i] >= sizeValue) {\\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\\nreturn mix(sizes[i-1], sizes[i], f);\\n}\\n}\\nreturn sizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= opacityValues[0]) {\\nreturn opacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (opacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\\nreturn mix(opacities[i-1], opacities[i], f);\\n}\\n}\\nreturn opacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= colorValues[0]) {\\nreturn colors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (colorValues[i] >= colorValue) {\\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\\nreturn mix(colors[i-1], colors[i], f);\\n}\\n}\\nreturn colors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nfloat outSize = getVVScaleStopsSize(currentScale);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},test:{\"TestShader.common.glsl\":\"#ifndef RETURN_RED\\nvarying    vec4      v_color;\\n#endif\\nvarying    vec2      v_offset;\",\"TestShader.frag\":\"precision highp float;\\n#include <test/TestShader.common.glsl>\\nvoid main() {\\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\\ndiscard;\\n}\\n#ifdef RETURN_RED\\ngl_FragColor = vec4(1., 0., 0., 1.);\\n#else\\ngl_FragColor = v_color;\\n#endif\\n}\",\"TestShader.vert\":\"const float POS_PRECISION_FACTOR = 10.;\\nconst float OFFSET_PRECISION_FACTOR = 10.;\\nconst float SIZE_PRECISION_FACTOR = 10.;\\nattribute  vec2      a_pos_packed;\\nattribute  vec2      a_offset_packed;\\nattribute  float     a_size_packed;\\n#ifdef DATA_DRIVEN_COLOR\\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\\nuniform    vec4      u_dataDrivenColor_colorFallback;\\nuniform    vec4      u_dataDrivenColor_color;\\n#endif\\nuniform    float     u_view_zoomLevel;\\n#include <test/TestShader.common.glsl>\\n#ifdef DATA_DRIVEN_COLOR\\nvec4 getColor(float value) {\\nint index = -1;\\nfor (int i = 0; i < 4; i++) {\\nif (u_dataDrivenColor_validValues[i] == value) {\\nindex = i;\\nbreak;\\n}\\n}\\nif (index == -1) {\\nreturn u_dataDrivenColor_colorFallback;\\n}\\nreturn u_dataDrivenColor_color;\\n}\\n#endif\\nvoid main() {\\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\\nvec4 color = vec4(1., 0., 0., 1.);\\n#ifdef DATA_DRIVEN_COLOR\\ncolor = getColor(1.);\\n#endif\\nvec2 offsetScaled = a_offset * a_size;\\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\\ngl_Position = pos;\\n#ifndef RETURN_RED\\nv_color = color;\\n#endif\\nv_offset = a_offset;\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(r){return function(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}}const t=new e(o(r));function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r=new Map([[\"geometry\",[new o(\"a_pos\",2,e.BYTE,0,2)]]]),t=new Map([[\"geometry\",[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]]]),n=new Map([[\"geometry\",[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]]]);export{r as Pos2b,n as Pos2us,t as PosTex2b};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{set as t,multiply as e}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import s from\"../../tiling/TileKey.js\";class r extends i{constructor(t,e,i,r,n,o,h=n,l=o){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new s(t),this.resolution=e,this.x=i,this.y=r,this.width=n,this.height=o,this.rangeX=h,this.rangeY=l}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let t=this;for(;t.parent!==this._stage;){if(!t.parent)return 0;t=t.parent}return this._stage.children.indexOf(t)}setTransform(i){const s=this.resolution/(i.resolution*i.pixelRatio),r=this.transforms.tileMat3,[n,o]=i.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*s,l=this.height/this.rangeY*s;t(r,h,0,0,0,l,0,n,o,1),e(this.transforms.displayViewScreenMat3,i.displayViewMat3,r)}get destroyed(){return this._destroyed}}export{r as TiledDisplayObject};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{set as t,multiply as s}from\"../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as i}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{set as r,multiply as o,identity as e,translate as a,rotate as n,scale as l,invert as m}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{create as c}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{i as h,o as f}from\"../../../../chunks/vec32.js\";import{create as p}from\"../../../../core/libs/gl-matrix-2/factories/vec3f32.js\";import{tileSize as d}from\"./definitions.js\";import{TiledDisplayObject as u}from\"./TiledDisplayObject.js\";const x=c(),M=p();class g extends u{constructor(t,s,i,r){super(t,s,i,r,d,d)}destroy(){super.destroy()}setTransform(m){const c=this.resolution/m.resolution,h=this.transforms.tileMat3,[f,p]=m.toScreenNoRotation([0,0],[this.x,this.y]),d=this.width/this.rangeX*c,u=this.height/this.rangeY*c;r(h,d,0,0,0,u,0,f,p,1),o(this.transforms.displayViewScreenMat3,m.displayViewMat3,h);const x=t(i(),d,0,0,u,f,p);s(this.transforms.labelMat2d,m.viewMat2d,x);const M=[0,0];m.toScreen(M,[this.x,this.y]);const g=this.transforms.tileUnitsToPixels;e(g),a(g,g,M),n(g,g,Math.PI*m.rotation/180),l(g,g,[d,u,1])}_createTransforms(){return{labelMat2d:i(),tileMat3:c(),displayViewScreenMat3:c(),tileUnitsToPixels:c()}}containsScreenPoint(t,s,i){const r=o(x,t.viewMat3,this.transforms.tileMat3),e=m(x,r);if(null==e)return!0;h(M,...s,1);const a=f(M,M,e),n=i*(this.resolution/t.resolution);return a[0]>=-n&&a[0]<this.width+n&&a[1]>=-n&&a[1]<this.height+n}}export{g as AFeatureTile};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nclass t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;let t=0;return this._head.forEach((a=>{const e=a.end-a.start;t=Math.max(t,e)})),t}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,d=r.next;for(;d;){if(d.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===d.data.start){const t=d.data.end-d.data.start;return r.data.end+=t,void(r.next=d.next)}return}if(d.data.start===n)return void(d.data.start-=e);const s=new t({start:a,end:n});return s.next=r.next,void(r.next=s)}r=d,d=d.next}if(a===r.data.end)return void(r.data.end+=e);const s=new t({start:a,end:n});r.next=s}clear(){this._head=null}}export{a as FreeList,t as List};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport has from\"../../../../core/has.js\";import{assertIsSome as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const r=has(\"esri-2d-log-allocations\");class s{static create(t,e){const r=e.acquireUint32Array(t);return new s(r,e)}constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}getUint32View(t,e){return new Uint32Array(this._array.buffer,t+this._array.byteOffset,e)}expand(t){if(t<=this._array.byteLength)return;const e=this._pool.acquireUint32Array(t);e.set(this._array),this._pool.releaseUint32Array(this._array),this._array=e}destroy(){this._pool.releaseUint32Array(this._array)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,r&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const r=t.acquireUint32Array(e);if(null!=r)return r}const s=this._addPage().acquireUint32Array(e);return t(s,\"Expected to allocate page\"),s}releaseUint32Array(t){this._bytesAllocated-=t.byteLength,r&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.releaseUint32Array(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as ArrayBufferPool,s as PooledUint32Array};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport\"../../../../../core/has.js\";import{assertIsSome as t}from\"../../../../../core/maybe.js\";import{toUint32 as i,toFloat32 as r}from\"../number.js\";import{PooledUint32Array as e}from\"../PooledUint32Array.js\";import{FreeList as s}from\"./FreeList.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{Usage as h}from\"../../../../webgl/enums.js\";const a=1.25,d=32767,u=d<<16|d;class o{constructor(t,i,r,s){this._pool=s;const n=e.create(i*r*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=i,this.strideInt=r,this.bufferType=t,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:i*r*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=n,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new s({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(this.maxAvailableSpace()>=t)return;if(t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const i=this._cpu.length/this.strideInt,r=Math.round((i+t)*a),e=r*this.strideInt;this._cpu.expand(e*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(i,r-i),this.memoryStats.bytesReserved+=(r-i)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}setU32(t,i){this._cpu.array[t]!==i&&(this._cpu.array[t]=i,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t+1,this.dirty.end))}setF32(t,r){this.setU32(t,i(r))}setF32Range(t,r,e){const s=i(e);this._cpu.array.fill(s,t,r),this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(r,this.dirty.end)}getF32(t){return r(this._cpu.array[t])}getGPUBuffer(t,i=!1){if(!this.bufferSize)return null;if(i){if(\"index\"!==this.bufferType)throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return null==this._gpu&&(this._gpu=this._createBuffer(t)),this._gpu}getView(t,i){return this._cpu.getUint32View(t,i/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,r,e,s){const n=e*this.strideInt;if(!n)return 0;const h=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=new Uint32Array(i,h,n),d=this.freeList.firstFit(e);t(d,\"First fit region must be defined\");const u=d*this.strideInt,o=n;if(this._cpu.array.set(a,u),0!==s)for(let t=0;t<a.length;t++)this._cpu.array[t+u]+=s;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+o),this.fillPointer=Math.max(this.fillPointer,u+o),this.memoryStats.bytesUsed+=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d}copyFrom(i,r,e,s,n){const h=e*this.strideInt;if(!h)return 0;const a=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d=i._cpu.getUint32View(a,h),u=this.freeList.firstFit(e);t(u,\"First fit region must be defined\");const o=u*this.strideInt,f=h;if(this._cpu.array.set(d,o),0!==s)for(let t=0;t<h;t++)this._cpu.array[o+t*this.strideInt+n]+=s;return this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,o+f),this.fillPointer=Math.max(this.fillPointer,o+f),this.memoryStats.bytesUsed+=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,u}free(t,i,r){const e=t*this.strideInt,s=(t+i)*this.strideInt;if(!0===r)for(let n=t;n!==t+i;n++)this._cpu.array[n*this.strideInt]=u;this.dirty.start=Math.min(this.dirty.start,e),this.dirty.end=Math.max(this.dirty.end,s),this.freeList.free(t,i),this.memoryStats.bytesUsed-=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),null==this._gpu)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(t,i){if(0===i.length)return;const r=this.byteSize,s=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,n=r>s,h=this._cpu,a=e.create(s,this._pool);n||a.array.set(this._cpu.getUint32View(0,this.intSize));for(const e of i)if(n||e.srcFrom!==e.dstFrom||0!==e.mutate){this.dirty.start=Math.min(this.dirty.start,e.dstFrom*this.strideInt),this.dirty.end=Math.max(this.dirty.end,(e.dstFrom+e.count)*this.strideInt);for(let t=0;t<e.count;t++){const i=(e.dstFrom+t)*this.strideInt,r=(e.srcFrom+t)*this.strideInt;for(let t=0;t<this.strideInt;t++)a.array[i+t]=h.array[r+t]+e.mutate}}this._cpu.destroy(),this._cpu=a,n&&this.invalidate(),this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=s}_createBuffer(t){const i=h.DYNAMIC_DRAW;return\"index\"===this.bufferType?n.createIndex(t,i,this._cpu.array):n.createVertex(t,i,this._cpu.array)}_createComputeBuffer(t){const i=h.DYNAMIC_DRAW,r=new Uint32Array(this.fillPointer/3);for(let e=0;e<this.fillPointer;e+=3)r[e/3]=this._cpu.array[e];return n.createIndex(t,i,r)}}export{o as MappedBuffer};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{destroyMaybe as e}from\"../../../../../core/maybe.js\";import{i1616to32 as t}from\"../number.js\";import{MappedBuffer as i}from\"./Buffer.js\";import{unpackDataView as r}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import{vertexLayoutHash as s}from\"../shaderGraph/techniques/mesh/utils.js\";import{PrimitiveType as f,DataType as o}from\"../../../../webgl/enums.js\";import{VertexArrayObject as n}from\"../../../../webgl/VertexArrayObject.js\";const u=1e3,a=4,h=[{name:\"visibility\",offset:0,type:o.FLOAT,count:1}],l={hash:s(h),attributes:h,stride:a};function _(e,t){const i=e.attributes.filter((e=>t.locations.has(e.name))).map((t=>({name:t.name,type:t.type,count:t.count,divisor:0,normalized:t.normalized??!1,offset:t.offset,stride:e.stride})));return new Map([[\"geometry\",i]])}function d(e,t){const i=[],r=e.attributes.filter((e=>t.locations.has(e.name)));for(const s of r){i.push({name:s.name,type:s.type,count:s.count,divisor:0,normalized:s.normalized??!1,offset:s.offset,stride:e.stride});const r=t.computeAttributeMap[s.name];null!=r&&2===r.length&&(i.push({name:r[0],count:s.count,divisor:0,type:s.type,normalized:s.normalized??!1,offset:s.offset+e.stride,stride:e.stride}),i.push({name:r[1],count:s.count,divisor:0,type:s.type,normalized:s.normalized??!1,offset:s.offset+2*e.stride,stride:e.stride}))}return new Map([[\"geometry\",i]])}class y{constructor(e,t,i){if(this._bufferPool=e,this._layout=t,this.useVisibility=i,this._invalidatedGeometry=!1,this._invalidatedCompute=!1,this._position=this._layout.attributes.find((e=>\"pos\"===e.name||\"position\"===e.name)),!this._position)throw new Error(\"InternalError: Unable to find position attribute\")}destroy(){this._indexBuffer=e(this._indexBuffer),this._vertexBuffer=e(this._vertexBuffer),this._visibilityBuffer=e(this._visibilityBuffer),this._computeVAO?.disposeVAOOnly(),this._geometryVAO?.disposeVAOOnly()}get layout(){return this._layout}getDrawArgs(e,t,i,r){return r?{primitive:f.POINTS,count:t/3,offset:i/3}:{primitive:e,count:t,offset:i}}getAttributePrecisionPackFactors(){const e={};for(const t of this.layout.attributes)t.packPrecisionFactor&&(e[t.name]=t.packPrecisionFactor);return e}getDebugVertexInfo(e=!1,t){if(!this._vertexBuffer)return null;const i=this._layout,s=i.stride,f=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),o=[];if(e)if(null==t)console.log(\"must provide location info to see compute attributes\");else for(const r of i.attributes){const e=t.computeAttributeMap[r.name];null!=e&&2===e.length&&(o.push({...r,name:e[0],offset:r.offset+s}),o.push({...r,name:e[1],offset:r.offset+2*s}))}const n=new DataView(f.slice().buffer);let u=f.byteLength/s;e&&(u=this._indexBuffer.fillPointer/3);const a=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let h=0;const l=[];for(let _=0;_<u;_++){if(e){h=a[3*_]*s}const t={};for(const e of[...i.attributes,...o]){let i=`${e.offset} ${e.name}`,s=r(n,e,h);if(e.packPrecisionFactor)if(i+=` (precision: ${e.packPrecisionFactor})`,\"number\"==typeof s)s/=e.packPrecisionFactor;else for(let t=0;t<s.length;t++)s[t]/=e.packPrecisionFactor;t[i]=s}h+=s,l.push(t)}return{vertices:l,layout:i}}_ensure(e,t){if(this._vertexBuffer&&this._indexBuffer)this._indexBuffer.ensure(Math.max(e,u)),this._vertexBuffer.ensure(Math.max(t,u)),this._visibilityBuffer&&this._visibilityBuffer.ensure(Math.max(t,u));else{const r=this._layout.stride/Uint32Array.BYTES_PER_ELEMENT;this._indexBuffer=new i(\"index\",Math.max(e,u),1,this._bufferPool),this._vertexBuffer=new i(\"vertex\",Math.max(t,u),r,this._bufferPool),this.useVisibility&&(this._visibilityBuffer=new i(\"vertex\",Math.max(t,u),a/Uint32Array.BYTES_PER_ELEMENT,this._bufferPool))}}append(e){const t=e.layout.stride,i=e.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,r=e.vertices.byteLength/t;this._ensure(i,r);const{vertices:s,indices:f}=e,o=this._vertexBuffer.insert(s,0,s.byteLength/t,0),n=new Uint32Array(r);new Float32Array(n.buffer).fill(255),this._visibilityBuffer&&this._visibilityBuffer.insert(n,0,n.byteLength/a,0);return{vertexFrom:o,indexFrom:this._indexBuffer.insert(f,0,f.byteLength/4,o)}}setEntityRecordRangeVisibility(e,t,i,r){for(let s=t;s<t+i;s++){const{vertexStart:t,vertexCount:i}=e[s];this._visibilityBuffer.setF32Range(t,t+i,r)}}getEntityRecordVisibility(e,t){const i=e.records[t];return this._visibilityBuffer.getF32(i.vertexStart)}copyRecordFrom(e,i,r,s){const{indexStart:f,indexCount:o,vertexStart:n,vertexCount:u}=i;this._ensure(o,u);const a=e._position,h=r*(a.packPrecisionFactor??1),l=s*(a.packPrecisionFactor??1),_=a.offset,d=t(h,l),y=this._vertexBuffer.copyFrom(e._vertexBuffer,n,u,d,_);this._visibilityBuffer&&e._visibilityBuffer&&this._visibilityBuffer.copyFrom(e._visibilityBuffer,n,u,0,0);const v=this._indexBuffer.copyFrom(e._indexBuffer,f,o,y-n,0),c=i.clone();return c.vertexStart=y,c.indexStart=v,c.overlaps=0,c}remove(e,t,i,r){this._indexBuffer.free(e,t),this._vertexBuffer.free(i,r),this._visibilityBuffer&&this._visibilityBuffer.free(i,r)}upload(){this._invalidatedGeometry=!0,this._invalidatedCompute=!0}getGeometryVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedGeometry){(this._vertexBuffer.invalidated||this._indexBuffer.invalidated||this._visibilityBuffer?.invalidated)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._visibilityBuffer&&this._visibilityBuffer.invalidate(),this._geometryVAO?.disposeVAOOnly(),this._geometryVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload(),this._visibilityBuffer&&this._visibilityBuffer.upload();const i=this._indexBuffer.getGPUBuffer(e,!1),r=new Map([[\"geometry\",this._vertexBuffer.getGPUBuffer(e)]]);if(this._visibilityBuffer&&r.set(\"visibility\",this._visibilityBuffer.getGPUBuffer(e)),!this._geometryVAO){const s=_(this.layout,t);s.set(\"visibility\",_(l,t).get(\"geometry\")),this._geometryVAO=new n(e,t.locations,s,r,i)}this._invalidatedGeometry=!1}return this._geometryVAO}getComputeVAO(e,t){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;if(this._invalidatedCompute){(this._vertexBuffer.invalidated||this._indexBuffer.invalidatedComputeBuffer)&&(this._vertexBuffer.invalidate(),this._indexBuffer.invalidate(),this._visibilityBuffer&&this._visibilityBuffer.invalidate(),this._computeVAO?.disposeVAOOnly(),this._computeVAO=null),this._vertexBuffer.upload(),this._indexBuffer.upload(),this._visibilityBuffer&&this._visibilityBuffer.upload();const i=this._indexBuffer.getGPUBuffer(e,!0),r=new Map([[\"geometry\",this._vertexBuffer.getGPUBuffer(e)]]);if(this._visibilityBuffer&&r.set(\"visibility\",this._visibilityBuffer.getGPUBuffer(e)),!this._computeVAO){const s=d(this.layout,t);s.set(\"visibility\",_(l,t).get(\"geometry\")),this._computeVAO=new n(e,t.locations,s,r,i),this._invalidatedCompute=!1}}return this._computeVAO}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(e){this._vertexBuffer&&this._vertexBuffer.reshuffle(e.vertex.count,e.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(e.index.count,e.index.operations),this._visibilityBuffer&&this._visibilityBuffer.reshuffle(e.vertex.count,e.vertex.operations)}}export{y as MappedMesh};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport\"../../../../core/has.js\";import{FeatureBatchingStrategy as t,FeatureSymbologyDrawOrder as e}from\"./enums.js\";import{List as n}from\"./cpuMapped/FreeList.js\";import{isHittest as i}from\"./shaderGraph/techniques/featureTechniqueUtils.js\";import{PrimitiveType as a,DataType as s}from\"../../../webgl/enums.js\";function r(t,e){return t<<16|255&e}function d(t){return 255&t}class h{constructor(t,e,n,i,a){this.instance=t,this.materialKey=e,this.target=n,this.start=i,this.count=a}get textureKey(){return d(this.materialKey)}get indexEnd(){return this.start+this.count}extend(t){this.count+=t}render(t){this.instance.techniqueRef.render(t,this)}get key(){return this.target.key}getStencilReference(){return this.target.stencilRef}getAttributePrecisionPackFactors(){const t=this.instance.instanceId;return this.target.getMesh(t).getAttributePrecisionPackFactors()}draw(t,e){i(t)?this.drawCompute(t.context,e):this.drawGeometry(t.context,e)}drawCompute(t,e){const n=this.instance.instanceId,i=this.target.getMesh(n).getComputeVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT/3;t.bindVAO(i),t.drawElements(a.POINTS,this.count/3,s.UNSIGNED_INT,r),t.bindVAO(null)}drawGeometry(t,e){const n=this.instance.instanceId,i=this.target.getMesh(n).getGeometryVAO(t,e),r=this.start*Uint32Array.BYTES_PER_ELEMENT;t.bindVAO(i),t.drawElements(a.TRIANGLES,this.count,s.UNSIGNED_INT,r),t.bindVAO(null)}}class l{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(t,e,n,i){const a=new l;for(const s of t.values())for(const t of s.records){const s=n.getInstance(t.instanceId),d=r(s.instanceId,t.textureKey);a.addRecord(s,d,t.indexStart,t.indexCount,t.vertexStart,t.vertexCount,e,i)}return a}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(t,e){const{drawPhase:n}=t;for(const i of this.infos()){const a=i.instance.techniqueRef;a.drawPhase&n&&(null==e||a.type===e)&&i.render(t)}}addRecord(i,a,s,r,d,l,o,c){let u=s,_=r;if(_||(u=d,_=l),!_)return;if(null==this._head){const t=new h(i,a,o,u,_);return this._head=new n(t),this._tail=this._head,this._length++,void this._minOrderedLength++}if(c===t.STRICT_ORDER)return this._insert(i,a,o,u,_,this._tail,null);let g=null,m=this._head;const f=i.instanceId,y=i.techniqueRef.symbologyPlane;if(c===t.STRICT_MARKERS_AND_TEXT&&(y===e.MARKER||y===e.TEXT))return this._insert(i,a,o,u,_,this._tail,null);for(;m;){const t=m.data.instance,e=t.instanceId,n=t.techniqueRef.symbologyPlane,s=g?.data.instance.instanceId;if(y<n||f===s&&f!==e)return this._insert(i,a,o,u,_,g,m);g=m,m=m.next}this._insert(i,a,o,u,_,g,null)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(t,e,i,a,s,r,d){if(null==r&&null==d){const r=new h(t,e,i,a,s);return this._head=new n(r),this._tail=this._head,this._length++,void this._minOrderedLength++}return e!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(e),null==r&&null!=d?this._insertAtHead(t,e,i,a,s,d):null!=r&&null==d?this._insertAtEnd(t,e,i,a,s,r):null!=r&&null!=d?this._insertAtMiddle(t,e,i,a,s,r,d):void 0}_insertAtHead(t,e,i,a,s,r){const d=a+s;if(e===r.data.materialKey&&i===r.data.target&&d===r.data.start)r.data.start=a,r.data.count+=s;else{const d=new h(t,e,i,a,s);this._head=new n(d),this._head.next=r,this._length++}}_insertAtEnd(t,e,i,a,s,r){if(r.data.materialKey===e&&r.data.indexEnd===a)r.data.count+=s;else{const d=new h(t,e,i,a,s);this._tail=new n(d),r.next=this._tail,this._length++}}_insertAtMiddle(t,e,i,a,s,r,d){const l=a+s;if(r.data.materialKey===e&&r.data.target===i&&r.data.indexEnd===a)r.data.count+=s,r.data.materialKey===d.data.materialKey&&r.data.target===d.data.target&&r.data.indexEnd===d.data.start&&(r.data.count+=d.data.count,r.next=d.next,this._length--);else if(e===d.data.materialKey&&i===d.data.target&&l===d.data.start)d.data.start=a,d.data.count+=s;else{const l=new h(t,e,i,a,s),o=new n(l);r.next=o,o.next=d,this._length++}}}export{l as DisplayList,h as DisplayListInfo};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nclass t{constructor(t){this._indexOnly=t,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(t){let e=0;this._indexOnly||(e=this.vertex.count-t.vertexStart,this.vertex.operations.push({srcFrom:t.vertexStart,dstFrom:this.vertex.count,count:t.vertexCount,mutate:0}),t.vertexStart=this.vertex.count,this.vertex.count+=t.vertexCount);let n=!1;if(this._indexOnly&&this.index.operations.length>=1){const e=this.index.operations[this.index.operations.length-1];e.srcFrom+e.count===t.indexStart&&(e.count+=t.indexCount,n=!0)}n||this.index.operations.push({srcFrom:t.indexStart,dstFrom:this.index.count,count:t.indexCount,mutate:e}),t.indexStart=this.index.count,this.index.count+=t.indexCount}}export{t as ReshufflePlan};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nclass t{constructor(t){this._pos=0,this._buffer=t,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}}export{t as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport t from\"../DisplayEntity.js\";import{LabelMetric as e}from\"../collisions/LabelMetric.js\";import{unpackDataView as i}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import r from\"../util/Reader.js\";import{deserializeList as o}from\"../util/serializationUtils.js\";function s(e){if(!e)return null;return{entities:o(new r(e.entities),t),vertexData:e.data.map(a)}}function a(t){const s=t.layout.stride,a=new DataView(t.vertices),n=[],c=t.vertices.byteLength/s;let l=0;for(let e=0;e<c;e++){const e={};for(const r of t.layout.attributes){let t=`${r.offset} ${r.name}`,o=i(a,r,l);if(r.packPrecisionFactor)if(t+=` (precision: ${r.packPrecisionFactor})`,\"number\"==typeof o)o/=r.packPrecisionFactor;else for(let e=0;e<o.length;e++)o[e]/=r.packPrecisionFactor;e[t]=o}l+=s,n.push(e)}const f=t.metrics?o(new r(t.metrics),e)??[]:[];return{vertices:n,layout:t.layout,metrics:f}}export{s as debugMeshDataInfo};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{create as t}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{AFeatureTile as i}from\"./AFeatureTile.js\";import{RESHUFFLING_EXEMPT_MEMORY_BYTES as r,RESHUFFLING_TARGET_MEMORY_EFFICIENCY as o,RESHUFFLING_EXEMPT_DRAW_CALLS as d,RESHUFFLING_TARGET_DRAW_EFFICIENCY as n,tileSize as h}from\"./definitions.js\";import a from\"./DisplayEntity.js\";import{FeatureBatchingStrategy as l}from\"./enums.js\";import{DisplayList as c}from\"./FeatureDisplayList.js\";import{ReshufflePlan as f}from\"./ReshufflePlan.js\";import{LabelMetric as u}from\"./collisions/LabelMetric.js\";import{MappedMesh as _}from\"./cpuMapped/MappedMesh.js\";import{debugMeshDataInfo as m}from\"./mesh/meshDebugUtils.js\";import p from\"./util/Reader.js\";import{deserializeList as y}from\"./util/serializationUtils.js\";const b=()=>e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let g=0;class I extends i{constructor(e,i,r,o,d,n,h=!1){super(e,i,r,o),this._fader=d,this._labelInstanceId=n,this._meshes=new Map,this._entities=[],this._entityIndex=new Map,this._invalidated=!1,this._nextUploadAllowed=!1,this.tileAge=g++,this._metrics=[],this._metricsVisibility=new Set,this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this.neededForCoverage=!1,this.isCoverage=!1,this.rendering=!1,this._decluttered=!1,this._objectIdMap=null,this.visible=!0,this.transforms.labelMat2d=t(),this.transforms.tileUnitsToPixels=s(),this.enableDeferredUploads=h}destroy(){super.destroy(),this.clear()}clear(){for(const e of this._meshes.values())e.destroy();this._meshes.clear(),this._entities=[],this._fader?.removeFeatureTileMetrics(this,this._metrics),this._metrics=[],this._displayList=null,this._invalidated=!0,this._entityIds.clear(),this._nextUploadAllowed=!0}beforeRender(e){super.beforeRender(e),this._needsReshuffle&&e.reshuffleManager.schedule(this)}tryReady(e){const t=this._invalidated&&!this._uploadAllowed;return!(this.isReady||t||!this._encounteredEnd||!(e>=this._attributeEpoch))&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`),this.ready(),this.requestRender(),this.decluttered=!1,!0)}get symbols(){const e=new Map;for(const t of this._metrics)e.get(t.labelClassId)||e.set(t.labelClassId,[]),e.get(t.labelClassId).push(t);return e}get decluttered(){return this._decluttered}set decluttered(e){this._decluttered=e,this.requestRender()}get id(){return this.key.id}get hasData(){return!!this._meshes.size}get hasAnimations(){return!!this._objectIdMap}get needsUpload(){return this._invalidated}get _uploadAllowed(){return!this.enableDeferredUploads||this._nextUploadAllowed}get _hasMetrics(){return this._metrics.length>0}upload(){this._nextUploadAllowed=!0}getDisplayList(e,t){if(this._uploadAllowed&&this._invalidated){this._entities.sort(((e,t)=>{const s=t.sortKey,i=e.sortKey;return i===s?e.id-t.id:i-s})),t===l.BATCHING&&this.reshuffle(!0),this._displayList=c.fromDisplayEntities(this._entities,this,e,t);for(const e of this._meshes.values())e.upload();this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender(),this._invalidated=!1,this._nextUploadAllowed=!1}return this._displayList}getMesh(e){if(!this._meshes.has(e))throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);return this._meshes.get(e)}getSortKeys(e){const t=new Map;for(const{id:s,sortKey:i}of this._entities)if(e.has(s)&&t.set(s,i),t.size===e.size)break;return t}onMessage(e){if(e.objectIdMap)for(const t in e.objectIdMap)this._objectIdMap||(this._objectIdMap={}),this._objectIdMap[t]=e.objectIdMap[t];switch(e.type){case\"append\":this._onAppendMessage(e);break;case\"update\":this._onUpdateMessage(e)}if(this._aggregateMemoryStats(),this.requestRender(),e.end){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`),!e.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=e.attributeEpoch,this._encounteredEnd=!0}this._writeLabelVisibilityToMesh()}_onAppendMessage(e){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:m(e?.append)}),e.clear&&this.clear(),!e.append)return;const t=y(new p(e.append.entities),a);this._insert(t,e.append.data,!1)}_onUpdateMessage(e){has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:e.isPixelBuffer,modify:m(e.modify),remove:e.remove});const t=y(new p(e.modify.entities),a),s=t.map((e=>e.id)),i=e.isPixelBuffer??!1,r=[...e.remove,...s];i?this._removeByIdsFromBuffer(r):this._removeByIds(r),this._insert(t,e.modify.data,i)}reshuffle(e=!1){if(this.destroyed)return;const t=new Map;for(const s of this._entities)for(const i of s.records){const s=this._meshes.get(i.instanceId);let r=t.get(s);r||(r=new f(e),t.set(s,r)),r.copyRecord(i)}for(const[s,i]of t)s.reshuffle(i);this._invalidated=!0,this._aggregateMemoryStats(),has(\"esri-2d-update-debug\")&&b().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(e,t,s,i){const r=s*h,o=i*h;for(const d of e._entities){let s=null;for(const i of d.records)if(i.overlaps&t){const t=e.getMesh(i.instanceId),n=this._ensureMesh(i.instanceId,t.layout,t.useVisibility).copyRecordFrom(t,i,r,o);s||(s=new a(d.id,d.sortKey),this._entityIdsFromBuffer.add(d.id),this._entityIndex.set(s.id,s),this._entities.push(s)),s.records.push(n)}}this._invalidated=!0}get metricsVisibility(){return this._metricsVisibility}copyMetricsVisibility(e){for(const t of e)this._metricsVisibility.add(t);this._writeLabelVisibilityToMesh()}updateLabelVisibility(){this._metricsVisibility.clear();for(const e of this._metrics){e.uniqueSymbol.show&&e.selectedForRendering&&this._metricsVisibility.add(e.hash)}this._writeLabelVisibilityToMesh()}_writeLabelVisibilityToMesh(){const e=this._meshes.get(this._labelInstanceId);if(e&&this._hasMetrics){for(const t of this._metrics){const s=this._entityIndex.get(t.id);if(!s)continue;const i=this._metricsVisibility.has(t.hash);e.setEntityRecordRangeVisibility(s.records,t.recordStart,t.recordCount,i?0:255)}this._invalidated=!0}}_ensureMesh(e,t,s){return this._meshes.has(e)||this._meshes.set(e,new _(this._stage.bufferPool,t,s)),this._meshes.get(e)}_insert(e,t,s){if(!e.length)return;this._removeDuplicatedBufferedEntites(e);const i=this._insertVertexData(t);for(const r of e){for(const e of r.records)e.updateBaseOffsets(i.get(e.instanceId));s?this._tryInsertBufferedEntity(r):this._insertEntity(r)}this._invalidated=!0}_insertMetrics(e){for(const t of e)t.tile=this;this._metrics.push(...e),this._fader?.insertFeatureTileMetrics(this,e)}_insertVertexData(e){const t=new Map;for(const s of e){const{instanceId:e,layout:i}=s,r=i.attributes.some((e=>\"visibility\"===e.name)),o=this._ensureMesh(e,i,r).append(s);if(s.metrics){const e=y(new p(s.metrics),u)??[];this._insertMetrics(e)}t.set(e,o)}return t}_insertEntity(e){has(\"esri-2d-update-debug\")&&this._entityIds.has(e.id)&&console.error(`Tile ${this.key.id} insertEntity: Already have entityId ${e.id}`),this._entityIds.add(e.id),this._entityIndex.set(e.id,e),this._entities.push(e)}_tryInsertBufferedEntity(e){this._entityIds.has(e.id)?this._removeRecordsFromMesh(e.records):(this._entityIdsFromBuffer.add(e.id),this._entityIndex.set(e.id,e),this._entities.push(e))}_removeDuplicatedBufferedEntites(e){if(!this._entityIdsFromBuffer.size)return;const t=[];for(const s of e)this._entityIdsFromBuffer.has(s.id)&&t.push(s.id);this._removeByIds(t)}_removeByIdsFromBuffer(e){this._removeByIds(e.filter((e=>this._entityIdsFromBuffer.has(e))))}_removeByIds(e){if(0===e.length)return;const t=new Set(e),s=[];for(const r of this._entities)t.has(r.id)?(this._remove(r),this._entityIndex.delete(r.id)):s.push(r);this._entities=s;const i=this._metrics.filter((e=>t.has(e.displayId)));this._metrics=this._metrics.filter((e=>!t.has(e.displayId))),this._fader?.removeFeatureTileMetrics(this,i),this._invalidated=!0}_remove(e){this._removeRecordsFromMesh(e.records),this._entityIds.delete(e.id),this._entityIdsFromBuffer.delete(e.id)}_removeRecordsFromMesh(e){for(const t of e){const{instanceId:e,indexStart:s,indexCount:i,vertexStart:r,vertexCount:o}=t;this._meshes.get(e)?.remove(s,i,r,o)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const e of this._meshes.values())this.debugInfo.memory.bytesUsed+=e.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=e.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:e,bytesReserved:t}=this.debugInfo.memory,s=e/t,{minOrderedLength:i,length:h}=this.debugInfo.display;return t>r&&s<o||h>d&&i/h<n}get entityIds(){return this._objectIdMap?this._entities.map((({id:e})=>({objectId:this._objectIdMap[e],displayId:e}))):[]}}export{I as FeatureTile};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as i,PrimitiveType as a,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";const m=()=>e(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=r(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(i.ALWAYS,0,255)}draw(r,e){const{context:t,state:o,requestRender:i,allowDelayedRender:p}=r,c=m(),d=e.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=l(t,s)),!p||null==i||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(a.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):i())}}export{p as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as s}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as c}from\"../../../../webgl/VertexArrayObject.js\";class _ extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:i,allowDelayedRender:s}=e;this._initialized||this._initialize(t),!s||null==i||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):i()}_initialize(e){if(this._initialized)return!0;const t=m(e,i);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=s.createVertex(e,d.STATIC_DRAW,o),l=new c(e,i.attributes,r,new Map([[\"geometry\",a]]));return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{_ as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as t}from\"../DefaultVertexAttributeLayouts.js\";import{FeatureTile as r}from\"../FeatureTile.js\";import o from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as a,PrimitiveType as l,Usage as f,TextureWrapMode as m,TextureSamplingMode as u}from\"../../../../webgl/enums.js\";import{createProgram as c}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as d}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as h}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";const _=512,x=512,b=16,p=8,T=(x-2*p)/5;class y extends o{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(a.ONE,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,t){const{context:o,requestRender:i,allowDelayedRender:s}=e;if(!t.isReady&&t instanceof r&&t.hasData)return;if(this._loadWGLResources(o),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();o.bindVAO(this._outlineVertexArrayObject),o.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),o.drawArrays(l.LINE_STRIP,0,4);const n=this._getTexture(o,t);n?(o.bindVAO(this._tileInfoVertexArrayObject),o.useProgram(this._tileInfoProgram),o.bindTexture(n,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",n.descriptor.width,n.descriptor.height),o.drawArrays(l.TRIANGLE_STRIP,0,4),o.bindVAO()):o.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const r=c(e,i),o=c(e,s),a=new Int8Array([0,0,1,0,1,1,0,1]),l=n.createVertex(e,f.STATIC_DRAW,a),m=new g(e,i.attributes,t,new Map([[\"geometry\",l]])),u=new Int8Array([0,0,1,0,0,1,1,1]),d=n.createVertex(e,f.STATIC_DRAW,u),h=new g(e,s.attributes,t,new Map([[\"geometry\",d]]));this._outlineProgram=r,this._tileInfoProgram=o,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h}_getTexture(e,t){if(!this._ctx){const e=document.createElement(\"canvas\");e.width=_,e.height=x,this._ctx=e.getContext(\"2d\")}if(!t.tileDebugInfoTexture){const r=new h;r.wrapMode=m.CLAMP_TO_EDGE,r.samplingMode=u.LINEAR,r.isImmutable=!0,r.width=_,r.height=x,t.tileDebugInfoTexture=new d(e,r)}const r=this._ctx;r.clearRect(0,0,r.canvas.width,r.canvas.height),r.textAlign=\"left\",r.textBaseline=\"top\",r.font=b-2+\"px sans-serif\",r.lineWidth=2,r.fillStyle=\"white\",r.strokeStyle=\"black\";const{debugSlot:o}=t;let i=p+T*o;const s=`${o}) ${t.key.id} (${t.constructor.name})`;r.strokeText(s,p,i),r.fillText(s,p,i),i+=b;const{debugInfo:n}=t;if(n){const{length:e,minOrderedLength:t,minUnorderedLength:o,triangleCount:s}=n.display;if(e>0){const t=`Length: ${e}`;r.strokeText(t,p,i),r.fillText(t,p,i),i+=b}if(t){const e=`Min ordered length: ${t}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(o){const e=`Min unordered length: ${o}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(s>0){s>1e5&&(r.fillStyle=\"red\",r.strokeStyle=\"white\");const e=`Triangle count: ${s}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}const{bytesUsed:a,bytesReserved:l}=n.memory;if(r.fillStyle=\"white\",r.strokeStyle=\"black\",a>0||l>0){const e=`Memory usage: ${a} of ${l} bytes`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}}return t.tileDebugInfoTexture.setData(r.canvas),t.tileDebugInfoTexture}}export{y as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{create as e}from\"../../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{vtlTextureBindingUnitSprites as o,vtlHighResCutoff as i}from\"../definitions.js\";import s from\"./WGLBrush.js\";import{BufferObject as a}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as n,CompareFunction as c,PrimitiveType as l,Usage as f}from\"../../../../webgl/enums.js\";import{VertexArrayObject as m}from\"../../../../webgl/VertexArrayObject.js\";class u extends s{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:s,painter:a,requestRender:f,allowDelayedRender:m}=e;this._loadWGLResources(e);const u=e.displayLevel,p=e.styleLayer,_=p.backgroundMaterial,d=a.vectorTilesMaterialManager,g=p.getPaintValue(\"background-color\",u),h=p.getPaintValue(\"background-opacity\",u),x=p.getPaintValue(\"background-pattern\",u),M=void 0!==x,b=1|window.devicePixelRatio,v=e.spriteMosaic;let y,w;const j=b>i?2:1,A=this._programOptions;A.pattern=M;const L=d.getMaterialProgram(s,_,A);if(!m||null==f||L.compiled){if(s.bindVAO(this._vao),s.useProgram(L),M){const t=v.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;y=r[0]-e[0],w=r[1]-e[1];const a=v.getPageSize(i);null!=a&&(v.bind(s,n.LINEAR,i,o),L.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),L.setUniform2fv(\"u_mosaicSize\",a),L.setUniform1i(\"u_texture\",o))}L.setUniform1f(\"u_opacity\",h)}else{const t=g[3]*h;this._color[0]=t*g[0],this._color[1]=t*g[1],this._color[2]=t*g[2],this._color[3]=t,L.setUniform4fv(\"u_color\",this._color)}L.setUniform1f(\"u_depth\",p.z||0);for(const e of r){if(L.setUniform1f(\"u_coord_range\",e.rangeX),L.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),M){const r=Math.max(2**(Math.round(u)-e.key.level),1),o=j*e.width*r,i=o/t(y),s=o/t(w);this._patternMatrix[0]=i,this._patternMatrix[4]=s,L.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}s.setStencilFunction(c.EQUAL,0,255),s.drawArrays(l.TRIANGLE_STRIP,0,4)}}else f()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=a.createVertex(e,f.STATIC_DRAW,i),n=new m(e,o.getAttributeLocations(),o.getLayoutInfo(),new Map([[\"geometry\",s]]));this._vao=n}}export{u as WGLBrushVTLBackground};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import t from\"./WGLBrush.js\";import{CompareFunction as r,PrimitiveType as i,DataType as a}from\"../../../../webgl/enums.js\";class n extends t{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(t,n){const{context:l,displayLevel:s,requiredLevel:o,state:c,painter:u,spriteMosaic:d,styleLayerUID:f,requestRender:m,allowDelayedRender:p}=t;if(!n.some((e=>e.layerData.get(f)?.circleIndexCount??!1)))return;const y=t.styleLayer,g=y.circleMaterial,M=u.vectorTilesMaterialManager,v=1.2,E=y.getPaintValue(\"circle-translate\",s),x=y.getPaintValue(\"circle-translate-anchor\",s),I=this._programOptions,U=M.getMaterialProgram(l,g,I);if(p&&null!=m&&!U.compiled)return void m();l.useProgram(U),U.setUniformMatrix3fv(\"u_displayMat3\",x===e.VIEWPORT?c.displayMat3:c.displayViewMat3),U.setUniform2fv(\"u_circleTranslation\",E),U.setUniform1f(\"u_depth\",y.z),U.setUniform1f(\"u_antialiasingWidth\",v);let _=-1;for(const e of n){if(!e.layerData.has(f))continue;e.key.level!==_&&(_=e.key.level,g.setDataUniforms(U,s,y,_,d));const t=e.layerData.get(f);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const n=t.vao;null!=n&&(l.bindVAO(n),U.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),o!==e.key.level?l.setStencilFunction(r.EQUAL,e.stencilRef,255):l.setStencilFunction(r.GREATER,255,255),l.drawElements(i.TRIANGLES,t.circleIndexCount,a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{n as WGLBrushVTLCircle};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as e,vtlHighResCutoff as i}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{TextureSamplingMode as a,CompareFunction as l,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";const s=1/65536;class f extends n{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,renderPass:n,spriteMosaic:a,styleLayerUID:l}=t;let r=!1;for(const _ of e)if(_.layerData.has(l)){const t=_.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){r=!0;break}}if(!r)return;const o=t.styleLayer,s=o.getPaintProperty(\"fill-pattern\"),f=void 0!==s,u=f&&s.isDataDriven;let c;if(f&&!u){const t=s.getValue(i);c=a.getMosaicItemPosition(t,!0)}const d=!f&&o.getPaintValue(\"fill-antialias\",i);let p=!0,m=1;if(!f){const t=o.getPaintProperty(\"fill-color\"),e=o.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=o.getPaintValue(\"fill-color\",i);m=o.getPaintValue(\"fill-opacity\",i)*t[3],m>=1&&(p=!1)}}if(p&&\"opaque\"===n)return;const y=o.getPaintValue(\"fill-translate\",i),g=o.getPaintValue(\"fill-translate-anchor\",i);(p||\"translucent\"!==n)&&this._drawFill(t,l,o,e,y,g,f,c,u);const M=!o.hasDataDrivenOutlineColor&&o.outlineUsesFillColor&&m<1;d&&\"opaque\"!==n&&!M&&this._drawOutline(t,l,o,e,y,g)}_drawFill(n,f,u,c,d,p,m,y,g){if(m&&!g&&null==y)return;const{context:M,displayLevel:_,state:E,painter:v,pixelRatio:P,spriteMosaic:U,requestRender:I,allowDelayedRender:x}=n,D=u.fillMaterial,R=v.vectorTilesMaterialManager,S=P>i?2:1,T=this._fillProgramOptions;T.pattern=m;const h=R.getMaterialProgram(M,D,T);if(x&&null!=I&&!h.compiled)return void I();if(M.useProgram(h),null!=y){const{page:t}=y,i=U.getPageSize(t);null!=i&&(U.bind(M,a.LINEAR,t,e),h.setUniform2fv(\"u_mosaicSize\",i),h.setUniform1i(\"u_texture\",e))}h.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?E.displayMat3:E.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",d),h.setUniform1f(\"u_depth\",u.z+s);let w=-1;for(const t of c){if(!t.layerData.has(f))continue;t.key.level!==w&&(w=t.key.level,D.setDataUniforms(h,_,u,w,U));const i=t.layerData.get(f);if(!i.fillIndexCount)continue;i.prepareForRendering(M);const n=i.fillVAO;if(null!=n){if(M.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),M.setStencilFunction(l.EQUAL,t.stencilRef,255),m){const e=Math.max(2**(Math.round(_)-t.key.level),1),i=t.rangeX/(S*t.width*e);h.setUniform1f(\"u_patternFactor\",i)}if(g){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=U.getPageSize(i);null!=t&&(U.bind(M,a.LINEAR,i,e),h.setUniform2fv(\"u_mosaicSize\",t),h.setUniform1i(\"u_texture\",e),M.drawElements(r.TRIANGLES,n[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else M.drawElements(r.TRIANGLES,i.fillIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,n,a,f,u){const{context:c,displayLevel:d,state:p,painter:m,pixelRatio:y,spriteMosaic:g,requestRender:M,allowDelayedRender:_}=e,E=n.outlineMaterial,v=m.vectorTilesMaterialManager,P=.75/y,U=this._outlineProgramOptions,I=v.getMaterialProgram(c,E,U);if(_&&null!=M&&!I.compiled)return void M();c.useProgram(I),I.setUniformMatrix3fv(\"u_displayMat3\",u===t.VIEWPORT?p.displayMat3:p.displayViewMat3),I.setUniform2fv(\"u_fillTranslation\",f),I.setUniform1f(\"u_depth\",n.z+s),I.setUniform1f(\"u_outline_width\",P);let x=-1;for(const t of a){if(!t.layerData.has(i))continue;t.key.level!==x&&(x=t.key.level,E.setDataUniforms(I,d,n,x,g));const e=t.layerData.get(i);if(e.prepareForRendering(c),!e.outlineIndexCount)continue;const a=e.outlineVAO;null!=a&&(c.bindVAO(a),I.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),c.setStencilFunction(l.EQUAL,t.stencilRef,255),c.drawElements(r.TRIANGLES,e.outlineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{f as WGLBrushVTLFill};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as t}from\"../definitions.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as n,CompareFunction as a,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";class s extends i{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(i,s){const{context:l,displayLevel:f,state:u,painter:c,pixelRatio:d,spriteMosaic:m,styleLayerUID:p,requestRender:g,allowDelayedRender:y}=i;if(!s.some((e=>e.layerData.get(p)?.lineIndexCount??!1)))return;const M=i.styleLayer,E=M.lineMaterial,_=c.vectorTilesMaterialManager,v=M.getPaintValue(\"line-translate\",f),U=M.getPaintValue(\"line-translate-anchor\",f),I=M.getPaintProperty(\"line-pattern\"),P=void 0!==I,x=P&&I.isDataDriven;let D,S;if(P&&!x){const e=I.getValue(f);D=m.getMosaicItemPosition(e)}let L=!1;if(!P){const e=M.getPaintProperty(\"line-dasharray\");if(S=void 0!==e,L=S&&e.isDataDriven,S&&!L){const t=e.getValue(f),i=M.getDashKey(t,M.getLayoutValue(\"line-cap\",f));D=m.getMosaicItemPosition(i)}}const N=1/d,R=this._programOptions;R.pattern=P,R.sdf=S;const T=_.getMaterialProgram(l,E,R);if(y&&null!=g&&!T.compiled)return void g();if(l.useProgram(T),T.setUniformMatrix3fv(\"u_displayViewMat3\",u.displayViewMat3),T.setUniformMatrix3fv(\"u_displayMat3\",U===e.VIEWPORT?u.displayMat3:u.displayViewMat3),T.setUniform2fv(\"u_lineTranslation\",v),T.setUniform1f(\"u_depth\",M.z),T.setUniform1f(\"u_antialiasing\",N),D&&null!=D){const{page:e}=D,i=m.getPageSize(e);null!=i&&(m.bind(l,n.LINEAR,e,t),T.setUniform2fv(\"u_mosaicSize\",i),T.setUniform1i(\"u_texture\",t))}let V=-1;for(const e of s){if(!e.layerData.has(p))continue;e.key.level!==V&&(V=e.key.level,E.setDataUniforms(T,f,M,V,m));const i=2**(f-V)/d;T.setUniform1f(\"u_zoomFactor\",i);const s=e.layerData.get(p);if(!s.lineIndexCount)continue;s.prepareForRendering(l);const u=s.vao;if(null!=u){if(l.bindVAO(u),T.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),l.setStencilFunction(a.EQUAL,e.stencilRef,255),x||L){const e=s.patternMap;if(!e)continue;for(const[i,a]of e){const e=m.getPageSize(i);null!=e&&(m.bind(l,n.LINEAR,i,t),T.setUniform2fv(\"u_mosaicSize\",e),T.setUniform1i(\"u_texture\",t),l.drawElements(r.TRIANGLES,a[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a[0]))}}else l.drawElements(r.TRIANGLES,s.lineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*s.lineIndexStart);e.triangleCount+=s.lineIndexCount/3}}}}export{s as WGLBrushVTLLine};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nconst n=128/Math.PI,t=256/360,r=1/Math.LN2;function u(n,t){return(n%=t)>=0?n:n+t}function o(t){return u(t*n,256)}function c(n){return u(n*t,256)}function e(n){return Math.log(n)*r}function f(n,t,r){return n*(1-r)+t*r}function i(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{i as between,c as degToByte,f as interpolate,e as log2,u as positiveMod,o as radToByte};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{create as e,fromValues as t}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{fadeDuration as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as s,vtlTextureBindingUnitGlyphs as o}from\"../definitions.js\";import{degToByte as l}from\"../GeometryUtils.js\";import f from\"./WGLBrush.js\";import{TextureSamplingMode as c,PrimitiveType as u,DataType as p,CompareFunction as m}from\"../../../../webgl/enums.js\";const g=1/65536;class d extends f{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const i=e.styleLayer;this._drawIcons(e,i,t),this._drawText(e,i,t)}_drawIcons(e,t,o){const{context:f,displayLevel:c,painter:u,spriteMosaic:p,state:m,styleLayerUID:g,requestRender:d,allowDelayedRender:y}=e,_=t.iconMaterial,M=u.vectorTilesMaterialManager;let h,P=!1;for(const i of o)if(i.layerData.has(g)&&(h=i.layerData.get(g),h.iconPerPageElementsMap.size>0)){P=!0;break}if(!P)return;const U=t.getPaintValue(\"icon-translate\",c),E=t.getPaintValue(\"icon-translate-anchor\",c);let T=t.getLayoutValue(\"icon-rotation-alignment\",c);T===a.AUTO&&(T=t.getLayoutValue(\"symbol-placement\",c)===r.POINT?a.VIEWPORT:a.MAP);const x=T===a.MAP,S=t.getLayoutValue(\"icon-keep-upright\",c)&&x,v=h.isIconSDF,D=this._iconProgramOptions;D.sdf=v;const V=M.getMaterialProgram(f,_,D);if(y&&null!=d&&!V.compiled)return void d();f.useProgram(V),V.setUniformMatrix3fv(\"u_displayViewMat3\",T===a.MAP?m.displayViewMat3:m.displayMat3),V.setUniformMatrix3fv(\"u_displayMat3\",E===n.VIEWPORT?m.displayMat3:m.displayViewMat3),V.setUniform2fv(\"u_iconTranslation\",U),V.setUniform1f(\"u_depth\",t.z),V.setUniform1f(\"u_mapRotation\",l(m.rotation)),V.setUniform1f(\"u_keepUpright\",S?1:0),V.setUniform1f(\"u_level\",10*c),V.setUniform1i(\"u_texture\",s),V.setUniform1f(\"u_fadeDuration\",i/1e3);let R=-1;for(const i of o){if(!i.layerData.has(g))continue;if(i.key.level!==R&&(R=i.key.level,_.setDataUniforms(V,c,t,R,p)),h=i.layerData.get(g),0===h.iconPerPageElementsMap.size)continue;h.prepareForRendering(f),h.updateOpacityInfo();const a=h.iconVAO;if(null!=a){f.bindVAO(a),V.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.displayViewScreenMat3),V.setUniform1f(\"u_time\",(performance.now()-h.lastOpacityUpdate)/1e3);for(const[t,a]of h.iconPerPageElementsMap)this._renderIconRange(e,V,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,c.LINEAR,a,s),this._setStencilState(e,r),n.drawElements(u.TRIANGLES,i[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,f){const{context:c,displayLevel:u,glyphMosaic:p,painter:m,pixelRatio:d,spriteMosaic:y,state:_,styleLayerUID:M,requestRender:h,allowDelayedRender:P}=e,U=s.textMaterial,E=m.vectorTilesMaterialManager;let T,x=!1;for(const t of f)if(t.layerData.has(M)&&(T=t.layerData.get(M),T.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const S=s.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&0===S.getValue(u))return;const v=s.getPaintProperty(\"text-color\"),D=!v||v.isDataDriven||v.getValue(u)[3]>0,V=s.getPaintProperty(\"text-halo-width\"),R=s.getPaintProperty(\"text-halo-color\"),I=(!V||V.isDataDriven||V.getValue(u)>0)&&(!R||R.isDataDriven||R.getValue(u)[3]>0);if(!D&&!I)return;const A=24/8;let w=s.getLayoutValue(\"text-rotation-alignment\",u);w===a.AUTO&&(w=s.getLayoutValue(\"symbol-placement\",u)===r.POINT?a.VIEWPORT:a.MAP);const L=w===a.MAP,O=s.getLayoutValue(\"text-keep-upright\",u)&&L,N=.8*A/d;this._glyphTextureSize||(this._glyphTextureSize=t(p.width/4,p.height/4));const z=s.getPaintValue(\"text-translate\",u),b=s.getPaintValue(\"text-translate-anchor\",u),k=this._sdfProgramOptions,G=E.getMaterialProgram(c,U,k);if(P&&null!=h&&!G.compiled)return void h();c.useProgram(G),G.setUniformMatrix3fv(\"u_displayViewMat3\",w===a.MAP?_.displayViewMat3:_.displayMat3),G.setUniformMatrix3fv(\"u_displayMat3\",b===n.VIEWPORT?_.displayMat3:_.displayViewMat3),G.setUniform2fv(\"u_textTranslation\",z),G.setUniform1f(\"u_depth\",s.z+g),G.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),G.setUniform1f(\"u_mapRotation\",l(_.rotation)),G.setUniform1f(\"u_keepUpright\",O?1:0),G.setUniform1f(\"u_level\",10*u),G.setUniform1i(\"u_texture\",o),G.setUniform1f(\"u_antialiasingWidth\",N),G.setUniform1f(\"u_fadeDuration\",i/1e3);let W=-1;for(const t of f){if(!t.layerData.has(M))continue;if(t.key.level!==W&&(W=t.key.level,U.setDataUniforms(G,u,s,W,y)),T=t.layerData.get(M),0===T.glyphPerPageElementsMap.size)continue;T.prepareForRendering(c),T.updateOpacityInfo();const i=T.textVAO;if(null==i)continue;c.bindVAO(i),G.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._setStencilState(e,t);const a=(performance.now()-T.lastOpacityUpdate)/1e3;G.setUniform1f(\"u_time\",a),T.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,p,G,I,D,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,c.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:i,is3D:a,stencilSymbols:r}=e;if(i.setStencilTestEnabled(!0),r)return i.setStencilWriteMask(255),void i.setStencilFunction(m.ALWAYS,t.stencilRef,255);i.setStencilWriteMask(0),a?i.setStencilFunction(m.EQUAL,t.stencilRef,255):i.setStencilFunction(m.GREATER,255,255)}}export{d as WGLBrushVTLSymbol};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport r from\"./webgl/brushes/BrushClip.js\";import s from\"./webgl/brushes/WGLBrushStencil.js\";import e from\"./webgl/brushes/WGLBrushTileDebugInfo.js\";import{WGLBrushVTLBackground as l}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as o}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as b}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as i}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as u}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";const m={clip:r,stencil:s,tileDebugInfo:e,vtlBackground:l,vtlFill:b,vtlLine:i,vtlCircle:o,vtlSymbol:u};export{m as brushes};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport e from\"../../../../core/Error.js\";import r from\"../../../../core/Logger.js\";import{e as t}from\"../../../../chunks/earcut.js\";import{set as o}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as n}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{convertFromNestedArray as s,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as m,Usage as h}from\"../../../webgl/enums.js\";const l=(e,r,t,o)=>{let n=0;for(let s=1;s<t;s++){const t=e[2*(r+s-1)],o=e[2*(r+s-1)+1];n+=(e[2*(r+s)]-t)*(e[2*(r+s)+1]+o)}return o?n>0:n<0},u=({coords:e,lengths:r},o)=>{const n=[];for(let s=0,i=0;s<r.length;i+=r[s],s+=1){const c=i,a=[];for(;s<r.length-1&&l(e,i+r[s],r[s+1],o);s+=1,i+=r[s])a.push(i+r[s]-c);const f=e.slice(2*c,2*(i+r[s])),m=t(f,a,2);for(const e of m)n.push(e+c)}return n};class y{constructor(e,r,t,o=!1){this._cache={},this.vertices=e,this.indices=r,this.primitiveType=t,this.isMapSpace=o}static fromPath(e){const r=s(new c,e.path,!1,!1),t=r.coords,o=new Uint32Array(u(r,!0)),n=new Uint32Array(t.length/2);for(let s=0;s<n.length;s++)n[s]=a(Math.floor(t[2*s]),Math.floor(t[2*s+1]));return new y({geometry:n},o,m.TRIANGLES)}static fromGeometry(t,o){const n=o.geometry?.type;switch(n){case\"polygon\":return y.fromPolygon(t,o.geometry);case\"extent\":return y.fromMapExtent(t,o.geometry);default:return r.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${n}`,o)),y.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}static fromPolygon(e,r){const t=i(new c,r,!1,!1),s=t.coords,f=new Uint32Array(u(t,!1)),h=new Uint32Array(s.length/2),l=n(),x=n();for(let n=0;n<h.length;n++)o(l,s[2*n],s[2*n+1]),e.toScreen(x,l),h[n]=a(Math.floor(x[0]),Math.floor(x[1]));return new y({geometry:h},f,m.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:r,ymin:t,ymax:o}){const n={geometry:new Uint32Array([a(e,t),a(r,t),a(e,o),a(e,o),a(r,t),a(r,o)])},s=new Uint32Array([0,1,2,3,4,5]);return new y(n,s,m.TRIANGLES)}static fromMapExtent(e,r){const[t,o]=e.toScreen([0,0],[r.xmin,r.ymin]),[n,s]=e.toScreen([0,0],[r.xmax,r.ymax]),i={geometry:new Uint32Array([a(t,o),a(n,o),a(t,s),a(t,s),a(n,o),a(n,s)])},c=new Uint32Array([0,1,2,3,4,5]);return new y(i,c,m.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose(),this._cache.vertexBuffers?.forEach((e=>e?.dispose())),this._cache.indexBuffer=this._cache.vertexBuffers=null}getIndexBuffer(e,r=h.STATIC_DRAW){return this._cache.indexBuffer??=f.createIndex(e,r,this.indices),this._cache.indexBuffer}getVertexBuffers(e,r=h.STATIC_DRAW){return this._cache.vertexBuffers??=new Map(Object.keys(this.vertices).reduce(((t,o)=>(t.push([o,f.createVertex(e,r,this.vertices[o])]),t)),new Array)),this._cache.vertexBuffers}}export{y as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import a from\"./Mesh2D.js\";import{createScreenExtent as o}from\"../../support/clippingUtils.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";class c extends i{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=r((()=>t.version),(()=>this._invalidate())),this.ready()}static fromClipArea(e,t){return new c(e,t)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,r,s){const[i,a]=t.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===a||(this._lastWidth=i,this._lastHeight=a,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(t,this._clip),a=i.getIndexBuffer(e),o=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new h(e,r,s,o,a)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createMesh(r,s){switch(s.type){case\"rect\":return a.fromScreenExtent(o(s,r.size[0],r.size[1]));case\"path\":return a.fromPath(s);case\"geometry\":return a.fromGeometry(r,s);default:return t.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new e(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),a.fromScreenExtent({xmin:0,ymin:0,xmax:1,ymax:1})}}}export{c as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport\"../../../../core/has.js\";import{brushes as s}from\"../brushes.js\";import{Container as e}from\"../Container.js\";import r from\"./ClippingInfo.js\";import{WGLDrawPhase as i}from\"./enums.js\";class n extends e{set clips(s){super.clips=s,this._updateClippingInfo(s)}renderChildren(s){s.painter.setPipelineState(null),null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(s.painter));for(const r of this._renderPasses)try{r.render(s)}catch(e){}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[s.clip],target:()=>this._clippingInfos,drawPhase:i.MAP|i.LABEL|i.LABEL_ALPHA|i.DEBUG|i.HIGHLIGHT})]}_updateClippingInfo(s){null!=this._clippingInfos&&(this._clippingInfos.forEach((s=>s.destroy())),this._clippingInfos=null),null!=s&&s.length&&(this._clippingInfos=s.items.map((s=>r.fromClipArea(this.stage,s)))),this.requestRender()}}export{n as default};\r\n"],
  "mappings": "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",
  "names": ["n", "t", "r", "e", "o", "u", "i", "f", "a", "l", "_", "s", "N", "e", "o", "r", "e", "t", "n", "e", "n", "r", "t", "n", "r", "e", "t", "i", "n", "o", "h", "l", "s", "e", "M", "n", "r", "t", "s", "i", "a", "m", "c", "h", "f", "p", "d", "u", "x", "g", "o", "t", "a", "e", "n", "r", "d", "s", "r", "s", "t", "e", "a", "i", "a", "u", "o", "t", "i", "r", "s", "n", "e", "h", "d", "f", "E", "u", "a", "h", "l", "t", "_", "e", "i", "d", "r", "s", "y", "f", "o", "n", "c", "r", "n", "r", "t", "e", "d", "h", "n", "i", "a", "f", "l", "s", "o", "c", "u", "_", "N", "g", "m", "y", "S", "t", "e", "n", "t", "s", "e", "n", "t", "a", "c", "l", "r", "o", "f", "g", "e", "i", "r", "o", "d", "n", "h", "t", "s", "N", "l", "a", "y", "t", "r", "s", "a", "$", "t", "r", "e", "o", "i", "p", "c", "d", "_", "t", "r", "e", "i", "s", "o", "a", "E", "l", "_", "x", "b", "p", "T", "y", "t", "r", "e", "o", "i", "s", "n", "a", "l", "E", "m", "u", "d", "h", "S", "u", "t", "r", "e", "s", "a", "f", "m", "p", "_", "d", "g", "h", "x", "M", "b", "y", "A", "L", "i", "o", "E", "n", "n", "t", "l", "s", "o", "c", "u", "d", "f", "m", "p", "e", "y", "g", "M", "E", "x", "I", "r", "_", "s", "f", "t", "e", "i", "n", "a", "l", "r", "_", "o", "u", "c", "d", "p", "m", "y", "g", "M", "E", "P", "I", "x", "D", "R", "S", "T", "h", "s", "t", "i", "l", "f", "u", "c", "d", "m", "p", "g", "y", "e", "M", "E", "_", "I", "P", "x", "D", "S", "L", "N", "R", "T", "r", "a", "n", "t", "r", "u", "c", "n", "u", "t", "e", "r", "g", "d", "t", "n", "e", "i", "o", "f", "c", "u", "p", "m", "y", "_", "M", "h", "P", "E", "T", "l", "x", "S", "D", "r", "R", "a", "s", "I", "A", "L", "O", "N", "b", "m", "_", "y", "u", "f", "s", "n", "d", "l", "e", "r", "t", "o", "n", "s", "u", "i", "c", "a", "f", "m", "y", "h", "x", "E", "c", "e", "t", "r", "s", "i", "a", "o", "y", "n", "n", "s", "r", "e", "m", "c"]
}
