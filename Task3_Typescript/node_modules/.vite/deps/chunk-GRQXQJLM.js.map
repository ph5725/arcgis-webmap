{
  "version": 3,
  "sources": ["../../@esri/calcite-components/dist/chunks/form.js"],
  "sourcesContent": ["/*! All material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\r\nv3.2.1 */\r\nimport { html, isServer } from \"lit\";\r\nimport { q as queryElementRoots, l as closestElementCrossShadowBoundary } from \"./dom.js\";\r\nconst componentsWithInputEvent = [\r\n  \"calcite-input\",\r\n  \"calcite-input-number\",\r\n  \"calcite-input-text\",\r\n  \"calcite-text-area\"\r\n];\r\nfunction getClearValidationEventName(componentTag) {\r\n  const componentTagCamelCase = componentTag.split(\"-\").map((part, index) => index === 0 ? part : `${part[0].toUpperCase()}${part.slice(1)}`).join(\"\");\r\n  const clearValidationEvent = `${componentTagCamelCase}${componentsWithInputEvent.includes(componentTag) ? \"Input\" : \"Change\"}`;\r\n  return clearValidationEvent;\r\n}\r\nconst hiddenFormInputSlotName = \"hidden-form-input\";\r\nfunction isCheckable(component) {\r\n  return \"checked\" in component;\r\n}\r\nconst onFormResetMap = /* @__PURE__ */ new WeakMap();\r\nconst formComponentSet = /* @__PURE__ */ new WeakSet();\r\nfunction hasRegisteredFormComponentParent(form, formComponentEl) {\r\n  const hasParentComponentWithFormIdSet = closestElementCrossShadowBoundary(formComponentEl.parentElement, \"[form]\");\r\n  if (hasParentComponentWithFormIdSet) {\r\n    return true;\r\n  }\r\n  const formComponentRegisterEventName = \"calciteInternalFormComponentRegister\";\r\n  let hasRegisteredFormComponentParent2 = false;\r\n  form.addEventListener(formComponentRegisterEventName, (event) => {\r\n    hasRegisteredFormComponentParent2 = event.composedPath().some((element) => formComponentSet.has(element));\r\n    event.stopPropagation();\r\n  }, { once: true });\r\n  formComponentEl.dispatchEvent(new CustomEvent(formComponentRegisterEventName, {\r\n    bubbles: true,\r\n    composed: true\r\n  }));\r\n  return hasRegisteredFormComponentParent2;\r\n}\r\nfunction displayValidationMessage(component, { status, message, icon }) {\r\n  if (\"status\" in component) {\r\n    component.status = status;\r\n  }\r\n  if (\"validationIcon\" in component && typeof component.validationIcon !== \"string\") {\r\n    component.validationIcon = icon;\r\n  }\r\n  if (\"validationMessage\" in component && !component.validationMessage) {\r\n    component.validationMessage = message;\r\n  }\r\n}\r\nfunction getValidationComponent(el) {\r\n  if (el.nodeName === \"CALCITE-RADIO-BUTTON\") {\r\n    return closestElementCrossShadowBoundary(el, \"calcite-radio-button-group\");\r\n  }\r\n  return el;\r\n}\r\nconst invalidEvent = new CustomEvent(\"calciteInvalid\", { bubbles: true, composed: true });\r\nfunction invalidHandler(event) {\r\n  const hiddenInput = event?.target;\r\n  const hiddenInputMessage = hiddenInput?.validationMessage;\r\n  const formComponent = getValidationComponent(hiddenInput?.parentElement);\r\n  if (!formComponent) {\r\n    return;\r\n  }\r\n  const componentTag = formComponent?.nodeName?.toLowerCase();\r\n  const componentTagParts = componentTag?.split(\"-\");\r\n  if (componentTagParts.length < 2 || componentTagParts[0] !== \"calcite\") {\r\n    return;\r\n  }\r\n  event?.preventDefault();\r\n  if (\"validity\" in formComponent) {\r\n    formComponent.validity = hiddenInput?.validity;\r\n  }\r\n  formComponent.dispatchEvent(invalidEvent);\r\n  displayValidationMessage(formComponent, {\r\n    message: hiddenInputMessage,\r\n    icon: true,\r\n    status: \"invalid\"\r\n  });\r\n  const clearValidationEvent = getClearValidationEventName(componentTag);\r\n  formComponent.addEventListener(clearValidationEvent, () => {\r\n    if (\"status\" in formComponent) {\r\n      formComponent.status = \"idle\";\r\n    }\r\n    if (\"validationIcon\" in formComponent && (formComponent.validationIcon === \"\" || formComponent.validationIcon === true)) {\r\n      formComponent.validationIcon = false;\r\n    }\r\n    if (\"validationMessage\" in formComponent && formComponent.validationMessage === hiddenInputMessage) {\r\n      formComponent.validationMessage = \"\";\r\n    }\r\n    if (\"validity\" in formComponent) {\r\n      formComponent.validity = hiddenInput?.validity;\r\n    }\r\n  }, { once: true });\r\n}\r\nfunction submitForm(component) {\r\n  const { formEl } = component;\r\n  if (!formEl) {\r\n    return false;\r\n  }\r\n  formEl.addEventListener(\"invalid\", invalidHandler, true);\r\n  formEl.requestSubmit();\r\n  formEl.removeEventListener(\"invalid\", invalidHandler, true);\r\n  requestAnimationFrame(() => {\r\n    const invalidEls = formEl.querySelectorAll(\"[status=invalid]\");\r\n    for (const el of invalidEls) {\r\n      if (el?.validationMessage) {\r\n        el?.setFocus();\r\n        break;\r\n      }\r\n    }\r\n  });\r\n  return true;\r\n}\r\nfunction resetForm(component) {\r\n  component.formEl?.reset();\r\n}\r\nfunction connectForm(component) {\r\n  const { el, value } = component;\r\n  const associatedForm = findAssociatedForm(component);\r\n  if (!associatedForm || hasRegisteredFormComponentParent(associatedForm, el)) {\r\n    return;\r\n  }\r\n  component.formEl = associatedForm;\r\n  component.defaultValue = value;\r\n  if (isCheckable(component)) {\r\n    component.defaultChecked = component.checked;\r\n  }\r\n  const boundOnFormReset = onFormReset.bind(component);\r\n  associatedForm.addEventListener(\"reset\", boundOnFormReset);\r\n  onFormResetMap.set(component.el, boundOnFormReset);\r\n  formComponentSet.add(el);\r\n}\r\nfunction findAssociatedForm(component) {\r\n  const { el, form } = component;\r\n  return form ? queryElementRoots(el, { id: form }) : closestElementCrossShadowBoundary(el, \"form\");\r\n}\r\nfunction onFormReset() {\r\n  if (\"status\" in this) {\r\n    this.status = \"idle\";\r\n  }\r\n  if (\"validationIcon\" in this) {\r\n    this.validationIcon = false;\r\n  }\r\n  if (\"validationMessage\" in this) {\r\n    this.validationMessage = \"\";\r\n  }\r\n  if (isCheckable(this)) {\r\n    this.checked = this.defaultChecked;\r\n    return;\r\n  }\r\n  this.value = this.defaultValue;\r\n  this.onFormReset?.();\r\n}\r\nfunction disconnectForm(component) {\r\n  const { el, formEl } = component;\r\n  if (!formEl) {\r\n    return;\r\n  }\r\n  const boundOnFormReset = onFormResetMap.get(el);\r\n  formEl.removeEventListener(\"reset\", boundOnFormReset);\r\n  onFormResetMap.delete(el);\r\n  component.formEl = null;\r\n  formComponentSet.delete(el);\r\n}\r\nfunction afterConnectDefaultValueSet(component, value) {\r\n  component.defaultValue = value;\r\n}\r\nconst internalHiddenInputInputEvent = \"calciteInternalHiddenInputInput\";\r\nconst hiddenInputInputHandler = (event) => {\r\n  event.target.dispatchEvent(new CustomEvent(internalHiddenInputInputEvent, { bubbles: true }));\r\n};\r\nconst removeHiddenInputChangeEventListener = (input) => input.removeEventListener(\"input\", hiddenInputInputHandler);\r\nfunction syncHiddenFormInput(component) {\r\n  const { el, formEl, name, value } = component;\r\n  const { ownerDocument } = el;\r\n  if (isServer) {\r\n    return;\r\n  }\r\n  const inputs = el.querySelectorAll(`input[slot=\"${hiddenFormInputSlotName}\"]`);\r\n  if (!formEl || !name) {\r\n    inputs.forEach((input) => {\r\n      removeHiddenInputChangeEventListener(input);\r\n      input.remove();\r\n    });\r\n    return;\r\n  }\r\n  const values = Array.isArray(value) ? value : [value];\r\n  const extra = [];\r\n  const seen = /* @__PURE__ */ new Set();\r\n  inputs.forEach((input) => {\r\n    const valueMatch = values.find((val) => (\r\n      /* intentional non-strict equality check */\r\n      val == input.value\r\n    ));\r\n    if (valueMatch != null) {\r\n      seen.add(valueMatch);\r\n      defaultSyncHiddenFormInput(component, input, valueMatch);\r\n    } else {\r\n      extra.push(input);\r\n    }\r\n  });\r\n  let docFrag;\r\n  values.forEach((value2) => {\r\n    if (seen.has(value2)) {\r\n      return;\r\n    }\r\n    let input = extra.pop();\r\n    if (!input) {\r\n      input = ownerDocument.createElement(\"input\");\r\n      input.ariaHidden = \"true\";\r\n      input.slot = hiddenFormInputSlotName;\r\n    }\r\n    if (!docFrag) {\r\n      docFrag = ownerDocument.createDocumentFragment();\r\n    }\r\n    docFrag.append(input);\r\n    input.addEventListener(\"input\", hiddenInputInputHandler);\r\n    defaultSyncHiddenFormInput(component, input, value2);\r\n  });\r\n  if (docFrag) {\r\n    el.append(docFrag);\r\n  }\r\n  extra.forEach((input) => {\r\n    removeHiddenInputChangeEventListener(input);\r\n    input.remove();\r\n  });\r\n}\r\nfunction defaultSyncHiddenFormInput(component, input, value) {\r\n  const { defaultValue, disabled, form, name, required } = component;\r\n  input.defaultValue = defaultValue;\r\n  input.disabled = disabled;\r\n  input.name = name;\r\n  input.required = required;\r\n  input.tabIndex = -1;\r\n  if (form) {\r\n    input.setAttribute(\"form\", form);\r\n  } else {\r\n    input.removeAttribute(\"form\");\r\n  }\r\n  if (isCheckable(component)) {\r\n    input.checked = component.checked;\r\n    input.defaultChecked = component.defaultChecked;\r\n    input.value = component.checked ? value || \"on\" : \"\";\r\n  } else {\r\n    input.value = value || \"\";\r\n  }\r\n  component.syncHiddenFormInput?.(input);\r\n  const validationComponent = getValidationComponent(component.el);\r\n  if (validationComponent && \"validity\" in validationComponent) {\r\n    for (const key in { ...input?.validity }) {\r\n      validationComponent.validity[key] = input.validity[key];\r\n    }\r\n  }\r\n}\r\nconst HiddenFormInputSlot = ({ component }) => {\r\n  syncHiddenFormInput(component);\r\n  return html`<slot name=${hiddenFormInputSlotName}></slot>`;\r\n};\r\nexport {\r\n  HiddenFormInputSlot as H,\r\n  afterConnectDefaultValueSet as a,\r\n  connectForm as c,\r\n  disconnectForm as d,\r\n  findAssociatedForm as f,\r\n  internalHiddenInputInputEvent as i,\r\n  resetForm as r,\r\n  submitForm as s\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
