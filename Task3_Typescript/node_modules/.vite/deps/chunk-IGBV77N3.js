import {
  a as a4,
  c,
  e,
  l as l2,
  n,
  r as r3,
  t
} from "./chunk-5Y3EUPZN.js";
import {
  R
} from "./chunk-3PPDORWL.js";
import {
  S,
  a as a2
} from "./chunk-H6F6O2KE.js";
import {
  C,
  D,
  P
} from "./chunk-BZYXFNL4.js";
import {
  E,
  K,
  a as a3,
  r as r2
} from "./chunk-RP7FUW55.js";
import {
  l
} from "./chunk-KE3WBZYL.js";
import {
  Z
} from "./chunk-OXSERRAR.js";
import {
  b,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  o
} from "./chunk-3NBBZ43U.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/views/2d/engine/webgl/shaderGraph/techniques/featureTechniqueUtils.js
var r4 = { color: { write: [true, true, true, true], blendMode: "composite" }, depth: false, stencil: { write: false, test: { ref: (t4) => t4.stencilRef, compare: C.EQUAL, mask: 255, op: { fail: D.KEEP, zFail: D.KEEP, zPass: D.REPLACE } } } };
var l3 = { color: { write: [true, true, true, true], blendMode: "additive" }, depth: false, stencil: false };
var a5 = { ...r4, color: { write: [true, true, true, true], blendMode: "delete" } };
function c2({ pixelRatio: e4, state: i2, displayLevel: o4, requiredLevel: n3 }, s3) {
  const r7 = 1 / 2 ** (o4 - s3.key.level), l4 = 1 / 2 ** (n3 - s3.key.level);
  return { displayMat3: i2.displayMat3, displayViewMat3: i2.displayViewMat3, displayViewScreenMat3: s3.transforms.displayViewScreenMat3, viewMat3: i2.viewMat3, tileMat3: s3.transforms.tileMat3, displayZoomFactor: r7, requiredZoomFactor: l4, tileOffset: [s3.x, s3.y], currentScale: i2.scale, currentZoom: o4, metersPerSRUnit: Z(i2.spatialReference), rotation: i2.rotation, pixelRatio: e4 };
}
function p(t4) {
  return "highlight" === t4.passOptions?.type;
}
function f(t4) {
  return "hittest" === t4.passOptions?.type;
}
function u(t4) {
  if (!f(t4)) return null;
  const { position: e4, distance: i2, smallSymbolDistance: o4, smallSymbolSizeThreshold: n3 } = t4.passOptions;
  return { position: e4, distance: i2, smallSymbolDistance: o4, smallSymbolSizeThreshold: n3 };
}
function d(t4) {
  if (!p(t4)) return null;
  const { activeReasons: e4, highlightAll: i2 } = t4.passOptions;
  return { activeReasons: e4, highlightAll: i2 ? 1 : 0 };
}
function m2(t4, e4, i2) {
  const o4 = {};
  for (const n3 in i2) "function" != typeof i2[n3] ? o4[n3] = i2[n3] : o4[n3] = i2[n3](t4, e4);
  return o4;
}
function h(t4, e4) {
  const { attributeView: i2, context: o4 } = t4;
  return { storage: i2.getUniforms(o4), view: c2(t4, e4), hittestRequest: u(t4), highlight: d(t4) };
}
function y(t4) {
  return { inside: t4.selection === R.InsideEffect, outside: t4.selection === R.OutsideEffect };
}
function M(t4) {
  return f(t4) ? l3 : p(t4) && "clear" === t4.passOptions.stepType ? a5 : r4;
}
function w(t4) {
  const { row: o4, col: n3 } = t4.key, s3 = n3 * a3, r7 = o4 * a3;
  return { tileOffsetFromLocalOrigin: [s3 % r2, r7 % r2], maxIntsToLocalOrigin: [Math.floor(s3 / r2), Math.floor(r7 / r2)] };
}

// node_modules/@arcgis/core/views/2d/engine/webgl/effects/highlight/parameters.js
var o2 = 1;
var t2 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1];
var c3 = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];
var e2 = 256;

// node_modules/@arcgis/core/views/support/HighlightOptions.js
var d2;
var y2 = d2 = class extends b {
  constructor(o4) {
    super(o4), this.name = c, this.color = e.clone(), this.haloColor = null, this.haloOpacity = r3, this.fillOpacity = l2, this.shadowColor = n.clone(), this.shadowOpacity = t, this.shadowDifference = a4, this.haloWidth = 2.1, this.haloBlur = 0.8 / this.haloWidth;
  }
  equals(o4) {
    return this.color.equals(o4.color) && (this.haloColor || this.color).equals(o4.haloColor || o4.color) && this.haloOpacity === o4.haloOpacity && this.fillOpacity === o4.fillOpacity && this.haloWidth === o4.haloWidth && this.haloBlur === o4.haloBlur && this.shadowColor.equals(o4.shadowColor) && this.shadowOpacity === o4.shadowOpacity && this.shadowDifference === o4.shadowDifference;
  }
  clone() {
    return new d2({ ...this, color: this.color.clone(), haloColor: this.haloColor?.clone(), shadowColor: this.shadowColor?.clone() });
  }
  assignFrom(o4) {
    this.color = o4.color.clone(), this.haloColor = o4.haloColor?.clone(), this.haloOpacity = o4.haloOpacity, this.fillOpacity = o4.fillOpacity, this.shadowColor = o4.shadowColor.clone(), this.shadowDifference = o4.shadowDifference, this.shadowOpacity = o4.shadowOpacity, this.haloBlur = o4.haloBlur, this.haloWidth = o4.haloWidth;
  }
};
r([m({ type: String, constructOnly: true, nonNullable: true })], y2.prototype, "name", void 0), r([m({ type: l, nonNullable: true })], y2.prototype, "color", void 0), r([m({ type: l })], y2.prototype, "haloColor", void 0), r([m({ nonNullable: true })], y2.prototype, "haloOpacity", void 0), r([m({ nonNullable: true })], y2.prototype, "fillOpacity", void 0), r([m({ type: l, nonNullable: true })], y2.prototype, "shadowColor", void 0), r([m({ nonNullable: true })], y2.prototype, "shadowOpacity", void 0), r([m({ nonNullable: true })], y2.prototype, "shadowDifference", void 0), r([m({ nonNullable: true })], y2.prototype, "haloWidth", void 0), r([m({ nonNullable: true })], y2.prototype, "haloBlur", void 0), y2 = d2 = r([a("esri.views.support.HighlightOptions")], y2);
var u2 = y2;

// node_modules/@arcgis/core/views/2d/engine/webgl/effects/highlight/HighlightGradient.js
var a6 = () => i.getLogger("esri.views.2d.engine.webgl.painter.highlight.HighlightGradient");
function u3(o4, i2) {
  i2.fillColor[0] = o4.color.r / 255, i2.fillColor[1] = o4.color.g / 255, i2.fillColor[2] = o4.color.b / 255, i2.fillColor[3] = o4.color.a, o4.haloColor ? (i2.outlineColor[0] = o4.haloColor.r / 255, i2.outlineColor[1] = o4.haloColor.g / 255, i2.outlineColor[2] = o4.haloColor.b / 255, i2.outlineColor[3] = o4.haloColor.a) : (i2.outlineColor[0] = i2.fillColor[0], i2.outlineColor[1] = i2.fillColor[1], i2.outlineColor[2] = i2.fillColor[2], i2.outlineColor[3] = i2.fillColor[3]), i2.fillColor[3] *= o4.fillOpacity, i2.outlineColor[3] *= o4.haloOpacity, i2.fillColor[0] *= i2.fillColor[3], i2.fillColor[1] *= i2.fillColor[3], i2.fillColor[2] *= i2.fillColor[3], i2.outlineColor[0] *= i2.outlineColor[3], i2.outlineColor[1] *= i2.outlineColor[3], i2.outlineColor[2] *= i2.outlineColor[3], i2.outlineWidth = (1 - o4.haloBlur) * o4.haloWidth, i2.outerHaloWidth = o4.haloBlur * o4.haloWidth / 2, i2.innerHaloWidth = o4.haloBlur * o4.haloWidth / 2, i2.outlinePosition = 0;
}
var d3 = [0, 0, 0, 0];
var g = class {
  constructor() {
    this.type = "single", this._highlightOptions = new u2(), this._convertedHighlightOptions = { fillColor: [0, 0, 0, 0], outlineColor: [0, 0, 0, 0], outlinePosition: 0, outlineWidth: 0, innerHaloWidth: 0, outerHaloWidth: 0 }, this._optionsShadeTexKey = "", this._texelData = new Uint8Array(4 * e2), this._minMaxDistance = [0, 0];
  }
  setHighlightOptions(o4) {
    this._highlightOptions = o4;
  }
  applyHighlightOptions(o4, t4) {
    this._updateGradientTexture(o4), o4.bindTexture(this._shadeTex, E), t4.setUniform2fv("u_minMaxDistance", this._minMaxDistance);
  }
  destroy() {
    this._shadeTex?.dispose(), this._shadeTex = null;
  }
  getReasonsWithGradients() {
    return [{ activeReasons: (1 << K) - 1, activeGradient: this }];
  }
  _updateGradientTexture(o4) {
    const i2 = f2(this._highlightOptions);
    if (i2 === this._optionsShadeTexKey) return;
    this._optionsShadeTexKey = i2, u3(this._highlightOptions, this._convertedHighlightOptions);
    const t4 = this._convertedHighlightOptions, r7 = t4.outlinePosition - t4.outlineWidth / 2 - t4.outerHaloWidth, g2 = t4.outlinePosition - t4.outlineWidth / 2, p2 = t4.outlinePosition + t4.outlineWidth / 2, C2 = t4.outlinePosition + t4.outlineWidth / 2 + t4.innerHaloWidth, c4 = Math.sqrt(Math.PI / 2) * o2, m3 = Math.abs(r7) > c4 ? Math.round(10 * (Math.abs(r7) - c4)) / 10 : 0, x = Math.abs(C2) > c4 ? Math.round(10 * (Math.abs(C2) - c4)) / 10 : 0;
    let _;
    m3 && !x ? a6().error("The outer rim of the highlight is " + m3 + "px away from the edge of the feature; consider reducing some width values or shifting the outline position towards positive values (inwards).") : !m3 && x ? a6().error("The inner rim of the highlight is " + x + "px away from the edge of the feature; consider reducing some width values or shifting the outline position towards negative values (outwards).") : m3 && x && a6().error("The highlight is " + Math.max(m3, x) + "px away from the edge of the feature; consider reducing some width values.");
    const w2 = [void 0, void 0, void 0, void 0];
    function T(o5, i3, t5) {
      w2[0] = (1 - t5) * o5[0] + t5 * i3[0], w2[1] = (1 - t5) * o5[1] + t5 * i3[1], w2[2] = (1 - t5) * o5[2] + t5 * i3[2], w2[3] = (1 - t5) * o5[3] + t5 * i3[3];
    }
    const { _texelData: v } = this;
    for (let l4 = 0; l4 < e2; ++l4) _ = r7 + l4 / (e2 - 1) * (C2 - r7), _ < r7 ? (w2[0] = 0, w2[1] = 0, w2[2] = 0, w2[3] = 0) : _ < g2 ? T(d3, t4.outlineColor, (_ - r7) / (g2 - r7)) : _ < p2 ? [w2[0], w2[1], w2[2], w2[3]] = t4.outlineColor : _ < C2 ? T(t4.outlineColor, t4.fillColor, (_ - p2) / (C2 - p2)) : [w2[0], w2[1], w2[2], w2[3]] = t4.fillColor, v[4 * l4] = 255 * w2[0], v[4 * l4 + 1] = 255 * w2[1], v[4 * l4 + 2] = 255 * w2[2], v[4 * l4 + 3] = 255 * w2[3];
    if (this._minMaxDistance[0] = r7, this._minMaxDistance[1] = C2, !this._shadeTex) {
      const i3 = new a2();
      i3.wrapMode = P.CLAMP_TO_EDGE, i3.width = e2, i3.height = 1, this._shadeTex = new S(o4, i3);
    }
    this._shadeTex.updateData(0, 0, 0, e2, 1, this._texelData);
  }
};
function f2(o4) {
  return `${o4.color};${o4.haloColor};${o4.haloOpacity};${o4.fillOpacity};${o4.haloWidth};${o4.haloBlur}`;
}

// node_modules/@arcgis/core/views/2d/engine/webgl/effects/highlight/MultiHighlightGradient.js
var s = class {
  constructor() {
    this.type = "multi", this.gradients = [];
  }
  setHighlightOptions(s3) {
    for (let e4 = 0; e4 < s3.length; e4++) this.gradients[e4] || (this.gradients[e4] = new g()), this.gradients[e4].setHighlightOptions(s3[e4]);
    for (let t4 = s3.length + 1; t4 < this.gradients.length; t4++) this.gradients[t4].destroy();
    this.gradients.length = s3.length;
  }
  destroy() {
    for (const t4 of this.gradients) t4.destroy();
  }
  getReasonsWithGradients() {
    let t4 = 1;
    const s3 = [];
    for (let e4 = 0; e4 < this.gradients.length; e4++) {
      const i2 = this.gradients[e4];
      s3.push({ activeReasons: t4, activeGradient: i2 }), t4 <<= 1;
    }
    return s3;
  }
};

// node_modules/@arcgis/core/views/2d/layers/support/util.js
var s2 = new o({ esriGeometryPoint: "point", esriGeometryMultipoint: "multipoint", esriGeometryPolyline: "polyline", esriGeometryPolygon: "polygon", esriGeometryMultiPatch: "multipatch", mesh: "mesh" });
function r5(t4) {
  return s2.toJSON(t4);
}
function o3(t4) {
  const { bandCount: e4, attributeTable: i2, colormap: n3, pixelType: s3 } = t4.raster.rasterInfo;
  return 1 === e4 && (null != i2 || null != n3 || "u8" === s3 || "s8" === s3);
}
function a7(t4, n3) {
  return null == n3 ? (t4?.destroy(), null) : ("single" === t4?.type && Array.isArray(n3) && (t4.destroy(), t4 = null), "multi" !== t4?.type || Array.isArray(n3) || (t4.destroy(), t4 = null), t4 || (t4 = Array.isArray(n3) ? new s() : new g()), Array.isArray(n3) ? "multi" === t4.type && t4.setHighlightOptions(n3) : "single" === t4.type && t4.setHighlightOptions(n3), t4);
}
function h2(t4, e4, i2, s3) {
  const { painter: r7, highlightGradient: l4 } = t4, { highlight: o4 } = r7.effects;
  if (!l4) return;
  const a8 = t4.passOptions, h3 = l4.getReasonsWithGradients();
  for (let p2 = 0; p2 < h3.length; p2++) {
    const l5 = { ...t4, passOptions: { type: "highlight", activeGradient: null != s3 ? h3[s3].activeGradient : h3[p2].activeGradient, activeReasons: h3[p2].activeReasons, stepType: "burn", highlightAll: e4 } };
    if (o4.bind(l5), i2(l5), p2 < h3.length - 1) {
      let n3 = 0;
      for (let t5 = p2 + 1; t5 < h3.length; t5++) n3 |= h3[t5].activeReasons;
      i2({ ...t4, passOptions: { type: "highlight", activeGradient: null != s3 ? h3[s3].activeGradient : h3[p2].activeGradient, activeReasons: n3, stepType: "clear", highlightAll: e4 } });
    }
    const a9 = { ...t4, passOptions: { type: "highlight", activeGradient: null != s3 ? h3[s3].activeGradient : h3[p2].activeGradient, activeReasons: h3[p2].activeReasons, stepType: "draw", highlightAll: e4 } };
    r7.setPipelineState(M(t4)), r7.updatePipelineState(t4.context), o4.draw(a9), o4.unbind();
  }
  t4.passOptions = a8;
}

// node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/mat3f32.js
function e3() {
  const e4 = new Float32Array(9);
  return e4[0] = 1, e4[4] = 1, e4[8] = 1, e4;
}
function t3(e4) {
  const t4 = new Float32Array(9);
  return t4[0] = e4[0], t4[1] = e4[1], t4[2] = e4[2], t4[3] = e4[3], t4[4] = e4[4], t4[5] = e4[5], t4[6] = e4[6], t4[7] = e4[7], t4[8] = e4[8], t4;
}
function n2(e4, t4, n3, r7, o4, a8, c4, l4, u4) {
  const f3 = new Float32Array(9);
  return f3[0] = e4, f3[1] = t4, f3[2] = n3, f3[3] = r7, f3[4] = o4, f3[5] = a8, f3[6] = c4, f3[7] = l4, f3[8] = u4, f3;
}
var r6 = Object.freeze(Object.defineProperty({ __proto__: null, clone: t3, create: e3, fromValues: n2 }, Symbol.toStringTag, { value: "Module" }));

export {
  u2 as u,
  e3 as e,
  t3 as t,
  c2 as c,
  p,
  f,
  m2 as m,
  h,
  y,
  M,
  w,
  o2 as o,
  t2,
  c3 as c2,
  r5 as r,
  o3 as o2,
  a7 as a,
  h2
};
//# sourceMappingURL=chunk-IGBV77N3.js.map
