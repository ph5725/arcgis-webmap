{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/BlendColorsPremultiplied.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/Laserline.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nfunction e(e){e.code.add(\"\\n  vec4 blendColorsPremultiplied(vec4 source, vec4 dest) {\\n    float oneMinusSourceAlpha = 1.0 - source.a;\\n    return source + dest * oneMinusSourceAlpha;\\n  }\\n  \")}function n(e,n){return e[0]=n[0]*n[3],e[1]=n[1]*n[3],e[2]=n[2]*n[3],e[3]=n[3],e}export{e as BlendColorsPremultiplied,n as premultiplyAlpha};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{ReadDepth as o}from\"./output/ReadDepth.glsl.js\";import{BlendColorsPremultiplied as e}from\"./util/BlendColorsPremultiplied.glsl.js\";import{CameraSpace as l}from\"./util/CameraSpace.glsl.js\";import{Float3PassUniform as t}from\"../shaderModules/Float3PassUniform.js\";import{FloatPassUniform as r}from\"../shaderModules/FloatPassUniform.js\";import{glsl as a}from\"../shaderModules/glsl.js\";import{Texture2DBindUniform as n}from\"../shaderModules/Texture2DBindUniform.js\";import{Texture2DPassUniform as i}from\"../shaderModules/Texture2DPassUniform.js\";function p(p,d){const s=p.fragment;s.include(o),p.include(l),s.include(e),s.uniforms.add(new r(\"globalAlpha\",(o=>o.globalAlpha)),new t(\"glowColor\",(o=>o.glowColor)),new r(\"glowWidth\",((o,e)=>o.glowWidth*e.camera.pixelRatio)),new r(\"glowFalloff\",(o=>o.glowFalloff)),new t(\"innerColor\",(o=>o.innerColor)),new r(\"innerWidth\",((o,e)=>o.innerWidth*e.camera.pixelRatio)),new n(\"depthMap\",(o=>o.depth?.attachment)),new i(\"normalMap\",(o=>o.normals))),s.code.add(a`vec4 premultipliedColor(vec3 rgb, float alpha) {\r\nreturn vec4(rgb * alpha, alpha);\r\n}`),s.code.add(a`vec4 laserlineProfile(float dist) {\r\nif (dist > glowWidth) {\r\nreturn vec4(0.0);\r\n}\r\nfloat innerAlpha = (1.0 - smoothstep(0.0, innerWidth, dist));\r\nfloat glowAlpha = pow(max(0.0, 1.0 - dist / glowWidth), glowFalloff);\r\nreturn blendColorsPremultiplied(\r\npremultipliedColor(innerColor, innerAlpha),\r\npremultipliedColor(glowColor, glowAlpha)\r\n);\r\n}`),s.code.add(a`bool laserlineReconstructFromDepth(out vec3 pos, out vec3 normal, out float angleCutoffAdjust, out float depthDiscontinuityAlpha) {\r\nfloat depth = depthFromTexture(depthMap, uv);\r\nif (depth == 1.0) {\r\nreturn false;\r\n}\r\nfloat linearDepth = linearizeDepth(depth);\r\npos = reconstructPosition(gl_FragCoord.xy, linearDepth);\r\nfloat minStep = 6e-8;\r\nfloat depthStep = clamp(depth + minStep, 0.0, 1.0);\r\nfloat linearDepthStep = linearizeDepth(depthStep);\r\nfloat depthError = abs(linearDepthStep - linearDepth);\r\nvec3 normalReconstructed = normalize(cross(dFdx(pos), dFdy(pos)));\r\nvec3 normalFromTexture = normalize(texture(normalMap, uv).xyz * 2.0 - 1.0);\r\nfloat blendFactor = smoothstep(0.15, 0.2, depthError);\r\nnormal = normalize(mix(normalReconstructed, normalFromTexture, blendFactor));\r\nangleCutoffAdjust = mix(0.0, 0.004, blendFactor);\r\nfloat ddepth = fwidth(linearDepth);\r\ndepthDiscontinuityAlpha = 1.0 - smoothstep(0.0, 0.01, -ddepth / linearDepth);\r\nreturn true;\r\n}`),d.contrastControlEnabled?s.uniforms.add(new i(\"frameColor\",((o,e)=>o.colors)),new r(\"globalAlphaContrastBoost\",(o=>o.globalAlphaContrastBoost))).code.add(a`float rgbToLuminance(vec3 color) {\r\nreturn dot(vec3(0.2126, 0.7152, 0.0722), color);\r\n}\r\nvec4 laserlineOutput(vec4 color) {\r\nfloat backgroundLuminance = rgbToLuminance(texture(frameColor, uv).rgb);\r\nfloat alpha = clamp(globalAlpha * max(backgroundLuminance * globalAlphaContrastBoost, 1.0), 0.0, 1.0);\r\nreturn color * alpha;\r\n}`):s.code.add(a`vec4 laserlineOutput(vec4 color) {\r\nreturn color * globalAlpha;\r\n}`)}export{p as Laserline};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAIA,SAASA,GAAEA,IAAE;AAAC,EAAAA,GAAE,KAAK,IAAI,wKAAwK;AAAC;;;ACAmW,SAAS,EAAEC,IAAEC,IAAE;AAAC,QAAMC,KAAEF,GAAE;AAAS,EAAAE,GAAE,QAAQ,CAAC,GAAEF,GAAE,QAAQ,CAAC,GAAEE,GAAE,QAAQC,EAAC,GAAED,GAAE,SAAS,IAAI,IAAI,EAAE,eAAe,CAAAE,OAAGA,GAAE,WAAY,GAAE,IAAI,EAAE,aAAa,CAAAA,OAAGA,GAAE,SAAU,GAAE,IAAI,EAAE,aAAa,CAACA,IAAED,OAAIC,GAAE,YAAUD,GAAE,OAAO,UAAW,GAAE,IAAI,EAAE,eAAe,CAAAC,OAAGA,GAAE,WAAY,GAAE,IAAI,EAAE,cAAc,CAAAA,OAAGA,GAAE,UAAW,GAAE,IAAI,EAAE,cAAc,CAACA,IAAED,OAAIC,GAAE,aAAWD,GAAE,OAAO,UAAW,GAAE,IAAI,EAAE,YAAY,CAAAC,OAAGA,GAAE,OAAO,UAAW,GAAE,IAAIF,GAAE,aAAa,CAAAE,OAAGA,GAAE,OAAQ,CAAC,GAAEF,GAAE,KAAK,IAAI;AAAA;AAAA,EAEz+B,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUb,GAAEA,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAmBb,GAAED,GAAE,yBAAuBC,GAAE,SAAS,IAAI,IAAIA,GAAE,cAAc,CAACE,IAAED,OAAIC,GAAE,MAAO,GAAE,IAAI,EAAE,4BAA4B,CAAAA,OAAGA,GAAE,wBAAyB,CAAC,EAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAO5J,IAAEF,GAAE,KAAK,IAAI;AAAA;AAAA,EAEb;AAAC;",
  "names": ["e", "p", "d", "s", "e", "o"]
}
