import {
  b,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";

// node_modules/@arcgis/core/geometry/operators/support/GeographicTransformationStep.js
var t;
var i = t = class extends b {
  constructor(r2) {
    super(r2), this.isInverse = false, this.wkt = null, this.wkid = null;
  }
  getInverse() {
    return new t({ isInverse: !this.isInverse, wkid: this.wkid, wkt: this.wkt });
  }
};
r([m()], i.prototype, "isInverse", void 0), r([m()], i.prototype, "wkt", void 0), r([m()], i.prototype, "wkid", void 0), i = t = r([a("esri.geometry.operators.support.GeographicTransformationStep")], i);

// node_modules/@arcgis/core/geometry/operators/support/GeographicTransformation.js
var p;
var c = p = class extends b {
  constructor(r2) {
    super(r2), this.steps = [];
  }
  getInverse() {
    const r2 = new p();
    for (let s = this.steps.length - 1; s >= 0; s--) {
      const o = this.steps[s];
      r2.steps.push(o.getInverse());
    }
    return r2;
  }
};
r([m({ type: [i], nonNullable: true })], c.prototype, "steps", void 0), c = p = r([a("esri.geometry.operators.support.GeographicTransformation")], c);

export {
  i,
  c
};
//# sourceMappingURL=chunk-JEBSIDYN.js.map
