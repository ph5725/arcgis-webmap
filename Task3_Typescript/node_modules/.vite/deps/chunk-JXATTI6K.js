import {
  t
} from "./chunk-S4X4QGA7.js";
import {
  h
} from "./chunk-JQSXFLSD.js";

// node_modules/@arcgis/core/views/2d/engine/vectorTiles/Feature.js
var t2;
!function(e) {
  e[e.moveTo = 1] = "moveTo", e[e.lineTo = 2] = "lineTo", e[e.close = 7] = "close";
}(t2 || (t2 = {}));
var s = class {
  constructor(e, t4, s2 = 0) {
    this.values = {}, this._geometry = void 0, this._pbfGeometry = null, this.featureIndex = s2;
    const o = t4.keys, r = t4.values, a = e.asUnsafe();
    for (; a.next(); ) switch (a.tag()) {
      case 1:
        this.id = a.getUInt64();
        break;
      case 2: {
        const e2 = a.getMessage().asUnsafe(), t5 = this.values;
        for (; !e2.empty(); ) {
          const s3 = e2.getUInt32(), a2 = e2.getUInt32();
          t5[o[s3]] = r[a2];
        }
        e2.release();
        break;
      }
      case 3:
        this.type = a.getUInt32();
        break;
      case 4:
        this._pbfGeometry = a.getMessage();
        break;
      default:
        a.skip();
    }
  }
  getGeometry(s2) {
    if (void 0 !== this._geometry) return this._geometry;
    if (!this._pbfGeometry) return null;
    const o = this._pbfGeometry.asUnsafe();
    let r, a;
    this._pbfGeometry = null, s2 ? s2.reset(this.type) : r = [];
    let n, i = t2.moveTo, l = 0, h2 = 0, c = 0;
    for (; !o.empty(); ) {
      if (0 === l) {
        const e = o.getUInt32();
        i = 7 & e, l = e >> 3;
      }
      switch (l--, i) {
        case t2.moveTo:
          h2 += o.getSInt32(), c += o.getSInt32(), s2 ? s2.moveTo(h2, c) : r && (a && r.push(a), a = [], a.push(new h(h2, c)));
          break;
        case t2.lineTo:
          h2 += o.getSInt32(), c += o.getSInt32(), s2 ? s2.lineTo(h2, c) : a && a.push(new h(h2, c));
          break;
        case t2.close:
          s2 ? s2.close() : a && !a[0].equals(h2, c) && a.push(a[0].clone());
          break;
        default:
          throw o.release(), new Error("Invalid path operation");
      }
    }
    return s2 ? n = s2.result() : r && (a && r.push(a), n = r), o.release(), this._geometry = n, n;
  }
};

// node_modules/@arcgis/core/views/2d/engine/vectorTiles/SourceLayerData.js
var t3 = class _t {
  constructor(s2) {
    this.extent = t, this.keys = [], this.values = [], this._pbfLayer = s2.clone();
    const a = s2.asUnsafe();
    for (; a.next(); ) switch (a.tag()) {
      case 1:
        this.name = a.getString();
        break;
      case 3:
        this.keys.push(a.getString());
        break;
      case 4:
        this.values.push(a.processMessage(_t._parseValue));
        break;
      case 5:
        this.extent = a.getUInt32();
        break;
      default:
        a.skip();
    }
  }
  getData() {
    return this._pbfLayer;
  }
  static _parseValue(e) {
    for (; e.next(); ) switch (e.tag()) {
      case 1:
        return e.getString();
      case 2:
        return e.getFloat();
      case 3:
        return e.getDouble();
      case 4:
        return e.getInt64();
      case 5:
        return e.getUInt64();
      case 6:
        return e.getSInt64();
      case 7:
        return e.getBool();
      default:
        e.skip();
    }
    return null;
  }
};

export {
  s,
  t3 as t
};
//# sourceMappingURL=chunk-JXATTI6K.js.map
