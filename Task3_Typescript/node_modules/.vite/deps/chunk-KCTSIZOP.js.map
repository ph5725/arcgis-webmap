{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/ScreenSizePerspective.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{i as e}from\"../../../../../../chunks/vec32.js\";import{create as a}from\"../../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{Float3PassUniform as r}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as c}from\"../../shaderModules/glsl.js\";function s(e){e.vertex.code.add(c`float screenSizePerspectiveViewAngleDependentFactor(float absCosAngle) {\r\nreturn absCosAngle * absCosAngle * absCosAngle;\r\n}`),e.vertex.code.add(c`vec3 screenSizePerspectiveScaleFactor(float absCosAngle, float distanceToCamera, vec3 params) {\r\nreturn vec3(\r\nmin(params.x / (distanceToCamera - params.y), 1.0),\r\nscreenSizePerspectiveViewAngleDependentFactor(absCosAngle),\r\nparams.z\r\n);\r\n}`),e.vertex.code.add(c`float applyScreenSizePerspectiveScaleFactorFloat(float size, vec3 factor) {\r\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\r\n}`),e.vertex.code.add(c`float screenSizePerspectiveScaleFloat(float size, float absCosAngle, float distanceToCamera, vec3 params) {\r\nreturn applyScreenSizePerspectiveScaleFactorFloat(\r\nsize,\r\nscreenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params)\r\n);\r\n}`),e.vertex.code.add(c`vec2 applyScreenSizePerspectiveScaleFactorVec2(vec2 size, vec3 factor) {\r\nreturn mix(size * clamp(factor.x, factor.z, 1.0), size, factor.y);\r\n}`),e.vertex.code.add(c`vec2 screenSizePerspectiveScaleVec2(vec2 size, float absCosAngle, float distanceToCamera, vec3 params) {\r\nreturn applyScreenSizePerspectiveScaleFactorVec2(size, screenSizePerspectiveScaleFactor(absCosAngle, distanceToCamera, params));\r\n}`)}function t(e){e.uniforms.add(new r(\"screenSizePerspective\",(e=>i(e.screenSizePerspective))))}function o(e){e.uniforms.add(new r(\"screenSizePerspectiveAlignment\",(e=>i(e.screenSizePerspectiveAlignment||e.screenSizePerspective))))}function i(a){return e(n,a.parameters.divisor,a.parameters.offset,a.minScaleFactor)}const n=a();export{s as ScreenSizePerspective,t as addScreenSizePerspective,o as addScreenSizePerspectiveAlignment};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{s as e}from\"../../../../../../chunks/vec42.js\";import{create as r}from\"../../../../../../core/libs/gl-matrix-2/factories/vec4f64.js\";import{ScreenSizePerspective as l,addScreenSizePerspectiveAlignment as t}from\"../util/ScreenSizePerspective.glsl.js\";import{addCameraPosition as o}from\"../util/View.glsl.js\";import{Float4PassUniform as c}from\"../../shaderModules/Float4PassUniform.js\";import{glsl as i}from\"../../shaderModules/glsl.js\";function s(e,r){const c=e.vertex;r.hasVerticalOffset?(f(c),r.hasScreenSizePerspective&&(e.include(l),t(c),o(e.vertex,r)),c.code.add(i`\r\n      vec3 calculateVerticalOffset(vec3 worldPos, vec3 localOrigin) {\r\n        float viewDistance = length((view * vec4(worldPos, 1.0)).xyz);\r\n        ${r.spherical?i`vec3 worldNormal = normalize(worldPos + localOrigin);`:i`vec3 worldNormal = vec3(0.0, 0.0, 1.0);`}\r\n        ${r.hasScreenSizePerspective?i`\r\n            float cosAngle = dot(worldNormal, normalize(worldPos - cameraPosition));\r\n            float verticalOffsetScreenHeight = screenSizePerspectiveScaleFloat(verticalOffset.x, abs(cosAngle), viewDistance, screenSizePerspectiveAlignment);`:i`\r\n            float verticalOffsetScreenHeight = verticalOffset.x;`}\r\n        // Screen sized offset in world space, used for example for line callouts\r\n        float worldOffset = clamp(verticalOffsetScreenHeight * verticalOffset.y * viewDistance, verticalOffset.z, verticalOffset.w);\r\n        return worldNormal * worldOffset;\r\n      }\r\n\r\n      vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) {\r\n        return worldPos + calculateVerticalOffset(worldPos, localOrigin);\r\n      }\r\n    `)):c.code.add(i`vec3 addVerticalOffset(vec3 worldPos, vec3 localOrigin) { return worldPos; }`)}const a=r();function f(r){r.uniforms.add(new c(\"verticalOffset\",((r,l)=>{const{minWorldLength:t,maxWorldLength:o,screenLength:c}=r.verticalOffset,i=Math.tan(.5*l.camera.fovY)/(.5*l.camera.fullViewport[3]),s=l.camera.pixelRatio||1;return e(a,c*s,i,t,o)})))}export{s as VerticalOffset,f as addVerticalOffset};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAI4Q,SAASA,GAAEC,IAAE;AAAC,EAAAA,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAE1S,GAAED,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMpB,GAAED,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAEpB,GAAED,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA;AAAA;AAAA;AAAA,EAKpB,GAAED,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAEpB,GAAED,GAAE,OAAO,KAAK,IAAIC;AAAA;AAAA,EAEpB;AAAC;AAAC,SAAS,EAAED,IAAE;AAAC,EAAAA,GAAE,SAAS,IAAI,IAAI,EAAE,yBAAyB,CAAAA,OAAG,EAAEA,GAAE,qBAAqB,CAAE,CAAC;AAAC;AAAC,SAASE,GAAEF,IAAE;AAAC,EAAAA,GAAE,SAAS,IAAI,IAAI,EAAE,kCAAkC,CAAAA,OAAG,EAAEA,GAAE,kCAAgCA,GAAE,qBAAqB,CAAE,CAAC;AAAC;AAAC,SAAS,EAAEG,IAAE;AAAC,SAAO,EAAEF,IAAEE,GAAE,WAAW,SAAQA,GAAE,WAAW,QAAOA,GAAE,cAAc;AAAC;AAAC,IAAMF,KAAE,EAAE;;;ACnBmH,SAASG,GAAEC,IAAE,GAAE;AAAC,QAAM,IAAEA,GAAE;AAAO,IAAE,qBAAmB,EAAE,CAAC,GAAE,EAAE,6BAA2BA,GAAE,QAAQD,EAAC,GAAEE,GAAE,CAAC,GAAE,EAAED,GAAE,QAAO,CAAC,IAAG,EAAE,KAAK,IAAIE;AAAA;AAAA;AAAA,UAGpjB,EAAE,YAAUA,4DAAyDA,2CAA0C;AAAA,UAC/G,EAAE,2BAAyBA;AAAA;AAAA,kKAE2HA;AAAA,iEAC/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAS5D,KAAG,EAAE,KAAK,IAAIA,gFAA+E;AAAC;AAAC,IAAM,IAAEA,GAAE;AAAE,SAAS,EAAE,GAAE;AAAC,IAAE,SAAS,IAAI,IAAIF,GAAE,kBAAkB,CAACG,IAAE,MAAI;AAAC,UAAK,EAAC,gBAAeC,IAAE,gBAAeH,IAAE,cAAa,EAAC,IAAEE,GAAE,gBAAeE,KAAE,KAAK,IAAI,MAAG,EAAE,OAAO,IAAI,KAAG,MAAG,EAAE,OAAO,aAAa,CAAC,IAAGN,KAAE,EAAE,OAAO,cAAY;AAAE,WAAO,EAAE,GAAE,IAAEA,IAAEM,IAAED,IAAEH,EAAC;AAAA,EAAC,CAAE,CAAC;AAAC;",
  "names": ["s", "e", "n", "o", "a", "s", "e", "o", "n", "r", "t", "i"]
}
