import {
  c,
  g,
  h,
  o,
  s as s2
} from "./chunk-6KFXWKZZ.js";
import {
  r
} from "./chunk-FPSA4NFH.js";
import {
  s
} from "./chunk-VHLUKPRH.js";

// node_modules/@arcgis/core/Color.js
function e(t) {
  return r(s(t), 0, 255);
}
function h2(t, r2) {
  const s3 = t.toString(16).padStart(2, "0");
  return r2 ? s3.slice(0, 1) : s3;
}
var u = class _u {
  static blendColors(t, r2, s3, i = new _u()) {
    return i.r = Math.round(t.r + (r2.r - t.r) * s3), i.g = Math.round(t.g + (r2.g - t.g) * s3), i.b = Math.round(t.b + (r2.b - t.b) * s3), i.a = t.a + (r2.a - t.a) * s3, i._sanitize();
  }
  static fromRgb(r2, s3) {
    const i = s2(r2);
    return i ? _u.fromArray(i, s3) : null;
  }
  static fromHex(t, s3 = new _u()) {
    const i = o(t);
    return i ? _u.fromArray(i, s3) : null;
  }
  static fromArray(t, r2 = new _u()) {
    return r2._set(Number(t[0]), Number(t[1]), Number(t[2]), Number(t[3])), isNaN(r2.a) && (r2.a = 1), r2._sanitize();
  }
  static fromString(t, r2) {
    const i = g(t);
    return i ? _u.fromArray(i, r2) : null;
  }
  static fromJSON(t) {
    return null != t ? new _u([t[0], t[1], t[2], (t[3] ?? 255) / 255]) : void 0;
  }
  static toUnitRGB(t) {
    return null != t ? [t.r / 255, t.g / 255, t.b / 255] : null;
  }
  static toUnitRGBA(t) {
    return null != t ? [t.r / 255, t.g / 255, t.b / 255, null != t.a ? t.a : 1] : null;
  }
  constructor(t) {
    this.r = 255, this.g = 255, this.b = 255, this.a = 1, t && this.setColor(t);
  }
  get isBright() {
    return 0.299 * this.r + 0.587 * this.g + 0.114 * this.b >= 127;
  }
  setColor(t) {
    return "string" == typeof t ? _u.fromString(t, this) : Array.isArray(t) ? _u.fromArray(t, this) : (this._set(t.r ?? 0, t.g ?? 0, t.b ?? 0, t.a ?? 1), t instanceof _u || this._sanitize()), this;
  }
  toRgb() {
    return [this.r, this.g, this.b];
  }
  toRgba() {
    return [this.r, this.g, this.b, this.a];
  }
  toHex(t) {
    const r2 = t?.capitalize ?? false, s3 = t?.digits ?? 6, i = 3 === s3 || 4 === s3, n = 4 === s3 || 8 === s3, o2 = `#${h2(this.r, i)}${h2(this.g, i)}${h2(this.b, i)}${n ? h2(Math.round(255 * this.a), i) : ""}`;
    return r2 ? o2.toUpperCase() : o2;
  }
  toCss(t = false) {
    const r2 = this.r + ", " + this.g + ", " + this.b;
    return t ? `rgba(${r2}, ${this.a})` : `rgb(${r2})`;
  }
  toString() {
    return this.toCss(true);
  }
  toJSON() {
    return this.toArray();
  }
  toArray(t = _u.AlphaMode.ALWAYS) {
    const r2 = e(this.r), s3 = e(this.g), i = e(this.b);
    return t === _u.AlphaMode.ALWAYS || 1 !== this.a ? [r2, s3, i, e(255 * this.a)] : [r2, s3, i];
  }
  clone() {
    return new _u(this.toRgba());
  }
  hash() {
    return this.r << 24 | this.g << 16 | this.b << 8 | 255 * this.a;
  }
  equals(t) {
    return null != t && t.r === this.r && t.g === this.g && t.b === this.b && t.a === this.a;
  }
  _sanitize() {
    return this.r = h(this.r), this.g = h(this.g), this.b = h(this.b), this.a = c(this.a), this;
  }
  _set(t, r2, s3, i) {
    this.r = t, this.g = r2, this.b = s3, this.a = i;
  }
};
u.prototype.declaredClass = "esri.Color", function(t) {
  var r2;
  (r2 = t.AlphaMode || (t.AlphaMode = {}))[r2.ALWAYS = 0] = "ALWAYS", r2[r2.UNLESS_OPAQUE = 1] = "UNLESS_OPAQUE";
}(u || (u = {}));
var l = u;

export {
  l
};
//# sourceMappingURL=chunk-KE3WBZYL.js.map
