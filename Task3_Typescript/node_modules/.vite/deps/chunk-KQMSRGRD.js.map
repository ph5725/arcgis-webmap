{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/materials/pbrUtils.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/AnalyticalSkyModel.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ScreenSpaceConstants.js", "../../@arcgis/core/views/3d/webgl-engine/shaders/ToneMapping.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{q as l}from\"../../../../chunks/vec32.js\";import{freeze as e,ZEROS as u}from\"../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";function n({normalTexture:e,metallicRoughnessTexture:n,metallicFactor:r,roughnessFactor:t,emissiveTexture:o,emissiveFactor:s,occlusionTexture:c}){return null==e&&null==n&&null==o&&(null==s||l(s,u))&&null==c&&(null==t||1===t)&&(null==r||1===r)}function r({normalTexture:e,metallicRoughnessTexture:n,metallicFactor:r,roughnessFactor:t,emissiveTexture:o,emissiveFactor:s,occlusionTexture:c}){return null==e&&null==n&&null==o&&(null==s||l(s,u))&&null==c&&(null==t||1===t)&&(null==r||1===r||0===r)}const t=e(1,1,.5),o=e(0,.6,.2),s=e(0,1,.2);export{t as advancedMRRFactors,s as esriSymbologyMRRFactors,o as schematicMRRFactors,n as useSchematicPBR,r as useSchematicPBRI3S};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{VertexTextureCoordinates as e}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{Float3DrawUniform as r}from\"../../shaderModules/Float3DrawUniform.js\";import{Float3PassUniform as o}from\"../../shaderModules/Float3PassUniform.js\";import{glsl as s,If as t}from\"../../shaderModules/glsl.js\";import{Texture2DDrawUniform as a}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as i}from\"../../shaderModules/Texture2DPassUniform.js\";import{schematicMRRFactors as c}from\"../../../materials/pbrUtils.js\";import{BindType as l}from\"../../../../../webgl/BindType.js\";import{NoParameters as u}from\"../../../../../webgl/NoParameters.js\";var n;!function(e){e[e.Disabled=0]=\"Disabled\",e[e.Normal=1]=\"Normal\",e[e.Schematic=2]=\"Schematic\",e[e.Water=3]=\"Water\",e[e.WaterOnIntegratedMesh=4]=\"WaterOnIntegratedMesh\",e[e.Simplified=5]=\"Simplified\",e[e.TerrainWithWater=6]=\"TerrainWithWater\",e[e.COUNT=7]=\"COUNT\"}(n||(n={}));class d extends u{constructor(e,r){super(),this.textureOcclusion=e,this.textureMetallicRoughness=r,this.mrrFactors=c}}function m(c,u){const d=u.pbrMode,m=c.fragment;if(d!==n.Schematic&&d!==n.Disabled&&d!==n.Normal)return void m.code.add(s`void applyPBRFactors() {}`);if(d===n.Disabled)return void m.code.add(s`void applyPBRFactors() {}\r\nfloat getBakedOcclusion() { return 1.0; }`);if(d===n.Schematic)return void m.code.add(s`vec3 mrr = vec3(0.0, 0.6, 0.2);\r\nfloat occlusion = 1.0;\r\nvoid applyPBRFactors() {}\r\nfloat getBakedOcclusion() { return 1.0; }`);const{hasMetallicRoughnessTexture:p,hasMetallicRoughnessTextureTransform:h,hasOcclusionTexture:f,hasOcclusionTextureTransform:g,bindType:v}=u;(p||f)&&c.include(e,u),m.code.add(s`vec3 mrr;\r\nfloat occlusion;`),p&&m.uniforms.add(v===l.Pass?new i(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness)):new a(\"texMetallicRoughness\",(e=>e.textureMetallicRoughness))),f&&m.uniforms.add(v===l.Pass?new i(\"texOcclusion\",(e=>e.textureOcclusion)):new a(\"texOcclusion\",(e=>e.textureOcclusion))),m.uniforms.add(v===l.Pass?new o(\"mrrFactors\",(e=>e.mrrFactors)):new r(\"mrrFactors\",(e=>e.mrrFactors))),m.code.add(s`\r\n    ${t(p,s`void applyMetallicRoughness(vec2 uv) {\r\n            vec3 metallicRoughness = textureLookup(texMetallicRoughness, uv).rgb;\r\n            mrr[0] *= metallicRoughness.b;\r\n            mrr[1] *= metallicRoughness.g;\r\n          }`)}\r\n\r\n    ${t(f,\"void applyOcclusion(vec2 uv) { occlusion *= textureLookup(texOcclusion, uv).r; }\")}\r\n\r\n    float getBakedOcclusion() {\r\n      return ${f?\"occlusion\":\"1.0\"};\r\n    }\r\n\r\n    void applyPBRFactors() {\r\n      mrr = mrrFactors;\r\n      occlusion = 1.0;\r\n\r\n      ${t(p,`applyMetallicRoughness(${h?\"metallicRoughnessUV\":\"vuv0\"});`)}\r\n      ${t(f,`applyOcclusion(${g?\"occlusionUV\":\"vuv0\"});`)}\r\n    }\r\n  `)}export{n as PBRMode,d as PBRRenderingParameters,m as PhysicallyBasedRenderingParameters};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{Float3BindUniform as i}from\"../../shaderModules/Float3BindUniform.js\";import{glsl as n}from\"../../shaderModules/glsl.js\";function t(n){n.uniforms.add(new i(\"mainLightDirection\",(i=>i.lighting.mainLight.direction)))}function a(n){n.uniforms.add(new i(\"mainLightIntensity\",(i=>i.lighting.mainLight.intensity)))}function o(i){t(i.fragment),a(i.fragment),i.fragment.code.add(n`vec3 applyShading(vec3 shadingNormal, float shadow) {\r\nfloat dotVal = clamp(dot(shadingNormal, mainLightDirection), 0.0, 1.0);\r\nreturn mainLightIntensity * ((1.0 - shadow) * dotVal);\r\n}`)}export{t as addMainLightDirection,a as addMainLightIntensity,o as applyShading};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{glsl as e}from\"../../shaderModules/glsl.js\";function t(t){t.code.add(e`vec3 evaluateDiffuseIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float NdotNG) {\r\nreturn ((1.0 - NdotNG) * ambientGround + (1.0 + NdotNG) * ambientSky) * 0.5;\r\n}`),t.code.add(e`float integratedRadiance(float cosTheta2, float roughness) {\r\nreturn (cosTheta2 - 1.0) / (cosTheta2 * (1.0 - roughness * roughness) - 1.0);\r\n}`),t.code.add(e`vec3 evaluateSpecularIlluminationHemisphere(vec3 ambientGround, vec3 ambientSky, float RdotNG, float roughness) {\r\nfloat cosTheta2 = 1.0 - RdotNG * RdotNG;\r\nfloat intRadTheta = integratedRadiance(cosTheta2, roughness);\r\nfloat ground = RdotNG < 0.0 ? 1.0 - intRadTheta : 1.0 + intRadTheta;\r\nfloat sky = 2.0 - ground;\r\nreturn (ground * ambientGround + sky * ambientSky) * 0.5;\r\n}`)}export{t as AnalyticalSkyModel};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{AnalyticalSkyModel as e}from\"./AnalyticalSkyModel.glsl.js\";import{PBRMode as o}from\"./PhysicallyBasedRenderingParameters.glsl.js\";import{PiUtils as t}from\"./PiUtils.glsl.js\";import{glsl as a}from\"../../shaderModules/glsl.js\";function n(n,r){n.include(t),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic&&r.pbrMode!==o.Simplified&&r.pbrMode!==o.TerrainWithWater||(n.code.add(a`float normalDistribution(float NdotH, float roughness)\r\n{\r\nfloat a = NdotH * roughness;\r\nfloat b = roughness / (1.0 - NdotH * NdotH + a * a);\r\nreturn b * b * INV_PI;\r\n}`),n.code.add(a`const vec4 c0 = vec4(-1.0, -0.0275, -0.572,  0.022);\r\nconst vec4 c1 = vec4( 1.0,  0.0425,  1.040, -0.040);\r\nconst vec2 c2 = vec2(-1.04, 1.04);\r\nvec2 prefilteredDFGAnalytical(float roughness, float NdotV) {\r\nvec4 r = roughness * c0 + c1;\r\nfloat a004 = min(r.x * r.x, exp2(-9.28 * NdotV)) * r.x + r.y;\r\nreturn c2 * a004 + r.zw;\r\n}`)),r.pbrMode!==o.Normal&&r.pbrMode!==o.Schematic||(n.include(e),n.code.add(a`struct PBRShadingInfo\r\n{\r\nfloat NdotV;\r\nfloat LdotH;\r\nfloat NdotNG;\r\nfloat RdotNG;\r\nfloat NdotAmbDir;\r\nfloat NdotH_Horizon;\r\nvec3 skyRadianceToSurface;\r\nvec3 groundRadianceToSurface;\r\nvec3 skyIrradianceToSurface;\r\nvec3 groundIrradianceToSurface;\r\nfloat averageAmbientRadiance;\r\nfloat ssao;\r\nvec3 albedoLinear;\r\nvec3 f0;\r\nvec3 f90;\r\nvec3 diffuseColor;\r\nfloat metalness;\r\nfloat roughness;\r\n};`),n.code.add(a`vec3 evaluateEnvironmentIllumination(PBRShadingInfo inputs) {\r\nvec3 indirectDiffuse = evaluateDiffuseIlluminationHemisphere(inputs.groundIrradianceToSurface, inputs.skyIrradianceToSurface, inputs.NdotNG);\r\nvec3 indirectSpecular = evaluateSpecularIlluminationHemisphere(inputs.groundRadianceToSurface, inputs.skyRadianceToSurface, inputs.RdotNG, inputs.roughness);\r\nvec3 diffuseComponent = inputs.diffuseColor * indirectDiffuse * INV_PI;\r\nvec2 dfg = prefilteredDFGAnalytical(inputs.roughness, inputs.NdotV);\r\nvec3 specularColor = inputs.f0 * dfg.x + inputs.f90 * dfg.y;\r\nvec3 specularComponent = specularColor * indirectSpecular;\r\nreturn (diffuseComponent + specularComponent);\r\n}`))}function r(e,o){e.include(t),e.code.add(a`\r\n  struct PBRShadingWater {\r\n      float NdotL;   // cos angle between normal and light direction\r\n      float NdotV;   // cos angle between normal and view direction\r\n      float NdotH;   // cos angle between normal and half vector\r\n      float VdotH;   // cos angle between view direction and half vector\r\n      float LdotH;   // cos angle between light direction and half vector\r\n      float VdotN;   // cos angle between view direction and normal vector\r\n  };\r\n\r\n  float dtrExponent = ${o.useCustomDTRExponentForWater?\"2.2\":\"2.0\"};\r\n  `),e.code.add(a`vec3 fresnelReflection(float angle, vec3 f0, float f90) {\r\nreturn f0 + (f90 - f0) * pow(1.0 - angle, 5.0);\r\n}`),e.code.add(a`float normalDistributionWater(float NdotH, float roughness) {\r\nfloat r2 = roughness * roughness;\r\nfloat NdotH2 = NdotH * NdotH;\r\nfloat denom = pow((NdotH2 * (r2 - 1.0) + 1.0), dtrExponent) * PI;\r\nreturn r2 / denom;\r\n}`),e.code.add(a`float geometricOcclusionKelemen(float LoH) {\r\nreturn 0.25 / (LoH * LoH);\r\n}`),e.code.add(a`vec3 brdfSpecularWater(in PBRShadingWater props, float roughness, vec3 F0, float F0Max) {\r\nvec3  F = fresnelReflection(props.VdotH, F0, F0Max);\r\nfloat dSun = normalDistributionWater(props.NdotH, roughness);\r\nfloat V = geometricOcclusionKelemen(props.LdotH);\r\nfloat diffusionSunHaze = mix(roughness + 0.045, roughness + 0.385, 1.0 - props.VdotH);\r\nfloat strengthSunHaze  = 1.2;\r\nfloat dSunHaze = normalDistributionWater(props.NdotH, diffusionSunHaze) * strengthSunHaze;\r\nreturn ((dSun + dSunHaze) * V) * F;\r\n}`)}export{n as PhysicallyBasedRendering,r as PhysicallyBasedRenderingWater};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nconst e=3e5,o=5e5;export{o as distanceFadeEnd,e as distanceFadeStart};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{glsl as e}from\"../core/shaderModules/glsl.js\";function o(o){o.code.add(e`vec3 tonemapACES(vec3 x) {\r\nreturn clamp((x * (2.51 * x + 0.03)) / (x * (2.43 * x + 0.59) + 0.14), 0.0, 1.0);\r\n}`)}export{o as ToneMapping};\r\n"],
  "mappings": "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",
  "names": ["n", "e", "r", "t", "o", "s", "c", "t", "o", "s", "n", "e", "c", "u", "m", "n", "a", "e", "o", "t", "n", "o", "a", "t", "n", "r", "t", "e", "o", "e", "o", "o"]
}
