import {
  e
} from "./chunk-UVUJMAAB.js";
import {
  a,
  c as c2
} from "./chunk-TB5DDCF3.js";
import {
  h,
  i,
  m,
  p as p2,
  y
} from "./chunk-T4QXFCFF.js";
import {
  u2 as u
} from "./chunk-BFUOEOXA.js";
import {
  S,
  c,
  l
} from "./chunk-LYSDGL5S.js";
import {
  C
} from "./chunk-6PV45IYU.js";
import {
  p
} from "./chunk-ZWFY3WY5.js";
import {
  I,
  Rt
} from "./chunk-LQFTAGIV.js";
import {
  s
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/symbols/support/webStyleSymbolUtils.js
function h2(t, e2, o) {
  const l2 = t.name;
  return null == l2 ? Promise.reject(new s("symbolstyleutils:style-symbol-reference-name-missing", "Missing name in style symbol reference")) : "Esri2DPointSymbolsStyle" === t.styleName ? U(l2, e2, o) : i(t, e2, o).then((t2) => j(t2, l2, e2, y, o));
}
function g(t, e2) {
  return e2.items.find((e3) => e3.name === t);
}
async function j(i2, u2, f, h3, j2) {
  const U2 = null != f?.portal ? f.portal : C.getDefault(), w = { portal: U2, url: I(i2.baseUrl) }, N = g(u2, i2.data);
  if (!N) throw new s("symbolstyleutils:symbol-name-not-found", `The symbol name '${u2}' could not be found`, { symbolName: u2 });
  const S2 = j2?.acceptedFormats ?? e, D = h3(N, S2);
  if (!D) throw new s("symbolstyleutils:symbol-reference-no-accepted-format", `The symbol name '${u2}' does not have an accepted format (one of ${S2})`, { symbolName: u2 });
  const { url: $, format: v } = D;
  let E = p($, w), O = N.thumbnail?.href ?? null;
  const P = N.thumbnail?.imageData;
  c2() && (E = a(E) ?? "", O = a(O));
  const T = { portal: U2, url: I(Rt(E)), origin: "portal-item" };
  return p2(E, j2).then((t) => {
    const e2 = "cim" === v ? m(t.data) : t.data, r = u(e2, T);
    if (r && S(r)) {
      if (O) {
        const t2 = p(O, w);
        r.thumbnail = new c({ url: t2 });
      } else P && (r.thumbnail = new c({ url: `data:image/png;base64,${P}` }));
      i2.styleUrl ? r.styleOrigin = new l({ portal: f.portal, styleUrl: i2.styleUrl, name: u2 }) : i2.styleName && (r.styleOrigin = new l({ portal: f.portal, styleName: i2.styleName, name: u2 }));
    }
    return r;
  });
}
function U(t, e2, r) {
  const s2 = h.replaceAll(/\{SymbolName\}/gi, t), a2 = null != e2.portal ? e2.portal : C.getDefault();
  return p2(s2, r).then((t2) => {
    const e3 = m(t2.data);
    return u(e3, { portal: a2, url: I(Rt(s2)), origin: "portal-item" });
  });
}

export {
  h2 as h,
  g,
  j
};
//# sourceMappingURL=chunk-KQZAPZ6K.js.map
