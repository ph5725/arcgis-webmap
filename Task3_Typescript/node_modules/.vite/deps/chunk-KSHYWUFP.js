import {
  t as t2
} from "./chunk-NINXPPRT.js";
import {
  P as P2,
  Z,
  d,
  z as z3
} from "./chunk-N3H25ARD.js";
import {
  l as l2
} from "./chunk-NJQ3IQ46.js";
import {
  t as t4
} from "./chunk-JHOESKXH.js";
import {
  t as t5
} from "./chunk-WEBPFKVW.js";
import {
  D as D2,
  u
} from "./chunk-4NNCML5U.js";
import {
  f as f3,
  j
} from "./chunk-XMAXGUBN.js";
import {
  $,
  $e,
  B,
  Be,
  E,
  G,
  H,
  He,
  I,
  K,
  Ke,
  L,
  Ne,
  Q,
  Qe,
  Se,
  Te,
  Ue,
  W,
  We,
  X,
  ae,
  de,
  fe,
  h as h2,
  he,
  i as i4,
  ie,
  je,
  ke,
  ne,
  pe,
  q,
  re,
  te,
  ue,
  we,
  z as z2
} from "./chunk-Q7K6M7G6.js";
import {
  b as b2
} from "./chunk-EK343S5L.js";
import {
  t as t3
} from "./chunk-4J6GMCJZ.js";
import {
  p
} from "./chunk-VZZR2ZMJ.js";
import {
  R,
  i as i3
} from "./chunk-F5BDMX7A.js";
import {
  h,
  i as i2,
  l,
  r as r2
} from "./chunk-NY6S6EMV.js";
import {
  a as a2,
  e,
  o,
  r
} from "./chunk-AQGMTI4V.js";
import {
  e as e2,
  n as n3,
  o as o2,
  r as r3,
  t
} from "./chunk-6QA2BVC5.js";
import {
  f as f2
} from "./chunk-N3A2BVTW.js";
import {
  P,
  m
} from "./chunk-52HWRRRQ.js";
import {
  a
} from "./chunk-VNTEV3V4.js";
import {
  y
} from "./chunk-OGOQOMMV.js";
import {
  n as n2
} from "./chunk-HCYE6OE4.js";
import {
  v
} from "./chunk-FPSA4NFH.js";
import {
  DateTime
} from "./chunk-UY6B6IVT.js";
import {
  C
} from "./chunk-6PV45IYU.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _,
  c
} from "./chunk-Q6XRAGMA.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  i
} from "./chunk-Y2ZIOB7Y.js";
import {
  b
} from "./chunk-N3XLUQJI.js";
import {
  D
} from "./chunk-LQFTAGIV.js";
import {
  S,
  n
} from "./chunk-GZ2P4SCJ.js";

// node_modules/@arcgis/core/arcade/ArcadeModuleLoader.js
var s = class {
  constructor(s4, t8) {
    this._moduleSingletons = s4, this._syntaxModules = t8;
  }
  loadLibrary(s4) {
    if (null == this._syntaxModules) return null;
    const t8 = this._syntaxModules[s4];
    return t8 ? { syntax: t8.script, uri: t8.uri } : null;
  }
};

// node_modules/@arcgis/core/arcade/containerUtils.js
var p2 = { point: ["hasZ", "hasM", "spatialReference", "type", "x", "y", "z", "m"], multipoint: ["hasZ", "hasM", "spatialReference", "type", "points"], polyline: ["hasZ", "hasM", "spatialReference", "type", "paths"], polygon: ["hasZ", "hasM", "spatialReference", "type", "rings"], extent: ["hasZ", "hasM", "spatialReference", "type", "xmin", "xmax", "ymin", "ymax", "zmin", "zmax", "mmin", "mmax"] };
function f4(e4) {
  return p2[e4.type];
}
var m2 = 0;
function d2(s4, i7, c3, o4, u3 = 1) {
  let h6;
  switch (i7 = i7.toLowerCase()) {
    case "hasz": {
      const e4 = s4.hasZ;
      return void 0 !== e4 && e4;
    }
    case "hasm": {
      const e4 = s4.hasM;
      return void 0 !== e4 && e4;
    }
    case "spatialreference": {
      let a5 = s4.spatialReference._arcadeCacheId;
      if (void 0 === a5) {
        let e4 = true;
        b.isFrozen(s4.spatialReference) && (e4 = false), e4 && (m2++, s4.spatialReference._arcadeCacheId = m2, a5 = m2);
      }
      const t8 = new j({ __proto__: null, wkt: s4.spatialReference.wkt, wkid: s4.spatialReference.wkid });
      return void 0 !== a5 && (t8._arcadeCacheId = "SPREF" + a5.toString()), t8;
    }
  }
  switch (s4.type) {
    case "extent":
      switch (i7) {
        case "xmin":
        case "xmax":
        case "ymin":
        case "ymax":
        case "zmin":
        case "zmax":
        case "mmin":
        case "mmax": {
          const e4 = s4[i7];
          return void 0 !== e4 ? e4 : null;
        }
        case "type":
          return "Extent";
      }
      break;
    case "polygon":
      switch (i7) {
        case "rings":
          h6 = s4.cache._arcadeCacheId, void 0 === h6 && (m2++, h6 = m2, s4.cache._arcadeCacheId = h6);
          return new h2(s4.rings, s4.spatialReference, true === s4.hasZ, true === s4.hasM, h6);
        case "type":
          return "Polygon";
      }
      break;
    case "point":
      switch (i7) {
        case "x":
        case "y":
        case "z":
        case "m":
          return s4[i7] ?? null;
        case "type":
          return "Point";
      }
      break;
    case "polyline":
      switch (i7) {
        case "paths":
          h6 = s4.cache._arcadeCacheId, void 0 === h6 && (m2++, h6 = m2, s4.cache._arcadeCacheId = h6);
          return new h2(s4.paths, s4.spatialReference, true === s4.hasZ, true === s4.hasM, h6);
        case "type":
          return "Polyline";
      }
      break;
    case "multipoint":
      switch (i7) {
        case "points":
          h6 = s4.cache._arcadeCacheId, void 0 === h6 && (m2++, h6 = m2, s4.cache._arcadeCacheId = h6);
          return new i4(s4.points, s4.spatialReference, true === s4.hasZ, true === s4.hasM, h6, 1);
        case "type":
          return "Multipoint";
      }
  }
  if (1 === u3) throw new a2(c3, r.InvalidIdentifier, o4);
  return 2 === u3 ? { keystate: "notfound" } : null;
}
function y2(e4, a5) {
  let t8, r6 = e4;
  if (null == r6) return null;
  if (o2(a5)) t8 = a5;
  else if (te(a5)) t8 = a5.toArray();
  else {
    if (null == a5) return null;
    t8 = [a5];
  }
  for (const n6 of t8) {
    if (Q(r6)) {
      if (false === e2(n6)) return null;
      if (!r6.hasField(n6)) return null;
      r6 = r6.field(n6);
    } else if (H(r6)) {
      if (false === e2(n6)) return null;
      r6 = d2(r6, n6, null, null, 0);
    } else if (o2(r6)) {
      if (false === n3(n6)) return null;
      r6 = n6 >= 0 ? r6[n6] : r6[r6.length + n6];
    } else {
      if (!te(r6)) return null;
      if (false === n3(n6)) return null;
      r6 = n6 >= 0 ? r6.get(n6) : r6.get(r6.length() + n6);
    }
    if (null == r6) return null;
  }
  return r6;
}

// node_modules/@arcgis/core/arcade/treeAnalysis.js
var n4 = { all: { min: 2, max: 2 }, time: { min: 0, max: 4 }, dateonly: { min: 0, max: 3 }, getenvironment: { min: 0, max: 0 }, none: { min: 2, max: 2 }, any: { min: 2, max: 2 }, reduce: { min: 2, max: 3 }, map: { min: 2, max: 2 }, filter: { min: 2, max: 2 }, fromcodepoint: { min: 1, max: -1 }, fromcharcode: { min: 1, max: -1 }, tocodepoint: { min: 1, max: 2 }, tocharcode: { min: 1, max: 2 }, concatenate: { min: 0, max: -1 }, expects: { min: 1, max: -1 }, getfeatureset: { min: 1, max: 2 }, week: { min: 1, max: 2 }, fromjson: { min: 1, max: 1 }, length3d: { min: 1, max: 2 }, tohex: { min: 1, max: 1 }, hash: { min: 1, max: 1 }, timezone: { min: 1, max: 1 }, timezoneoffset: { min: 1, max: 1 }, changetimezone: { min: 2, max: 2 }, isoweek: { min: 1, max: 1 }, isoweekday: { min: 1, max: 1 }, hasvalue: { min: 2, max: 2 }, isomonth: { min: 1, max: 1 }, isoyear: { min: 1, max: 1 }, resize: { min: 2, max: 3 }, slice: { min: 0, max: -1 }, splice: { min: 0, max: -1 }, push: { min: 2, max: 2 }, pop: { min: 1, max: 1 }, includes: { min: 2, max: 2 }, array: { min: 0, max: 2 }, front: { min: 1, max: 1 }, back: { min: 1, max: 1 }, insert: { min: 3, max: 3 }, erase: { min: 2, max: 2 }, split: { min: 2, max: 4 }, guid: { min: 0, max: 1 }, standardizeguid: { min: 2, max: 2 }, today: { min: 0, max: 0 }, angle: { min: 2, max: 3 }, bearing: { min: 2, max: 3 }, urlencode: { min: 1, max: 1 }, now: { min: 0, max: 0 }, timestamp: { min: 0, max: 0 }, day: { min: 1, max: 1 }, month: { min: 1, max: 1 }, year: { min: 1, max: 1 }, hour: { min: 1, max: 1 }, second: { min: 1, max: 1 }, millisecond: { min: 1, max: 1 }, minute: { min: 1, max: 1 }, weekday: { min: 1, max: 1 }, toutc: { min: 1, max: 1 }, tolocal: { min: 1, max: 1 }, date: { min: 0, max: 8 }, datediff: { min: 2, max: 4 }, dateadd: { min: 2, max: 3 }, trim: { min: 1, max: 1 }, text: { min: 1, max: 2 }, left: { min: 2, max: 2 }, right: { min: 2, max: 2 }, mid: { min: 2, max: 3 }, upper: { min: 1, max: 1 }, proper: { min: 1, max: 2 }, lower: { min: 1, max: 1 }, find: { min: 2, max: 3 }, iif: { min: 3, max: 3 }, decode: { min: 2, max: -1 }, when: { min: 2, max: -1 }, defaultvalue: { min: 2, max: 3 }, isempty: { min: 1, max: 1 }, domaincode: { min: 2, max: 4 }, domainname: { min: 2, max: 4 }, polygon: { min: 1, max: 1 }, point: { min: 1, max: 1 }, polyline: { min: 1, max: 1 }, extent: { min: 1, max: 1 }, multipoint: { min: 1, max: 1 }, ringisclockwise: { min: 1, max: 1 }, geometry: { min: 1, max: 1 }, count: { min: 0, max: -1 }, number: { min: 1, max: 2 }, acos: { min: 1, max: 1 }, asin: { min: 1, max: 1 }, atan: { min: 1, max: 1 }, atan2: { min: 2, max: 2 }, ceil: { min: 1, max: 2 }, floor: { min: 1, max: 2 }, round: { min: 1, max: 2 }, cos: { min: 1, max: 1 }, exp: { min: 1, max: 1 }, log: { min: 1, max: 1 }, min: { min: 0, max: -1 }, constrain: { min: 3, max: 3 }, console: { min: 0, max: -1 }, max: { min: 0, max: -1 }, pow: { min: 2, max: 2 }, random: { min: 0, max: 0 }, sqrt: { min: 1, max: 1 }, sin: { min: 1, max: 1 }, tan: { min: 1, max: 1 }, abs: { min: 1, max: 1 }, isnan: { min: 1, max: 1 }, stdev: { min: 0, max: -1 }, average: { min: 0, max: -1 }, mean: { min: 0, max: -1 }, sum: { min: 0, max: -1 }, variance: { min: 0, max: -1 }, distinct: { min: 0, max: -1 }, first: { min: 1, max: 1 }, top: { min: 2, max: 2 }, boolean: { min: 1, max: 1 }, dictionary: { min: 0, max: -1 }, typeof: { min: 1, max: 1 }, reverse: { min: 1, max: 1 }, replace: { min: 3, max: 4 }, sort: { min: 1, max: 2 }, feature: { min: 1, max: -1 }, haskey: { min: 2, max: 2 }, indexof: { min: 2, max: 2 }, disjoint: { min: 2, max: 2 }, intersects: { min: 2, max: 2 }, touches: { min: 2, max: 2 }, crosses: { min: 2, max: 2 }, within: { min: 2, max: 2 }, contains: { min: 2, max: 2 }, overlaps: { min: 2, max: 2 }, equals: { min: 2, max: 2 }, relate: { min: 3, max: 3 }, intersection: { min: 2, max: 2 }, union: { min: 1, max: 2 }, difference: { min: 2, max: 2 }, symmetricdifference: { min: 2, max: 2 }, clip: { min: 2, max: 2 }, cut: { min: 2, max: 2 }, area: { min: 1, max: 2 }, areageodetic: { min: 1, max: 2 }, length: { min: 1, max: 2 }, lengthgeodetic: { min: 1, max: 2 }, distancegeodetic: { min: 2, max: 3 }, distance: { min: 2, max: 3 }, densify: { min: 2, max: 3 }, densifygeodetic: { min: 2, max: 3 }, generalize: { min: 2, max: 4 }, buffer: { min: 2, max: 3 }, buffergeodetic: { min: 2, max: 3 }, offset: { min: 2, max: 6 }, rotate: { min: 2, max: 3 }, issimple: { min: 1, max: 1 }, simplify: { min: 1, max: 1 }, convexhull: { min: 1, max: 1 }, centroid: { min: 1, max: 1 }, nearestcoordinate: { min: 2, max: 2 }, nearestvertex: { min: 2, max: 2 }, isselfintersecting: { min: 1, max: 1 }, multiparttosinglepart: { min: 1, max: 1 }, setgeometry: { min: 2, max: 2 }, portal: { min: 1, max: 1 }, getuser: { min: 0, max: 2 }, subtypes: { min: 1, max: 1 }, subtypecode: { min: 1, max: 1 }, subtypename: { min: 1, max: 1 }, domain: { min: 2, max: 3 }, convertdirection: { min: 3, max: 3 }, sqltimestamp: { min: 1, max: 3 }, schema: { min: 1, max: 1 }, measuretocoordinate: { min: 2, max: 2 }, distancetocoordinate: { min: 2, max: 2 }, pointtocoordinate: { min: 2, max: 2 } };
var a3 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
var t6 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
for (const k3 of ["pi", "infinity"]) t6.constantDefinitions.set(k3, { type: "constant" }), a3.constantDefinitions.set(k3, { type: "constant" });
t6.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "newline", type: "constant" }] }), a3.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "newline", type: "constant" }] });
for (const k3 in n4) {
  const e4 = n4[k3];
  t6.functionDefinitions.set(k3, { overloads: [{ type: "function", parametersInfo: { min: e4.min, max: e4.max } }] }), a3.functionDefinitions.set(k3, { overloads: [{ type: "function", parametersInfo: { min: e4.min, max: e4.max } }] });
}
var i5 = /* @__PURE__ */ new Set(["attachments", "featureset", "featuresetbyassociation", "featuresetbyid", "featuresetbyname", "featuresetbyportalitem", "featuresetbyrelationshipname", "featuresetbyurl", "filterbysubtypecode", "getfeatureset", "getfeaturesetinfo", "getuser", "knowledgegraphbyportalitem", "querygraph"]);
var m3 = /* @__PURE__ */ new Set(["translatetext"]);
var s2 = /* @__PURE__ */ new Set(["area", "areageodetic", "buffer", "buffergeodetic", "centroid", "clip", "contains", "convexhull", "crosses", "cut", "densify", "densifygeodetic", "difference", "disjoint", "distance", "distancegeodetic", "distancetocoordinate", "equals", "generalize", "intersection", "intersects", "isselfintersecting", "issimple", "length", "length3d", "lengthgeodetic", "measuretocoordinate", "multiparttosinglepart", "nearestcoordinate", "nearestvertex", "offset", "overlaps", "pointtocoordinate", "relate", "rotate", "simplify", "symmetricdifference", "touches", "union", "within"]);
function o3(e4, n6) {
  const i7 = "sync" === n6 ? a3 : t6;
  i7.functionDefinitions.has(e4.name.toLowerCase()) ? i7.functionDefinitions.get(e4.name.toLowerCase())?.overloads.push({ type: "function", parametersInfo: { min: e4.min, max: e4.max } }) : i7.functionDefinitions.set(e4.name.toLowerCase(), { overloads: [{ type: "function", parametersInfo: { min: e4.min, max: e4.max } }] });
}
function r4(e4, n6) {
  if (e4) for (const a5 of e4) c2(a5, n6);
}
function c2(e4, n6) {
  if (e4 && false !== n6(e4)) switch (e4.type) {
    case "ImportDeclaration":
      r4(e4.specifiers, n6), c2(e4.source, n6);
      break;
    case "ExportNamedDeclaration":
      c2(e4.declaration, n6);
      break;
    case "ArrayExpression":
      r4(e4.elements, n6);
      break;
    case "AssignmentExpression":
    case "BinaryExpression":
    case "LogicalExpression":
      c2(e4.left, n6), c2(e4.right, n6);
      break;
    case "BlockStatement":
    case "Program":
      r4(e4.body, n6);
      break;
    case "BreakStatement":
    case "ContinueStatement":
    case "EmptyStatement":
    case "Identifier":
    case "Literal":
      break;
    case "CallExpression":
      c2(e4.callee, n6), r4(e4.arguments, n6);
      break;
    case "ExpressionStatement":
      c2(e4.expression, n6);
      break;
    case "ForInStatement":
    case "ForOfStatement":
      c2(e4.left, n6), c2(e4.right, n6), c2(e4.body, n6);
      break;
    case "ForStatement":
      c2(e4.init, n6), c2(e4.test, n6), c2(e4.update, n6), c2(e4.body, n6);
      break;
    case "WhileStatement":
      c2(e4.test, n6), c2(e4.body, n6);
      break;
    case "FunctionDeclaration":
      c2(e4.id, n6), r4(e4.params, n6), c2(e4.body, n6);
      break;
    case "IfStatement":
      c2(e4.test, n6), c2(e4.consequent, n6), c2(e4.alternate, n6);
      break;
    case "MemberExpression":
      c2(e4.object, n6), c2(e4.property, n6);
      break;
    case "ObjectExpression":
      r4(e4.properties, n6);
      break;
    case "Property":
      c2(e4.key, n6), c2(e4.value, n6);
      break;
    case "ReturnStatement":
    case "UnaryExpression":
    case "UpdateExpression":
      c2(e4.argument, n6);
      break;
    case "VariableDeclaration":
      r4(e4.declarations, n6);
      break;
    case "VariableDeclarator":
      c2(e4.id, n6), c2(e4.init, n6);
      break;
    case "TemplateLiteral":
      r4(e4.expressions, n6), r4(e4.quasis, n6);
  }
}
function x(e4) {
  return "Literal" === e4?.type && "string" == typeof e4.value;
}
function l3(e4, n6) {
  let a5 = false;
  const t8 = n6.toLowerCase();
  return c2(e4, (e5) => !a5 && ("Identifier" === e5.type && e5.name && e5.name.toLowerCase() === t8 && (a5 = true), true)), a5;
}
function u2(n6) {
  const a5 = [];
  return c2(n6, (n7) => ("ImportDeclaration" === n7.type && n7.source && n7.source.value && a5.push({ libname: t2(n7.specifiers[0].local), source: n7.source.value }), true)), a5;
}
function p3(e4, n6) {
  let a5 = false;
  const t8 = n6.toLowerCase();
  return c2(e4, (e5) => !a5 && ("CallExpression" !== e5.type || "Identifier" !== e5.callee.type || !e5.callee.name || e5.callee.name.toLowerCase() !== t8 || (a5 = true, false))), a5;
}
function f5(n6) {
  const a5 = [];
  return c2(n6, (n7) => "MemberExpression" !== n7.type || "Identifier" !== n7.object.type || (("Identifier" === n7.property.type || "Literal" === n7.property.type && "string" == typeof n7.property.value) && a5.push({ varId: t2(n7.object), memberId: t2(n7.property) }), false)), a5;
}
function d3(n6) {
  const a5 = [];
  return c2(n6, (n7) => {
    if ("CallExpression" === n7.type && "Identifier" === n7.callee.type) switch (t2(n7.callee)) {
      case "expects":
        if (n7.arguments.length > 1) {
          const [t8, ...i7] = n7.arguments;
          if ("Identifier" === t8?.type) {
            const n8 = t2(t8);
            for (const e4 of i7) x(e4) && a5.push({ varId: n8, memberNamePattern: e4.value });
          }
        }
        return false;
      case "domainname":
      case "domaincode":
      case "domain":
      case "haskey":
      case "hasvalue":
        if (n7.arguments.length >= 2) {
          const [t8, i7] = n7.arguments;
          "Identifier" === t8?.type && x(i7) && a5.push({ varId: t2(t8), memberNamePattern: i7.value });
        }
        return true;
      case "defaultvalue":
        if (n7.arguments.length > 2) {
          const [t8, i7] = n7.arguments;
          "Identifier" === t8?.type && x(i7) && a5.push({ varId: t2(t8), memberNamePattern: i7.value });
        }
        return true;
      default:
        return true;
    }
    return "MemberExpression" !== n7.type || "Identifier" !== n7.object.type || (n7.computed ? !!x(n7.property) && (a5.push({ varId: t2(n7.object), memberNamePattern: n7.property.value }), false) : (a5.push({ varId: t2(n7.object), memberNamePattern: n7.property.name }), false));
  }), a5;
}
function g(e4) {
  const n6 = [];
  return c2(e4, (e5) => ("CallExpression" === e5.type && "Identifier" === e5.callee.type && n6.push(e5.callee.name.toLowerCase()), true)), n6;
}
function b3(e4, n6 = []) {
  let a5 = null;
  if (void 0 === e4.usesFeatureSet) {
    null === a5 && (a5 = g(e4)), e4.usesFeatureSet = false;
    for (let n7 = 0; n7 < a5.length; n7++) i5.has(a5[n7]) && (e4.usesFeatureSet = true, e4.isAsync = true);
    if (false === e4.usesFeatureSet && n6 && n6.length > 0) {
      for (const a6 of n6) if (l3(e4, a6)) {
        e4.usesFeatureSet = true, e4.isAsync = true;
        break;
      }
    }
  }
  if (void 0 === e4.isAsync && (null === a5 && (a5 = g(e4)), a5.some((e5) => m3.has(e5)) && (e4.isAsync = true)), void 0 === e4.usesModules) {
    e4.usesModules = false;
    u2(e4).length > 0 && (e4.usesModules = true);
  }
  if (void 0 === e4.usesGeometry) {
    e4.usesGeometry = false, null === a5 && (a5 = g(e4));
    for (let n7 = 0; n7 < a5.length; n7++) s2.has(a5[n7]) && (e4.usesGeometry = true);
  }
}

// node_modules/@arcgis/core/chunks/array.js
function F(F4) {
  function p8(n6, o4, i7) {
    if (n6 instanceof t3) return n6.toArray();
    if (o2(n6)) return n6;
    throw new a2(o4, r.InvalidParameter, i7);
  }
  function y4(n6, t8) {
    const r6 = n6.length, e4 = Math.floor(r6 / 2);
    return 0 === r6 ? [] : 1 === r6 ? [n6[0]] : v3(y4(n6.slice(0, e4), t8), y4(n6.slice(e4, r6), t8), t8);
  }
  function v3(n6, t8, r6) {
    const e4 = [];
    for (; n6.length > 0 || t8.length > 0; ) if (n6.length > 0 && t8.length > 0) {
      let o4 = r6(n6[0], t8[0]);
      isNaN(o4) && (o4 = 0), o4 <= 0 ? (e4.push(n6[0]), n6 = n6.slice(1)) : (e4.push(t8[0]), t8 = t8.slice(1));
    } else n6.length > 0 ? (e4.push(n6[0]), n6 = n6.slice(1)) : t8.length > 0 && (e4.push(t8[0]), t8 = t8.slice(1));
    return e4;
  }
  async function P5(n6, t8) {
    const r6 = n6.length, e4 = Math.floor(r6 / 2);
    if (0 === r6) return [];
    if (1 === r6) return [n6[0]];
    const o4 = [await P5(n6.slice(0, e4), t8), await P5(n6.slice(e4, r6), t8)];
    return I4(o4[0], o4[1], t8, []);
  }
  async function I4(n6, t8, r6, e4) {
    const o4 = e4;
    if (n6.length > 0 || t8.length > 0) {
      if (n6.length > 0 && t8.length > 0) {
        let i7 = await r6(n6[0], t8[0]);
        return isNaN(i7) && (i7 = 1), i7 <= 0 ? (o4.push(n6[0]), n6 = n6.slice(1)) : (o4.push(t8[0]), t8 = t8.slice(1)), I4(n6, t8, r6, e4);
      }
      return n6.length > 0 ? (o4.push(n6[0]), I4(n6 = n6.slice(1), t8, r6, e4)) : (o4.push(t8[0]), I4(n6, t8 = t8.slice(1), r6, e4));
    }
    return e4;
  }
  function N2(n6, e4, i7, a5) {
    ae(i7, 1, 2, n6, e4);
    let s4 = i7[0];
    if (te(s4) && (s4 = s4.toArray()), false === o2(s4)) throw new a2(n6, r.InvalidParameter, e4);
    if (i7.length > 1) {
      if (false === G(i7[1])) throw new a2(n6, r.InvalidParameter, e4);
      let o4 = s4;
      const u3 = i7[1].createFunction(n6);
      return a5 ? P5(o4, u3) : (o4 = y4(o4, (n7, t8) => u3(n7, t8)), o4);
    }
    let h6 = s4;
    if (0 === h6.length) return [];
    const g2 = {};
    for (let t8 = 0; t8 < h6.length; t8++) {
      const n7 = E(h6[t8]);
      "" !== n7 && (g2[n7] = true);
    }
    if (true === g2.Array || true === g2.Dictionary || true === g2.Feature || true === g2.Voxel || true === g2.Point || true === g2.Polygon || true === g2.Polyline || true === g2.Multipoint || true === g2.Extent || true === g2.Function) return h6.slice();
    let m5 = 0, F5 = "";
    for (const t8 in g2) m5++, F5 = t8;
    return h6 = m5 > 1 || "String" === F5 ? y4(h6, (n7, t8) => {
      if (null == n7 || n7 === I) return null == t8 || t8 === I ? 0 : 1;
      if (null == t8 || t8 === I) return -1;
      const r6 = pe(n7), e5 = pe(t8);
      return r6 < e5 ? -1 : r6 === e5 ? 0 : 1;
    }) : "Number" === F5 ? y4(h6, (n7, t8) => n7 - t8) : "Boolean" === F5 ? y4(h6, (n7, t8) => n7 === t8 ? 0 : t8 ? -1 : 1) : "Date" === F5 ? y4(h6, (n7, t8) => n7.toNumber() - t8.toNumber()) : h6.slice(), h6;
  }
  F4.functions.array = function(e4, c3) {
    return F4.standardFunction(e4, c3, (s4, l5, f8) => {
      if (ae(f8, 0, 2, e4, c3), 0 === f8.length) return [];
      if (1 === f8.length && null === f8[0]) return [];
      if (o2(f8[0])) {
        if (2 === f8.length && false === t(f8[1])) throw new a2(e4, r.InvalidParameter, c3);
        return true === q(f8[1], false) ? f3(f8[0]) : f8[0].slice();
      }
      if (te(f8[0])) {
        if (2 === f8.length && false === t(f8[1])) throw new a2(e4, r.InvalidParameter, c3);
        return true === q(f8[1], false) ? f3(f8[0]) : f8[0].toArray().slice();
      }
      const d4 = Ne(f8[0]);
      if (isNaN(d4) || false === r3(d4)) throw new a2(e4, r.InvalidParameter, c3);
      const h6 = q(f8[1], null), F5 = new Array(d4);
      return F5.fill(h6), F5;
    });
  }, F4.functions.front = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, a5, c3) => {
      if (ae(c3, 1, 1, n6, e4), te(c3[0])) {
        if (c3[0].length() <= 0) throw new a2(n6, r.OutOfBounds, e4);
        return c3[0].get(0);
      }
      if (o2(c3[0])) {
        if (c3[0].length <= 0) throw new a2(n6, r.OutOfBounds, e4);
        return c3[0][0];
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.back = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, a5, c3) => {
      if (ae(c3, 1, 1, n6, e4), te(c3[0])) {
        if (c3[0].length() <= 0) throw new a2(n6, r.OutOfBounds, e4);
        return c3[0].get(c3[0].length() - 1);
      }
      if (o2(c3[0])) {
        if (c3[0].length <= 0) throw new a2(n6, r.OutOfBounds, e4);
        return c3[0][c3[0].length - 1];
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.push = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, u3, a5) => {
      if (ae(a5, 1, 2, n6, e4), o2(a5[0])) return a5[0][a5[0].length] = a5[1], a5[0].length;
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.pop = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, u3, a5) => {
      if (ae(a5, 1, 1, n6, e4), o2(a5[0])) {
        if (a5[0].length <= 0) throw new a2(n6, r.OutOfBounds, e4);
        const o4 = a5[0][a5[0].length - 1];
        return a5[0].length = a5[0].length - 1, o4;
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.erase = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, u3, s4) => {
      if (ae(s4, 2, 2, n6, e4), o2(s4[0])) {
        let o4 = Ne(s4[1]);
        if (isNaN(o4) || false === r3(o4)) throw new a2(n6, r.InvalidParameter, e4);
        const i8 = s4[0];
        if (i8.length <= 0) throw new a2(n6, r.OutOfBounds, e4);
        if (o4 < 0 && (o4 = i8.length + o4), o4 < 0) throw new a2(n6, r.OutOfBounds, e4);
        if (o4 >= i8.length) throw new a2(n6, r.OutOfBounds, e4);
        return i8.splice(o4, 1), I;
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.insert = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, u3, s4) => {
      if (ae(s4, 3, 3, n6, e4), o2(s4[0])) {
        const o4 = Ne(s4[1]);
        if (isNaN(o4) || false === r3(o4)) throw new a2(n6, r.InvalidParameter, e4);
        const i8 = s4[2], u4 = s4[0];
        if (o4 > u4.length) throw new a2(n6, r.OutOfBounds, e4);
        if (o4 < 0 && o4 < -1 * u4.length) throw new a2(n6, r.OutOfBounds, e4);
        return o4 === u4.length ? (u4[o4] = i8, I) : (u4.splice(o4, 0, i8), I);
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.resize = function(n6, e4) {
    return F4.standardFunction(n6, e4, (u3, s4, l5) => {
      if (ae(l5, 2, 3, n6, e4), o2(l5[0])) {
        const o4 = Ne(l5[1]);
        if (isNaN(o4) || false === r3(o4)) throw new a2(n6, r.InvalidParameter, e4);
        if (o4 < 0) throw new a2(n6, r.InvalidParameter, e4);
        const u4 = q(l5[2], null), s5 = l5[0];
        if (s5.length >= o4) return s5.length = o4, I;
        const f8 = s5.length;
        s5.length = o4;
        for (let n7 = f8; n7 < s5.length; n7++) s5[n7] = u4;
        return I;
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.includes = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, a5, c3) => {
      if (ae(c3, 2, 2, n6, e4), o2(c3[0])) {
        const n7 = c3[1];
        return !!c3[0].some((t8) => de(t8, n7));
      }
      if (te(c3[0])) {
        const n7 = c3[1];
        return !!c3[0].toArray().some((t8) => de(t8, n7));
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.slice = function(n6, e4) {
    return F4.standardFunction(n6, e4, (c3, s4, l5) => {
      if (ae(l5, 1, 3, n6, e4), o2(l5[0])) {
        const o4 = Ne(q(l5[1], 0)), u3 = Ne(q(l5[2], l5[0].length));
        if (isNaN(o4) || false === r3(o4)) throw new a2(n6, r.InvalidParameter, e4);
        if (isNaN(u3) || false === r3(u3)) throw new a2(n6, r.InvalidParameter, e4);
        return l5[0].slice(o4, u3);
      }
      if (te(l5[0])) {
        const o4 = l5[0], u3 = Ne(q(l5[1], 0)), c4 = Ne(q(l5[2], o4.length()));
        if (isNaN(u3) || false === r3(u3)) throw new a2(n6, r.InvalidParameter, e4);
        if (isNaN(c4) || false === r3(c4)) throw new a2(n6, r.InvalidParameter, e4);
        return o4.toArray().slice(u3, c4);
      }
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.splice = function(n6, t8) {
    return F4.standardFunction(n6, t8, (n7, t9, r6) => {
      const e4 = [];
      for (let o4 = 0; o4 < r6.length; o4++) o2(r6[o4]) ? e4.push(...r6[o4]) : te(r6[o4]) ? e4.push(...r6[o4].toArray()) : e4.push(r6[o4]);
      return e4;
    });
  }, F4.functions.top = function(n6, e4) {
    return F4.standardFunction(n6, e4, (i7, c3, s4) => {
      if (ae(s4, 2, 2, n6, e4), o2(s4[0])) return Ne(s4[1]) >= s4[0].length ? s4[0].slice() : s4[0].slice(0, Ne(s4[1]));
      if (te(s4[0])) return Ne(s4[1]) >= s4[0].length() ? s4[0].slice() : s4[0].slice(0, Ne(s4[1]));
      throw new a2(n6, r.InvalidParameter, e4);
    });
  }, F4.functions.first = function(n6, t8) {
    return F4.standardFunction(n6, t8, (r6, e4, i7) => (ae(i7, 1, 1, n6, t8), o2(i7[0]) ? 0 === i7[0].length ? null : i7[0][0] : te(i7[0]) ? 0 === i7[0].length() ? null : i7[0].get(0) : null));
  }, "sync" === F4.mode && (F4.functions.sort = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => N2(n6, r6, e4, false));
  }, F4.functions.any = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        const t10 = i7(n7);
        if (t(t10) && true === t10) return true;
      }
      return false;
    });
  }, F4.functions.all = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        if (true !== i7(n7)) return false;
      }
      return true;
    });
  }, F4.functions.none = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        if (true === i7(n7)) return false;
      }
      return true;
    });
  }, F4.functions.reduce = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 3, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      return 2 === e4.length ? 0 === u3.length ? null : u3.reduce((n7, t10) => {
        const r7 = i7(n7, t10);
        return n7 = void 0 !== r7 && r7 !== I ? r7 : null;
      }) : u3.reduce((n7, t10) => {
        const r7 = i7(n7, t10);
        return n7 = void 0 !== r7 && r7 !== I ? r7 : null;
      }, e4[2]);
    });
  }, F4.functions.map = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6), a5 = [];
      for (const n7 of u3) {
        const t10 = i7(n7);
        void 0 !== t10 && t10 !== I ? a5.push(t10) : a5.push(null);
      }
      return a5;
    });
  }, F4.functions.filter = function(n6, t8) {
    return F4.standardFunction(n6, t8, (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6), a5 = [];
      for (const n7 of u3) {
        true === i7(n7) && a5.push(n7);
      }
      return a5;
    });
  }), "async" === F4.mode && (F4.functions.sort = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => N2(n6, r6, e4, true));
  }, F4.functions.any = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        const t10 = await i7(n7);
        let r7 = null;
        if (r7 = S(r7) ? await t10 : t10, t(r7) && true === r7) return true;
      }
      return false;
    });
  }, F4.functions.all = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        const t10 = await i7(n7);
        let r7 = null;
        if (r7 = S(r7) ? await t10 : t10, true !== r7) return false;
      }
      return true;
    });
  }, F4.functions.none = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6);
      for (const n7 of u3) {
        const t10 = await i7(n7);
        let r7 = null;
        if (r7 = S(r7) ? await t10 : t10, true === r7) return false;
      }
      return true;
    });
  }, F4.functions.filter = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6), a5 = [];
      for (const n7 of u3) {
        const t10 = await i7(n7);
        let r7 = null;
        r7 = S(r7) ? await t10 : t10, true === r7 && a5.push(n7);
      }
      return a5;
    });
  }, F4.functions.reduce = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 3, n6, r6);
      const u3 = e4[1].createFunction(n6), a5 = p8(e4[0], n6, r6);
      let s4;
      if (e4.length > 2) {
        const n7 = q(e4[2], null);
        s4 = a5.reduce(async (n8, t10) => {
          let r7 = await n8;
          return void 0 !== r7 && r7 !== I || (r7 = null), u3(r7, t10);
        }, Promise.resolve(n7));
      } else {
        if (0 === a5.length) return null;
        s4 = a5.reduce(async (n7, t10, r7) => {
          if (r7 <= 1) return u3(n7, t10);
          let e5 = await n7;
          return void 0 !== e5 && e5 !== I || (e5 = null), u3(e5, t10);
        });
      }
      return s4.then((n7) => void 0 !== n7 && n7 !== I ? n7 : null);
    });
  }, F4.functions.map = function(n6, t8) {
    return F4.standardFunctionAsync(n6, t8, async (t9, r6, e4) => {
      ae(e4, 2, 2, n6, r6);
      const i7 = e4[1].createFunction(n6), u3 = p8(e4[0], n6, r6), a5 = [];
      for (const n7 of u3) {
        const t10 = await i7(n7);
        let r7 = null;
        r7 = S(r7) ? await t10 : t10, void 0 !== r7 && r7 !== I ? a5.push(r7) : a5.push(null);
      }
      return a5;
    });
  });
}
var p4 = Object.freeze(Object.defineProperty({ __proto__: null, registerFunctions: F }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/arcade/functions/date.js
function k(n6, r6, e4) {
  return n6 + (P3(e4) ? S2 : p5)[r6];
}
function P3(n6) {
  return n6 % 4 == 0 && (n6 % 100 != 0 || n6 % 400 == 0);
}
var p5 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var S2 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function Z2(n6) {
  return null === n6 ? n6 : false === n6.isValid ? null : n6;
}
function F2(n6, r6) {
  switch (o(n6)) {
    case "":
    case "default":
      return Ke(r6);
    case "z":
      return "UTC";
    default:
      return n6;
  }
}
function O(n6, r6) {
  return re(n6) ? n6.toArcadeDate() : Se(n6, Ke(r6));
}
var C2 = new e(["days", "months", "minutes", "seconds", "hours", "years", "milliseconds"], [["day", "days"], ["d", "days"], ["month", "months"], ["minute", "minutes"], ["m", "minutes"], ["second", "seconds"], ["s", "seconds"], ["hour", "hours"], ["h", "hours"], ["year", "years"], ["y", "years"], ["millisecond", "milliseconds"], ["ms", "milliseconds"]]);
function U(n6) {
  return "M" === n6 ? "months" : C2.lookup(pe(n6)) ?? "milliseconds";
}
function x2(e4, t8) {
  e4.today = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      ae(u3, 0, 0, r6, e5);
      const a5 = /* @__PURE__ */ new Date();
      return a5.setHours(0, 0, 0, 0), h.dateJSAndZoneToArcadeDate(a5, Ke(r6));
    });
  }, e4.time = function(r6, e5) {
    return t8(r6, e5, (t9, m5, d4) => {
      switch (ae(d4, 0, 4, r6, e5), d4.length) {
        case 0: {
          const e6 = h.nowToArcadeDate(Ke(r6));
          return new r2(e6.hour, e6.minute, e6.second, e6.millisecond);
        }
        case 1: {
          if (ie(d4[0])) return d4[0].clone();
          if (ne(d4[0])) return new r2(d4[0].hour, d4[0].minute, d4[0].second, d4[0].millisecond);
          if (re(d4[0])) return new r2(0, 0, 0, 0);
          if (e2(d4[0])) return r2.fromString(d4[0]);
          const n6 = Ne(d4[0]);
          return false === isNaN(n6) ? r2.fromMilliseconds(n6) : null;
        }
        case 2:
          return e2(d4[0]) && e2(d4[1]) ? r2.fromString(d4[0], d4[1]) : r2.fromParts(Ne(d4[0]), Ne(d4[1]), 0, 0);
        case 3:
          return r2.fromParts(Ne(d4[0]), Ne(d4[1]), Ne(d4[2]), 0);
        case 4:
          return r2.fromParts(Ne(d4[0]), Ne(d4[1]), Ne(d4[2]), Ne(d4[3]));
      }
      throw new a2(r6, r.InvalidParameter, e5);
    });
  }, e4.dateonly = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      if (ae(u3, 0, 3, r6, e5), 3 === u3.length) return i2.fromParts(Ne(u3[0]), Ne(u3[1]) + 1, Ne(u3[2]));
      if (2 === u3.length) {
        const n6 = pe(u3[1]);
        return "" === n6 ? null : "X" === n6 ? i2.fromSeconds(Ne(u3[0])) : "x" === n6 ? i2.fromMilliseconds(Ne(u3[0])) : i2.fromString(pe(u3[0]), n6);
      }
      if (1 === u3.length) {
        if (e2(u3[0])) {
          if ("" === u3[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")) return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(u3[0])) return i2.fromString(u3[0] + "-01-01");
        }
        if (re(u3[0])) return u3[0].clone();
        if (ne(u3[0])) return i2.fromParts(u3[0].year, u3[0].monthJS + 1, u3[0].day);
        const n6 = Ne(u3[0]);
        return false === isNaN(n6) ? i2.fromMilliseconds(n6) : e2(u3[0]) ? i2.fromString(u3[0]) : null;
      }
      if (0 === u3.length) {
        const e6 = h.nowToArcadeDate(Ke(r6));
        return false === e6.isValid ? null : i2.fromParts(e6.year, e6.monthJS + 1, e6.day);
      }
      return null;
    });
  }, e4.changetimezone = function(e5, a5) {
    return t8(e5, a5, (t9, s4, c3) => {
      if (ae(c3, 2, 2, e5, a5), null === c3[0]) return null;
      if (re(c3[0])) throw new a2(e5, r.CannotChangeTimeZoneDateOnly, a5);
      if (re(c3[0])) throw new a2(e5, r.CannotChangeTimeZoneTime, a5);
      const h6 = Se(c3[0], Ke(e5));
      if (null === h6) throw new a2(e5, r.InvalidParameter, a5);
      const N2 = l(F2(pe(c3[1]), e5), false);
      if (null === N2) return null;
      const y4 = h.arcadeDateAndZoneToArcadeDate(h6, N2);
      return false === y4.isValid ? null : y4;
    });
  }, e4.timezone = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      if (ae(u3, 1, 2, r6, e5), ie(u3[0])) return "Unknown";
      if (re(u3[0])) return "Unknown";
      const a5 = Se(u3[0], Ke(r6));
      if (null === a5) return null;
      const c3 = a5.timeZone;
      return "system" === c3 ? h.systemTimeZoneCanonicalName : "utc" === c3.toLowerCase() ? "UTC" : "unknown" === c3.toLowerCase() ? "Unknown" : c3;
    });
  }, e4.timezoneoffset = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? null : 60 * u3.timeZoneOffset * 1e3;
    });
  }, e4.now = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      ae(u3, 0, 0, r6, e5);
      const a5 = h.nowToArcadeDate(Ke(r6));
      return false === a5.isValid ? null : a5;
    });
  }, e4.timestamp = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      ae(u3, 0, 0, r6, e5);
      const i7 = h.nowUTCToArcadeDate();
      return false === i7.isValid ? null : i7;
    });
  }, e4.toutc = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? null : u3.toUTC();
    });
  }, e4.tolocal = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? null : u3.toLocal();
    });
  }, e4.day = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.day;
    });
  }, e4.month = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.monthJS;
    });
  }, e4.year = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.year;
    });
  }, e4.hour = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      if (ae(o4, 1, 1, n6, r6), ie(o4[0])) return o4[0].hour;
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.hour;
    });
  }, e4.second = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      if (ae(o4, 1, 1, n6, r6), ie(o4[0])) return o4[0].second;
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.second;
    });
  }, e4.millisecond = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      if (ae(o4, 1, 1, n6, r6), ie(o4[0])) return o4[0].millisecond;
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.millisecond;
    });
  }, e4.minute = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      if (ae(o4, 1, 1, n6, r6), ie(o4[0])) return o4[0].minute;
      const u3 = Se(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.minute;
    });
  }, e4.week = function(n6, r6) {
    return t8(n6, r6, (e5, t9, s4) => {
      ae(s4, 1, 2, n6, r6);
      const c3 = O(s4[0], Ke(n6));
      if (null === c3) return NaN;
      const f8 = Ne(q(s4[1], 0));
      if (f8 < 0 || f8 > 6) throw new a2(n6, r.InvalidParameter, r6);
      const m5 = c3.day, d4 = c3.monthJS, N2 = c3.year, y4 = c3.dayOfWeekJS, w = k(m5, d4, N2) - 1, g2 = Math.floor(w / 7);
      return y4 - f8 + (y4 - f8 < 0 ? 7 : 0) < w - 7 * g2 ? g2 + 1 : g2;
    });
  }, e4.weekday = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.dayOfWeekJS;
    });
  }, e4.isoweekday = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.dayOfWeekISO;
    });
  }, e4.isomonth = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.monthISO;
    });
  }, e4.isoweek = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.weekISO;
    });
  }, e4.isoyear = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 1, 1, n6, r6);
      const u3 = O(o4[0], Ke(n6));
      return null === u3 ? NaN : u3.yearISO;
    });
  }, e4.date = function(e5, o4) {
    return t8(e5, o4, (t9, u3, c3) => {
      if (ae(c3, 0, 8, e5, o4), 3 === c3.length) {
        if (re(c3[0]) && ie(c3[1]) && e2(c3[2])) {
          const t10 = l(F2(pe(c3[2]) ?? "unknown", e5), false);
          return null === t10 ? null : Z2(h.fromParts(c3[0].year, c3[0].month, c3[0].day, c3[1].hour, c3[1].minute, c3[1].second, c3[1].millisecond, t10));
        }
        return Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), 0, 0, 0, 0, Ke(e5)));
      }
      if (4 === c3.length) return Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), Ne(c3[3]), 0, 0, 0, Ke(e5)));
      if (5 === c3.length) return Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), Ne(c3[3]), Ne(c3[4]), 0, 0, Ke(e5)));
      if (6 === c3.length) return Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), Ne(c3[3]), Ne(c3[4]), Ne(c3[5]), 0, Ke(e5)));
      if (7 === c3.length) return Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), Ne(c3[3]), Ne(c3[4]), Ne(c3[5]), Ne(c3[6]), Ke(e5)));
      if (8 === c3.length) {
        const t10 = l(F2(pe(c3[7]) ?? "unknown", e5), false);
        return null === t10 ? null : Z2(h.fromParts(Ne(c3[0]), Ne(c3[1]) + 1, Ne(c3[2]), Ne(c3[3]), Ne(c3[4]), Ne(c3[5]), Ne(c3[6]), t10));
      }
      if (2 === c3.length) {
        if (re(c3[0]) && e2(c3[1])) {
          const t11 = l(F2(pe(c3[1]) ?? "unknown", e5), false);
          return null === t11 ? null : Z2(h.fromParts(c3[0].year, c3[0].month, c3[0].day, 0, 0, 0, 0, t11));
        }
        if (re(c3[0]) && ie(c3[1])) return Z2(h.fromParts(c3[0].year, c3[0].month, c3[0].day, c3[1].hour, c3[1].minute, c3[1].second, c3[1].millisecond, "unknown"));
        let t10, o5 = pe(c3[1]);
        return "" === o5 ? null : (o5 = fe(o5, true), t10 = "X" === o5 ? DateTime.fromSeconds(Ne(c3[0])) : "x" === o5 ? DateTime.fromMillis(Ne(c3[0])) : DateTime.fromFormat(pe(c3[0]), o5, { locale: i(), numberingSystem: "latn" }), t10.isValid ? h.dateTimeToArcadeDate(t10) : null);
      }
      if (1 === c3.length) {
        if (re(c3[0])) return Z2(h.fromParts(c3[0].year, c3[0].month, c3[0].day, 0, 0, 0, 0, "unknown"));
        if (e2(c3[0])) {
          if ("" === c3[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "")) return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(c3[0])) return Se(c3[0] + "-01-01", Ke(e5));
        }
        const r6 = Ne(c3[0]);
        if (false === isNaN(r6)) {
          const t10 = DateTime.fromMillis(r6);
          return t10.isValid ? h.dateTimeAndZoneToArcadeDate(t10, Ke(e5)) : null;
        }
        return Se(c3[0], Ke(e5));
      }
      return 0 === c3.length ? h.nowToArcadeDate(Ke(e5)) : null;
    });
  }, e4.datediff = function(r6, e5) {
    return t8(r6, e5, (t9, o4, u3) => {
      if (ae(u3, 2, 4, r6, e5), ie(u3[0])) return ie(u3[1]) ? u3[0].difference(u3[1], pe(u3[2])) : NaN;
      if (ie(u3[1])) return NaN;
      if (re(u3[0])) return re(u3[1]) ? u3[0].difference(u3[1], pe(u3[2])) : NaN;
      if (re(u3[1])) return NaN;
      let a5 = Se(u3[0], Ke(r6)), c3 = Se(u3[1], Ke(r6));
      if (null === a5 || null === c3) return NaN;
      let N2 = q(u3[3], "");
      return "" !== N2 && null !== N2 ? (N2 = F2(pe(N2), r6), a5 = h.arcadeDateAndZoneToArcadeDate(a5, N2), c3 = h.arcadeDateAndZoneToArcadeDate(c3, N2)) : a5.timeZone !== c3.timeZone && (a5.isUnknownTimeZone ? a5 = h.arcadeDateAndZoneToArcadeDate(a5, c3.timeZone) : c3 = (c3.isUnknownTimeZone, h.arcadeDateAndZoneToArcadeDate(c3, a5.timeZone))), a5.diff(c3, U(u3[2]));
    });
  }, e4.dateadd = function(n6, r6) {
    return t8(n6, r6, (e5, t9, o4) => {
      ae(o4, 2, 3, n6, r6);
      let u3 = Ne(o4[1]);
      if (isNaN(u3) || u3 === 1 / 0 || u3 === -1 / 0) return ie(o4[0]) || re(o4[0]) ? o4[0].clone() : Se(o4[0], Ke(n6));
      const c3 = U(o4[2]);
      if ("days" !== c3 && "months" !== c3 || (u3 = re(o4[0]) ? u3 : ue(u3)), ie(o4[0])) return o4[0].plus(c3, u3);
      if (re(o4[0])) return o4[0].plus(c3, u3);
      const m5 = Se(o4[0], Ke(n6));
      return null === m5 ? null : m5.plus({ [c3]: u3 });
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/feature.js
function h3(e4) {
  const n6 = e4?.fullSchema();
  return n6?.datesInUnknownTimezone ? "unknown" : n6?.dateFieldsTimeZone || "UTC";
}
function T(e4) {
  const n6 = e4.fullSchema()?.fieldsIndex;
  return null == n6 && e4 instanceof D2 ? e4.fieldsIndex : n6;
}
var I2 = { getAttributeSQL(e4, n6) {
  const t8 = e4.field(n6);
  if (null == t8) return t8;
  if (ne(t8)) {
    const r6 = t8.toDateTime(), o4 = T(e4)?.get(n6)?.type;
    return "esriFieldTypeTimestampOffset" === o4 || "timestamp-offset" === o4 ? i3.fromDateTime(r6) : r6;
  }
  return t8;
} };
function j2(r6, p8, w) {
  r6.domain = function(r7, d4) {
    return p8(r7, d4, (c3, f8, m5) => {
      if (ae(m5, 2, 3, r7, d4), $(m5[0])) {
        const n6 = Ue(m5[0], pe(m5[1]), void 0 === m5[2] ? void 0 : m5[2]);
        return n6 && n6.domain ? "coded-value" === n6.domain.type || "codedValue" === n6.domain.type ? j.convertObjectToArcadeDictionary({ type: "codedValue", name: n6.domain.name, dataType: b2[n6.field.type], codedValues: n6.domain.codedValues.map((e4) => ({ name: e4.name, code: e4.code })) }, Ke(r7)) : j.convertObjectToArcadeDictionary({ type: "range", name: n6.domain.name, dataType: b2[n6.field.type], min: n6.domain.minValue, max: n6.domain.maxValue }, Ke(r7)) : null;
      }
      throw new a2(r7, r.InvalidParameter, d4);
    });
  }, r6.domaincode = function(e4, r7) {
    return p8(e4, r7, (a5, s4, c3) => {
      if (ae(c3, 2, 4, e4, r7), $(c3[0])) return Be(c3[0], pe(c3[1]), c3[2], void 0 === c3[3] ? void 0 : c3[3]);
      throw new a2(e4, r.InvalidParameter, r7);
    });
  }, r6.domainname = function(e4, r7) {
    return p8(e4, r7, (a5, s4, d4) => {
      if (ae(d4, 2, 4, e4, r7), $(d4[0])) return $e(d4[0], pe(d4[1]), d4[2], void 0 === d4[3] ? void 0 : d4[3]);
      throw new a2(e4, r.InvalidParameter, r7);
    });
  }, r6.expects = function(e4, r7) {
    return p8(e4, r7, (o4, i7, a5) => {
      if (a5.length < 1) throw new a2(e4, r.WrongNumberOfParameters, r7);
      return I;
    });
  }, r6.featureinfilter = function(e4, r7) {
    return p8(e4, r7, (e5, r8, a5) => {
      ae(a5, 2, 2, e5, r8);
      const [u3, s4] = a5;
      if (null == u3) return false;
      if ("" === s4 || null == s4) return true;
      if (!$(u3) || !e2(s4)) throw new a2(e5, r.InvalidParameter, r8);
      const d4 = R.create(s4, { fieldsIndex: T(u3), timeZone: h3(u3) }), c3 = d4.getVariables();
      for (const n6 of c3) d4.parameters[n6] = w(e5, { name: n6 });
      return d4.testFeature(u3, I2);
    });
  }, r6.gdbversion = function(e4, r7) {
    return p8(e4, r7, (a5, u3, s4) => {
      if (ae(s4, 1, 1, e4, r7), $(s4[0])) return s4[0].gdbVersion();
      throw new a2(e4, r.InvalidParameter, r7);
    });
  }, r6.schema = function(r7, o4) {
    return p8(r7, o4, (a5, u3, d4) => {
      if ($(d4[0])) {
        const n6 = We(d4[0]);
        return n6 ? j.convertObjectToArcadeDictionary(n6, Ke(r7)) : null;
      }
      throw new a2(r7, r.InvalidParameter, o4);
    });
  }, r6.subtypecode = function(e4, r7) {
    return p8(e4, r7, (a5, u3, s4) => {
      if (ae(s4, 1, 1, e4, r7), $(s4[0])) {
        const e5 = He(s4[0]);
        if (!e5) return null;
        if (e5.subtypeField && s4[0].hasField(e5.subtypeField)) {
          const n6 = s4[0].field(e5.subtypeField);
          for (const t8 of e5.subtypes) if (t8.code === n6) return t8.code;
          return null;
        }
        return null;
      }
      throw new a2(e4, r.InvalidParameter, r7);
    });
  }, r6.subtypename = function(e4, r7) {
    return p8(e4, r7, (a5, u3, s4) => {
      if (ae(s4, 1, 1, e4, r7), $(s4[0])) {
        const e5 = He(s4[0]);
        if (!e5) return "";
        if (e5.subtypeField && s4[0].hasField(e5.subtypeField)) {
          const n6 = s4[0].field(e5.subtypeField);
          for (const t8 of e5.subtypes) if (t8.code === n6) return t8.name;
          return "";
        }
        return "";
      }
      throw new a2(e4, r.InvalidParameter, r7);
    });
  }, r6.subtypes = function(r7, a5) {
    return p8(r7, a5, (u3, d4, c3) => {
      if (ae(c3, 1, 1, r7, a5), $(c3[0])) {
        const n6 = He(c3[0]);
        return n6 ? j.convertObjectToArcadeDictionary(n6, Ke(r7)) : null;
      }
      throw new a2(r7, r.InvalidParameter, a5);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/geometry.js
function C3(C5, E4) {
  C5.ringisclockwise = function(e4, t8) {
    return E4(e4, t8, (n6, i7, f8) => {
      ae(f8, 1, 1, e4, t8);
      let c3 = [];
      if (null === f8[0]) return false;
      if (o2(f8[0])) for (const l5 of f8[0]) {
        if (!(l5 instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
        c3.push(l5.hasZ ? l5.hasM ? [l5.x, l5.y, l5.z, l5.m] : [l5.x, l5.y, l5.z] : [l5.x, l5.y]);
      }
      else if (f8[0] instanceof i4) c3 = f8[0]._elements;
      else {
        if (!te(f8[0])) throw new a2(e4, r.InvalidParameter, t8);
        for (const n7 of f8[0].toArray()) {
          if (!(n7 instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
          c3.push(n7.hasZ ? n7.hasM ? [n7.x, n7.y, n7.z, n7.m] : [n7.x, n7.y, n7.z] : [n7.x, n7.y]);
        }
      }
      return !(c3.length < 3) && a(c3);
    });
  }, C5.polygon = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      let u3;
      if (ae(s4, 1, 1, e4, t8), s4[0] instanceof j) {
        const t9 = ke(u(s4[0], e4.spatialReference, "polygon"), e4.spatialReference);
        if (null == t9) return null;
        u3 = t9;
      } else if (s4[0] instanceof P) u3 = f2(s4[0].toJSON());
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), u3 = ke(new P(t9), e4.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(u3);
    });
  }, C5.polyline = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      let u3;
      if (ae(s4, 1, 1, e4, t8), s4[0] instanceof j) {
        const t9 = ke(u(s4[0], e4.spatialReference, "polyline"), e4.spatialReference);
        if (null == t9) return null;
        u3 = t9;
      } else if (s4[0] instanceof y) u3 = f2(s4[0].toJSON());
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), u3 = ke(new y(t9), e4.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(u3);
    });
  }, C5.point = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      let u3;
      if (ae(s4, 1, 1, e4, t8), s4[0] instanceof j) {
        const t9 = ke(u(s4[0], e4.spatialReference, "point"), e4.spatialReference);
        if (null == t9) return null;
        u3 = t9;
      } else if (s4[0] instanceof _) u3 = f2(s4[0].toJSON());
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), u3 = ke(new _(t9), e4.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(u3);
    });
  }, C5.multipoint = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      let u3;
      if (ae(s4, 1, 1, e4, t8), s4[0] instanceof j) {
        const t9 = ke(u(s4[0], e4.spatialReference, "multipoint"), e4.spatialReference);
        if (null == t9) return null;
        u3 = t9;
      } else if (s4[0] instanceof m) u3 = f2(s4[0].toJSON());
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), u3 = ke(new m(t9), e4.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(u3);
    });
  }, C5.extent = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      s4 = we(s4), ae(s4, 1, 1, e4, t8);
      let m5 = null;
      if (s4[0] instanceof j) m5 = ke(u(s4[0], e4.spatialReference), e4.spatialReference);
      else if (s4[0] instanceof _) {
        const e5 = { xmin: s4[0].x, ymin: s4[0].y, xmax: s4[0].x, ymax: s4[0].y, spatialReference: s4[0].spatialReference.toJSON() }, t9 = s4[0];
        t9.hasZ && (e5.zmin = t9.z, e5.zmax = t9.z), t9.hasM && (e5.mmin = t9.m, e5.mmax = t9.m), m5 = f2(e5);
      } else if (s4[0] instanceof P) m5 = f2(s4[0].extent?.toJSON());
      else if (s4[0] instanceof y) m5 = f2(s4[0].extent?.toJSON());
      else if (s4[0] instanceof m) m5 = f2(s4[0].extent?.toJSON());
      else if (s4[0] instanceof z) m5 = f2(s4[0].toJSON());
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), m5 = ke(new z(t9), e4.spatialReference);
      }
      if (null !== m5 && false === m5.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(m5);
    });
  }, C5.geometry = function(e4, t8) {
    return E4(e4, t8, (i7, l5, s4) => {
      ae(s4, 1, 1, e4, t8);
      let u3 = null;
      if (null === s4[0]) return null;
      if ($(s4[0])) u3 = ke(s4[0].geometry(), e4.spatialReference);
      else if (s4[0] instanceof j) u3 = ke(u(s4[0], e4.spatialReference), e4.spatialReference);
      else {
        const t9 = JSON.parse(s4[0]);
        t9 && !t9.spatialReference && (t9.spatialReference = e4.spatialReference), u3 = ke(f2(t9), e4.spatialReference);
      }
      if (null !== u3 && false === u3.spatialReference.equals(e4.spatialReference)) throw new a2(e4, r.WrongSpatialReference, t8);
      return je(u3);
    });
  }, C5.setgeometry = function(e4, t8) {
    return E4(e4, t8, (n6, i7, l5) => {
      if (ae(l5, 2, 2, e4, t8), !$(l5[0])) throw new a2(e4, r.InvalidParameter, t8);
      if (true === l5[0].immutable) throw new a2(e4, r.Immutable, t8);
      if (!(l5[1] instanceof c || null === l5[1])) throw new a2(e4, r.InvalidParameter, t8);
      return l5[0]._geometry = l5[1], I;
    });
  }, C5.feature = function(e4, t8) {
    return E4(e4, t8, (l5, o4, s4) => {
      if (0 === s4.length) throw new a2(e4, r.WrongNumberOfParameters, t8);
      let c3;
      if (1 === s4.length) if (e2(s4[0])) c3 = D2.fromJson(JSON.parse(s4[0]), e4.timeZone);
      else if ($(s4[0])) c3 = D2.createFromArcadeFeature(s4[0]);
      else if (s4[0] instanceof c) c3 = D2.createFromGraphicLikeObject(s4[0], null, null, e4.timeZone);
      else {
        if (!(s4[0] instanceof j)) throw new a2(e4, r.InvalidParameter, t8);
        {
          const n6 = s4[0].hasField("geometry") ? s4[0].field("geometry") : null, l6 = s4[0].hasField("attributes") ? s4[0].field("attributes") : null;
          let o5, f8;
          if (W(n6)) o5 = u(n6, e4.spatialReference);
          else {
            if (null != n6 && !H(n6)) throw new a2(e4, r.InvalidParameter, t8);
            o5 = n6;
          }
          if (W(l6)) f8 = D2.parseAttributesFromDictionary(l6);
          else {
            if (null != l6) throw new a2(e4, r.InvalidParameter, t8);
            f8 = null;
          }
          c3 = D2.createFromGraphicLikeObject(o5, f8, null, e4.timeZone);
        }
      }
      else if (2 === s4.length) {
        let l6 = null, o5 = null;
        if (null !== s4[0]) if (s4[0] instanceof c) l6 = s4[0];
        else {
          if (!(s4[0] instanceof j)) throw new a2(e4, r.InvalidParameter, t8);
          l6 = u(s4[0], e4.spatialReference);
        }
        if (null !== s4[1]) {
          if (!(s4[1] instanceof j)) throw new a2(e4, r.InvalidParameter, t8);
          o5 = D2.parseAttributesFromDictionary(s4[1]);
        }
        c3 = D2.createFromGraphicLikeObject(l6, o5, null, e4.timeZone);
      } else {
        let l6 = null;
        const o5 = {};
        if (null !== s4[0]) if (s4[0] instanceof c) l6 = s4[0];
        else {
          if (!(s4[0] instanceof j)) throw new a2(e4, r.InvalidParameter, t8);
          l6 = u(s4[0], e4.spatialReference);
        }
        for (let n6 = 1; n6 < s4.length; n6 += 2) {
          const i7 = pe(s4[n6]), l7 = s4[n6 + 1];
          if (!(null == l7 || e2(l7) || isNaN(l7) || ne(l7) || n3(l7) || ie(l7) || re(l7) || t(l7))) throw new a2(e4, r.InvalidParameter, t8);
          if (G(l7) || false === z2(l7)) throw new a2(e4, r.InvalidParameter, t8);
          o5[i7] = l7 === I ? null : l7;
        }
        c3 = D2.createFromGraphicLikeObject(l6, o5, null, e4.timeZone);
      }
      return c3._geometry = ke(c3.geometry(), e4.spatialReference), c3.immutable = false, c3;
    });
  }, C5.dictionary = function(e4, t8) {
    return E4(e4, t8, (i7, l5, o4) => {
      if (0 === o4.length || 1 === o4.length && null === o4[0]) {
        const e5 = new j();
        return e5.immutable = false, e5;
      }
      if (1 === o4.length && e2(o4[0])) try {
        const t9 = JSON.parse(o4[0]), r6 = j.convertObjectToArcadeDictionary(t9, Ke(e4), false);
        return r6.immutable = false, r6;
      } catch (u3) {
        throw new a2(e4, r.InvalidParameter, t8);
      }
      if (1 === o4.length && o4[0] instanceof c) try {
        const t9 = o4[0].toJSON();
        t9.hasZ = true === o4[0].hasZ, t9.hasM = true === o4[0].hasM;
        const r6 = j.convertObjectToArcadeDictionary(t9, Ke(e4), false);
        return r6.immutable = false, r6;
      } catch (u3) {
        throw new a2(e4, r.InvalidParameter, t8);
      }
      if (1 === o4.length && $(o4[0])) try {
        const e5 = new j();
        e5.immutable = false, e5.setField("geometry", o4[0].geometry());
        const t9 = new j();
        t9.immutable = false, e5.setField("attributes", t9);
        for (const n6 of o4[0].keys()) t9.setField(n6, o4[0].field(n6));
        return e5;
      } catch (u3) {
        throw new a2(e4, r.InvalidParameter, t8);
      }
      if (1 === o4.length && (W(o4[0]) || B(o4[0]))) try {
        const e5 = new j();
        e5.immutable = false;
        for (const t9 of o4[0].keys()) e5.setField(t9, o4[0].field(t9));
        return e5;
      } catch (u3) {
        throw new a2(e4, r.InvalidParameter, t8);
      }
      if (2 === o4.length && o4[0] instanceof j && t(o4[1])) try {
        if (!(true === o4[1])) {
          const e5 = new j();
          e5.immutable = false;
          for (const t9 of o4[0].keys()) e5.setField(t9, o4[0].field(t9));
          return e5;
        }
        return o4[0].deepClone();
      } catch (u3) {
        throw new a2(e4, r.InvalidParameter, t8);
      }
      if (o4.length % 2 != 0) throw new a2(e4, r.WrongNumberOfParameters, t8);
      const f8 = /* @__PURE__ */ Object.create(null);
      for (let n6 = 0; n6 < o4.length; n6 += 2) {
        const i8 = pe(o4[n6]), l6 = o4[n6 + 1];
        if (!(null == l6 || e2(l6) || isNaN(l6) || ne(l6) || n3(l6) || t(l6) || re(l6) || ie(l6) || o2(l6) || te(l6))) throw new a2(e4, r.InvalidParameter, t8);
        if (G(l6)) throw new a2(e4, r.InvalidParameter, t8);
        f8[i8] = l6 === I ? null : l6;
      }
      const c3 = new j(f8);
      return c3.immutable = false, c3;
    });
  }, C5.haskey = function(t8, i7) {
    return E4(t8, i7, (l5, s4, f8) => {
      ae(f8, 2, 2, t8, i7);
      const c3 = pe(f8[1]);
      if (Q(f8[0]) || f8[0] instanceof j) return f8[0].hasField(c3);
      if (f8[0] instanceof c) {
        const t9 = d2(f8[0], c3, null, null, 2);
        return !t9 || "notfound" !== t9.keystate;
      }
      throw new a2(t8, r.InvalidParameter, i7);
    });
  }, C5.hasvalue = function(e4, n6) {
    return E4(e4, n6, (r6, a5, i7) => (ae(i7, 2, 2, e4, n6), null != y2(i7[0], i7[1])));
  }, C5.indexof = function(e4, t8) {
    return E4(e4, t8, (n6, i7, l5) => {
      ae(l5, 2, 2, e4, t8);
      const f8 = l5[1];
      if (o2(l5[0])) {
        for (let e5 = 0; e5 < l5[0].length; e5++) if (de(f8, l5[0][e5])) return e5;
        return -1;
      }
      if (te(l5[0])) {
        const e5 = l5[0].length();
        for (let t9 = 0; t9 < e5; t9++) if (de(f8, l5[0].get(t9))) return t9;
        return -1;
      }
      throw new a2(e4, r.InvalidParameter, t8);
    });
  }, C5.angle = function(e4, t8) {
    return E4(e4, t8, (n6, i7, l5) => {
      if (l5 = we(l5), ae(l5, 2, 3, e4, t8), !(l5[0] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      if (!(l5[1] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      if (l5.length > 2 && !(l5[2] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      return 2 === l5.length ? z3(l5[0], l5[1]) : P2(l5[0], l5[1], l5[2]);
    });
  }, C5.bearing = function(e4, t8) {
    return E4(e4, t8, (n6, i7, l5) => {
      if (l5 = we(l5), ae(l5, 2, 3, e4, t8), !(l5[0] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      if (!(l5[1] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      if (l5.length > 2 && !(l5[2] instanceof _)) throw new a2(e4, r.InvalidParameter, t8);
      return 2 === l5.length ? d(l5[0], l5[1]) : Z(l5[0], l5[1], l5[2]);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/maths.js
function p6(p8, M2) {
  function b5(n6, r6, t8) {
    const u3 = Ne(n6);
    return isNaN(u3) ? u3 : isNaN(r6) || isNaN(t8) || r6 > t8 ? NaN : u3 < r6 ? r6 : u3 > t8 ? t8 : u3;
  }
  p8.number = function(o4, i7) {
    return M2(o4, i7, (a5, f8, s4) => {
      ae(s4, 1, 2, o4, i7);
      const p9 = s4[0];
      if (n3(p9)) return p9;
      if (null === p9) return 0;
      if (ne(p9) || ie(p9) || re(p9)) return p9.toNumber();
      if (t(p9)) return Number(p9);
      if (o2(p9)) return NaN;
      if ("" === p9) return Number(p9);
      if (void 0 === p9) return Number(p9);
      if (e2(p9)) {
        if (void 0 !== s4[1]) {
          let n6 = L(s4[1], "‰", "");
          return n6 = L(n6, "¤", ""), p(p9, { pattern: n6 });
        }
        return Number(p9.trim());
      }
      return Number(p9);
    });
  }, p8.abs = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.abs(Ne(i7[0]))));
  }, p8.acos = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.acos(Ne(i7[0]))));
  }, p8.asin = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.asin(Ne(i7[0]))));
  }, p8.atan = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.atan(Ne(i7[0]))));
  }, p8.atan2 = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 2, 2, r6, t8), Math.atan2(Ne(i7[0]), Ne(i7[1]))));
  }, p8.ceil = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => {
      if (ae(i7, 1, 2, r6, t8), 2 === i7.length) {
        let n6 = Ne(i7[1]);
        return isNaN(n6) && (n6 = 0), v("ceil", Ne(i7[0]), -1 * n6);
      }
      return Math.ceil(Ne(i7[0]));
    });
  }, p8.round = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => {
      if (ae(i7, 1, 2, r6, t8), 2 === i7.length) {
        let n6 = Ne(i7[1]);
        return isNaN(n6) && (n6 = 0), v("round", Ne(i7[0]), -1 * n6);
      }
      return Math.round(Ne(i7[0]));
    });
  }, p8.floor = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => {
      if (ae(i7, 1, 2, r6, t8), 2 === i7.length) {
        let n6 = Ne(i7[1]);
        return isNaN(n6) && (n6 = 0), v("floor", Ne(i7[0]), -1 * n6);
      }
      return Math.floor(Ne(i7[0]));
    });
  }, p8.cos = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.cos(Ne(i7[0]))));
  }, p8.isnan = function(r6, t8) {
    return M2(r6, t8, (u3, e4, o4) => (ae(o4, 1, 1, r6, t8), "number" == typeof o4[0] && isNaN(o4[0])));
  }, p8.exp = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.exp(Ne(i7[0]))));
  }, p8.log = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.log(Ne(i7[0]))));
  }, p8.pow = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 2, 2, r6, t8), Ne(i7[0]) ** Ne(i7[1])));
  }, p8.random = function(r6, t8) {
    return M2(r6, t8, (u3, e4, o4) => (ae(o4, 0, 0, r6, t8), Math.random()));
  }, p8.sin = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.sin(Ne(i7[0]))));
  }, p8.sqrt = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.sqrt(Ne(i7[0]))));
  }, p8.tan = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => (ae(i7, 1, 1, r6, t8), Math.tan(Ne(i7[0]))));
  }, p8.isempty = function(r6, t8) {
    return M2(r6, t8, (u3, e4, o4) => (ae(o4, 1, 1, r6, t8), null === o4[0] || ("" === o4[0] || (void 0 === o4[0] || o4[0] === I))));
  }, p8.boolean = function(r6, t8) {
    return M2(r6, t8, (u3, e4, o4) => {
      ae(o4, 1, 1, r6, t8);
      const i7 = o4[0];
      return Te(i7);
    });
  }, p8.constrain = function(r6, t8) {
    return M2(r6, t8, (u3, e4, i7) => {
      ae(i7, 3, 3, r6, t8);
      const a5 = Ne(i7[1]), s4 = Ne(i7[2]);
      if (o2(i7[0])) {
        const n6 = [];
        for (const r7 of i7[0]) n6.push(b5(r7, a5, s4));
        return n6;
      }
      if (te(i7[0])) {
        const n6 = [];
        for (let r7 = 0; r7 < i7[0].length(); r7++) n6.push(b5(i7[0].get(r7), a5, s4));
        return n6;
      }
      return b5(i7[0], a5, s4);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/stats.js
function a4(n6, r6) {
  if (1 === r6.length) {
    if (o2(r6[0])) return l2(n6, r6[0], -1);
    if (te(r6[0])) return l2(n6, r6[0].toArray(), -1);
  }
  return l2(n6, r6, -1);
}
function f6(u3, f8) {
  u3.stdev = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("stdev", t8));
  }, u3.variance = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("variance", t8));
  }, u3.average = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("mean", t8));
  }, u3.mean = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("mean", t8));
  }, u3.sum = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("sum", t8));
  }, u3.min = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("min", t8));
  }, u3.max = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("max", t8));
  }, u3.distinct = function(n6, r6) {
    return f8(n6, r6, (n7, r7, t8) => a4("distinct", t8));
  }, u3.count = function(u4, a5) {
    return f8(u4, a5, (f9, c3, m5) => {
      if (ae(m5, 1, 1, u4, a5), o2(m5[0]) || e2(m5[0])) return m5[0].length;
      if (te(m5[0])) return m5[0].length();
      throw new a2(u4, r.InvalidParameter, a5);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/convertdirection.js
var l4 = (e4) => (n6, t8, r6 = 14) => +e4(n6, t8).toFixed(r6);
var h4 = (e4, n6) => e4 + n6;
var m4 = (e4, n6) => e4 * n6;
var _2 = (e4, n6) => e4 / n6;
var f7 = (e4, n6, t8) => l4(h4)(e4, n6, t8);
var A = (e4, n6, t8) => l4(m4)(e4, n6, t8);
var D3 = (e4, n6, t8) => l4(_2)(e4, n6, t8);
var p7 = 360;
var T2 = 400;
var E2 = 2 * Math.PI;
var S3 = 3600;
var R2 = 3240;
var F3 = 60;
var v2 = 60;
var M = 180 * S3 / Math.PI;
var L2 = p7 * F3 * v2;
var U2 = 90 * S3;
var z4 = 180 * S3;
var x3 = 270 * S3;
var N = String.fromCharCode(7501);
var b4 = "°";
function O2(e4) {
  if (false === e2(e4)) throw new a2(null, r.InvalidParameter, null);
  return e4;
}
function G2(e4, n6) {
  const t8 = 10 ** n6;
  return Math.round(e4 * t8) / t8;
}
function I3(e4, n6) {
  return e4 % n6;
}
function y3(e4) {
  const n6 = parseFloat(e4.toString().replace(Math.trunc(e4).toString(), "0")) * Math.sign(e4);
  if (e4 < 0) {
    return { fraction: n6, integer: Math.ceil(e4) };
  }
  return { fraction: n6, integer: Math.floor(e4) };
}
var H2;
var k2;
var q2;
function P4(e4, n6) {
  switch (e4) {
    case H2.north:
      return "SHORT" === n6 ? "N" : "North";
    case H2.east:
      return "SHORT" === n6 ? "E" : "East";
    case H2.south:
      return "SHORT" === n6 ? "S" : "South";
    case H2.west:
      return "SHORT" === n6 ? "W" : "West";
  }
}
function j3(e4, n6) {
  return e4 - Math.floor(e4 / n6) * n6;
}
function Q2(e4) {
  switch (e4) {
    case k2.truncated_degrees:
    case k2.decimal_degrees:
      return p7;
    case k2.radians:
      return E2;
    case k2.gradians:
      return T2;
    case k2.seconds:
      return L2;
    case k2.fractional_degree_minutes:
      return F3;
    case k2.fractional_minute_seconds:
      return v2;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unsupported evaluations" });
  }
}
!function(e4) {
  e4[e4.north = 0] = "north", e4[e4.east = 1] = "east", e4[e4.south = 2] = "south", e4[e4.west = 3] = "west";
}(H2 || (H2 = {})), function(e4) {
  e4[e4.decimal_degrees = 1] = "decimal_degrees", e4[e4.seconds = 2] = "seconds", e4[e4.degrees_minutes_seconds = 3] = "degrees_minutes_seconds", e4[e4.radians = 4] = "radians", e4[e4.gradians = 5] = "gradians", e4[e4.truncated_degrees = 6] = "truncated_degrees", e4[e4.fractional_degree_minutes = 7] = "fractional_degree_minutes", e4[e4.fractional_minute_seconds = 8] = "fractional_minute_seconds";
}(k2 || (k2 = {})), function(e4) {
  e4[e4.north_azimuth = 1] = "north_azimuth", e4[e4.polar = 2] = "polar", e4[e4.quadrant = 3] = "quadrant", e4[e4.south_azimuth = 4] = "south_azimuth";
}(q2 || (q2 = {}));
var C4 = new e([], [["NORTH", q2.north_azimuth], ["NORTH AZIMUTH", q2.north_azimuth], ["POLAR", q2.polar], ["QUADRANT", q2.quadrant], ["SOUTH", q2.south_azimuth], ["SOUTH AZIMUTH", q2.south_azimuth]]);
function W2(e4) {
  const n6 = C4.lookup(e4);
  if (null == n6) throw new a2(null, r.LogicError, null, { reason: "unsupported directionType" });
  return n6;
}
var B2 = new e([], [["D", k2.decimal_degrees], ["DD", k2.decimal_degrees], ["DECIMAL DEGREE", k2.decimal_degrees], ["DEGREE", k2.decimal_degrees], ["DECIMAL DEGREES", k2.decimal_degrees], ["DEGREES", k2.decimal_degrees], ["DMS", k2.degrees_minutes_seconds], ["DEGREES MINUTES SECONDS", k2.degrees_minutes_seconds], ["R", k2.radians], ["RAD", k2.radians], ["RADS", k2.radians], ["RADIAN", k2.radians], ["RADIANS", k2.radians], ["G", k2.gradians], ["GON", k2.gradians], ["GONS", k2.gradians], ["GRAD", k2.gradians], ["GRADS", k2.gradians], ["GRADIAN", k2.gradians], ["GRADIANS", k2.gradians]]);
function V(e4) {
  const n6 = B2.lookup(e4);
  if (null == n6) throw new a2(null, r.LogicError, null, { reason: "unsupported units" });
  return n6;
}
var X2;
!function(e4) {
  e4[e4.meridian = 0] = "meridian", e4[e4.direction = 1] = "direction";
}(X2 || (X2 = {}));
var Z3 = class _Z {
  constructor(e4, n6, t8) {
    this.m_degrees = e4, this.m_minutes = n6, this.m_seconds = t8;
  }
  getField(e4) {
    switch (e4) {
      case k2.decimal_degrees:
      case k2.truncated_degrees:
        return this.m_degrees;
      case k2.fractional_degree_minutes:
        return this.m_minutes;
      case k2.seconds:
      case k2.fractional_minute_seconds:
        return this.m_seconds;
      default:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
    }
  }
  static secondsToDMS(e4) {
    const n6 = y3(e4).fraction;
    let t8 = y3(e4).integer;
    const r6 = Math.floor(t8 / S3);
    t8 -= r6 * S3;
    const s4 = Math.floor(t8 / v2);
    return t8 -= s4 * v2, new _Z(r6, s4, t8 + n6);
  }
  static numberToDms(e4) {
    const n6 = y3(e4).fraction, t8 = y3(e4).integer, r6 = A(y3(100 * n6).fraction, 100), s4 = y3(100 * n6).integer;
    return new _Z(t8, s4, r6);
  }
  format(e4, n6) {
    let t8 = G2(this.m_seconds, n6), r6 = this.m_minutes, s4 = this.m_degrees;
    if (e4 === k2.seconds || e4 === k2.fractional_minute_seconds) v2 <= t8 && (t8 -= v2, ++r6), F3 <= r6 && (r6 = 0, ++s4), p7 <= s4 && (s4 = 0);
    else if (e4 === k2.fractional_degree_minutes) t8 = 0, r6 = 30 <= this.m_seconds ? this.m_minutes + 1 : this.m_minutes, s4 = this.m_degrees, F3 <= r6 && (r6 = 0, ++s4), p7 <= s4 && (s4 = 0);
    else if (e4 === k2.decimal_degrees || e4 === k2.truncated_degrees) {
      const e5 = D3(this.m_seconds, S3), n7 = D3(this.m_minutes, F3);
      s4 = Math.round(this.m_degrees + n7 + e5), r6 = 0, t8 = 0;
    }
    return new _Z(s4, r6, t8);
  }
  static dmsToSeconds(e4, n6, t8) {
    return e4 * S3 + n6 * v2 + t8;
  }
};
var J = class {
  constructor(e4, n6, t8) {
    this.meridian = e4, this.angle = n6, this.direction = t8;
  }
  fetchAzimuth(e4) {
    return e4 === X2.meridian ? this.meridian : this.direction;
  }
};
var K2 = class _K {
  constructor(e4) {
    this._angle = e4;
  }
  static createFromAngleAndDirection(e4, n6) {
    return new _K(new $2(_K._convertDirectionFormat(e4.extractAngularUnits(k2.seconds), n6, q2.north_azimuth)));
  }
  getAngle(e4) {
    const n6 = this._angle.extractAngularUnits(k2.seconds);
    switch (e4) {
      case q2.north_azimuth:
      case q2.south_azimuth:
      case q2.polar:
        return new $2(_K._convertDirectionFormat(n6, q2.north_azimuth, e4));
      case q2.quadrant: {
        const e5 = _K.secondsNorthAzimuthToQuadrant(n6);
        return new $2(e5.angle);
      }
    }
  }
  getMeridian(e4) {
    const n6 = this._angle.extractAngularUnits(k2.seconds);
    switch (e4) {
      case q2.north_azimuth:
        return H2.north;
      case q2.south_azimuth:
        return H2.south;
      case q2.polar:
        return H2.east;
      case q2.quadrant:
        return _K.secondsNorthAzimuthToQuadrant(n6).meridian;
    }
  }
  getDirection(e4) {
    const n6 = this._angle.extractAngularUnits(k2.seconds);
    switch (e4) {
      case q2.north_azimuth:
        return H2.east;
      case q2.south_azimuth:
        return H2.west;
      case q2.polar:
        return H2.north;
      case q2.quadrant:
        return _K.secondsNorthAzimuthToQuadrant(n6).direction;
    }
  }
  static secondsNorthAzimuthToQuadrant(e4) {
    const n6 = e4 <= U2 || e4 >= x3 ? H2.north : H2.south, t8 = n6 === H2.north ? Math.min(L2 - e4, e4) : Math.abs(e4 - z4), r6 = e4 > z4 ? H2.west : H2.east;
    return new J(n6, t8, r6);
  }
  static createFromAngleMeridianAndDirection(e4, n6, t8) {
    return new _K(new $2(_K.secondsQuadrantToNorthAzimuth(e4.extractAngularUnits(k2.seconds), n6, t8)));
  }
  static secondsQuadrantToNorthAzimuth(e4, n6, t8) {
    return n6 === H2.north ? t8 === H2.east ? e4 : L2 - e4 : t8 === H2.east ? z4 - e4 : z4 + e4;
  }
  static _convertDirectionFormat(e4, n6, s4) {
    let a5 = 0;
    switch (n6) {
      case q2.north_azimuth:
        a5 = e4;
        break;
      case q2.polar:
        a5 = U2 - e4;
        break;
      case q2.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        a5 = e4 + z4;
    }
    let i7 = 0;
    switch (s4) {
      case q2.north_azimuth:
        i7 = a5;
        break;
      case q2.polar:
        i7 = U2 - a5;
        break;
      case q2.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q2.south_azimuth:
        i7 = a5 - z4;
    }
    return i7 = I3(i7, L2), i7 < 0 ? L2 + i7 : i7;
  }
};
function Y(e4, n6, s4) {
  let a5 = null;
  switch (n6) {
    case k2.decimal_degrees:
      a5 = A(e4, S3);
      break;
    case k2.seconds:
      a5 = e4;
      break;
    case k2.gradians:
      a5 = A(e4, R2);
      break;
    case k2.radians:
      a5 = A(e4, M);
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
  switch (s4) {
    case k2.decimal_degrees:
      return D3(a5, S3);
    case k2.seconds:
      return a5;
    case k2.gradians:
      return D3(a5, R2);
    case k2.radians:
      return a5 / M;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
var $2 = class _$ {
  constructor(e4) {
    this._seconds = e4;
  }
  static createFromAngleAndUnits(e4, n6) {
    return new _$(Y(e4, n6, k2.seconds));
  }
  extractAngularUnits(e4) {
    return Y(this._seconds, k2.seconds, ee(e4));
  }
  static createFromDegreesMinutesSeconds(e4, n6, t8) {
    return new _$(f7(f7(A(e4, S3), A(n6, v2)), t8));
  }
};
function ee(e4) {
  switch (n(e4), e4) {
    case k2.decimal_degrees:
    case k2.truncated_degrees:
    case k2.degrees_minutes_seconds:
      return k2.decimal_degrees;
    case k2.gradians:
      return k2.gradians;
    case k2.fractional_degree_minutes:
      return k2.fractional_degree_minutes;
    case k2.radians:
      return k2.radians;
    case k2.seconds:
    case k2.fractional_minute_seconds:
      return k2.seconds;
  }
}
var ne2 = class _ne {
  constructor(e4, n6, t8, r6) {
    this.view = e4, this.angle = n6, this.merdian = t8, this.direction = r6, this._dms = null, this._formattedDms = null;
  }
  static createFromStringAndBearing(e4, n6, t8) {
    return new _ne(e4, n6.getAngle(t8), n6.getMeridian(t8), n6.getDirection(t8));
  }
  fetchAngle() {
    return this.angle;
  }
  fetchMeridian() {
    return this.merdian;
  }
  fetchDirection() {
    return this.direction;
  }
  fetchView() {
    return this.view;
  }
  fetchDms() {
    return null === this._dms && this._calculateDms(), this._dms;
  }
  fetchFormattedDms() {
    return null === this._formattedDms && this._calculateDms(), this._formattedDms;
  }
  _calculateDms() {
    let e4 = null, n6 = k2.truncated_degrees, t8 = 0;
    for (let r6 = 0; r6 < this.view.length; r6++) {
      const s4 = this.view[r6];
      switch (s4) {
        case "m":
          e4 = ge(this.view, r6, s4), n6 = n6 === k2.truncated_degrees ? k2.fractional_degree_minutes : n6, r6 = e4.newpos;
          continue;
        case "s":
          e4 = ge(this.view, r6, s4), n6 = k2.fractional_minute_seconds, t8 = t8 < e4.rounding ? e4.rounding : t8, r6 = e4.newpos;
          continue;
        default:
          continue;
      }
    }
    this._dms = Z3.secondsToDMS(this.angle.extractAngularUnits(k2.seconds)), this._formattedDms = Z3.secondsToDMS(this.angle.extractAngularUnits(k2.seconds)).format(n6, t8);
  }
};
function te2(e4, n6, s4, a5, i7) {
  let o4 = null;
  switch (n6) {
    case k2.decimal_degrees:
    case k2.radians:
    case k2.gradians:
      return o4 = j3(G2(e4.extractAngularUnits(n6), a5), Q2(n6)), o4.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case k2.truncated_degrees:
    case k2.fractional_degree_minutes:
      return o4 = j3(i7.fetchFormattedDms().getField(n6), Q2(n6)), o4.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case k2.fractional_minute_seconds:
      return o4 = j3(G2(i7.fetchDms().getField(n6), a5), Q2(n6)), o4.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
function re2(e4, n6, s4) {
  if (s4 === q2.quadrant) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (n6 === k2.degrees_minutes_seconds) {
    const n7 = Z3.numberToDms(e4);
    return K2.createFromAngleAndDirection($2.createFromDegreesMinutesSeconds(n7.m_degrees, n7.m_minutes, n7.m_seconds), s4);
  }
  return K2.createFromAngleAndDirection($2.createFromAngleAndUnits(e4, ee(n6)), s4);
}
function se(e4) {
  switch (Ne(e4)) {
    case 1:
      return { first: H2.north, second: H2.east };
    case 2:
      return { first: H2.south, second: H2.east };
    case 3:
      return { first: H2.south, second: H2.west };
    case 4:
      return { first: H2.north, second: H2.west };
  }
  return null;
}
function ae2(e4) {
  switch (e4.toUpperCase().trim()) {
    case "N":
    case "NORTH":
      return H2.north;
    case "E":
    case "EAST":
      return H2.east;
    case "S":
    case "SOUTH":
      return H2.south;
    case "W":
    case "WEST":
      return H2.west;
  }
  return null;
}
function ie2(e4) {
  const n6 = parseFloat(e4);
  if (n3(n6)) {
    if (isNaN(n6)) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
    return n6;
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function oe(e4, n6, a5) {
  const i7 = a5 === q2.quadrant;
  let o4 = null, c3 = null, u3 = 0, d4 = 0, l5 = 0;
  if (i7) {
    if (e4.length < 2) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
    l5 = 1;
    const n7 = se(pe(e4[e4.length - 1]));
    if (n7 ? (o4 = n7.first, c3 = n7.second) : (u3 = 1, o4 = ae2(pe(e4[0])), c3 = ae2(pe(e4[e4.length - 1]))), null === o4 || null === c3) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
  }
  switch (n6) {
    case k2.decimal_degrees:
    case k2.radians:
    case k2.gradians:
      if (0 === e4.length) throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
      return i7 ? K2.createFromAngleMeridianAndDirection($2.createFromAngleAndUnits(ie2(e4[u3]), ee(n6)), o4, c3) : K2.createFromAngleAndDirection($2.createFromAngleAndUnits(ie2(e4[u3]), ee(n6)), a5);
    case k2.degrees_minutes_seconds:
      if (d4 = e4.length - l5 - u3, 3 === d4) {
        const n7 = $2.createFromDegreesMinutesSeconds(ie2(e4[u3]), ie2(e4[u3 + 1]), ie2(e4[u3 + 2]));
        return i7 ? K2.createFromAngleMeridianAndDirection(n7, o4, c3) : K2.createFromAngleAndDirection(n7, a5);
      }
      if (1 === d4) {
        const n7 = ie2(e4[u3]), t8 = Z3.numberToDms(n7), r6 = $2.createFromDegreesMinutesSeconds(t8.m_degrees, t8.m_minutes, t8.m_seconds);
        return i7 ? K2.createFromAngleMeridianAndDirection(r6, o4, c3) : K2.createFromAngleAndDirection(r6, a5);
      }
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function ce(e4) {
  const n6 = /* @__PURE__ */ new Set([" ", "-", "/", "'", '"', "\\", "^", b4, N, "	", "\r", "\n", "*"]);
  let t8 = "";
  for (let r6 = 0; r6 < e4.length; r6++) {
    const s4 = e4.charAt(r6);
    n6.has(s4) ? t8 += "RRSPLITRRSPLITRR" : t8 += s4;
  }
  return t8.split("RRSPLITRRSPLITRR").filter((e5) => "" !== e5);
}
function ue2(e4, n6, s4) {
  if (n3(e4)) return re2(Ne(e4), n6, s4);
  if (e2(e4)) return oe(ce(e4), n6, s4);
  if (o2(e4)) return oe(e4, n6, s4);
  if (te(e4)) return oe(e4.toArray(), n6, s4);
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function de2(e4, n6, s4) {
  const a5 = ee(s4);
  if (a5 && s4 !== k2.degrees_minutes_seconds) {
    return e4.getAngle(n6).extractAngularUnits(a5);
  }
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function le(e4, n6, t8) {
  const r6 = e4.getAngle(n6);
  if (n6 === q2.quadrant && t8 === k2.degrees_minutes_seconds) {
    const t9 = Z3.secondsToDMS(r6.extractAngularUnits(k2.seconds));
    return [P4(e4.getMeridian(n6), "SHORT"), t9.m_degrees, t9.m_minutes, t9.m_seconds, P4(e4.getDirection(n6), "SHORT")];
  }
  if (t8 === k2.degrees_minutes_seconds) {
    const e5 = Z3.secondsToDMS(r6.extractAngularUnits(k2.seconds));
    return [e5.m_degrees, e5.m_minutes, e5.m_seconds];
  }
  return n6 === q2.quadrant ? [P4(e4.getMeridian(n6), "SHORT"), r6.extractAngularUnits(t8), P4(e4.getDirection(n6), "SHORT")] : [r6.extractAngularUnits(t8)];
}
function he2(e4, n6) {
  let s4 = "";
  switch (e4) {
    case k2.decimal_degrees:
      s4 = n6 === q2.quadrant ? "DD.DD" + b4 : "DDD.DD" + b4;
      break;
    case k2.degrees_minutes_seconds:
      s4 = n6 === q2.quadrant ? "dd" + b4 + ` mm' ss"` : "ddd" + b4 + ` mm' ss.ss"`;
      break;
    case k2.radians:
      s4 = "R.RR";
      break;
    case k2.gradians:
      s4 = "GGG.GG" + N;
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  }
  return n6 === q2.quadrant && (s4 = "p " + s4 + " b"), s4;
}
function ge(e4, n6, t8) {
  const r6 = { padding: 0, rounding: 0, newpos: n6 };
  let s4 = false;
  for (; n6 < e4.length; ) {
    const a5 = e4[n6];
    if (a5 === t8) s4 ? r6.rounding++ : r6.padding++, n6++;
    else {
      if ("." !== a5) break;
      s4 = true, n6++;
    }
  }
  return r6.newpos = n6 - 1, r6;
}
function me(e4, n6, t8) {
  const r6 = { escaped: "", newpos: n6 };
  for (n6++; n6 < e4.length; ) {
    const t9 = e4[n6];
    if (n6++, "]" === t9) break;
    r6.escaped += t9;
  }
  return r6.newpos = n6 - 1, r6;
}
function _e(e4, n6, t8) {
  let r6 = "", s4 = null, a5 = null;
  const i7 = ne2.createFromStringAndBearing(n6, e4, t8), o4 = { D: k2.decimal_degrees, d: k2.truncated_degrees, m: k2.fractional_degree_minutes, s: k2.fractional_minute_seconds, R: k2.radians, G: k2.gradians };
  for (let c3 = 0; c3 < n6.length; c3++) {
    const u3 = n6[c3];
    switch (u3) {
      case "[":
        s4 = me(n6, c3), r6 += s4.escaped, c3 = s4.newpos;
        continue;
      case "D":
      case "d":
      case "m":
      case "s":
      case "R":
      case "G":
        s4 = ge(n6, c3, u3), a5 = e4.getAngle(t8), r6 += te2(a5, o4[u3], s4.padding, s4.rounding, i7), c3 = s4.newpos;
        continue;
      case "P":
      case "p":
        r6 += P4(i7.fetchMeridian(), "p" === u3 ? "SHORT" : "LONG");
        continue;
      case "B":
      case "b":
        r6 += P4(i7.fetchDirection(), "b" === u3 ? "SHORT" : "LONG");
        continue;
      default:
        r6 += u3;
    }
  }
  return r6;
}
var fe2 = new e(["TEXT", "VALUE"]);
function we2(n6, a5, i7) {
  if (!(a5 instanceof j)) throw new a2(null, r.InvalidParameter, null);
  if (false === a5.hasField("directionType")) throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === a5.hasField("angleType")) throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const o4 = W2(O2(a5.field("directiontype"))), c3 = ue2(n6, V(O2(a5.field("angletype"))), o4);
  if (!(i7 instanceof j)) throw new a2(null, r.InvalidParameter, null);
  if (false === i7.hasField("directionType")) throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === i7.hasField("outputType")) throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const u3 = W2(O2(i7.field("directiontype"))), d4 = i7.hasField("angleType") ? V(O2(i7.field("angletype"))) : null, l5 = fe2.get(O2(i7.field("outputType")));
  if (!u3 || !l5) throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (!(d4 || "TEXT" === l5 && i7.hasField("format"))) throw new a2(null, r.LogicError, null, { reason: "invalid unit" });
  switch (l5) {
    case "VALUE":
      return u3 === q2.quadrant || d4 === k2.degrees_minutes_seconds ? le(c3, u3, d4) : de2(c3, u3, d4);
    case "TEXT": {
      let e4 = "";
      return i7.hasField("format") && (e4 = pe(i7.field("format"))), null !== e4 && "" !== e4 || (e4 = he2(d4, u3)), _e(c3, e4, u3);
    }
    default:
      throw new a2(null, r.InvalidParameter, null);
  }
}

// node_modules/@arcgis/core/arcade/functions/hash.js
var t7 = 2654435761;
var s3 = 2246822519;
var n5 = 3266489917;
var e3 = 668265263;
var r5 = 374761393;
function h5(t8) {
  const s4 = [];
  for (let n6 = 0, e4 = t8.length; n6 < e4; n6++) {
    let e5 = t8.charCodeAt(n6);
    e5 < 128 ? s4.push(e5) : e5 < 2048 ? s4.push(192 | e5 >> 6, 128 | 63 & e5) : e5 < 55296 || e5 >= 57344 ? s4.push(224 | e5 >> 12, 128 | e5 >> 6 & 63, 128 | 63 & e5) : (n6++, e5 = 65536 + ((1023 & e5) << 10 | 1023 & t8.charCodeAt(n6)), s4.push(240 | e5 >> 18, 128 | e5 >> 12 & 63, 128 | e5 >> 6 & 63, 128 | 63 & e5));
  }
  return new Uint8Array(s4);
}
var i6 = class {
  constructor(t8) {
    this._seed = t8, this._totallen = 0, this._bufs = [], this.init();
  }
  init() {
    return this._bufs = [], this._totallen = 0, this;
  }
  updateFloatArray(t8) {
    const s4 = [];
    for (const n6 of t8) isNaN(n6) ? s4.push("NaN") : n6 === 1 / 0 ? s4.push("Infinity") : n6 === -1 / 0 ? s4.push("-Infinity") : 0 === n6 ? s4.push("0") : s4.push(n6.toString(16));
    this.update(h5(s4.join("")));
  }
  updateIntArray(t8) {
    const s4 = Int32Array.from(t8);
    this.update(new Uint8Array(s4.buffer));
  }
  updateUint8Array(t8) {
    this.update(Uint8Array.from(t8));
  }
  updateWithString(t8) {
    return this.update(h5(t8));
  }
  update(t8) {
    return this._bufs.push(t8), this._totallen += t8.length, this;
  }
  digest() {
    const t8 = new Uint8Array(this._totallen);
    let s4 = 0;
    for (const n6 of this._bufs) t8.set(n6, s4), s4 += n6.length;
    return this.init(), this._xxHash32(t8, this._seed);
  }
  _xxHash32(h6, i7 = 0) {
    const o4 = h6;
    let u3 = i7 + r5 & 4294967295, a5 = 0;
    if (o4.length >= 16) {
      const n6 = [i7 + t7 + s3 & 4294967295, i7 + s3 & 4294967295, i7 + 0 & 4294967295, i7 - t7 & 4294967295], e4 = h6, r6 = e4.length - 16;
      let o5 = 0;
      for (a5 = 0; (4294967280 & a5) <= r6; a5 += 4) {
        const r7 = a5, h7 = e4[r7] + (e4[r7 + 1] << 8), i8 = e4[r7 + 2] + (e4[r7 + 3] << 8), u4 = h7 * s3 + (i8 * s3 << 16);
        let l6 = n6[o5] + u4 & 4294967295;
        l6 = l6 << 13 | l6 >>> 19;
        const f8 = 65535 & l6, p8 = l6 >>> 16;
        n6[o5] = f8 * t7 + (p8 * t7 << 16) & 4294967295, o5 = o5 + 1 & 3;
      }
      u3 = (n6[0] << 1 | n6[0] >>> 31) + (n6[1] << 7 | n6[1] >>> 25) + (n6[2] << 12 | n6[2] >>> 20) + (n6[3] << 18 | n6[3] >>> 14) & 4294967295;
    }
    u3 = u3 + h6.length & 4294967295;
    const l5 = h6.length - 4;
    for (; a5 <= l5; a5 += 4) {
      const t8 = a5, s4 = o4[t8] + (o4[t8 + 1] << 8), r6 = o4[t8 + 2] + (o4[t8 + 3] << 8);
      u3 = u3 + (s4 * n5 + (r6 * n5 << 16)) & 4294967295, u3 = u3 << 17 | u3 >>> 15, u3 = (65535 & u3) * e3 + ((u3 >>> 16) * e3 << 16) & 4294967295;
    }
    for (; a5 < o4.length; ++a5) {
      u3 += o4[a5] * r5, u3 = u3 << 11 | u3 >>> 21, u3 = (65535 & u3) * t7 + ((u3 >>> 16) * t7 << 16) & 4294967295;
    }
    return u3 ^= u3 >>> 15, u3 = ((65535 & u3) * s3 & 4294967295) + ((u3 >>> 16) * s3 << 16), u3 ^= u3 >>> 13, u3 = ((65535 & u3) * n5 & 4294967295) + ((u3 >>> 16) * n5 << 16), u3 ^= u3 >>> 16, u3 < 0 ? u3 + 4294967296 : u3;
  }
};

// node_modules/@arcgis/core/arcade/functions/string.js
function J2(t8) {
  if ("loaded" === t8.loadStatus && t8.user?.sourceJSON) {
    return t8.user.sourceJSON;
  }
  return null;
}
function W3(t8, e4) {
  return !!t8 && D(t8, e4?.restUrl || "");
}
function B3(t8, e4) {
  if (!t8 || !e4) return t8 === e4;
  if (t8.x === e4.x && t8.y === e4.y) {
    if (t8.hasZ) {
      if (t8.z !== e4.z) return false;
    } else if (e4.hasZ) return false;
    if (t8.hasM) {
      if (t8.m !== e4.m) return false;
    } else if (e4.hasM) return false;
    return true;
  }
  return false;
}
function Z4(n6, i7, u3) {
  if (null !== n6) if (o2(n6)) {
    if (i7.updateUint8Array([61]), u3.map.has(n6)) {
      const t8 = u3.map.get(n6);
      i7.updateIntArray([61237541 ^ t8]);
    } else {
      u3.map.set(n6, u3.currentLength++);
      for (const t8 of n6) Z4(t8, i7, u3);
      u3.map.delete(n6), u3.currentLength--;
    }
    i7.updateUint8Array([199]);
  } else if (te(n6)) {
    if (i7.updateUint8Array([61]), u3.map.has(n6)) {
      const t8 = u3.map.get(n6);
      i7.updateIntArray([61237541 ^ t8]);
    } else {
      u3.map.set(n6, u3.currentLength++);
      for (const t8 of n6.toArray()) Z4(t8, i7, u3);
      u3.map.delete(n6), u3.currentLength--;
    }
    i7.updateUint8Array([199]);
  } else {
    if (ne(n6)) return i7.updateIntArray([n6.toNumber()]), void i7.updateUint8Array([241]);
    if (re(n6)) return i7.updateIntArray([n6.toNumber()]), void i7.updateIntArray([257]);
    if (ie(n6)) return i7.updateIntArray([n6.toNumber()]), void i7.updateIntArray([263]);
    if (e2(n6)) return i7.updateIntArray([n6.length]), i7.updateWithString(n6), void i7.updateUint8Array([41]);
    if (t(n6)) i7.updateUint8Array([true === n6 ? 1 : 0, 113]);
    else {
      if (n3(n6)) return i7.updateFloatArray([n6]), void i7.updateUint8Array([173]);
      if (n6 instanceof t5) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      if (n6 instanceof t4) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      if (!(n6 instanceof j)) {
        if ($(n6)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (n6 instanceof _) return i7.updateIntArray([3833836621]), i7.updateIntArray([0]), i7.updateFloatArray([n6.x]), i7.updateIntArray([1]), i7.updateFloatArray([n6.y]), n6.hasZ && (i7.updateIntArray([2]), i7.updateFloatArray([n6.z])), n6.hasM && (i7.updateIntArray([3]), i7.updateFloatArray([n6.m])), i7.updateIntArray([3765347959]), void Z4(n6.spatialReference.wkid, i7, u3);
        if (n6 instanceof P) {
          i7.updateIntArray([1266616829]);
          for (let t8 = 0; t8 < n6.rings.length; t8++) {
            const e4 = n6.rings[t8], r6 = [];
            let a5 = null, o4 = null;
            for (let i8 = 0; i8 < e4.length; i8++) {
              const u4 = n6.getPoint(t8, i8);
              if (0 === i8) a5 = u4;
              else if (B3(o4, u4)) continue;
              o4 = u4, i8 === e4.length - 1 && B3(a5, u4) || r6.push(u4);
            }
            i7.updateIntArray([1397116793, r6.length]);
            for (let t9 = 0; t9 < r6.length; t9++) {
              const e5 = r6[t9];
              i7.updateIntArray([3962308117, t9]), Z4(e5, i7, u3), i7.updateIntArray([2716288009]);
            }
            i7.updateIntArray([2278822459]);
          }
          return i7.updateIntArray([3878477243]), void Z4(n6.spatialReference.wkid, i7, u3);
        }
        if (n6 instanceof y) {
          i7.updateIntArray([4106883559]);
          for (let t8 = 0; t8 < n6.paths.length; t8++) {
            const e4 = n6.paths[t8];
            i7.updateIntArray([1397116793, e4.length]);
            for (let r6 = 0; r6 < e4.length; r6++) i7.updateIntArray([3962308117, r6]), Z4(n6.getPoint(t8, r6), i7, u3), i7.updateIntArray([2716288009]);
            i7.updateIntArray([2278822459]);
          }
          return i7.updateIntArray([2568784753]), void Z4(n6.spatialReference.wkid, i7, u3);
        }
        if (n6 instanceof m) {
          i7.updateIntArray([588535921, n6.points.length]);
          for (let t8 = 0; t8 < n6.points.length; t8++) {
            const e4 = n6.getPoint(t8);
            i7.updateIntArray([t8]), Z4(e4, i7, u3);
          }
          return i7.updateIntArray([1700171621]), void Z4(n6.spatialReference.wkid, i7, u3);
        }
        if (n6 instanceof z) return i7.updateIntArray([3483648373]), i7.updateIntArray([0]), i7.updateFloatArray([n6.xmax]), i7.updateIntArray([1]), i7.updateFloatArray([n6.xmin]), i7.updateIntArray([2]), i7.updateFloatArray([n6.ymax]), i7.updateIntArray([3]), i7.updateFloatArray([n6.ymin]), n6.hasZ && (i7.updateIntArray([4]), i7.updateFloatArray([n6.zmax]), i7.updateIntArray([5]), i7.updateFloatArray([n6.zmin])), n6.hasM && (i7.updateIntArray([6]), i7.updateFloatArray([n6.mmax]), i7.updateIntArray([7]), i7.updateFloatArray([n6.mmin])), i7.updateIntArray([3622027469]), void Z4(n6.spatialReference.wkid, i7, u3);
        if (n6 instanceof f) return i7.updateIntArray([14]), void 0 !== n6.wkid && null !== n6.wkid && i7.updateIntArray([n6.wkid]), n6.wkt && i7.updateWithString(n6.wkt), void (n6.wkt2 && i7.updateWithString(n6.wkt2));
        if (G(n6)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (K(n6)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (X(n6)) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (n6 === I) throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        throw new a2(u3.context, r.UnsupportedHashType, u3.node);
      }
      if (i7.updateUint8Array([223]), u3.map.has(n6)) {
        const t8 = u3.map.get(n6);
        i7.updateIntArray([61237541 ^ t8]);
      } else {
        u3.map.set(n6, u3.currentLength++);
        for (const t8 of n6.keys()) {
          i7.updateIntArray([t8.length]), i7.updateWithString(t8), i7.updateUint8Array([251]);
          Z4(n6.field(t8), i7, u3), i7.updateUint8Array([239]);
        }
        u3.map.delete(n6), u3.currentLength--;
      }
      i7.updateUint8Array([73]);
    }
  }
  else i7.updateUint8Array([0, 139]);
}
function E3(e4, A2) {
  e4.portal = function(e5, r6) {
    return A2(e5, r6, (n6, a5, o4) => (ae(o4, 1, 1, e5, r6), new t4(pe(o4[0]))));
  }, e4.typeof = function(t8, e5) {
    return A2(t8, e5, (r6, n6, u3) => {
      ae(u3, 1, 1, t8, e5);
      const l5 = E(u3[0]);
      if ("Unrecognized Type" === l5) throw new a2(t8, r.UnrecognizedType, e5);
      return l5;
    });
  }, e4.trim = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => (ae(a5, 1, 1, t8, e5), pe(a5[0]).trim()));
  }, e4.tohex = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 1, 1, t8, e5);
      const o4 = Ne(a5[0]);
      return isNaN(o4) ? o4 : o4.toString(16);
    });
  }, e4.upper = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => (ae(a5, 1, 1, t8, e5), pe(a5[0]).toUpperCase()));
  };
  const w = new e(["every-word", "first-word"]);
  e4.proper = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 1, 2, t8, e5);
      const o4 = (a5.length >= 2 ? w.lookup(pe(a5[1])) : null) ?? "every-word", s4 = /\s/, l5 = pe(a5[0]);
      let p8 = "", f8 = true;
      for (let t9 = 0; t9 < l5.length; t9++) {
        let e6 = l5[t9];
        if (s4.test(e6)) "every-word" === o4 && (f8 = true);
        else {
          e6.toUpperCase() !== e6.toLowerCase() && (f8 ? (e6 = e6.toUpperCase(), f8 = false) : e6 = e6.toLowerCase());
        }
        p8 += e6;
      }
      return p8;
    });
  }, e4.lower = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => (ae(a5, 1, 1, t8, e5), pe(a5[0]).toLowerCase()));
  };
  const I4 = new e(["digits", "digits-hyphen", "digits-hyphen-braces", "digits-hyphen-parentheses"]);
  e4.guid = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 0, 1, t8, e5);
      switch (a5.length > 0 ? I4.lookup(pe(a5[0])) : null) {
        case "digits":
          return n2().replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return n2();
        case "digits-hyphen-parentheses":
          return "(" + n2() + ")";
        default:
          return "{" + n2() + "}";
      }
    });
  }, e4.standardizeguid = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 2, 2, t8, e5);
      let o4 = pe(a5[0]);
      if ("" === o4 || null === o4) return "";
      const s4 = /^(\{|\()?(?<partA>[0-9a-z]{8})(-?)(?<partB>[0-9a-z]{4})(-?)(?<partC>[0-9a-z]{4})(-?)(?<partD>[0-9a-z]{4})(-?)(?<partE>[0-9a-z]{12})(\}|\))?$/gim.exec(o4);
      if (!s4) return "";
      const l5 = s4.groups;
      switch (o4 = l5.partA + "-" + l5.partB + "-" + l5.partC + "-" + l5.partD + "-" + l5.partE, I4.lookup(pe(a5[1]))) {
        case "digits":
          return o4.replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return o4;
        case "digits-hyphen-parentheses":
          return "(" + o4 + ")";
        default:
          return "{" + o4 + "}";
      }
    });
  }, e4.console = function(t8, e5) {
    return A2(t8, e5, (e6, r6, n6) => (0 === n6.length || (1 === n6.length ? t8.console(pe(n6[0])) : t8.console(pe(n6))), I));
  }, e4.mid = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 2, 3, t8, e5);
      let o4 = Ne(a5[1]);
      if (isNaN(o4)) return "";
      if (o4 = Math.max(0, o4), 2 === a5.length) return pe(a5[0]).slice(o4);
      let s4 = Ne(a5[2]);
      return isNaN(s4) ? "" : (s4 < 0 && (s4 = 0), pe(a5[0]).slice(o4, o4 + s4));
    });
  }, e4.find = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 2, 3, t8, e5);
      let o4 = 0;
      if (a5.length > 2) {
        if (o4 = Ne(q(a5[2], 0)), isNaN(o4)) return -1;
        o4 < 0 && (o4 = 0);
      }
      return pe(a5[1]).indexOf(pe(a5[0]), o4);
    });
  }, e4.left = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 2, 2, t8, e5);
      let o4 = Ne(a5[1]);
      return isNaN(o4) ? "" : (o4 < 0 && (o4 = 0), pe(a5[0]).slice(0, o4));
    });
  }, e4.right = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 2, 2, t8, e5);
      const o4 = Ne(a5[1]);
      if (isNaN(o4) || o4 <= 0) return "";
      return pe(a5[0]).slice(-o4);
    });
  }, e4.split = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      let o4;
      ae(a5, 2, 4, t8, e5);
      let s4 = Ne(q(a5[2], -1));
      const p8 = Te(q(a5[3], false));
      if (-1 === s4 || null === s4 || true === p8 ? o4 = pe(a5[0]).split(pe(a5[1])) : (isNaN(s4) && (s4 = -1), s4 < -1 && (s4 = -1), o4 = pe(a5[0]).split(pe(a5[1]), s4)), false === p8) return o4;
      const d4 = [];
      for (let t9 = 0; t9 < o4.length && !(-1 !== s4 && d4.length >= s4); t9++) "" !== o4[t9] && void 0 !== o4[t9] && d4.push(o4[t9]);
      return d4;
    });
  }, e4.text = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => (ae(a5, 1, 2, t8, e5), he(a5[0], a5[1])));
  }, e4.concatenate = function(t8, e5) {
    return A2(t8, e5, (t9, e6, r6) => {
      const n6 = [];
      if (r6.length < 1) return "";
      if (o2(r6[0])) {
        const t10 = q(r6[2], "");
        for (let e7 = 0; e7 < r6[0].length; e7++) n6[e7] = he(r6[0][e7], t10);
        return r6.length > 1 ? n6.join(r6[1]) : n6.join("");
      }
      if (te(r6[0])) {
        const t10 = q(r6[2], "");
        for (let e7 = 0; e7 < r6[0].length(); e7++) n6[e7] = he(r6[0].get(e7), t10);
        return r6.length > 1 ? n6.join(r6[1]) : n6.join("");
      }
      for (let a5 = 0; a5 < r6.length; a5++) n6[a5] = he(r6[a5]);
      return n6.join("");
    });
  }, e4.reverse = function(t8, e5) {
    return A2(t8, e5, (r6, n6, u3) => {
      if (ae(u3, 1, 1, t8, e5), o2(u3[0])) {
        const t9 = u3[0].slice();
        return t9.reverse(), t9;
      }
      if (te(u3[0])) {
        const t9 = u3[0].toArray().slice();
        return t9.reverse(), t9;
      }
      throw new a2(t8, r.InvalidParameter, e5);
    });
  }, e4.replace = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 3, 4, t8, e5);
      const o4 = pe(a5[0]), s4 = pe(a5[1]), l5 = pe(a5[2]);
      return 4 !== a5.length || Te(a5[3]) ? L(o4, s4, l5) : o4.replace(s4, l5);
    });
  }, e4.urlencode = function(t8, e5) {
    return A2(t8, e5, (n6, a5, o4) => {
      if (ae(o4, 1, 1, t8, e5), null === o4[0]) return "";
      if (o4[0] instanceof j) {
        let t9 = "";
        for (const e6 of o4[0].keys()) {
          const r6 = o4[0].field(e6);
          "" !== t9 && (t9 += "&"), t9 += null === r6 ? encodeURIComponent(e6) + "=" : encodeURIComponent(e6) + "=" + encodeURIComponent(r6);
        }
        return t9;
      }
      return encodeURIComponent(pe(o4[0]));
    });
  }, e4.hash = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => {
      ae(a5, 1, 1, t8, e5);
      const o4 = new i6(0);
      return Z4(a5[0], o4, { context: t8, node: e5, map: /* @__PURE__ */ new Map(), currentLength: 0 }), o4.digest();
    });
  }, e4.convertdirection = function(t8, e5) {
    return A2(t8, e5, (r6, n6, a5) => (ae(a5, 3, 3, t8, e5), we2(a5[0], a5[1], a5[2])));
  }, e4.fromjson = function(t8, e5) {
    return A2(t8, e5, (n6, s4, l5) => {
      if (ae(l5, 1, 1, t8, e5), false === e2(l5[0])) throw new a2(t8, r.InvalidParameter, e5);
      return j.convertJsonToArcade(JSON.parse(pe(l5[0])), Ke(t8));
    });
  }, e4.tocharcode = function(t8, e5) {
    return A2(t8, e5, (r6, n6, s4) => {
      ae(s4, 1, 2, t8, e5);
      const p8 = Ne(q(s4[1], 0)), c3 = pe(s4[0]);
      if (0 === c3.length && 1 === s4.length) return null;
      if (c3.length <= p8 || p8 < 0) throw new a2(t8, r.OutOfBounds, e5);
      return c3.charCodeAt(p8);
    });
  }, e4.tocodepoint = function(t8, e5) {
    return A2(t8, e5, (r6, n6, s4) => {
      ae(s4, 1, 2, t8, e5);
      const p8 = Ne(q(s4[1], 0)), c3 = pe(s4[0]);
      if (0 === c3.length && 1 === s4.length) return null;
      if (c3.length <= p8 || p8 < 0) throw new a2(t8, r.OutOfBounds, e5);
      return c3.codePointAt(p8);
    });
  }, e4.fromcharcode = function(t8, e5) {
    return A2(t8, e5, (r6, n6, i7) => {
      if (i7.length < 1) throw new a2(t8, r.WrongNumberOfParameters, e5);
      const u3 = i7.map((t9) => Math.trunc(Ne(t9))).filter((t9) => t9 >= 0 && t9 <= 65535);
      return 0 === u3.length ? null : String.fromCharCode.apply(null, u3);
    });
  }, e4.fromcodepoint = function(t8, e5) {
    return A2(t8, e5, (r6, n6, i7) => {
      if (i7.length < 1) throw new a2(t8, r.WrongNumberOfParameters, e5);
      let u3;
      try {
        u3 = i7.map((t9) => Math.trunc(Ne(t9))).filter((t9) => t9 <= 1114111 && t9 >>> 0 === t9);
      } catch (s4) {
        return null;
      }
      return 0 === u3.length ? null : String.fromCodePoint.apply(null, u3);
    });
  }, e4.getuser = function(e5, n6) {
    return A2(e5, n6, (s4, l5, p8) => {
      ae(p8, 0, 2, e5, n6);
      let c3 = q(p8[1], "");
      if (c3 = true === c3 || false === c3 ? "" : pe(c3), null !== c3 && "" !== c3) return null;
      if (0 === p8.length || p8[0] instanceof t4) {
        let t8 = null;
        if (t8 = e5.services?.portal ? e5.services.portal : C.getDefault(), p8.length > 0) {
          if (!W3(p8[0].field("url"), t8)) return null;
        }
        if (!t8) return null;
        if ("" === c3) {
          const n7 = J2(t8);
          if (n7) {
            const t9 = JSON.parse(JSON.stringify(n7));
            for (const e6 of ["lastLogin", "created", "modified"]) void 0 !== t9[e6] && null !== t9[e6] && (t9[e6] = new Date(t9[e6]));
            return j.convertObjectToArcadeDictionary(t9, Ke(e5));
          }
        }
        return null;
      }
      throw new a2(e5, r.InvalidParameter, n6);
    });
  }, e4.getenvironment = function(t8, e5) {
    return A2(t8, e5, (n6, a5, o4) => (ae(o4, 0, 0, t8, e5), j.convertObjectToArcadeDictionary(Qe(Ke(t8), t8.spatialReference), Ke(t8), true)));
  }, e4.standardizefilename = function(t8, e5) {
    return A2(t8, e5, (t9, e6, r6) => {
      ae(r6, 1, 1, t9, e6);
      const [n6] = r6;
      if (null == n6) return "";
      if (!e2(n6)) throw new a2(t9, r.InvalidParameter, e6);
      return n6.replaceAll(/[<>"?*]/g, "_").replaceAll(/[/\\|]/g, "-").replaceAll(":", ", ");
    });
  };
}

export {
  s,
  f4 as f,
  d2 as d,
  y2 as y,
  o3 as o,
  l3 as l,
  u2 as u,
  p3 as p,
  f5 as f2,
  d3 as d2,
  g,
  b3 as b,
  p4 as p2,
  x2 as x,
  j2 as j,
  C3 as C,
  p6 as p3,
  f6 as f3,
  E3 as E
};
//# sourceMappingURL=chunk-KSHYWUFP.js.map
