import {
  m2 as m,
  y2 as y
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/geometry/support/Indices.js
function t(r) {
  return e(r, true);
}
function e(t2, e2) {
  if (Array.isArray(t2)) {
    if (t2.length < y) return t2;
  } else if (t2.length < y) return Array.from(t2);
  let f2 = true, a2 = true;
  return t2.some((r, n) => (f2 = f2 && 0 === r, a2 = a2 && r === n, !f2 && !a2)), f2 ? U(t2.length) : a2 ? A(t2.length) : m(t2) && t2.BYTES_PER_ELEMENT === Uint16Array.BYTES_PER_ELEMENT ? t2 : i(t2, !e2);
}
function i(r, t2) {
  for (const e2 of r) {
    if (e2 >= 65536) return m(r) ? r : new Uint32Array(r);
    e2 >= 256 && (t2 = false);
  }
  return t2 ? new Uint8Array(r) : new Uint16Array(r);
}
function f(n) {
  return n <= y ? new Array(n) : n <= 65536 ? new Uint16Array(n) : new Uint32Array(n);
}
function a(n) {
  return n <= y ? new Array(n) : new Uint32Array(n);
}
var u = l(131072);
var o = [0];
var y2 = (() => {
  const r = new Uint16Array(65536);
  for (let n = 0; n < r.length; ++n) r[n] = n;
  return r;
})();
function A(n) {
  return 1 === n ? o : n < y ? Array.from(new Uint16Array(y2.buffer, 0, n)) : n < y2.length ? new Uint16Array(y2.buffer, 0, n) : (n > u.length && (u = l(Math.max(2 * u.length, n))), new Uint32Array(u.buffer, 0, n));
}
function l(r) {
  const n = new Uint32Array(r);
  for (let t2 = 0; t2 < n.length; t2++) n[t2] = t2;
  return n;
}
var w = new Uint8Array(65536);
function U(n) {
  if (1 === n) return o;
  if (n < y) return new Array(n).fill(0);
  if (n > w.length) {
    const r = Math.max(2 * w.length, n);
    w = new Uint8Array(r);
  }
  return new Uint8Array(w.buffer, 0, n);
}

export {
  t,
  e,
  f,
  a,
  A,
  U
};
//# sourceMappingURL=chunk-LG4SF54U.js.map
