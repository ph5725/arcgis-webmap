{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/Distance2DCalculator-CXhBP-8I.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{b as e,c as t}from\"./tslib.es6.js\";import{G as n,v as i}from\"./Geometry.js\";import{S as r,a as s,s as o}from\"./MultiPathImpl.js\";import{h as m}from\"./ProjectionTransformation.js\";import{P as a,c as u,s as c,i as h,h as l,j as g,d as y}from\"./Point2D.js\";import{Envelope2D as _}from\"./Envelope2D.js\";import{P as D,E as p}from\"./Envelope.js\";function v(){return{outPoint:new a,index:-1,t:Number.NaN}}function N(e,t,n){return{outPoint:e.clone(),index:t,t:n}}function f(e,t,n,i){e.outPoint.assign(t),e.index=n,e.t=i}function P(e,t){e.outPoint.assign(t.outPoint),e.index=t.index,e.t=t.t}function I(e,t,n,i){e.index=n,e.t=i,t.queryCoord2D(e.t,e.outPoint)}function d(e,t){const n=v();P(n,e),P(e,t),P(t,n)}function q(e,t,i,r,s,o){if(e.getGeometryType()===n.enumPolygon){for(;r.nextPath();)if(r.hasNextSegment()){const t=r.nextSegment();if(0!==m(e,t.getEndXY(),0))return f(s,t.getEndXY(),-1,Number.NaN),f(o,t.getEndXY(),-1,Number.NaN),!0}r.resetToFirstPath()}if(t.getGeometryType()===n.enumPolygon){for(;i.nextPath();)if(i.hasNextSegment()){const e=i.nextSegment();if(0!==m(t,e.getEndXY(),0))return f(s,e.getEndXY(),-1,Number.NaN),f(o,e.getEndXY(),-1,Number.NaN),!0}i.resetToFirstPath()}return!1}function M(e){const t=e.getPathCount(),n=y(e.getSegmentCount(),0);let i=0;for(let r=0;r<t;++r){const t=i+e.getSegmentCountPath(r);for(let s=i,o=e.getPathStart(r);s<t;++s,++o)n[s]=o;i=t}return o(e.getPointCount(),n),n}function x(e,t){return!!Number.isNaN(t)||e<=t}function E(e){const t=new s;return t.addEnvelope(e,!1),t}class b{constructor(e,t){if(this.m_env2DgeometryA=null,this.m_env2DgeometryB=null,this.m_progressCounter=0,this.m_progressTracker=t,this.m_maxSqrDistance=e*e,this.m_maxDistance=e,this.m_bIsNearCalc=!1,Number.isNaN(this.m_maxDistance)?this.m_maxDistance=Number.POSITIVE_INFINITY:this.m_maxDistance=e,this.m_maxSqrDistance=this.m_maxDistance*this.m_maxDistance,Number.isFinite(this.m_maxSqrDistance)){let e=Math.sqrt(this.m_maxSqrDistance);for(;e<this.m_maxDistance;)this.m_maxSqrDistance*=1+Number.EPSILON,e=Math.sqrt(this.m_maxSqrDistance)}}calculate(e,t,n,i){if(e.getGeometryType()!==D.type||t.getGeometryType()!==D.type){this.m_env2DgeometryA=new _,this.m_env2DgeometryB=new _,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB);if(!x(this.m_env2DgeometryA.distanceFromEnvelope(this.m_env2DgeometryB),this.m_maxDistance))return Number.POSITIVE_INFINITY}const r=N(new a,g(),Number.NaN),s=N(new a,g(),Number.NaN),o=this._ExecuteBruteForce(e,t,r,s);return x(o,this.m_maxDistance)?(null!==n&&P(n,r),null!==i&&P(i,s),o):Number.POSITIVE_INFINITY}isNear(e,t){if(this.m_bIsNearCalc=!0,e.isEmpty()||t.isEmpty())return!1;if(e===t)return!0;let n=!0;if(e.getGeometryType()!==D.type&&e.getGeometryType()!==p.type||t.getGeometryType()!==D.type&&t.getGeometryType()!==p.type||(n=!1),n){if(this.m_env2DgeometryA=new _,this.m_env2DgeometryB=new _,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!(this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)>this.m_maxSqrDistance))return!0;if(this.m_env2DgeometryA.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>this.m_maxSqrDistance)return!1}const i=N(new a,g(),Number.NaN),r=N(new a,g(),Number.NaN);return this._ExecuteBruteForce(e,t,i,r)<=this.m_maxDistance}progress_(e=!1){}_ExecuteBruteForce(e,t,i,r){switch(e.getGeometryType()){case n.enumPoint:return this.distancePointGeometry(e,t,i,r);case n.enumMultiPoint:return this.distanceMultipointGeometry(e,t,i,r);case n.enumEnvelope:return this.distanceEnvelopeGeometry(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathGeometry(e,t,i,r);default:return Number.NaN}}distancePointGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointPoint(e,t,i,r);case n.enumMultiPoint:return this.distancePointMultipoint(e,t,i,r);case n.enumPolyline:case n.enumPolygon:return this.distancePointMultipath(e,t,i,r);case n.enumEnvelope:return this.distancePointEnvelope(e,t,i,r);default:return Number.NaN}}distancePointPoint(e,t,n,i){const r=e.getXY(),s=t.getXY();return f(n,r,0,0),f(i,s,0,0),Math.sqrt(a.sqrDistance(r,s))}distancePointMultipoint(e,t,n,i){const r=e.getXY();let s=this.m_maxSqrDistance,o=s,m=!1;const u=t.getPointCount(),c=new a;for(let h=0;h<u;++h)if(t.queryXY(h,c),o=a.sqrDistance(r,c),this.m_bIsNearCalc){if(o<=s)return 0}else if(!(o>s)&&(!m&&o===s||o<s)&&(s=o,f(n,r,0,0),f(i,c,h,0),m=!0,0===s))return 0;return m?Math.sqrt(s):Number.POSITIVE_INFINITY}distancePointMultipath(e,t,i,r){const s=!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB),o=e.getXY();if(!s&&t.getGeometryType()===n.enumPolygon&&0!==m(t,o,0))return f(i,o,0,0),f(r,o,-1,Number.NaN),0;t.getImpl().getAccelerators();let u=this.m_maxSqrDistance,c=u,h=-1;const l=new _,g=t.querySegmentIterator();let y=!1;for(;g.nextPath();)for(;g.hasNextSegment();){const e=g.nextSegment();e.queryEnvelope(l);const t=l.sqrDistance(o);if(t>u)continue;if(!this.m_bIsNearCalc&&y&&t===u)continue;h=e.getClosestCoordinate(o,!1);const n=e.getCoord2D(h);if(c=a.sqrDistance(o,n),this.m_bIsNearCalc){if(c<=u)return 0}else if(!(c>u)&&(!y||c<u)&&(u=c,f(i,o,0,0),f(r,n,g.getStartPointIndex(),h),y=!0,0===u))return 0}return y?Math.sqrt(u):Number.POSITIVE_INFINITY}distancePointEnvelope(e,t,n,i){const r=e.getXY();f(n,r,0,0),f(i,r,-1,Number.NaN);const s=t.asEnvelope2D();return!s.contains(r)?Math.sqrt(s.sqrDistance(r,i.outPoint)):0}distanceMultipointGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipoint(t,e,r,i);return this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:return this.distanceMultipointMultipoint(e,t,i,r,1,1);case n.enumPolyline:case n.enumPolygon:return this.distanceMultipointMultipath(e,t,i,r);case n.enumEnvelope:return this.distanceMultipointMultipath(e,E(t),i,r);default:return Number.NaN}}distanceMultipointMultipoint(n,i,r,s,o,m){const g={stack:[],error:void 0,hasError:!1};try{if(this.m_bIsNearCalc&&1===o&&1===m){const e=Math.trunc(c(Math.sqrt(n.getPointCount())+1,1,h())),t=Math.trunc(c(Math.sqrt(i.getPointCount())+1,1,h()));if((e>=4||t>=4)&&this.distanceMultipointMultipoint(n,i,r,s,e,t)<=this.m_maxSqrDistance)return 0}let t=this.m_maxSqrDistance;const y=[n],_=[i],D=this.swapGeometriesIfBGtA(y,_);D&&(this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),m=u(o,o=m),d(r,s)),e(g,l((()=>{d(r,s),this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!D),!1);const p=y[0].getImpl(),v=_[0].getImpl(),N=p.getPointCount(),P=v.getPointCount(),I=P>1;let q=!1;const M=new a,x=new a;for(let e=0;e<N;e+=o){if(p.queryXY(e,M),I){const e=this.m_env2DgeometryB.sqrDistance(M);if(this.m_bIsNearCalc){if(e>t)continue;if(this.m_env2DgeometryB.sqrMaxMinDistance(M)<=t)return 0}else if(e>=t)continue}for(let n=0;n<P;n+=m){v.queryXY(n,x);const i=a.sqrDistance(M,x);if(this.m_bIsNearCalc){if(i<=t)return 0}else if(!(i>t||q&&i===t)&&(!q||i<t)&&(f(r,M,e,0),f(s,x,n,0),q=!0,t=i,0===t))return q?Math.sqrt(t):Number.POSITIVE_INFINITY}}return q?Math.sqrt(t):Number.POSITIVE_INFINITY}catch(y){g.error=y,g.hasError=!0}finally{t(g)}}distanceMultipointMultipath(e,t,i,r){let s=!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)&&t.getGeometryType()===n.enumPolygon;const o=t.querySegmentIterator();o.stripAttributes();const u=new _,c=new a;let h=this.m_maxSqrDistance;const l=e.getImpl(),g=l.getPointCount(),y=g>1;let D=!1;for(;o.nextPath();)for(;o.hasNextSegment();){const e=o.nextSegment();if(e.queryLooseEnvelope(u),y){const e=u.sqrDistanceEnvelope(this.m_env2DgeometryA,null,null);if(this.m_bIsNearCalc){if(e>h)continue}else if(e>h||D&&e===h)continue}for(let n=0;n<g;n++){if(l.queryXY(n,c),s&&0!==m(t,c,0))return f(i,c,-1,Number.NaN),f(r,c,n,0),0;{const e=u.sqrDistance(c);if(this.m_bIsNearCalc){if(e>h)continue}else if(e>h)continue}const a=e.getClosestCoordinate(c,!1),g=e.getCoord2D(a);c.subThis(g);const y=c.sqrLength();if(this.m_bIsNearCalc){if(y<=h)return 0}else if(!(y>h)&&(!D||y<h)&&(h=y,f(i,l.getXY(n),n,0),f(r,g,o.getStartPointIndex(),a),D=!0,0===h))return 0}s=!1}return D?Math.sqrt(h):Number.POSITIVE_INFINITY}distanceEnvelopeGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:return this.distancePointEnvelope(t,e,r,i);case n.enumMultiPoint:{this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,E(e),r,i);return this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(E(e),t,i,r);case n.enumEnvelope:return this.distanceEnvelopeEnvelope(e,t,i,r);default:return Number.NaN}}distanceEnvelopeEnvelope(e,t,n,i){n.t=Number.NaN,n.index=-1,i.t=Number.NaN,i.index=-1;const r=e.asEnvelope2D(),s=t.asEnvelope2D();return Math.sqrt(r.sqrDistanceEnvelope(s,n.outPoint,i.outPoint))}distanceMultipathGeometry(e,t,i,r){switch(t.getGeometryType()){case n.enumPoint:{this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distancePointMultipath(t,e,r,i);return this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumMultiPoint:{this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);const n=this.distanceMultipointMultipath(t,e,r,i);return this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),n}case n.enumPolyline:case n.enumPolygon:return this.distanceMultipathMultipath(e,t,i,r);case n.enumEnvelope:return this.distanceMultipathMultipath(e,E(t),i,r);default:return Number.NaN}}distanceMultipathMultipath(n,i,s,o){const m={stack:[],error:void 0,hasError:!1};try{const t=[n],a=[i],g=this.swapGeometriesIfAGtB(t,a);g&&(this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),d(s,o)),e(m,l((()=>{d(s,o),this.m_env2DgeometryB=u(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)}),!g),!1);const y=t[0],D=a[0],p=y.querySegmentIterator();p.stripAttributes();const N=D.querySegmentIterator();if(N.stripAttributes(),this.m_bIsNearCalc&&this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)<=this.m_maxSqrDistance)return 0;if(this.m_bIsNearCalc){const e=Math.trunc(c(Math.sqrt(y.getPointCount())+1,1,h())),t=Math.trunc(c(Math.sqrt(y.getPointCount())+1,1,h()));if(this.distanceMultipointMultipoint(y,D,s,o,e,t)<=this.m_maxSqrDistance)return 0}if(!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)){const e=v(),t=v();if(q(y,D,p,N,e,t))return P(s,e),P(o,t),0}const f=M(y),x=[],E=new r,b=new _,S=new _,B=new _;let A=this.m_maxSqrDistance,T=!0,C=!1;for(let e=0,n=f.length;e<n;++e){y.querySegment(f[e],E,!0);const t=E.get();if(t.queryEnvelope(b),!(b.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>A)){if(this.m_bIsNearCalc&&b.sqrMaxDistanceEnvelope(this.m_env2DgeometryB)<=A)return 0;for(;N.nextPath();){if(this.progress_(),T)D.queryPathEnvelope(N.getPathIndex(),B),x[N.getPathIndex()]=B.clone();else if(b.sqrDistanceEnvelope(x[N.getPathIndex()],null,null)>A)continue;for(;N.hasNextSegment();){const n=N.nextSegment();if(n.queryEnvelope(S),b.sqrDistanceEnvelope(S,null,null)<=A){const i=!b.isIntersecting(S),r=[0],m=[0];let a=t.distance(n,i,r,m);if(a*=a,this.m_bIsNearCalc&&a<=this.m_maxSqrDistance)return 0;if(a<A||a===A&&f[e]<s.index){if(C=!0,I(s,t,f[e],r[0]),I(o,n,N.getStartPointIndex(),m[0]),0===a)return 0;A=a}}}}N.resetToFirstPath(),T=!1}}return C?Math.sqrt(A):Number.POSITIVE_INFINITY}catch(a){m.error=a,m.hasError=!0}finally{t(m)}}swapGeometriesIfAGtB(e,t){return i(e[0])>i(t[0])&&(t[0]=u(e[0],e[0]=t[0]),!0)}swapGeometriesIfBGtA(e,t){return this.swapGeometriesIfAGtB(t,e)}}export{b as D,v as m,M as s,q as w};\r\n"],
  "mappings": "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",
  "names": ["n", "s", "t", "e", "v", "N", "P", "I", "q", "M", "x", "i", "a", "g", "y", "f", "E", "b", "m"]
}
