{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{IDENTITY as e}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{ONES as t}from\"../../../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{TextureCoordinateType as r}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as a}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{Float2PassUniform as o}from\"../../shaderModules/Float2PassUniform.js\";import{glsl as s}from\"../../shaderModules/glsl.js\";import{Matrix3PassUniform as m}from\"../../shaderModules/Matrix3PassUniform.js\";import{Texture2DDrawUniform as d}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as l}from\"../../shaderModules/Texture2DPassUniform.js\";import{VertexAttribute as i}from\"../../../lib/VertexAttribute.js\";import{BindType as c}from\"../../../../../webgl/BindType.js\";function T(T,u){const x=T.fragment,{hasVertexTangents:g,doubleSidedMode:f,hasNormalTexture:v,textureCoordinateType:p,bindType:b,hasNormalTextureTransform:y}=u;g?(T.attributes.add(i.TANGENT,\"vec4\"),T.varyings.add(\"vTangent\",\"vec4\"),f===n.WindingOrder?x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\r\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\r\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\r\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\r\nreturn mat3(tangent, bitangent, normal);\r\n}`):x.code.add(s`mat3 computeTangentSpace(vec3 normal) {\r\nfloat tangentHeadedness = vTangent.w;\r\nvec3 tangent = normalize(vTangent.xyz);\r\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\r\nreturn mat3(tangent, bitangent, normal);\r\n}`)):x.code.add(s`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\r\nvec3 Q1 = dFdx(pos);\r\nvec3 Q2 = dFdy(pos);\r\nvec2 stx = dFdx(st);\r\nvec2 sty = dFdy(st);\r\nfloat det = stx.t * sty.s - sty.t * stx.s;\r\nvec3 T = stx.t * Q2 - sty.t * Q1;\r\nT = T - normal * dot(normal, T);\r\nT *= inversesqrt(max(dot(T,T), 1.e-10));\r\nvec3 B = sign(det) * cross(normal, T);\r\nreturn mat3(T, B, normal);\r\n}`),v&&p!==r.None&&(T.include(a,u),x.uniforms.add(b===c.Pass?new l(\"normalTexture\",(e=>e.textureNormal)):new d(\"normalTexture\",(e=>e.textureNormal))),y&&(x.uniforms.add(new o(\"scale\",(e=>e.scale??t))),x.uniforms.add(new m(\"normalTextureTransformMatrix\",(t=>t.normalTextureTransformMatrix??e)))),x.code.add(s`vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\r\nvec3 rawNormal = textureLookup(normalTexture, uv).rgb * 2.0 - 1.0;`),y&&x.code.add(s`mat3 normalRotation = mat3(normalTextureTransformMatrix[0][0]/scale[0], normalTextureTransformMatrix[0][1]/scale[1], 0.0,\r\nnormalTextureTransformMatrix[1][0]/scale[0], normalTextureTransformMatrix[1][1]/scale[1], 0.0,\r\n0.0, 0.0, 0.0 );\r\nrawNormal.xy = (normalRotation * vec3(rawNormal.x, rawNormal.y, 1.0)).xy;`),x.code.add(s`return tangentSpace * rawNormal;\r\n}`))}export{T as ComputeNormalTexture};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{IDENTITY as r}from\"../../../../../../core/libs/gl-matrix-2/factories/mat3f64.js\";import{TextureCoordinateType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{glsl as o}from\"../../shaderModules/glsl.js\";import{Matrix3PassUniform as a}from\"../../shaderModules/Matrix3PassUniform.js\";function s(e,s){s.hasColorTextureTransform?(e.varyings.add(\"colorUV\",\"vec2\"),e.vertex.uniforms.add(new a(\"colorTextureTransformMatrix\",(e=>e.colorTextureTransformMatrix??r))).code.add(o`void forwardColorUV(){\r\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)):e.vertex.code.add(o`void forwardColorUV(){}`)}function i(s,i){i.hasNormalTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"normalUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"normalTextureTransformMatrix\",(e=>e.normalTextureTransformMatrix??r))).code.add(o`void forwardNormalUV(){\r\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)):s.vertex.code.add(o`void forwardNormalUV(){}`)}function t(s,i){i.hasEmissionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"emissiveUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"emissiveTextureTransformMatrix\",(e=>e.emissiveTextureTransformMatrix??r))).code.add(o`void forwardEmissiveUV(){\r\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)):s.vertex.code.add(o`void forwardEmissiveUV(){}`)}function d(s,i){i.hasOcclusionTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"occlusionUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"occlusionTextureTransformMatrix\",(e=>e.occlusionTextureTransformMatrix??r))).code.add(o`void forwardOcclusionUV(){\r\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)):s.vertex.code.add(o`void forwardOcclusionUV(){}`)}function n(s,i){i.hasMetallicRoughnessTextureTransform&&i.textureCoordinateType!==e.None?(s.varyings.add(\"metallicRoughnessUV\",\"vec2\"),s.vertex.uniforms.add(new a(\"metallicRoughnessTextureTransformMatrix\",(e=>e.metallicRoughnessTextureTransformMatrix??r))).code.add(o`void forwardMetallicRoughnessUV(){\r\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\r\n}`)):s.vertex.code.add(o`void forwardMetallicRoughnessUV(){}`)}export{s as colorTextureUV,t as emissiveTextureUV,n as metallicRoughnessTextureUV,i as normalTextureUV,d as occlusionTextureUV};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{ONES as e}from\"../core/libs/gl-matrix-2/factories/vec4f64.js\";import{ForwardLinearDepth as r}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as o}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{isColorOrColorEmission as i}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as l}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as s}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as n,NormalType as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{SymbolColor as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as v}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as b}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as u}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as p,addAmbientBoostFactor as h,addLightingGlobalFactor as f}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{Normals as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as L,PBRMode as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as P,ReadShadowMapDraw as S}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{terrainDepthTest as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TerrainDepthTest.glsl.js\";import{colorTextureUV as T,normalTextureUV as N,emissiveTextureUV as M,occlusionTextureUV as V,metallicRoughnessTextureUV as A}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as $}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{DiscardOrAdjustAlphaPass as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/DiscardOrAdjustAlpha.glsl.js\";import{MixExternalColor as E}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as I,addCameraPosition as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as U}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as _}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{If as R,glsl as z}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{Texture2DPassUniform as G}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{SnowCover as W}from\"../views/3d/webgl-engine/effects/weather/SnowCover.glsl.js\";import{VertexAttribute as k}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";import{outputColorHighlightOID as H}from\"../views/3d/webgl-engine/shaders/OutputColorHighlightOID.glsl.js\";import{ShaderBuilder as q}from\"../views/webgl/ShaderBuilder.js\";import{alphaCutoff as J}from\"../webscene/support/AlphaCutoff.js\";function K(K){const Q=new q,{attributes:X,vertex:Y,fragment:Z,varyings:ee}=Q,{output:re,normalType:oe,offsetBackfaces:ie,instancedColor:ae,spherical:le,receiveShadows:se,snowCover:ne,pbrMode:te,textureAlphaPremultiplied:de,instancedDoublePrecision:ce,hasVertexColors:me,hasVertexTangents:ge,hasColorTexture:ve,hasNormalTexture:be,hasNormalTextureTransform:ue,hasColorTextureTransform:we,hasBloom:pe}=K;if(I(Y,K),X.add(k.POSITION,\"vec3\"),ee.add(\"vpos\",\"vec3\",{invariant:!0}),Q.include($,K),Q.include(s,K),Q.include(v,K),Q.include(T,K),!i(re))return Q.include(b,K),Q;Q.include(N,K),Q.include(M,K),Q.include(V,K),Q.include(A,K),B(Y,K),Q.include(n,K),Q.include(l,K);const he=oe===t.Attribute||oe===t.Compressed;return he&&ie&&Q.include(o),Q.include(u,K),Q.include(g,K),ae&&Q.attributes.add(k.INSTANCECOLOR,\"vec4\"),ee.add(\"vPositionLocal\",\"vec3\"),Q.include(c,K),Q.include(r,K),Q.include(d,K),Q.include(m,K),Y.uniforms.add(new F(\"externalColor\",(r=>\"ignore\"===r.colorMixMode?e:r.externalColor))),ee.add(\"vcolorExt\",\"vec4\"),Q.include(O,K),Y.main.add(z`\r\n    forwardNormalizedVertexColor();\r\n    vcolorExt = externalColor;\r\n    ${R(ae,\"vcolorExt *= instanceColor * 0.003921568627451;\")}\r\n    vcolorExt *= vvColor();\r\n    vcolorExt *= getSymbolColor();\r\n    forwardColorMixMode();\r\n\r\n    vpos = getVertexInLocalOriginSpace();\r\n    vPositionLocal = vpos - view[3].xyz;\r\n    vpos = subtractOrigin(vpos);\r\n    ${R(he,\"vNormalWorld = dpNormal(vvLocalNormal(normalModel()));\")}\r\n    vpos = addVerticalOffset(vpos, localOrigin);\r\n    ${R(ge,\"vTangent = dpTransformVertexTangent(tangent);\")}\r\n    gl_Position = transformPosition(proj, view, vpos);\r\n    ${R(he&&ie,\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\")}\r\n\r\n    forwardViewPosDepth((view * vec4(vpos, 1.0)).xyz);\r\n    forwardLinearDepth();\r\n    forwardTextureCoordinates();\r\n    forwardColorUV();\r\n    forwardNormalUV();\r\n    forwardEmissiveUV();\r\n    forwardOcclusionUV();\r\n    forwardMetallicRoughnessUV();\r\n\r\n    if (vcolorExt.a < ${z.float(J)}) {\r\n      gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\r\n    }\r\n  `),Q.include(p,K),Z.include(w,K),Q.include(D,K),Q.include(ce?P:S,K),Z.include(a,K),Q.include(H,K),B(Z,K),Z.uniforms.add(Y.uniforms.get(\"localOrigin\"),new U(\"ambient\",(e=>e.ambient)),new U(\"diffuse\",(e=>e.diffuse)),new _(\"opacity\",(e=>e.opacity)),new _(\"layerOpacity\",(e=>e.layerOpacity))),ve&&Z.uniforms.add(new G(\"tex\",(e=>e.texture))),Q.include(L,K),Z.include(C,K),Z.include(E),Q.include(y,K),Z.include(W,K),h(Z),f(Z),x(Z),Z.main.add(z`\r\n    discardBySlice(vpos);\r\n    discardByTerrainDepth();\r\n    ${ve?z`\r\n            vec4 texColor = texture(tex, ${we?\"colorUV\":\"vuv0\"});\r\n            ${R(de,\"texColor.rgb /= texColor.a;\")}\r\n            discardOrAdjustAlpha(texColor);`:z`vec4 texColor = vec4(1.0);`}\r\n    shadingParams.viewDirection = normalize(vpos - cameraPosition);\r\n    ${oe===t.ScreenDerivative?z`vec3 normal = screenDerivativeNormal(vPositionLocal);`:z`shadingParams.normalView = vNormalWorld;\r\n                vec3 normal = shadingNormal(shadingParams);`}\r\n    applyPBRFactors();\r\n    float ssao = evaluateAmbientOcclusionInverse() * getBakedOcclusion();\r\n\r\n    vec3 posWorld = vpos + localOrigin;\r\n\r\n      float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\r\n      float shadow = ${se?\"max(lightingGlobalFactor * (1.0 - additionalAmbientScale), readShadowMap(vpos, linearDepth))\":R(le,\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\",\"0.0\")};\r\n\r\n    vec3 matColor = max(ambient, diffuse);\r\n    vec3 albedo = mixExternalColor(${R(me,\"vColor.rgb *\")} matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\r\n    float opacity_ = layerOpacity * mixExternalOpacity(${R(me,\"vColor.a * \")} opacity, texColor.a, vcolorExt.a, int(colorMixMode));\r\n    ${be?`mat3 tangentSpace = computeTangentSpace(${ge?\"normal\":\"normal, vpos, vuv0\"});\\n            vec3 shadingNormal = computeTextureNormal(tangentSpace, ${ue?\"normalUV\":\"vuv0\"});`:\"vec3 shadingNormal = normal;\"}\r\n    vec3 normalGround = ${le?\"normalize(posWorld);\":\"vec3(0.0, 0.0, 1.0);\"}\r\n\r\n    ${R(ne,z`\r\n          float snow = getSnow(normal, normalGround);\r\n          albedo = mix(albedo, vec3(1), snow);\r\n          shadingNormal = mix(shadingNormal, normal, snow);\r\n          ssao = mix(ssao, 1.0, snow);`)}\r\n\r\n    vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\r\n\r\n    ${te===j.Normal||te===j.Schematic?z`\r\n            float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\r\n            vec4 emission = ${pe?\"vec4(0.0)\":\"getEmissions(albedo)\"};\r\n            ${R(ne,\"mrr = applySnowToMRR(mrr, snow);\\n                 emission = snowCoverForEmissions(emission, snow);\")}\r\n            vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:z`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\r\n    vec4 finalColor = vec4(shadedColor, opacity_);\r\n    outputColorHighlightOID(finalColor, vpos, albedo ${R(ne,\", snow\")});\r\n  `),Q}const Q=Object.freeze(Object.defineProperty({__proto__:null,build:K},Symbol.toStringTag,{value:\"Module\"}));export{Q as D,K as b};\r\n"],
  "mappings": "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",
  "names": ["T", "u", "f", "v", "p", "o", "a", "s", "e", "t", "s", "e", "o", "i", "t", "d", "n", "K", "Q", "i", "n", "f", "s", "t", "d", "o", "a", "c", "e", "r", "h", "u"]
}
