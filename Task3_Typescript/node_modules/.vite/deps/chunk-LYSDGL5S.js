import {
  g,
  l as l5,
  m as m4,
  n as n3,
  p as p2
} from "./chunk-SRJX4QLW.js";
import {
  a as a5,
  i as i3,
  u as u2
} from "./chunk-WPTJIN2M.js";
import {
  a as a6,
  c as c3,
  m as m6
} from "./chunk-KUP5BM5G.js";
import {
  l as l6,
  m as m7,
  u as u3
} from "./chunk-HNQNVI5C.js";
import {
  c,
  e as e2,
  m as m5,
  n as n2
} from "./chunk-G34OBNLT.js";
import {
  c as c2,
  l as l4
} from "./chunk-WJUYGRZY.js";
import {
  l as l3
} from "./chunk-KE3WBZYL.js";
import {
  r as r3
} from "./chunk-EOMIFMDH.js";
import {
  E
} from "./chunk-VCRP2PLV.js";
import {
  n,
  t
} from "./chunk-65K4DQAH.js";
import {
  e,
  o as o2
} from "./chunk-MUKDJQWB.js";
import {
  V
} from "./chunk-X3R5OB6L.js";
import {
  a as a3
} from "./chunk-TVM3SZJR.js";
import {
  U,
  a as a4
} from "./chunk-A3VAC24F.js";
import {
  C
} from "./chunk-6PV45IYU.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  s as s5
} from "./chunk-KTUX3OKX.js";
import {
  l as l2
} from "./chunk-E3KEUGUG.js";
import {
  b,
  m,
  m2,
  s2 as s3
} from "./chunk-N3XLUQJI.js";
import {
  a2,
  s as s2,
  u
} from "./chunk-JUAD7TJ6.js";
import {
  S,
  x
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i as i2
} from "./chunk-3NBBZ43U.js";
import {
  f2 as f,
  h,
  m as m3,
  p
} from "./chunk-ZWFY3WY5.js";
import {
  D,
  K,
  Y,
  st,
  tt
} from "./chunk-LQFTAGIV.js";
import {
  s as s4
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i,
  l,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/symbols/CIMSymbol.js
var l7;
var n4 = l7 = class extends c {
  constructor(r6) {
    super(r6), this.data = null, this.type = "cim";
  }
  readData(r6, o6) {
    return o6;
  }
  writeData(r6, o6) {
    Object.assign(o6, r6);
  }
  async collectRequiredFields(r6, o6) {
    if ("CIMSymbolReference" === this.data?.type) {
      const t10 = this.data.primitiveOverrides;
      if (t10) {
        const e8 = t10.map((t11) => {
          const e9 = t11.valueExpressionInfo;
          return e9 ? E(r6, o6, e9.expression) : null;
        });
        await Promise.all(e8);
      }
    }
  }
  clone() {
    return new l7({ data: a(this.data) });
  }
  hash() {
    return l(JSON.stringify(this.data)).toString();
  }
};
r([m({ json: { write: false } })], n4.prototype, "color", void 0), r([m({ json: { write: true } })], n4.prototype, "data", void 0), r([o("data", ["symbol"])], n4.prototype, "readData", null), r([r2("data", {})], n4.prototype, "writeData", null), r([r3({ CIMSymbolReference: "cim" }, { readOnly: true })], n4.prototype, "type", void 0), n4 = l7 = r([a2("esri.symbols.CIMSymbol")], n4);

// node_modules/@arcgis/core/symbols/support/IconSymbol3DLayerResource.js
var l8;
var d = i2()({ circle: "circle", square: "square", cross: "cross", x: "x", kite: "kite", triangle: "triangle" });
var h2 = l8 = class extends l2 {
  constructor(r6) {
    super(r6);
  }
  readHref(r6, e8, o6) {
    return r6 ? p(r6, o6) : e8.dataURI;
  }
  writeHref(r6, e8, o6, c15) {
    r6 && (tt(r6) ? e8.dataURI = r6 : (e8.href = m3(r6, c15), Y(e8.href) && (e8.href = K(e8.href))));
  }
  clone() {
    return new l8({ href: this.href, primitive: this.primitive });
  }
};
r([m({ type: String, json: { write: true, read: { source: ["href", "dataURI"] } } })], h2.prototype, "href", void 0), r([o("href")], h2.prototype, "readHref", null), r([r2("href", { href: { type: String }, dataURI: { type: String } })], h2.prototype, "writeHref", null), r([r3(d)], h2.prototype, "primitive", void 0), h2 = l8 = r([a2("esri.symbols.support.IconSymbol3DLayerResource")], h2);
var j = "circle";

// node_modules/@arcgis/core/symbols/support/ObjectSymbol3DLayerResource.js
var m8;
var n5 = i2()({ sphere: "sphere", cylinder: "cylinder", cube: "cube", cone: "cone", diamond: "diamond", tetrahedron: "tetrahedron", invertedCone: "inverted-cone" });
var a7 = m8 = class extends l2 {
  clone() {
    return new m8({ href: this.href, primitive: this.primitive });
  }
};
r([m({ type: String, json: { read: f, write: h } })], a7.prototype, "href", void 0), r([r3(n5)], a7.prototype, "primitive", void 0), a7 = m8 = r([a2("esri.symbols.support.ObjectSymbol3DLayerResource")], a7);
var d2 = "sphere";

// node_modules/@arcgis/core/symbols/support/StyleOrigin.js
var p3;
var l9 = p3 = class extends b {
  constructor(t10) {
    super(t10), this.name = null, this.styleUrl = null, this.styleName = null, this.portal = null;
  }
  clone() {
    return new p3({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
};
r([m({ type: String })], l9.prototype, "name", void 0), r([m({ type: String })], l9.prototype, "styleUrl", void 0), r([m({ type: String })], l9.prototype, "styleName", void 0), r([m({ type: C })], l9.prototype, "portal", void 0), l9 = p3 = r([a2("esri.symbols.support.StyleOrigin")], l9);

// node_modules/@arcgis/core/symbols/support/Thumbnail.js
var e3;
var c4 = e3 = class extends b {
  constructor() {
    super(...arguments), this.url = "";
  }
  clone() {
    return new e3({ url: this.url });
  }
};
r([m({ type: String })], c4.prototype, "url", void 0), c4 = e3 = r([a2("esri.symbols.support.Thumbnail")], c4);

// node_modules/@arcgis/core/symbols/Symbol3DLayer.js
var p4 = class extends l2 {
  constructor(e8) {
    super(e8), this.enabled = true, this.type = null, this.ignoreDrivers = false;
  }
  writeEnabled(e8, r6, o6) {
    e8 || (r6[o6] = e8);
  }
};
r([m({ type: Boolean, json: { read: { source: "enable" }, write: { target: "enable" } } })], p4.prototype, "enabled", void 0), r([r2("enabled")], p4.prototype, "writeEnabled", null), r([m({ type: ["icon", "object", "line", "path", "fill", "water", "extrude", "text"], readOnly: true, json: { write: { isRequired: true } } })], p4.prototype, "type", void 0), p4 = r([a2("esri.symbols.Symbol3DLayer")], p4);

// node_modules/@arcgis/core/symbols/edges/Edges3D.js
var l10 = class extends l2 {
  constructor(o6) {
    super(o6), this.color = new l3([0, 0, 0, 1]), this.extensionLength = 0, this.size = e(1);
  }
  clone() {
  }
  cloneProperties() {
    return { color: a(this.color), size: this.size, extensionLength: this.extensionLength };
  }
};
r([m({ type: ["solid", "sketch"], readOnly: true, json: { read: true, write: { ignoreOrigin: true, isRequired: true } } })], l10.prototype, "type", void 0), r([m(c2({ colorRequiredOnWrite: true }))], l10.prototype, "color", void 0), r([m({ ...l4, json: { write: { overridePolicy: (o6) => ({ enabled: !!o6 }) } } })], l10.prototype, "extensionLength", void 0), r([m(l4)], l10.prototype, "size", void 0), l10 = r([a2("esri.symbols.edges.Edges3D")], l10);
var m9 = l10;

// node_modules/@arcgis/core/symbols/edges/SketchEdges3D.js
var t2;
var c5 = t2 = class extends m9 {
  constructor(r6) {
    super(r6), this.type = "sketch";
  }
  clone() {
    return new t2(this.cloneProperties());
  }
};
r([r3({ sketch: "sketch" }, { readOnly: true })], c5.prototype, "type", void 0), c5 = t2 = r([a2("esri.symbols.edges.SketchEdges3D")], c5);
var p5 = c5;

// node_modules/@arcgis/core/symbols/edges/SolidEdges3D.js
var t3;
var c6 = t3 = class extends m9 {
  constructor(o6) {
    super(o6), this.type = "solid";
  }
  clone() {
    return new t3(this.cloneProperties());
  }
};
r([r3({ solid: "solid" }, { readOnly: true })], c6.prototype, "type", void 0), c6 = t3 = r([a2("esri.symbols.edges.SolidEdges3D")], c6);
var i4 = c6;

// node_modules/@arcgis/core/symbols/edges/utils.js
var t4 = { types: { key: "type", base: m9, typeMap: { solid: i4, sketch: p5 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DEmissive.js
var e4;
var c7 = e4 = class extends l2 {
  constructor() {
    super(...arguments), this.strength = null, this.source = "emissive";
  }
  clone() {
    const r6 = { strength: this.strength, source: this.source };
    return new e4(r6);
  }
};
r([m({ json: { write: false } })], c7.prototype, "strength", void 0), r([m({ json: { write: false } })], c7.prototype, "source", void 0), c7 = e4 = r([a2("esri.symbols.support.Symbol3DEmissive")], c7);

// node_modules/@arcgis/core/symbols/support/Symbol3DMaterial.js
var c8;
var m10 = c8 = class extends l2 {
  constructor(o6) {
    super(o6), this.color = null, this.emissive = new c7({ source: "emissive" });
  }
  clone() {
    const o6 = { color: this.color?.clone() ?? null, emissive: this.emissive?.clone() ?? null };
    return new c8(o6);
  }
};
r([m(c2())], m10.prototype, "color", void 0), r([m({ type: c7, json: { write: false } })], m10.prototype, "emissive", void 0), m10 = c8 = r([a2("esri.symbols.support.Symbol3DMaterial")], m10);

// node_modules/@arcgis/core/symbols/ExtrudeSymbol3DLayer.js
var p6;
var _a;
var l11 = (_a = class extends p4 {
  constructor(e8) {
    super(e8), this.type = "extrude", this.size = 1, this.material = null, this.castShadows = true, this.edges = null;
  }
  clone() {
    return new p6({ edges: this.edges?.clone(), enabled: this.enabled, material: this.material?.clone(), castShadows: this.castShadows, size: this.size });
  }
}, p6 = _a, _a);
r([r3({ Extrude: "extrude" }, { readOnly: true })], l11.prototype, "type", void 0), r([m({ type: Number, json: { write: { enabled: true, isRequired: true } }, nonNullable: true })], l11.prototype, "size", void 0), r([m({ type: m10, json: { write: true } })], l11.prototype, "material", void 0), r([m({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], l11.prototype, "castShadows", void 0), r([m(t4)], l11.prototype, "edges", void 0), l11 = p6 = r([a2("esri.symbols.ExtrudeSymbol3DLayer")], l11);

// node_modules/@arcgis/core/symbols/patterns/LinePattern3D.js
var t5 = class extends l2 {
  constructor(r6) {
    super(r6);
  }
  clone() {
    throw new Error("Subclasses of LinePattern3D should implement their own clone method.");
  }
};
r([m({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t5.prototype, "type", void 0), t5 = r([a2("esri.symbols.patterns.LinePattern3D")], t5);

// node_modules/@arcgis/core/symbols/patterns/lineStyles.js
var o3 = ["dash", "dash-dot", "dot", "long-dash", "long-dash-dot", "long-dash-dot-dot", "none", "short-dash", "short-dash-dot", "short-dash-dot-dot", "short-dot", "solid"];

// node_modules/@arcgis/core/symbols/patterns/LineStylePattern3D.js
var i5;
var p7 = i2()({ dash: "dash", "dash-dot": "dash-dot", "dash-dot-dot": "long-dash-dot-dot", dot: "dot", "long-dash": "long-dash", "long-dash-dot": "long-dash-dot", null: "none", "short-dash": "short-dash", "short-dash-dot": "short-dash-dot", "short-dash-dot-dot": "short-dash-dot-dot", "short-dot": "short-dot", solid: "solid" });
var h3 = i5 = class extends t5 {
  constructor(o6) {
    super(o6), this.type = "style", this.style = "solid";
  }
  clone() {
    const o6 = { style: this.style };
    return new i5(o6);
  }
};
r([m({ type: ["style"], json: { write: { isRequired: true } } })], h3.prototype, "type", void 0), r([r3(p7), m({ type: o3, json: { write: { isRequired: true } } })], h3.prototype, "style", void 0), h3 = i5 = r([a2("esri.symbols.patterns.LineStylePattern3D")], h3);

// node_modules/@arcgis/core/symbols/patterns/Pattern3D.js
var t6 = class extends l2 {
  constructor(r6) {
    super(r6), this.type = "style";
  }
  clone() {
    throw new Error("Subclasses of Pattern3D should implement their own clone method.");
  }
};
r([m({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true } } })], t6.prototype, "type", void 0), t6 = r([a2("esri.symbols.patterns.Pattern3D")], t6);

// node_modules/@arcgis/core/symbols/patterns/styles.js
var a8 = ["backward-diagonal", "cross", "diagonal-cross", "forward-diagonal", "horizontal", "none", "solid", "vertical"];

// node_modules/@arcgis/core/symbols/patterns/StylePattern3D.js
var p8;
var i6 = p8 = class extends t6 {
  constructor(s7) {
    super(s7), this.type = "style", this.style = "solid";
  }
  clone() {
    return new p8({ style: this.style });
  }
};
r([m({ type: ["style"], json: { write: { isRequired: true } } })], i6.prototype, "type", void 0), r([m({ type: a8, json: { read: true, write: { isRequired: true } } })], i6.prototype, "style", void 0), i6 = p8 = r([a2("esri.symbols.patterns.StylePattern3D")], i6);

// node_modules/@arcgis/core/symbols/patterns/utils.js
var s6 = { types: { key: "type", base: t6, typeMap: { style: i6 } }, json: { write: true } };
var o4 = { types: { key: "type", base: t5, typeMap: { style: h3 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/colors.js
var r4 = new l3("white");
var n6 = new l3([255, 255, 255, 0]);
function t7(o6) {
  return 0 === o6.r && 0 === o6.g && 0 === o6.b;
}

// node_modules/@arcgis/core/symbols/support/Symbol3DFillMaterial.js
var t8;
var l12 = t8 = class extends m10 {
  constructor(o6) {
    super(o6), this.colorMixMode = null;
  }
  clone() {
    const o6 = { color: this.color?.clone() ?? null, colorMixMode: this.colorMixMode, emissive: this.emissive?.clone() ?? null };
    return new t8(o6);
  }
};
r([r3({ multiply: "multiply", replace: "replace", tint: "tint" })], l12.prototype, "colorMixMode", void 0), l12 = t8 = r([a2("esri.symbols.support.Symbol3DFillMaterial")], l12);

// node_modules/@arcgis/core/symbols/support/Symbol3DOutline.js
var c9;
var m11 = c9 = class extends l2 {
  constructor(t10) {
    super(t10), this.color = new l3([0, 0, 0, 1]), this.size = e(1), this.pattern = null, this.patternCap = "butt";
  }
  clone() {
    const t10 = { color: null != this.color ? this.color.clone() : null, size: this.size, pattern: null != this.pattern ? this.pattern.clone() : null, patternCap: this.patternCap };
    return new c9(t10);
  }
};
r([m(c2({ colorRequiredOnWrite: true }))], m11.prototype, "color", void 0), r([m({ ...l4, json: { write: { isRequired: true } } })], m11.prototype, "size", void 0), r([m(o4)], m11.prototype, "pattern", void 0), r([m({ type: i3, json: { default: "butt", write: { overridePolicy() {
  return { enabled: null != this.pattern };
} } } })], m11.prototype, "patternCap", void 0), m11 = c9 = r([a2("esri.symbols.support.Symbol3DOutline")], m11);

// node_modules/@arcgis/core/symbols/FillSymbol3DLayer.js
var y;
var _a2;
var d3 = (_a2 = class extends p4 {
  constructor(t10) {
    super(t10), this.type = "fill", this.material = null, this.pattern = null, this.castShadows = true, this.outline = null, this.edges = null;
  }
  clone() {
    const t10 = { edges: null != this.edges ? this.edges.clone() : null, enabled: this.enabled, material: null != this.material ? this.material.clone() : null, pattern: null != this.pattern ? this.pattern.clone() : null, castShadows: this.castShadows, outline: null != this.outline ? this.outline.clone() : null };
    return new y(t10);
  }
  static fromSimpleFillSymbol(t10) {
    const o6 = t10.outline && t10.outline.style && "solid" !== t10.outline.style ? new h3({ style: t10.outline.style }) : null, e8 = { size: t10.outline?.width ?? 0, color: (t10.outline?.color ?? r4).clone(), pattern: o6 };
    return o6 && t10.outline?.cap && (e8.patternCap = t10.outline.cap), new y({ material: new l12({ color: (t10.color ?? n6).clone() }), pattern: t10.style && "solid" !== t10.style ? new i6({ style: t10.style }) : null, outline: e8 });
  }
}, y = _a2, _a2);
r([r3({ Fill: "fill" }, { readOnly: true })], d3.prototype, "type", void 0), r([m({ type: l12, json: { write: true } })], d3.prototype, "material", void 0), r([m(s6)], d3.prototype, "pattern", void 0), r([m({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], d3.prototype, "castShadows", void 0), r([m({ type: m11, json: { write: true } })], d3.prototype, "outline", void 0), r([m(t4)], d3.prototype, "edges", void 0), d3 = y = r([a2("esri.symbols.FillSymbol3DLayer")], d3);

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition2D.js
var e5;
var p9 = e5 = class extends b {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0;
  }
  clone() {
    return new e5({ x: this.x, y: this.y });
  }
};
r([m({ type: Number })], p9.prototype, "x", void 0), r([m({ type: Number })], p9.prototype, "y", void 0), p9 = e5 = r([a2("esri.symbols.support.Symbol3DAnchorPosition2D")], p9);

// node_modules/@arcgis/core/symbols/support/Symbol3DIconOutline.js
var l13;
var m12 = l13 = class extends l2 {
  constructor(o6) {
    super(o6), this.color = new l3([0, 0, 0, 1]), this.size = e(1);
  }
  clone() {
    const o6 = { color: null != this.color ? this.color.clone() : null, size: this.size };
    return new l13(o6);
  }
};
r([m(c2({ colorRequiredOnWrite: true }))], m12.prototype, "color", void 0), r([m({ ...l4, json: { write: { isRequired: true } } })], m12.prototype, "size", void 0), m12 = l13 = r([a2("esri.symbols.support.Symbol3DIconOutline")], m12);

// node_modules/@arcgis/core/symbols/IconSymbol3DLayer.js
var d4;
var _a3;
var f2 = (_a3 = class extends p4 {
  constructor(o6) {
    super(o6), this.material = null, this.resource = null, this.type = "icon", this.size = 12, this.anchor = "center", this.anchorPosition = null, this.outline = null, this.angle = 0;
  }
  clone() {
    return new d4({ anchor: this.anchor, anchorPosition: a(this.anchorPosition), enabled: this.enabled, material: a(this.material), outline: a(this.outline), resource: a(this.resource), angle: this.angle, size: this.size });
  }
  static fromSimpleMarkerSymbol(o6) {
    const t10 = o6.color || r4, e8 = g2(o6), i9 = o6.outline && o6.outline.width > 0 ? { size: o6.outline.width, color: (o6.outline.color || r4).clone() } : null;
    return new d4({ size: o6.size, angle: o6.angle, resource: { primitive: w(() => i.getLogger(this.prototype), o6.style) }, material: { color: t10 }, outline: i9, anchor: e8 ? "relative" : void 0, anchorPosition: e8 });
  }
  static fromPictureMarkerSymbol(o6) {
    const t10 = !o6.color || t7(o6.color) ? r4 : o6.color, r6 = g2(o6);
    return new d4({ size: o6.width <= o6.height ? o6.height : o6.width, angle: o6.angle, resource: { href: o6.url }, material: { color: t10.clone() }, anchor: r6 ? "relative" : void 0, anchorPosition: r6 });
  }
  static fromCIMSymbol(o6) {
    return new d4({ resource: { href: st({ mediaType: "application/json", data: JSON.stringify(o6.data) }) } });
  }
}, d4 = _a3, _a3);
function g2(o6) {
  const t10 = "width" in o6 ? o6.width : o6.size, r6 = "height" in o6 ? o6.height : o6.size, e8 = b2(o6.xoffset), i9 = b2(o6.yoffset);
  return (e8 || i9) && t10 && r6 ? { x: -e8 / t10, y: i9 / r6 } : null;
}
function b2(o6) {
  return isFinite(o6) ? o6 : 0;
}
r([m({ type: m10, json: { write: true } })], f2.prototype, "material", void 0), r([m({ type: h2, json: { write: true } })], f2.prototype, "resource", void 0), r([r3({ Icon: "icon" }, { readOnly: true })], f2.prototype, "type", void 0), r([m({ ...l4, json: { write: { isRequired: true } } })], f2.prototype, "size", void 0), r([r3({ center: "center", left: "left", right: "right", top: "top", bottom: "bottom", topLeft: "top-left", topRight: "top-right", bottomLeft: "bottom-left", bottomRight: "bottom-right", relative: "relative" }, { default: "center" })], f2.prototype, "anchor", void 0), r([m({ type: p9, json: { type: [Number], read: { reader: (o6) => new p9({ x: o6[0], y: o6[1] }) }, write: { writer: (o6, t10) => {
  t10.anchorPosition = [o6.x, o6.y];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], f2.prototype, "anchorPosition", void 0), r([m({ type: m12, json: { write: true } })], f2.prototype, "outline", void 0), r([m({ type: Number, json: { write: true, default: 0 } })], f2.prototype, "angle", void 0), f2 = d4 = r([a2("esri.symbols.IconSymbol3DLayer")], f2);
var j2 = { circle: "circle", cross: "cross", diamond: "kite", square: "square", x: "x", triangle: "triangle", path: null };
function w(o6, t10) {
  const r6 = j2[t10];
  return r6 || (o6().warn(`${t10} cannot be mapped to Icon symbol. Fallback to "circle"`), "circle");
}

// node_modules/@arcgis/core/symbols/LineStyleMarker3D.js
var c10 = class extends a3.ClonableMixin(l2) {
  constructor(o6) {
    super(o6), this.type = "style", this.placement = "begin-end", this.style = "arrow", this.color = null;
  }
  equals(o6) {
    return null != o6 && o6.placement === this.placement && o6.style === this.style && (null == this.color && null == o6.color || null != this.color && null != o6.color && this.color.toJSON() === o6.color.toJSON());
  }
};
r([m({ type: ["style"], readOnly: true, json: { read: true, write: { ignoreOrigin: true, isRequired: true } } })], c10.prototype, "type", void 0), r([m({ type: e2, json: { default: "begin-end", write: true } })], c10.prototype, "placement", void 0), r([m({ type: n2, json: { default: "arrow", write: true } })], c10.prototype, "style", void 0), r([m({ type: l3, json: { type: [x], default: null, write: true } })], c10.prototype, "color", void 0), c10 = r([a2("esri.symbols.LineStyleMarker3D")], c10);

// node_modules/@arcgis/core/symbols/LineSymbol3DLayer.js
var j3;
var _a4;
var d5 = (_a4 = class extends p4 {
  constructor(t10) {
    super(t10), this.material = null, this.type = "line", this.join = "miter", this.cap = "butt", this.size = e(1), this.pattern = null, this.marker = null;
  }
  clone() {
    const t10 = { enabled: this.enabled, material: null != this.material ? this.material.clone() : null, size: this.size, join: this.join, cap: this.cap, pattern: null != this.pattern ? this.pattern.clone() : null, marker: null != this.marker ? this.marker.clone() : null };
    return new j3(t10);
  }
  static fromSimpleLineSymbol(t10) {
    const r6 = { enabled: true, size: t10.width ?? e(1), cap: t10.cap || "butt", join: t10.join || "miter", pattern: t10.style ? new h3({ style: t10.style }) : null, material: new m10({ color: (t10.color || r4).clone() }), marker: t10.marker ? new c10({ placement: t10.marker.placement, style: t10.marker.style, color: t10.marker.color?.clone() ?? null }) : null };
    return new j3(r6);
  }
}, j3 = _a4, _a4);
r([m({ type: m10, json: { write: true } })], d5.prototype, "material", void 0), r([r3({ Line: "line" }, { readOnly: true })], d5.prototype, "type", void 0), r([m({ type: a5, json: { write: true, default: "miter" } })], d5.prototype, "join", void 0), r([m({ type: i3, json: { write: true, default: "butt" } })], d5.prototype, "cap", void 0), r([m({ ...l4, json: { write: { isRequired: true } } })], d5.prototype, "size", void 0), r([m(o4)], d5.prototype, "pattern", void 0), r([m({ types: { key: "type", base: c10, typeMap: { style: c10 } }, json: { write: true } })], d5.prototype, "marker", void 0), d5 = j3 = r([a2("esri.symbols.LineSymbol3DLayer")], d5);

// node_modules/@arcgis/core/symbols/support/Symbol3DAnchorPosition3D.js
var e6;
var p10 = e6 = class extends b {
  constructor() {
    super(...arguments), this.x = 0, this.y = 0, this.z = 0;
  }
  clone() {
    return new e6({ x: this.x, y: this.y, z: this.z });
  }
};
r([m({ type: Number })], p10.prototype, "x", void 0), r([m({ type: Number })], p10.prototype, "y", void 0), r([m({ type: Number })], p10.prototype, "z", void 0), p10 = e6 = r([a2("esri.symbols.support.Symbol3DAnchorPosition3D")], p10);

// node_modules/@arcgis/core/symbols/ObjectSymbol3DLayer.js
var a9;
var _a5;
var n7 = (_a5 = class extends p4 {
  constructor(t10) {
    super(t10), this.material = null, this.castShadows = true, this.resource = null, this.type = "object", this.width = void 0, this.height = void 0, this.depth = void 0, this.anchor = void 0, this.anchorPosition = void 0, this.heading = void 0, this.tilt = void 0, this.roll = void 0;
  }
  clone() {
    return new a9({ heading: this.heading, tilt: this.tilt, roll: this.roll, anchor: this.anchor, anchorPosition: this.anchorPosition?.clone(), depth: this.depth, enabled: this.enabled, height: this.height, material: this.material?.clone() ?? null, castShadows: this.castShadows, resource: this.resource?.clone(), width: this.width });
  }
  get isPrimitive() {
    return !this.resource || "string" != typeof this.resource.href;
  }
}, a9 = _a5, _a5);
r([m({ type: m10, json: { write: true } })], n7.prototype, "material", void 0), r([m({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], n7.prototype, "castShadows", void 0), r([m({ type: a7, json: { write: true } })], n7.prototype, "resource", void 0), r([r3({ Object: "object" }, { readOnly: true })], n7.prototype, "type", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "width", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "height", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "depth", void 0), r([r3({ center: "center", top: "top", bottom: "bottom", origin: "origin", relative: "relative" }, { default: "origin" })], n7.prototype, "anchor", void 0), r([m({ type: p10, json: { type: [Number], read: { reader: (t10) => new p10({ x: t10[0], y: t10[1], z: t10[2] }) }, write: { writer: (t10, o6) => {
  o6.anchorPosition = [t10.x, t10.y, t10.z];
}, overridePolicy() {
  return { enabled: "relative" === this.anchor };
} } } })], n7.prototype, "anchorPosition", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "heading", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "tilt", void 0), r([m({ type: Number, json: { write: true } })], n7.prototype, "roll", void 0), r([m({ readOnly: true })], n7.prototype, "isPrimitive", null), n7 = a9 = r([a2("esri.symbols.ObjectSymbol3DLayer")], n7);

// node_modules/@arcgis/core/symbols/PathSymbol3DLayer.js
var h4;
var _a6;
var n8 = (_a6 = class extends p4 {
  constructor(t10) {
    super(t10), this.material = null, this.castShadows = true, this.type = "path", this.profile = "circle", this.join = "miter", this.cap = "butt", this.width = void 0, this.height = void 0, this.anchor = "center", this.profileRotation = "all";
  }
  readWidth(t10, e8) {
    return null != t10 ? t10 : null == e8.height && null != e8.size ? e8.size : void 0;
  }
  readHeight(t10, e8) {
    return null != t10 ? t10 : null == e8.width && null != e8.size ? e8.size : void 0;
  }
  clone() {
    return new h4({ enabled: this.enabled, material: null != this.material ? this.material.clone() : null, castShadows: this.castShadows, profile: this.profile, join: this.join, cap: this.cap, width: this.width, height: this.height, profileRotation: this.profileRotation, anchor: this.anchor });
  }
}, h4 = _a6, _a6);
r([m({ type: m10, json: { write: true } })], n8.prototype, "material", void 0), r([m({ type: Boolean, nonNullable: true, json: { write: true, default: true } })], n8.prototype, "castShadows", void 0), r([r3({ Path: "path" }, { readOnly: true })], n8.prototype, "type", void 0), r([m({ type: ["circle", "quad"], json: { write: true, default: "circle" } })], n8.prototype, "profile", void 0), r([m({ type: a5, json: { write: true, default: "miter" } })], n8.prototype, "join", void 0), r([m({ type: u2, json: { write: true, default: "butt" } })], n8.prototype, "cap", void 0), r([m({ type: Number, json: { write: { enabled: true, target: { width: { type: Number }, size: { type: Number } } } } })], n8.prototype, "width", void 0), r([o("width", ["width", "size", "height"])], n8.prototype, "readWidth", null), r([m({ type: Number, json: { write: true } })], n8.prototype, "height", void 0), r([o("height", ["height", "size", "width"])], n8.prototype, "readHeight", null), r([m({ type: ["center", "bottom", "top"], json: { write: true, default: "center" } })], n8.prototype, "anchor", void 0), r([m({ type: ["heading", "all"], json: { write: true, default: "all" } })], n8.prototype, "profileRotation", void 0), n8 = h4 = r([a2("esri.symbols.PathSymbol3DLayer")], n8);

// node_modules/@arcgis/core/symbols/support/Symbol3DHalo.js
var m13;
var l14 = m13 = class extends l2 {
  constructor() {
    super(...arguments), this.color = new l3([0, 0, 0, 1]), this.size = 0;
  }
  clone() {
    const o6 = { color: a(this.color), size: this.size };
    return new m13(o6);
  }
};
r([m(c2())], l14.prototype, "color", void 0), r([m(l4)], l14.prototype, "size", void 0), l14 = m13 = r([a2("esri.symbols.support.Symbol3DHalo")], l14);

// node_modules/@arcgis/core/symbols/support/Symbol3DTextBackground.js
var c11 = class extends a3.ClonableMixin(l2) {
  constructor(o6) {
    super(o6), this.color = null;
  }
};
r([m(c2())], c11.prototype, "color", void 0), c11 = r([a2("esri.symbols.support.Symbol3DTextBackground")], c11);

// node_modules/@arcgis/core/symbols/TextSymbol3DLayer.js
var g3;
var _a7;
var y2 = (_a7 = class extends p4 {
  constructor(t10) {
    super(t10), this._userSize = void 0, this.halo = null, this.horizontalAlignment = "center", this.lineHeight = 1, this.material = null, this.background = null, this.text = null, this.type = "text", this.verticalAlignment = "baseline";
  }
  get font() {
    return this._get("font") || null;
  }
  set font(t10) {
    null != t10 && null != this._userSize && (t10.size = this._userSize), this._set("font", t10);
  }
  writeFont(t10, o6, e8, r6) {
    const i9 = { ...r6, textSymbol3D: true };
    o6.font = t10.write({}, i9), delete o6.font.size;
  }
  get size() {
    return null != this._userSize ? this._userSize : null != this.font?.size ? this.font.size : 9;
  }
  set size(t10) {
    this._userSize = t10, null != this.font && (this.font.size = this._userSize), this.notifyChange("size");
  }
  clone() {
    const t10 = new g3({ enabled: this.enabled, font: this.font && a(this.font), halo: this.halo && a(this.halo), horizontalAlignment: this.horizontalAlignment, lineHeight: this.lineHeight, material: null != this.material ? this.material.clone() : null, text: this.text, verticalAlignment: this.verticalAlignment, background: a(this.background) });
    return t10._userSize = this._userSize, t10;
  }
  static fromTextSymbol(t10) {
    return new g3({ font: null != t10.font ? t10.font.clone() : new l5(), halo: d6(t10.haloColor, t10.haloSize), horizontalAlignment: t10.horizontalAlignment, lineHeight: t10.lineHeight, material: t10.color ? new m10({ color: t10.color.clone() }) : null, text: t10.text, verticalAlignment: t10.verticalAlignment, background: t10.backgroundColor ? new c11({ color: t10.backgroundColor.clone() }) : null });
  }
}, g3 = _a7, _a7);
function d6(t10, e8) {
  return t10 && null != e8 && e8 > 0 ? new l14({ color: a(t10), size: e8 }) : null;
}
r([m({ type: l5, json: { write: true } })], y2.prototype, "font", null), r([r2("font")], y2.prototype, "writeFont", null), r([m({ type: l14, json: { write: true } })], y2.prototype, "halo", void 0), r([m({ ...m4, json: { default: "center", write: true } })], y2.prototype, "horizontalAlignment", void 0), r([m({ ...n3, json: { default: 1, write: true } })], y2.prototype, "lineHeight", void 0), r([m({ type: m10, json: { write: true } })], y2.prototype, "material", void 0), r([m({ type: c11, json: { write: true } })], y2.prototype, "background", void 0), r([m(l4)], y2.prototype, "size", null), r([m({ type: String, json: { write: true } })], y2.prototype, "text", void 0), r([r3({ Text: "text" }, { readOnly: true })], y2.prototype, "type", void 0), r([m({ ...p2, json: { default: "baseline", write: true } })], y2.prototype, "verticalAlignment", void 0), y2 = g3 = r([a2("esri.symbols.TextSymbol3DLayer")], y2);

// node_modules/@arcgis/core/symbols/WaterSymbol3DLayer.js
var l15;
var _a8;
var c12 = (_a8 = class extends p4 {
  constructor(e8) {
    super(e8), this.color = m14.clone(), this.type = "water", this.waterbodySize = "medium", this.waveDirection = null, this.waveStrength = "moderate";
  }
  clone() {
    return new l15({ color: a(this.color), waterbodySize: this.waterbodySize, waveDirection: this.waveDirection, waveStrength: this.waveStrength });
  }
}, l15 = _a8, _a8);
r([m({ type: l3, nonNullable: true, json: { type: [x], write: (e8, t10, r6) => t10[r6] = e8.toArray(l3.AlphaMode.UNLESS_OPAQUE), default: () => m14.clone(), defaultEquals: (e8) => e8.toCss(true) === m14.toCss(true) } })], c12.prototype, "color", void 0), r([r3({ Water: "water" }, { readOnly: true })], c12.prototype, "type", void 0), r([m({ type: ["small", "medium", "large"], json: { write: true, default: "medium" } })], c12.prototype, "waterbodySize", void 0), r([m({ type: Number, json: { write: true, default: null } })], c12.prototype, "waveDirection", void 0), r([m({ type: ["calm", "rippled", "slight", "moderate"], json: { write: true, default: "moderate" } })], c12.prototype, "waveStrength", void 0), c12 = l15 = r([a2("esri.symbols.WaterSymbol3DLayer")], c12);
var m14 = new l3([0, 119, 190]);

// node_modules/@arcgis/core/symbols/Symbol3D.js
var v = { icon: f2, object: n7, line: d5, path: n8, fill: d3, extrude: l11, text: y2, water: c12 };
var C2 = V.ofType({ base: p4, key: "type", typeMap: v, errorContext: "symbol-layer" });
var T = class extends c {
  constructor(e8) {
    super(e8), this.styleOrigin = null, this.thumbnail = null, this.type = null;
    const t10 = this.__accessor__ && this.__accessor__.metadata && this.__accessor__.metadata.symbolLayers, o6 = t10?.type, s7 = o6 || V;
    this._set("symbolLayers", new s7());
  }
  get color() {
    return null;
  }
  set color(e8) {
    this.constructed && i.getLogger(this).error("Symbol3D does not support colors on the symbol level. Colors may be set on individual symbol layer materials instead.");
  }
  set symbolLayers(e8) {
    n(e8, this._get("symbolLayers"));
  }
  readStyleOrigin(e8, r6, t10) {
    if (e8.styleUrl && e8.name) {
      const r7 = p(e8.styleUrl, t10);
      return new l9({ styleUrl: r7, name: e8.name });
    }
    if (e8.styleName && e8.name) return new l9({ portal: t10?.portal || C.getDefault(), styleName: e8.styleName, name: e8.name });
    t10?.messages && t10.messages.push(new s2("symbol3d:incomplete-style-origin", "Style origin requires either a 'styleUrl' or 'styleName' and a 'name' property", { context: t10, definition: e8 }));
  }
  writeStyleOrigin(e8, r6, t10, o6) {
    if (e8.styleUrl && e8.name) {
      let t11 = m3(e8.styleUrl, o6);
      Y(t11) && (t11 = K(t11)), r6.styleOrigin = { styleUrl: t11, name: e8.name };
    } else e8.styleName && e8.name && (e8.portal && o6?.portal && !D(e8.portal.restUrl, o6.portal.restUrl) ? o6?.messages && o6.messages.push(new s2("symbol:cross-portal", "The symbol style origin cannot be persisted because it refers to an item on a different portal than the one being saved to.", { symbol: this })) : r6.styleOrigin = { styleName: e8.styleName, name: e8.name });
  }
  normalizeCtorArgs(e8) {
    return e8 instanceof p4 || e8 && v[e8.type] ? { symbolLayers: [e8] } : Array.isArray(e8) ? { symbolLayers: e8 } : e8;
  }
};
r([m({ json: { read: false, write: false } })], T.prototype, "color", null), r([m({ type: C2, nonNullable: true, json: { write: true } }), s5(t)], T.prototype, "symbolLayers", null), r([m({ type: l9 })], T.prototype, "styleOrigin", void 0), r([o("styleOrigin")], T.prototype, "readStyleOrigin", null), r([r2("styleOrigin", { "styleOrigin.styleUrl": { type: String }, "styleOrigin.styleName": { type: String }, "styleOrigin.name": { type: String } })], T.prototype, "writeStyleOrigin", null), r([m({ type: c4, json: { read: false } })], T.prototype, "thumbnail", void 0), r([m({ type: ["point-3d", "line-3d", "polygon-3d", "mesh-3d", "label-3d"], readOnly: true })], T.prototype, "type", void 0), T = r([a2("esri.symbols.Symbol3D")], T);

// node_modules/@arcgis/core/symbols/callouts/Callout3D.js
var t9 = class extends l2 {
  constructor(o6) {
    super(o6), this.visible = true;
  }
  clone() {
    throw new Error("Subclasses of Callout3D should implement their own clone method.");
  }
};
r([m({ type: ["line"], constructOnly: true, json: { read: false, write: { ignoreOrigin: true, isRequired: true } } })], t9.prototype, "type", void 0), r([m({ readOnly: true })], t9.prototype, "visible", void 0), t9 = r([a2("esri.symbols.callouts.Callout3D")], t9);

// node_modules/@arcgis/core/symbols/callouts/LineCallout3DBorder.js
var i7;
var l16 = i7 = class extends l2 {
  constructor(o6) {
    super(o6), this.color = new l3("white");
  }
  clone() {
    return new i7({ color: a(this.color) });
  }
};
r([m(c2({ colorRequiredOnWrite: true }))], l16.prototype, "color", void 0), l16 = i7 = r([a2("esri.symbols.callouts.LineCallout3DBorder")], l16);
var m15 = l16;

// node_modules/@arcgis/core/symbols/callouts/LineCallout3D.js
var a10;
var u4 = a10 = class extends t9 {
  constructor(o6) {
    super(o6), this.type = "line", this.color = new l3([0, 0, 0, 1]), this.size = e(1), this.border = null;
  }
  get visible() {
    return this.size > 0 && null != this.color && this.color.a > 0;
  }
  clone() {
    return new a10({ color: a(this.color), size: this.size, border: a(this.border) });
  }
};
r([r3({ line: "line" })], u4.prototype, "type", void 0), r([m(c2({ colorRequiredOnWrite: true }))], u4.prototype, "color", void 0), r([m({ ...l4, json: { write: { isRequired: true } } })], u4.prototype, "size", void 0), r([m({ type: m15, json: { write: true } })], u4.prototype, "border", void 0), r([m({ readOnly: true })], u4.prototype, "visible", null), u4 = a10 = r([a2("esri.symbols.callouts.LineCallout3D")], u4);

// node_modules/@arcgis/core/symbols/callouts/calloutUtils.js
function e7(t10) {
  if (!t10) return false;
  const n12 = t10.verticalOffset;
  return !(!n12 || n12.screenLength <= 0 || null != n12.maxWorldLength && n12.maxWorldLength <= 0);
}
function r5(t10) {
  if (!t10 || !t10.supportsCallout || !t10.supportsCallout()) return false;
  const n12 = t10.callout;
  return !!n12?.visible && !!e7(t10);
}
function o5(t10) {
  return "point-3d" === t10.type || "label-3d" === t10.type;
}
function l17(t10) {
  return "center" === t10.horizontalAlignment;
}
var u5 = { types: { key: "type", base: t9, typeMap: { line: u4 } }, json: { write: true } };

// node_modules/@arcgis/core/symbols/support/Symbol3DVerticalOffset.js
var n9;
var i8 = n9 = class extends l2 {
  constructor(r6) {
    super(r6), this.screenLength = 0, this.minWorldLength = 0, this.maxWorldLength = null;
  }
  clone() {
    return new n9({ screenLength: this.screenLength, minWorldLength: this.minWorldLength, maxWorldLength: this.maxWorldLength });
  }
};
r([m({ ...l4, json: { write: { isRequired: true } } })], i8.prototype, "screenLength", void 0), r([m({ type: Number, nonNullable: true, json: { write: true, default: 0 } })], i8.prototype, "minWorldLength", void 0), r([m({ type: Number, json: { write: true } })], i8.prototype, "maxWorldLength", void 0), i8 = n9 = r([a2("esri.symbols.support.Symbol3DVerticalOffset")], i8);

// node_modules/@arcgis/core/symbols/LabelSymbol3D.js
var n10;
var u6 = V.ofType({ base: null, key: "type", typeMap: { text: y2 } });
var f3 = n10 = class extends T {
  constructor(t10) {
    super(t10), this.verticalOffset = null, this.callout = null, this.styleOrigin = null, this.symbolLayers = new u6(), this.type = "label-3d";
  }
  supportsCallout() {
    return true;
  }
  hasVisibleCallout() {
    return r5(this);
  }
  hasVisibleVerticalOffset() {
    return e7(this);
  }
  clone() {
    return new n10({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail), callout: a(this.callout), verticalOffset: a(this.verticalOffset) });
  }
  static fromTextSymbol(t10) {
    return new n10({ symbolLayers: new V([y2.fromTextSymbol(t10)]) });
  }
};
r([m({ type: i8, json: { write: true } })], f3.prototype, "verticalOffset", void 0), r([m(u5)], f3.prototype, "callout", void 0), r([m({ json: { read: false, write: false } })], f3.prototype, "styleOrigin", void 0), r([m({ type: u6 })], f3.prototype, "symbolLayers", void 0), r([r3({ LabelSymbol3D: "label-3d" }, { readOnly: true })], f3.prototype, "type", void 0), f3 = n10 = r([a2("esri.symbols.LabelSymbol3D")], f3);

// node_modules/@arcgis/core/symbols/LineSymbol3D.js
var l18;
var a11 = V.ofType({ base: null, key: "type", typeMap: { line: d5, path: n8 } });
var n11 = V.ofType({ base: null, key: "type", typeMap: { line: d5, path: n8 } });
var c13 = l18 = class extends T {
  constructor(o6) {
    super(o6), this.symbolLayers = new a11(), this.type = "line-3d";
  }
  clone() {
    return new l18({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleLineSymbol(o6) {
    return new l18({ symbolLayers: new V([d5.fromSimpleLineSymbol(o6)]) });
  }
};
r([m({ type: a11, json: { type: n11 } })], c13.prototype, "symbolLayers", void 0), r([r3({ LineSymbol3D: "line-3d" }, { readOnly: true })], c13.prototype, "type", void 0), c13 = l18 = r([a2("esri.symbols.LineSymbol3D")], c13);

// node_modules/@arcgis/core/symbols/MeshSymbol3D.js
var p11;
var y3 = V.ofType({ base: null, key: "type", typeMap: { fill: d3 } });
var a12 = p11 = class extends T {
  constructor(o6) {
    super(o6), this.symbolLayers = new y3(), this.type = "mesh-3d";
  }
  clone() {
    return new p11({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleFillSymbol(o6) {
    return new p11({ symbolLayers: new V([d3.fromSimpleFillSymbol(o6)]) });
  }
};
r([m({ type: y3 })], a12.prototype, "symbolLayers", void 0), r([r3({ MeshSymbol3D: "mesh-3d" }, { readOnly: true })], a12.prototype, "type", void 0), a12 = p11 = r([a2("esri.symbols.MeshSymbol3D")], a12);

// node_modules/@arcgis/core/symbols/PictureFillSymbol.js
var c14;
var u7 = c14 = class extends l6 {
  constructor(...t10) {
    super(...t10), this.type = "picture-fill", this.url = null, this.xscale = 1, this.yscale = 1, this.width = 12, this.height = 12, this.xoffset = 0, this.yoffset = 0, this.source = null;
  }
  normalizeCtorArgs(t10, s7, e8, r6) {
    if (t10 && "string" != typeof t10 && null == t10.imageData) return t10;
    const i9 = {};
    return t10 && (i9.url = t10), s7 && (i9.outline = s7), null != e8 && (i9.width = o2(e8)), null != r6 && (i9.height = o2(r6)), i9;
  }
  clone() {
    const t10 = new c14({ color: a(this.color), height: this.height, outline: a(this.outline), url: this.url, width: this.width, xoffset: this.xoffset, xscale: this.xscale, yoffset: this.yoffset, yscale: this.yscale });
    return t10._set("source", a(this.source)), t10;
  }
  hash() {
    return `${super.hash()}.${this.color?.hash()}.${this.height}.${this.url}.${this.width}.${this.xoffset}.${this.xscale}.${this.yoffset}.${this.yscale}`;
  }
};
r([r3({ esriPFS: "picture-fill" }, { readOnly: true })], u7.prototype, "type", void 0), r([m(m6)], u7.prototype, "url", void 0), r([m({ type: Number, json: { write: true } })], u7.prototype, "xscale", void 0), r([m({ type: Number, json: { write: true } })], u7.prototype, "yscale", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], u7.prototype, "width", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], u7.prototype, "height", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], u7.prototype, "xoffset", void 0), r([m({ type: Number, cast: o2, json: { write: true } })], u7.prototype, "yoffset", void 0), r([m(c3)], u7.prototype, "source", void 0), u7 = c14 = r([a2("esri.symbols.PictureFillSymbol")], u7);

// node_modules/@arcgis/core/symbols/PointSymbol3D.js
var h5;
var S2 = V.ofType({ base: null, key: "type", typeMap: { icon: f2, object: n7, text: y2 } });
var j4 = h5 = class extends T {
  constructor(o6) {
    super(o6), this.verticalOffset = null, this.callout = null, this.symbolLayers = new S2(), this.type = "point-3d";
  }
  supportsCallout() {
    if ((this.symbolLayers ? this.symbolLayers.length : 0) < 1) return false;
    for (const o6 of this.symbolLayers.items) switch (o6.type) {
      case "icon":
      case "text":
      case "object":
        continue;
      default:
        return false;
    }
    return true;
  }
  hasVisibleCallout() {
    return r5(this);
  }
  hasVisibleVerticalOffset() {
    return e7(this);
  }
  clone() {
    return new h5({ verticalOffset: a(this.verticalOffset), callout: a(this.callout), styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromSimpleMarkerSymbol(o6) {
    return new h5({ symbolLayers: new V([f2.fromSimpleMarkerSymbol(o6)]) });
  }
  static fromPictureMarkerSymbol(o6) {
    return new h5({ symbolLayers: new V([f2.fromPictureMarkerSymbol(o6)]) });
  }
  static fromCIMSymbol(o6) {
    const e8 = o6.data?.symbol?.type;
    if ("CIMPointSymbol" !== e8) return null;
    const s7 = o6.data.symbol;
    return new h5(s7?.callout ? { symbolLayers: new V([f2.fromCIMSymbol(o6)]), callout: new u4({ size: 0.5, color: new l3([0, 0, 0]) }), verticalOffset: new i8({ screenLength: 40 }) } : { symbolLayers: new V([f2.fromCIMSymbol(o6)]) });
  }
  static fromTextSymbol(o6) {
    return new h5({ symbolLayers: new V([y2.fromTextSymbol(o6)]) });
  }
};
r([m({ type: i8, json: { write: true } })], j4.prototype, "verticalOffset", void 0), r([m(u5)], j4.prototype, "callout", void 0), r([m({ type: S2, json: { origins: { "web-scene": { write: true } } } })], j4.prototype, "symbolLayers", void 0), r([r3({ PointSymbol3D: "point-3d" }, { readOnly: true })], j4.prototype, "type", void 0), j4 = h5 = r([a2("esri.symbols.PointSymbol3D")], j4);

// node_modules/@arcgis/core/symbols/PolygonSymbol3D.js
var u8;
var j5 = V.ofType({ base: null, key: "type", typeMap: { extrude: l11, fill: d3, icon: f2, line: d5, object: n7, text: y2, water: c12 } });
var g4 = u8 = class extends T {
  constructor(o6) {
    super(o6), this.symbolLayers = new j5(), this.type = "polygon-3d";
  }
  initialize() {
    const o6 = (o7) => {
      "line" === o7.type && m2(i.getLogger(this), "LineSymbol3DLayer can not be used as a SymbolLayer with a PolygonSymbol3D symbol anymore.", { replacement: "Use FillSymbol3DLayer.outline instead.", version: "4.28" }), "text" === o7.type && m2(i.getLogger(this), "TextSymbol3DLayer can not be used as a SymbolLayer with a PolygonSymbol3D symbol anymore.", { replacement: "Use Labels instead.", version: "4.28" });
    };
    for (const e8 of this.symbolLayers) o6(e8);
    this.addHandles(a4(() => this.symbolLayers, "after-add", ({ item: e8 }) => o6(e8), U));
  }
  clone() {
    return new u8({ styleOrigin: a(this.styleOrigin), symbolLayers: a(this.symbolLayers), thumbnail: a(this.thumbnail) });
  }
  static fromJSON(o6) {
    const e8 = new u8();
    if (e8.read(o6), 2 === e8.symbolLayers.length && "fill" === e8.symbolLayers.at(0).type && "line" === e8.symbolLayers.at(1).type) {
      const r6 = e8.symbolLayers.at(0), s7 = e8.symbolLayers.at(1);
      !s7.enabled || o6.symbolLayers?.[1] && false === o6.symbolLayers[1].enable || (r6.outline = { size: s7.size, color: null != s7.material ? s7.material.color : null }), e8.symbolLayers.removeAt(1);
    }
    return e8;
  }
  static fromSimpleFillSymbol(o6) {
    return new u8({ symbolLayers: new V([d3.fromSimpleFillSymbol(o6)]) });
  }
};
r([m({ type: j5, json: { write: true } })], g4.prototype, "symbolLayers", void 0), r([r3({ PolygonSymbol3D: "polygon-3d" }, { readOnly: true })], g4.prototype, "type", void 0), g4 = u8 = r([a2("esri.symbols.PolygonSymbol3D")], g4);

// node_modules/@arcgis/core/symbols/WebStyleSymbol.js
var h6;
var u9 = h6 = class extends c {
  constructor(t10) {
    super(t10), this.color = null, this.styleName = null, this.portal = null, this.styleUrl = null, this.thumbnail = null, this.name = null, this.type = "web-style";
  }
  get _fetchCacheKey() {
    const t10 = null != this.portal ? this.portal : C.getDefault(), e8 = t10.user ? t10.user.username : null;
    return `${this.styleName}:${this.styleUrl}:${this.name}:${e8}:${t10.url}`;
  }
  read(t10, e8) {
    this.portal = e8?.portal, super.read(t10, e8);
  }
  clone() {
    return new h6({ name: this.name, styleUrl: this.styleUrl, styleName: this.styleName, portal: this.portal });
  }
  fetchSymbol(t10) {
    return this._fetchSymbol(t10);
  }
  async fetchCIMSymbol(t10) {
    s3(i.getLogger(this), "WebStyleSymbol.fetchCIMSymbol is deprecated in favour of WebStyleSymbol.fetchSymbol which now supports both web and cim symbology", { version: "4.33", replacement: "WebStyleSymbol.fetchSymbol", see: "https://arcg.is/0CXPTr#fetchSymbol", warnOnce: true });
    const s7 = await this._fetchSymbol({ ...t10, acceptedFormats: ["cim"] });
    if ("cim" !== s7?.type) throw new s("webstylesymbol:fetchCIMSymbol", "Resolved web style symbol is not of type 'cim'");
    return s7;
  }
  async _fetchSymbol(t10) {
    const e8 = null != t10 ? t10.cache : null, o6 = e8 ? this._fetchCacheKey : null;
    if (null != e8) {
      const t11 = o6 && e8.get(o6);
      if (t11) return t11.clone();
    }
    const { resolveWebStyleSymbol: l19 } = await import("./webStyleSymbolUtils-5ESURJCU.js");
    s4(t10);
    const i9 = l19(this, { portal: this.portal }, t10);
    i9.catch((t11) => {
      i.getLogger(this).error("#fetchSymbol()", "Failed to create symbol from style", t11);
    });
    const m16 = await i9;
    return null != e8 && e8.set(o6, m16.clone()), m16;
  }
};
r([m({ json: { write: false } })], u9.prototype, "color", void 0), r([m({ type: String, json: { write: true } })], u9.prototype, "styleName", void 0), r([m({ type: C, json: { write: false } })], u9.prototype, "portal", void 0), r([m({ type: String, json: { read: f, write: h } })], u9.prototype, "styleUrl", void 0), r([m({ type: c4, json: { read: false } })], u9.prototype, "thumbnail", void 0), r([m({ type: String, json: { write: true } })], u9.prototype, "name", void 0), r([r3({ styleSymbolReference: "web-style" }, { readOnly: true })], u9.prototype, "type", void 0), r([m()], u9.prototype, "_fetchCacheKey", null), u9 = h6 = r([a2("esri.symbols.WebStyleSymbol")], u9);

// node_modules/@arcgis/core/symbols/support/typeUtils.js
function k(e8) {
  if (!e8) return false;
  switch (e8.type) {
    case "picture-fill":
    case "picture-marker":
    case "simple-fill":
    case "simple-line":
    case "simple-marker":
    case "text":
    case "cim":
      return true;
    default:
      return false;
  }
}
function S3(e8) {
  switch (e8?.type) {
    case "label-3d":
    case "line-3d":
    case "mesh-3d":
    case "point-3d":
    case "polygon-3d":
      return true;
    default:
      return false;
  }
}
var x2 = { base: c, key: "type", typeMap: { "simple-fill": m7, "picture-fill": u7, "picture-marker": a6, "simple-line": m5, "simple-marker": u3, text: g, "label-3d": f3, "line-3d": c13, "mesh-3d": a12, "point-3d": j4, "polygon-3d": g4, "web-style": u9, cim: n4 }, errorContext: "symbol" };
var M = { base: c, key: "type", typeMap: { "picture-marker": a6, "simple-marker": u3, "point-3d": j4, cim: n4 }, errorContext: "symbol" };
var C3 = { base: c, key: "type", typeMap: { "simple-line": m5, "line-3d": c13, cim: n4 }, errorContext: "symbol" };
var h7 = { base: c, key: "type", typeMap: { "simple-fill": m7, "picture-fill": u7, "polygon-3d": g4, cim: n4 }, errorContext: "symbol" };
var g5 = { base: c, key: "type", typeMap: { "picture-marker": a6, "simple-marker": u3, text: g, "web-style": u9, cim: n4 }, errorContext: "symbol" };
var w2 = u({ types: x2 });
var D2 = { base: c, key: "type", typeMap: { "simple-fill": m7, "picture-fill": u7, "picture-marker": a6, "simple-line": m5, "simple-marker": u3, text: g, "line-3d": c13, "mesh-3d": a12, "point-3d": j4, "polygon-3d": g4, "web-style": u9, cim: n4 }, errorContext: "symbol" };
var P = { base: c, key: "type", typeMap: { text: g, "label-3d": f3 }, errorContext: "symbol" };
var F = { base: c, key: "type", typeMap: { "line-3d": c13, "mesh-3d": a12, "point-3d": j4, "polygon-3d": g4, "web-style": u9, cim: n4 }, errorContext: "symbol" };
var T2 = { base: c, key: "type", typeMap: { "label-3d": f3 }, errorContext: "symbol" };
var z = S(x2);

export {
  n4 as n,
  i4 as i,
  t4 as t,
  m10 as m,
  d3 as d,
  j,
  p9 as p,
  f2 as f,
  d5 as d2,
  d2 as d3,
  n7 as n2,
  y2 as y,
  l9 as l,
  c4 as c,
  m15 as m2,
  u4 as u,
  o5 as o,
  l17 as l2,
  i8 as i2,
  f3 as f2,
  c13 as c2,
  a12 as a,
  j4 as j2,
  g4 as g,
  u9 as u2,
  k,
  S3 as S,
  x2 as x,
  M,
  C3 as C,
  h7 as h,
  g5 as g2,
  w2 as w,
  D2 as D,
  P,
  F,
  T2 as T,
  z
};
//# sourceMappingURL=chunk-LYSDGL5S.js.map
