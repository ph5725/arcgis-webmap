import {
  A as A2,
  M as M2,
  v
} from "./chunk-3GCFO25G.js";
import {
  s as s3,
  w as w2
} from "./chunk-BGR5EVZD.js";
import {
  D,
  H as H2,
  M,
  O,
  P as P2,
  U,
  h as h2,
  q2 as q,
  w,
  x,
  y,
  z
} from "./chunk-RTDWTAVK.js";
import {
  a,
  c as c2
} from "./chunk-QLJ6JQFC.js";
import {
  e as e2
} from "./chunk-NZPABYQQ.js";
import {
  A,
  E,
  H,
  K,
  P,
  c,
  g,
  j,
  o,
  p as p2,
  r as r2,
  s as s2,
  u
} from "./chunk-TMFB3DKM.js";
import {
  h,
  p,
  s
} from "./chunk-DNZK6PPI.js";
import {
  n as n2,
  r,
  t
} from "./chunk-RACDQ3AL.js";
import {
  n
} from "./chunk-7Z3AF3B2.js";
import {
  e
} from "./chunk-6GWORUT3.js";
import {
  b
} from "./chunk-FPSA4NFH.js";
import {
  i2 as i
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/chunks/boundedPlane.js
var z2 = () => i.getLogger("esri.views.3d.support.geometryUtils.boundedPlane");
var D2 = class {
  constructor() {
    this.plane = M(), this.origin = n2(), this.basis1 = n2(), this.basis2 = n2();
  }
};
var G = D2;
function W(s4 = Ms) {
  return { plane: M(s4.plane), origin: t(s4.origin), basis1: t(s4.basis1), basis2: t(s4.basis2) };
}
function X(s4, t2, i2) {
  const n3 = As.get();
  return n3.origin = s4, n3.basis1 = t2, n3.basis2 = i2, n3.plane = D(0, 0, 0, 0), K2(n3), n3;
}
function Z(s4, t2 = W()) {
  return J(s4.origin, s4.basis1, s4.basis2, t2);
}
function H3(s4, t2) {
  s2(t2.origin, s4.origin), s2(t2.basis1, s4.basis1), s2(t2.basis2, s4.basis2), h2(t2.plane, s4.plane);
}
function J(s4, t2, i2, n3 = W()) {
  return s2(n3.origin, s4), s2(n3.basis1, t2), s2(n3.basis2, i2), K2(n3), ws(n3, "fromValues()"), n3;
}
function K2(s4) {
  P2(s4.basis2, s4.basis1, s4.origin, s4.plane);
}
function Q(s4, t2, i2) {
  s4 !== i2 && Z(s4, i2);
  const n3 = g(c2.get(), ys(s4), t2);
  return u(i2.origin, i2.origin, n3), i2.plane[3] -= t2, i2;
}
function $(s4, t2, i2) {
  return ts(t2, i2), Q(i2, ls(s4, s4.origin), i2), i2;
}
function ss(s4, t2) {
  const i2 = s4.basis1[0], n3 = s4.basis2[1], [r3, o2] = s4.origin;
  return e(r3 - i2, o2 - n3, r3 + i2, o2 + n3, t2);
}
function ts(s4, t2 = W()) {
  const i2 = (s4[2] - s4[0]) / 2, n3 = (s4[3] - s4[1]) / 2;
  return o(t2.origin, s4[0] + i2, s4[1] + n3, 0), o(t2.basis1, i2, 0, 0), o(t2.basis2, 0, n3, 0), U(0, 0, 1, 0, t2.plane), t2;
}
function is(s4, t2, i2) {
  return !!q(s4.plane, t2, i2) && Ps(s4, i2);
}
function ns(s4, t2, i2) {
  if (is(s4, t2, i2)) return i2;
  const n3 = rs(s4, t2, c2.get());
  return u(i2, t2.origin, g(c2.get(), t2.direction, p2(t2.origin, n3) / r2(t2.direction))), i2;
}
function rs(s4, i2, n3) {
  const r3 = Ss.get();
  xs(s4, i2, r3, Ss.get());
  let o2 = Number.POSITIVE_INFINITY;
  for (const e3 of Es) {
    const c3 = Ns(s4, e3, Ts.get()), u2 = c2.get();
    if (x(r3, c3, u2)) {
      const s5 = K(c2.get(), i2.origin, u2), r4 = Math.abs(b(P(i2.direction, s5)));
      r4 < o2 && (o2 = r4, s2(n3, u2));
    }
  }
  return o2 === Number.POSITIVE_INFINITY ? es(s4, i2, n3) : n3;
}
function os(s4, t2) {
  return (t2 - s4) / t2;
}
function es(s4, t2, i2) {
  if (is(s4, t2, i2)) return i2;
  const n3 = Ss.get(), r3 = Ss.get();
  xs(s4, t2, n3, r3);
  let o2 = Number.POSITIVE_INFINITY;
  for (const e3 of Es) {
    const c3 = Ns(s4, e3, Ts.get()), u2 = c2.get();
    if (w(n3, c3, u2)) {
      const s5 = w2(t2, u2);
      if (!z(r3, u2)) continue;
      s5 < o2 && (o2 = s5, s2(i2, u2));
    }
  }
  return us(s4, t2.origin) < o2 && as(s4, t2.origin, i2), i2;
}
function as(s4, t2, i2) {
  const n3 = H2(s4.plane, t2, c2.get()), r3 = A2(vs(s4, s4.basis1), n3, -1, 1, c2.get()), o2 = A2(vs(s4, s4.basis2), n3, -1, 1, c2.get());
  return c(i2, u(c2.get(), r3, o2), s4.origin), i2;
}
function cs(s4, t2, i2) {
  const { origin: n3, basis1: r3, basis2: o2 } = s4, e3 = c(c2.get(), t2, n3), a2 = a(r3, e3), c3 = a(o2, e3), u2 = a(ys(s4), e3);
  return o(i2, a2, c3, u2);
}
function us(s4, t2) {
  const i2 = cs(s4, t2, c2.get()), { basis1: n3, basis2: r3 } = s4, o2 = r2(n3), e3 = r2(r3), a2 = Math.max(Math.abs(i2[0]) - o2, 0), c3 = Math.max(Math.abs(i2[1]) - e3, 0), u2 = i2[2];
  return a2 * a2 + c3 * c3 + u2 * u2;
}
function gs(s4, t2) {
  return Math.sqrt(us(s4, t2));
}
function bs(s4, t2) {
  let i2 = Number.NEGATIVE_INFINITY;
  for (const n3 of Es) {
    const r3 = Ns(s4, n3, Ts.get()), o2 = M2(r3, t2);
    o2 > i2 && (i2 = o2);
  }
  return Math.sqrt(i2);
}
function fs(s4, t2) {
  return z(s4.plane, t2) && Ps(s4, t2);
}
function ps(s4, t2, i2, n3) {
  return Is(s4, i2, n3);
}
function ls(s4, t2) {
  const i2 = -s4.plane[3];
  return a(ys(s4), t2) - i2;
}
function ms(s4, t2, i2, n3) {
  const r3 = ls(s4, t2), o2 = g(Vs, ys(s4), i2 - r3);
  return u(n3, t2, o2), n3;
}
function ds(s4, t2) {
  return H(s4.basis1, t2.basis1) && H(s4.basis2, t2.basis2) && H(s4.origin, t2.origin);
}
function hs(s4, t2, i2) {
  return s4 !== i2 && Z(s4, i2), h(_s, t2), s(_s, _s), E(i2.basis1, s4.basis1, _s), E(i2.basis2, s4.basis2, _s), E(O(i2.plane), O(s4.plane), _s), E(i2.origin, s4.origin, t2), y(i2.plane, i2.plane, i2.origin), i2;
}
function js(s4, t2, i2, n3) {
  return s4 !== n3 && Z(s4, n3), p(Os, t2, i2), E(n3.basis1, s4.basis1, Os), E(n3.basis2, s4.basis2, Os), K2(n3), n3;
}
function ys(s4) {
  return O(s4.plane);
}
function Is(s4, t2, i2) {
  switch (t2) {
    case n.X:
      s2(i2, s4.basis1), A(i2, i2);
      break;
    case n.Y:
      s2(i2, s4.basis2), A(i2, i2);
      break;
    case n.Z:
      s2(i2, ys(s4));
  }
  return i2;
}
function Ps(s4, t2) {
  const i2 = c(c2.get(), t2, s4.origin), n3 = j(s4.basis1), r3 = j(s4.basis2), o2 = P(s4.basis1, i2), e3 = P(s4.basis2, i2);
  return -o2 - n3 < 0 && o2 - n3 < 0 && -e3 - r3 < 0 && e3 - r3 < 0;
}
function vs(s4, t2) {
  const i2 = Ts.get();
  return s2(i2.origin, s4.origin), s2(i2.vector, t2), i2;
}
function Ns(s4, t2, i2) {
  const { basis1: n3, basis2: r3, origin: o2 } = s4, e3 = g(c2.get(), n3, t2.origin[0]), a2 = g(c2.get(), r3, t2.origin[1]);
  u(i2.origin, e3, a2), u(i2.origin, i2.origin, o2);
  const g2 = g(c2.get(), n3, t2.direction[0]), b2 = g(c2.get(), r3, t2.direction[1]);
  return g(i2.vector, u(g2, g2, b2), 2), i2;
}
function ws(s4, t2) {
  Math.abs(P(s4.basis1, s4.basis2) / (r2(s4.basis1) * r2(s4.basis2))) > 1e-6 && z2().warn(t2, "Provided basis vectors are not perpendicular"), Math.abs(P(s4.basis1, ys(s4))) > 1e-6 && z2().warn(t2, "Basis vectors and plane normal are not perpendicular"), Math.abs(-P(ys(s4), s4.origin) - s4.plane[3]) > 1e-6 && z2().warn(t2, "Plane offset is not consistent with plane origin");
}
function xs(s4, t2, i2, n3) {
  const r3 = ys(s4);
  P2(r3, t2.direction, t2.origin, i2), P2(O(i2), r3, t2.origin, n3);
}
var Ms = { plane: M(), origin: r(0, 0, 0), basis1: r(1, 0, 0), basis2: r(0, 1, 0) };
var Ss = new s3(M);
var Ts = new s3(v);
var Vs = n2();
var As = new s3(() => W());
var Es = [{ origin: [-1, -1], direction: [1, 0] }, { origin: [1, -1], direction: [0, 1] }, { origin: [1, 1], direction: [-1, 0] }, { origin: [-1, 1], direction: [0, -1] }];
var _s = e2();
var Os = e2();
var ks = Object.freeze(Object.defineProperty({ __proto__: null, BoundedPlaneClass: G, altitudeAt: ls, axisAt: ps, cameraFrustumCoverage: os, closestPoint: es, closestPointOnSilhouette: rs, copy: Z, copyWithoutVerify: H3, create: W, distance: gs, distance2: us, distanceToSilhouette: bs, elevate: Q, equals: ds, extrusionContainsPoint: fs, fromAABoundingRect: ts, fromValues: J, getExtent: ss, intersectRay: is, intersectRayClosestSilhouette: ns, normal: ys, projectPoint: as, projectPointLocal: cs, rotate: js, setAltitudeAt: ms, setExtent: $, transform: hs, up: Ms, updateUnboundedPlane: K2, wrap: X }, Symbol.toStringTag, { value: "Module" }));

export {
  W,
  Z,
  J,
  K2 as K,
  ts,
  gs,
  ks
};
//# sourceMappingURL=chunk-MI6QXJMY.js.map
