{
  "version": 3,
  "sources": ["../../@arcgis/core/chunks/HighlightApply.glsl.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{HighlightCellGridScreenSpacePass as e}from\"../views/3d/webgl-engine/core/shaderLibrary/HighlightCellGridScreenSpacePass.glsl.js\";import{HighlightReadBitmap as t}from\"../views/3d/webgl-engine/core/shaderLibrary/HighlightReadBitmap.glsl.js\";import{Float2DrawUniform as i}from\"../views/3d/webgl-engine/core/shaderModules/Float2DrawUniform.js\";import{FloatPassUniform as l}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as r}from\"../views/3d/webgl-engine/core/shaderModules/glsl.js\";import{IntegerPassUniform as o}from\"../views/3d/webgl-engine/core/shaderModules/IntegerPassUniform.js\";import{Texture2DPassUniform as n}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{Texture2DUintPassUniform as u}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DUintPassUniform.js\";import{o as g,b as h}from\"./HighlightDownsample.glsl.js\";import{ShaderBuilder as s}from\"../views/webgl/ShaderBuilder.js\";function c(){const c=new s;c.include(e);const{fragment:a}=c;return a.uniforms.add(new n(\"blurInput\",(e=>e.highlightBlurTexture)),new i(\"blurSize\",(e=>e.blurSize)),new u(\"highlightTexture\",(e=>e.highlightTexture)),new n(\"highlightOptionsTexture\",(e=>e.highlightOptionsTexture)),new o(\"highlightLevel\",(e=>e.highlightLevel)),new l(\"occludedIntensityFactor\",(e=>e.occludedFactor))),a.constants.add(\"inner\",\"float\",1-(g-h)/g),c.include(t),a.main.add(r`vec2 highlightTextureSize = vec2(textureSize(highlightTexture,0));\r\nvec2 uv = sUV;\r\nvec2 center = texture(blurInput, uv).rg;\r\nvec2 blurredHighlightValue = (vOutlinePossible == 0.0)\r\n? center\r\n: center * 0.204164\r\n+ texture(blurInput, uv + blurSize * 1.407333).rg * 0.304005\r\n+ texture(blurInput, uv - blurSize * 1.407333).rg * 0.304005\r\n+ texture(blurInput, uv + blurSize * 3.294215).rg * 0.093913\r\n+ texture(blurInput, uv - blurSize * 3.294215).rg * 0.093913;\r\nfloat highlightIntensity = blurredHighlightValue.r;\r\nfloat occlusionWeight = blurredHighlightValue.g;\r\nif (highlightIntensity <= 0.01) {\r\ndiscard;\r\n}\r\nvec4 fillColor    = texelFetch(highlightOptionsTexture, ivec2(highlightLevel, 0), 0);\r\nvec4 outlineColor = texelFetch(highlightOptionsTexture, ivec2(highlightLevel, 1), 0);\r\nuvec2 centerTexel = texelFetch(highlightTexture, ivec2(uv * highlightTextureSize), 0).rg;\r\nuint centerBits = readLevelBits(centerTexel, highlightLevel);\r\nbool centerFilled = (centerBits & 1u) == 1u;\r\nbool centerOccluded = (centerBits & 3u) == 3u;\r\nbool occluded = centerOccluded || (0.5 * highlightIntensity < occlusionWeight);\r\nfloat occlusionFactor = occluded ? occludedIntensityFactor : 1.0;\r\nfloat outlineFactor = centerFilled ? 1.0 : smoothstep(0.0, inner, highlightIntensity);\r\nfloat fillFactor = centerFilled ? 1.0 : 0.0;\r\nvec4 baseColor = mix(outlineColor, fillColor, fillFactor);\r\nfloat intensity = baseColor.a * occlusionFactor * outlineFactor;\r\nfragColor = vec4(baseColor.rgb, intensity);`),c}const a=Object.freeze(Object.defineProperty({__proto__:null,build:c},Symbol.toStringTag,{value:\"Module\"}));export{a as H,c as b};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIu8B,SAAS,IAAG;AAAC,QAAMA,KAAE,IAAI;AAAE,EAAAA,GAAE,QAAQC,EAAC;AAAE,QAAK,EAAC,UAASC,GAAC,IAAEF;AAAE,SAAOE,GAAE,SAAS,IAAI,IAAID,GAAE,aAAa,OAAG,EAAE,oBAAqB,GAAE,IAAIE,GAAE,YAAY,OAAG,EAAE,QAAS,GAAE,IAAIF,GAAE,oBAAoB,OAAG,EAAE,gBAAiB,GAAE,IAAIA,GAAE,2BAA2B,OAAG,EAAE,uBAAwB,GAAE,IAAI,EAAE,kBAAkB,OAAG,EAAE,cAAe,GAAE,IAAI,EAAE,2BAA2B,OAAG,EAAE,cAAe,CAAC,GAAEC,GAAE,UAAU,IAAI,SAAQ,SAAQ,KAAGE,KAAEH,MAAGG,EAAC,GAAEJ,GAAE,QAAQ,CAAC,GAAEE,GAAE,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CA2Bz1C,GAAEF;AAAC;AAAC,IAAM,IAAE,OAAO,OAAO,OAAO,eAAe,EAAC,WAAU,MAAK,OAAM,EAAC,GAAE,OAAO,aAAY,EAAC,OAAM,SAAQ,CAAC,CAAC;",
  "names": ["c", "s", "a", "o", "n"]
}
