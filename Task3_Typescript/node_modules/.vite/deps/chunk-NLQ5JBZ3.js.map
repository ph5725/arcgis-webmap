{
  "version": 3,
  "sources": ["../../@arcgis/core/statistics/utils.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport e from\"../rest/support/ClassBreaksDefinition.js\";import{createGenerateRendererClassBreaks as n}from\"../rest/support/generateRendererUtils.js\";const t=\"<Null>\",l=\"equal-interval\",i=1,a=5,o=10,u=/\\s*(\\+|-)?((\\d+(\\.\\d+)?)|(\\.\\d+))\\s*/gi,r=new Set([\"esriFieldTypeDate\",\"esriFieldTypeInteger\",\"esriFieldTypeSmallInteger\",\"esriFieldTypeSingle\",\"esriFieldTypeDouble\",\"esriFieldTypeLong\",\"esriFieldTypeOID\",\"esriFieldTypeBigInteger\"]),s=new Set([\"esriFieldTypeTimeOnly\",\"esriFieldTypeDateOnly\"]),c=[\"min\",\"max\",\"avg\",\"stddev\",\"count\",\"sum\",\"variance\",\"nullcount\",\"median\"];function m(e){return null==e||\"string\"==typeof e&&!e?t:e}function d(e){const n=null!=e.normalizationField||null!=e.normalizationType,t=null!=e.minValue||null!=e.maxValue,l=!!e.sqlExpression&&e.supportsSQLExpression;return!n&&!t&&!l}function f(e){const{outStatisticTypes:n}=e,t=e.returnDistinct?[...new Set(e.values)]:e.values,l=t.filter((e=>null!=e)).sort(),i=l.length,a={count:i,min:l[0],max:l[i-1]};return e.supportsNullCount&&(a.nullcount=t.length-i),!e.percentileParams||n?.include?.length&&!n.include.includes(\"median\")||n?.exclude?.length&&n.exclude.includes(\"median\")||(a.median=v(t,e.percentileParams)),a}function p(e){const{values:n,useSampleStdDev:t,supportsNullCount:l,outStatisticTypes:i}=e;let a=Number.POSITIVE_INFINITY,o=Number.NEGATIVE_INFINITY,u=null,r=null,s=null,c=null,m=0;const d=null==e.minValue?-1/0:e.minValue,f=null==e.maxValue?1/0:e.maxValue;for(const v of n)Number.isFinite(v)?v>=d&&v<=f&&(u=null===u?v:u+v,a=Math.min(a,v),o=Math.max(o,v),m++):\"string\"==typeof v&&m++;if(m&&null!=u){r=u/m;let e=0;for(const t of n)Number.isFinite(t)&&t>=d&&t<=f&&(e+=(t-r)**2);c=t?m>1?e/(m-1):0:m>0?e/m:0,s=Math.sqrt(c)}else a=null,o=null;const p={avg:r,count:m,max:o,min:a,stddev:s,sum:u,variance:c};return l&&(p.nullcount=n.length-m),!e.percentileParams||i?.include?.length&&!i.include.includes(\"median\")||i?.exclude?.length&&i.exclude.includes(\"median\")||(p.median=v(n,e.percentileParams)),p}function v(e,n){const{fieldType:t,value:l,orderBy:i,isDiscrete:a}=n,o=g(t,\"desc\"===i);if(0===(e=[...e].filter((e=>null!=e)).sort(((e,n)=>o(e,n)))).length)return null;if(l<=0)return e[0];if(l>=1)return e[e.length-1];const u=(e.length-1)*l,r=Math.floor(u),s=r+1,c=u%1,m=e[r],d=e[s];return s>=e.length||a||\"string\"==typeof m||\"string\"==typeof d?m:m*(1-c)+d*c}function g(e,n){if(e){if(r.has(e))return N(n);if(s.has(e))return D(n,!1);if(\"esriFieldTypeTimestampOffset\"===e)return F(n);const t=D(n,!0);if(\"esriFieldTypeString\"===e)return t;if(\"esriFieldTypeGUID\"===e||\"esriFieldTypeGlobalID\"===e)return(e,n)=>t(M(e),M(n))}const t=n?1:-1,l=N(n),i=D(n,!0),a=x(n);return(e,n)=>\"number\"==typeof e&&\"number\"==typeof n?l(e,n):\"string\"==typeof e&&\"string\"==typeof n?i(e,n):a(e,n)??t}const h=(e,n)=>null==e?null==n?0:1:null==n?-1:null,T=(e,n)=>null==e?null==n?0:-1:null==n?1:null;function x(e){return e?h:T}const y=(e,n)=>T(e,n)??(e===n?0:new Date(e).getTime()-new Date(n).getTime()),V=(e,n)=>h(e,n)??(e===n?0:new Date(n).getTime()-new Date(e).getTime());function F(e){return e?V:y}const I=(e,n)=>T(e,n)??(e===n?0:e<n?-1:1),b=(e,n)=>h(e,n)??(e===n?0:e<n?1:-1);function D(e,n){if(!n)return e?b:I;const t=x(e);return e?(e,n)=>{const l=t(e,n);return null!=l?l:(e=e.toUpperCase())>(n=n.toUpperCase())?-1:e<n?1:0}:(e,n)=>{const l=t(e,n);return null!=l?l:(e=e.toUpperCase())<(n=n.toUpperCase())?-1:e>n?1:0}}const z=(e,n)=>h(e,n)??n-e,S=(e,n)=>T(e,n)??e-n;function N(e){return e?z:S}function M(e){return e.slice(24,36)+e.slice(19,23)+e.slice(16,18)+e.slice(14,16)+e.slice(11,13)+e.slice(9,11)+e.slice(6,8)+e.slice(4,6)+e.slice(2,4)+e.slice(0,2)}function C(e,n,t){let l;for(l in e)n?.include?.length&&!n.include.includes(l)||n?.exclude?.length&&n.exclude.includes(l)?delete e[l]:c.includes(l)&&(Number.isFinite(e[l])||(e[l]=null));return t?([\"avg\",\"stddev\",\"variance\"].forEach((n=>{null!=e[n]&&(e[n]=Math.ceil(e[n]??0))})),e):e}function k(e){const n={};for(let t of e)(null==t||\"string\"==typeof t&&\"\"===t.trim())&&(t=null),null==n[t]?n[t]={count:1,data:t}:n[t].count++;return{count:n}}function w(e){return\"coded-value\"!==e?.type?[]:e.codedValues.map((e=>e.code))}function $(e,n,t,l){const i=e.count,a=[];if(t&&n){const e=[],t=w(n[0]);for(const i of t)if(n[1]){const t=w(n[1]);for(const a of t)if(n[2]){const t=w(n[2]);for(const n of t)e.push(`${m(i)}${l}${m(a)}${l}${m(n)}`)}else e.push(`${m(i)}${l}${m(a)}`)}else e.push(i);for(const n of e)i.hasOwnProperty(n)||(i[n]={data:n,count:0})}for(const o in i){const e=i[o];a.push({value:e.data,count:e.count,label:e.label})}return{uniqueValueInfos:a}}function B(e,n,t,l){let i=null;switch(n){case\"log\":0!==e&&(i=Math.log(e)*Math.LOG10E);break;case\"percent-of-total\":Number.isFinite(l)&&0!==l&&(i=e/l*100);break;case\"field\":Number.isFinite(t)&&0!==t&&(i=e/t);break;case\"natural-log\":e>0&&(i=Math.log(e));break;case\"square-root\":e>0&&(i=e**.5)}return i}function E(e,t,l){const i=q({field:t.field,normalizationType:t.normalizationType,normalizationField:t.normalizationField,classificationMethod:t.classificationMethod,standardDeviationInterval:t.standardDeviationInterval,definedInterval:t.definedInterval,breakCount:t.numClasses||a});return e=O(e,t.minValue,t.maxValue),n({definition:i,values:e,normalizationTotal:t.normalizationTotal},l)}function O(e,n,t){const l=n??-1/0,i=t??1/0;return e.filter((e=>Number.isFinite(e)&&e>=l&&e<=i))}function q(n){const{breakCount:t,field:a,normalizationField:o,normalizationType:u}=n,r=n.classificationMethod||l,s=\"standard-deviation\"===r?n.standardDeviationInterval||i:void 0,c=\"defined-interval\"===r?n.definedInterval:void 0;return new e({breakCount:t,classificationField:a,classificationMethod:r,normalizationField:\"field\"===u?o:void 0,normalizationType:u,standardDeviationInterval:s,definedInterval:c})}function P(e,n){let t=e.classBreaks;const l=t.length,i=t[0]?.minValue,a=t[l-1]?.maxValue,o=\"standard-deviation\"===n,r=u;return t=t.map((e=>{const n=e.label,t={minValue:e.minValue,maxValue:e.maxValue,label:n};if(o&&n){const e=n.match(r),l=e?.map((e=>+e.trim()))??[];2===l.length?(t.minStdDev=l[0],t.maxStdDev=l[1],l[0]<0&&l[1]>0&&(t.hasAvg=!0)):1===l.length&&(n.includes(\"<\")?(t.minStdDev=null,t.maxStdDev=l[0]):n.includes(\">\")&&(t.minStdDev=l[0],t.maxStdDev=null))}return t})),{minValue:i,maxValue:a,classBreakInfos:t,normalizationTotal:e.normalizationTotal}}function U(e,n){const t=G(e,n);if(null==t.min&&null==t.max)return{bins:[],minValue:t.min,maxValue:t.max,normalizationTotal:n.normalizationTotal};const l=t.intervals,i=t.min??0,a=t.max??0,o=l.map(((e,n)=>({minValue:l[n][0],maxValue:l[n][1],count:0})));for(const u of e)if(null!=u&&u>=i&&u<=a){const e=L(l,u);e>-1&&o[e].count++}return{bins:o,minValue:i,maxValue:a,normalizationTotal:n.normalizationTotal}}function G(e,n,t=!1){const{field:l,classificationMethod:i,standardDeviationInterval:a,definedInterval:u,normalizationType:r,normalizationField:s,normalizationTotal:c,minValue:m,maxValue:f}=n,v=n.numBins||o;let g=null,h=null,T=null;if((!i||\"equal-interval\"===i)&&!r){if(null!=m&&null!=f)g=m,h=f;else{const n=p({values:e,minValue:m,maxValue:f,useSampleStdDev:!r,supportsNullCount:d({normalizationType:r,normalizationField:s,minValue:m,maxValue:f})});g=n.min??null,h=n.max??null}T=j(g??0,h??0,v)}else{const{classBreaks:n}=E(e,{field:l,normalizationType:r,normalizationField:s,normalizationTotal:c,classificationMethod:i,standardDeviationInterval:a,definedInterval:u,minValue:m,maxValue:f,numClasses:v},null!=m&&null!=f?[m,f]:void 0);g=n[0]?.minValue,h=n[n.length-1]?.maxValue,T=n.map((e=>[e.minValue,e.maxValue]))}if(t&&T.length){const e=T.at(-1)[1];T.push([e,e])}return{min:g,max:h,intervals:T}}function L(e,n){let t=-1;for(let l=e.length-1;l>=0;l--){if(n>=e[l][0]){t=l;break}}return t}function j(e,n,t){const l=(n-e)/t,i=[];let a,o=e;for(let u=1;u<=t;u++)a=o+l,a=Number(a.toFixed(16)),i.push([o,u===t?n:a]),o=a;return i}export{L as binIndex,E as calculateClassBreaks,U as calculateHistogram,v as calculatePercentile,p as calculateStatistics,f as calculateStringStatistics,k as calculateUniqueValuesCount,q as createClassBreaksDefinition,$ as createUVResult,g as getAttributeComparator,G as getBinParams,j as getEqualIntervalBins,B as getNormalizedValue,d as isNullCountSupported,m as processNullValue,C as processSummaryStatisticsResult,P as resolveCBResult,c as statisticTypes};\r\n"],
  "mappings": "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",
  "names": ["l", "a", "t", "e", "i", "o", "u", "r", "s", "c", "m", "d", "f", "v", "p", "n", "g", "h", "T"]
}
