import {
  u as u2
} from "./chunk-MZJEBIXX.js";
import {
  i
} from "./chunk-GPMIOMDJ.js";
import {
  e as e2
} from "./chunk-RWRC6JKB.js";
import {
  S,
  k,
  m
} from "./chunk-LYSDGL5S.js";
import {
  l
} from "./chunk-KE3WBZYL.js";
import {
  e,
  u
} from "./chunk-MUKDJQWB.js";
import {
  a
} from "./chunk-HPGYEHVI.js";
import {
  _
} from "./chunk-RACDQ3AL.js";
import {
  n
} from "./chunk-VOLWOTEG.js";
import {
  H
} from "./chunk-ZWFY3WY5.js";

// node_modules/@arcgis/core/symbols/support/gfxUtils.js
var i2 = "picture-fill";
var a2 = "simple-fill";
var l2 = "simple-line";
var c = "simple-marker";
var h = "text";
var d = "cim";
var m2 = /* @__PURE__ */ new Map([["dash", [4, 3]], ["dashdot", [4, 3, 1, 3]], ["dot", [1, 3]], ["longdash", [8, 3]], ["longdashdot", [8, 3, 1, 3]], ["longdashdotdot", [8, 3, 1, 3, 1, 3]], ["shortdash", [4, 1]], ["shortdashdot", [4, 1, 1, 1]], ["shortdashdotdot", [4, 1, 1, 1, 1, 1]], ["shortdot", [1, 1]], ["solid", []]]);
var p = new e2(1e3);
function u3(e3) {
  const o = e3.style;
  let s = null;
  if (e3) switch (e3.type) {
    case c:
      "cross" !== o && "x" !== o && (s = e3.color);
      break;
    case a2:
      o && "solid" !== o ? "none" !== o && (s = { type: "pattern", x: 0, y: 0, src: n(`esri/symbols/patterns/${o}.png`), width: 5, height: 5 }) : s = e3.color;
      break;
    case i2:
      s = { type: "pattern", src: e3.url, width: u(e3.width) * e3.xscale, height: u(e3.height) * e3.yscale, x: u(e3.xoffset), y: u(e3.yoffset) };
      break;
    case h:
      s = e3.color;
      break;
    case d:
      s = u2(e3);
  }
  return s;
}
function f(t, e3) {
  const s = t + "-" + e3;
  return void 0 !== p.get(s) ? Promise.resolve(p.get(s)) : H(t, { responseType: "image" }).then((t2) => {
    const o = t2.data, r = o.naturalWidth, n2 = o.naturalHeight, i3 = document.createElement("canvas");
    i3.width = r, i3.height = n2;
    const a4 = i3.getContext("2d");
    a4.fillStyle = e3, a4.fillRect(0, 0, r, n2), a4.globalCompositeOperation = "destination-in", a4.drawImage(o, 0, 0);
    const l3 = i3.toDataURL();
    return p.put(s, l3), l3;
  });
}
function y(t) {
  if (!t) return null;
  let e3 = null;
  switch (t.type) {
    case a2:
    case i2:
    case c:
      e3 = y(t.outline);
      break;
    case l2: {
      const o = u(t.width);
      null != t.style && "none" !== t.style && 0 !== o && (e3 = { color: t.color, style: w(t.style), width: o, cap: t.cap, join: "miter" === t.join ? u(t.miterLimit) : t.join }, e3.dashArray = g(e3).join(",") || "none");
      break;
    }
    default:
      e3 = null;
  }
  return e3;
}
function g(t) {
  if (!t?.style) return [];
  const { dashArray: e3, style: o, width: s } = t;
  if ("string" == typeof e3 && "none" !== e3) return e3.split(",").map((t2) => Number(t2));
  const r = s ?? 0, n2 = m2.has(o) ? m2.get(o).map((t2) => t2 * r) : [];
  if ("butt" !== t.cap) for (const [i3, a4] of n2.entries()) n2[i3] = i3 % 2 == 1 ? a4 + r : Math.max(a4 - r, 1);
  return n2;
}
var w = /* @__PURE__ */ (() => {
  const t = {};
  return (e3) => {
    if (t[e3]) return t[e3];
    const o = e3.replaceAll("-", "");
    return t[e3] = o, o;
  };
})();
var b = new l([128, 128, 128]);

// node_modules/@arcgis/core/symbols/support/utils.js
var a3 = new l("white");
function f2(e3) {
  const t = e3.symbolLayers?.at(-1);
  if (t && "outline" in t) return t?.outline?.size;
}
function m3(e3) {
  if (!e3) return 0;
  if (S(e3)) {
    const t = f2(e3);
    return null != t ? t : 0;
  }
  return e(y(e3)?.width);
}
function h2(e3) {
  if (null == e3 || !("symbolLayers" in e3) || null == e3.symbolLayers) return false;
  switch (e3.type) {
    case "point-3d":
      return e3.symbolLayers.some((e4) => "object" === e4.type);
    case "line-3d":
      return e3.symbolLayers.some((e4) => "path" === e4.type);
    case "polygon-3d":
      return e3.symbolLayers.some((e4) => "object" === e4.type || "extrude" === e4.type);
    default:
      return false;
  }
}
function b2(e3) {
  return e3.resource?.href ?? "";
}
function w2(t, r) {
  if (!t) return null;
  let o = null;
  return S(t) ? o = d2(t) : k(t) && (o = "cim" === t.type ? u2(t) : t.color ? new l(t.color) : null), o ? j(o, r) : null;
}
function d2(t) {
  const r = t.symbolLayers;
  if (!r) return null;
  let o = null;
  return r.forEach((e3) => {
    "object" === e3.type && e3.resource?.href || (o = "water" === e3.type ? e3.color : e3.material ? e3.material.color : null);
  }), o ? new l(o) : null;
}
function j(t, r) {
  if (null == r || null == t) return t;
  const o = t.toRgba();
  return o[3] = o[3] * r, new l(o);
}
function k2(e3, t, r) {
  const o = e3.symbolLayers;
  if (!o) return;
  const n2 = (e4) => j(t ?? e4 ?? (null != r ? a3 : null), r);
  o.forEach((e4) => {
    if ("object" !== e4.type || !e4.resource?.href || t) if ("water" === e4.type) e4.color = n2(e4.color);
    else {
      const t2 = null != e4.material ? e4.material.color : null, o2 = n2(t2);
      if (null == e4.material ? e4.material = new m({ color: o2 }) : e4.material.color = o2, null != r && "outline" in e4 && null != e4.outline?.color && (e4.outline.color = j(e4.outline.color, r)), "marker" in e4 && null != e4.marker) {
        const t3 = n2(e4.marker.color);
        e4.marker.color = t3;
      }
    }
  });
}
function g2(e3, t, r) {
  (t = t ?? e3.color) && (e3.color = j(t, r)), null != r && "outline" in e3 && e3.outline?.color && (e3.outline.color = j(e3.outline.color, r));
}
function L(t, r, o) {
  t && (r || null != o) && (r && (r = new l(r)), S(t) ? k2(t, r, o) : k(t) && g2(t, r, o));
}
async function z(e3, r) {
  const o = e3.symbolLayers;
  o && await a(o, async (e4) => x(e4, r));
}
async function x(e3, t) {
  switch (e3.type) {
    case "extrude":
      v(e3, t);
      break;
    case "icon":
    case "line":
    case "text":
      S2(e3, t);
      break;
    case "path":
      O(e3, t);
      break;
    case "object":
      await E(e3, t);
  }
}
function S2(e3, t) {
  const r = U(t);
  null != r && (e3.size = r);
}
function U(e3) {
  for (const t of e3) if ("number" == typeof t) return t;
  return null;
}
function v(e3, t) {
  const r = t[2];
  "number" == typeof r && (e3.size = r);
}
async function E(e3, t) {
  const { resourceSize: r, symbolSize: o } = await C(e3), n2 = R(t, r, o);
  null != n2 && (e3.width = D(t[0], o[0], r[0], n2), e3.depth = D(t[1], o[1], r[1], n2), e3.height = D(t[2], o[2], r[2], n2));
}
function O(e3, t) {
  const r = R(t, _, [e3.width, void 0, e3.height]);
  null != r && (e3.width = D(t[0], e3.width, 1, r), e3.height = D(t[2], e3.height, 1, r));
}
function R(e3, t, r) {
  for (let o = 0; o < 3; o++) {
    const n2 = e3[o];
    switch (n2) {
      case "symbol-value": {
        const e4 = r[o];
        return null != e4 ? e4 / t[o] : 1;
      }
      case "proportional":
        break;
      default:
        if (n2 && t[o]) return n2 / t[o];
    }
  }
  return null;
}
async function C(e3) {
  const { computeObjectLayerResourceSize: t } = await import("./symbolLayerUtils-QW55MLQD.js"), r = await t(e3, 10), { width: o, height: n2, depth: l3 } = e3, i3 = [o, l3, n2];
  let c2 = 1;
  for (let s = 0; s < 3; s++) {
    const e4 = i3[s];
    if (null != e4) {
      c2 = e4 / r[s];
      break;
    }
  }
  for (let s = 0; s < 3; s++) null == i3[s] && (i3[s] = r[s] * c2);
  return { resourceSize: r, symbolSize: i3 };
}
function D(e3, t, r, o) {
  switch (e3) {
    case "proportional":
      return r * o;
    case "symbol-value":
      return null != t ? t : r;
    default:
      return e3;
  }
}
function J(e3, t) {
  const r = U(t);
  if (null != r) switch (e3.type) {
    case "simple-marker":
      e3.size = r;
      break;
    case "picture-marker": {
      const t2 = e3.width / e3.height;
      t2 > 1 ? (e3.width = r, e3.height = r * t2) : (e3.width = r * t2, e3.height = r);
      break;
    }
    case "simple-line":
      e3.width = r;
      break;
    case "text":
      e3.font.size = r;
  }
}
async function M(e3, t) {
  if (e3 && t) return S(e3) ? z(e3, t) : void (k(e3) && J(e3, t));
}
function N(e3, t, r) {
  if (e3 && null != t) if (S(e3)) {
    const o = e3.symbolLayers;
    o && o.forEach((e4) => {
      if ("object" === e4.type) switch (r) {
        case "tilt":
          e4.tilt = (e4.tilt ?? 0) + t;
          break;
        case "roll":
          e4.roll = (e4.roll ?? 0) + t;
          break;
        default:
          e4.heading = (e4.heading ?? 0) + t;
      }
      "icon" === e4.type && (e4.angle += t);
    });
  } else k(e3) && ("simple-marker" !== e3.type && "picture-marker" !== e3.type && "text" !== e3.type || (e3.angle += t));
}
function q(e3) {
  if (!e3) return null;
  const t = e3.effects.filter((e4) => "bloom" !== e4.type).map((e4) => e4.toJSON());
  return i(t);
}
function A(e3) {
  return null != e3 && "polygon-3d" === e3.type && e3.symbolLayers.some((e4) => "extrude" === e4.type);
}

export {
  u3 as u,
  f,
  y,
  g,
  w,
  b,
  m3 as m,
  h2 as h,
  b2,
  w2,
  L,
  M,
  N,
  q,
  A
};
//# sourceMappingURL=chunk-OFHPFWHF.js.map
