import {
  o
} from "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  C,
  O,
  P,
  S2 as S,
  d,
  s as s3
} from "./chunk-OXSERRAR.js";
import {
  t
} from "./chunk-7HI4VRVW.js";
import {
  s as s2
} from "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  b,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a3
} from "./chunk-JUAD7TJ6.js";
import {
  a as a2
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/geometry/Geometry.js
var c = class extends l {
  constructor(...e2) {
    super(...e2), this.type = null, this.hasM = false, this.hasZ = false, this.spatialReference = f.WGS84;
  }
  get cache() {
    return this.commitProperty("spatialReference"), {};
  }
  get extent() {
    return null;
  }
  readSpatialReference(e2, r4) {
    if (e2 instanceof f) return e2;
    if (null != e2) {
      const t2 = new f();
      return t2.read(e2, r4), t2;
    }
    return e2;
  }
  clone() {
    return console.warn(".clone() is not implemented for " + this.declaredClass), null;
  }
  clearCache() {
    this.notifyChange("cache");
  }
  getCacheValue(e2) {
    return this.cache[e2];
  }
  setCacheValue(e2, r4) {
    this.cache[e2] = r4;
  }
};
r([m()], c.prototype, "type", void 0), r([m({ readOnly: true })], c.prototype, "cache", null), r([m({ readOnly: true })], c.prototype, "extent", null), r([m({ type: Boolean, json: { write: { overridePolicy: (e2) => ({ enabled: e2 }) } } })], c.prototype, "hasM", void 0), r([m({ type: Boolean, json: { write: { overridePolicy: (e2) => ({ enabled: e2 }) } } })], c.prototype, "hasZ", void 0), r([m({ type: f, json: { write: true }, value: f.WGS84 })], c.prototype, "spatialReference", void 0), r([o("spatialReference")], c.prototype, "readSpatialReference", null), c = r([a3("esri.geometry.Geometry")], c);

// node_modules/@arcgis/core/geometry/asserts.js
function o2(o4) {
  if (o4 && "object" == typeof o4 && "type" in o4 && "mesh" === o4.type) throw new s("internal:mesh", "Mesh geometries are not supported for this operation");
}
function r3(e2) {
  e2.forEach(o2);
}

// node_modules/@arcgis/core/geometry/support/webMercatorUtils.js
var l2 = 57.29577951308232;
var u = 0.017453292519943;
function f2(n) {
  return n * l2;
}
function p(n) {
  return n * u;
}
function c2(n) {
  return n / t.radius;
}
function h(n) {
  return Math.PI / 2 - 2 * Math.atan(Math.exp(-n / t.radius));
}
function m2(n) {
  return null != n.wkid || null != n.wkt;
}
var x = [0, 0];
function g(n, t2, e2, i3, r4) {
  const s4 = n, a4 = r4;
  if (a4.spatialReference = e2, "x" in s4 && "x" in a4) [a4.x, a4.y] = t2(s4.x, s4.y, x, i3);
  else if ("xmin" in s4 && "xmin" in a4) [a4.xmin, a4.ymin] = t2(s4.xmin, s4.ymin, x, i3), [a4.xmax, a4.ymax] = t2(s4.xmax, s4.ymax, x, i3);
  else if ("paths" in s4 && "paths" in a4 || "rings" in s4 && "rings" in a4) {
    const n2 = "paths" in s4 ? s4.paths : s4.rings, e3 = [];
    let r5;
    for (let s5 = 0; s5 < n2.length; s5++) {
      const a5 = n2[s5];
      r5 = [], e3.push(r5);
      for (let n3 = 0; n3 < a5.length; n3++) r5.push(t2(a5[n3][0], a5[n3][1], [0, 0], i3)), a5[n3].length > 2 && r5[n3].push(a5[n3][2]), a5[n3].length > 3 && r5[n3].push(a5[n3][3]);
    }
    "paths" in a4 ? a4.paths = e3 : a4.rings = e3;
  } else if ("points" in s4 && "points" in a4) {
    const n2 = s4.points, e3 = [];
    for (let r5 = 0; r5 < n2.length; r5++) e3[r5] = t2(n2[r5][0], n2[r5][1], [0, 0], i3), n2[r5].length > 2 && e3[r5].push(n2[r5][2]), n2[r5].length > 3 && e3[r5].push(n2[r5][3]);
    a4.points = e3;
  }
  return r4;
}
function M(n, t2) {
  const e2 = n && (m2(n) ? n : n.spatialReference), i3 = t2 && (m2(t2) ? t2 : t2.spatialReference);
  return !(n && "type" in n && "mesh" === n.type || t2 && "type" in t2 && "mesh" === t2.type || !e2 || !i3) && (!!s3(i3, e2) || (O(i3) && C(e2) || O(e2) && C(i3)));
}
function y(t2, i3) {
  if (null == t2) return null;
  const r4 = t2.spatialReference, l4 = i3 && (m2(i3) ? i3 : i3.spatialReference);
  return M(r4, l4) ? s3(r4, l4) ? a(t2) : O(l4) ? g(t2, d2, f.WebMercator, false, a(t2)) : C(l4) ? g(t2, R, f.WGS84, false, a(t2)) : null : null;
}
function d2(n, t2, e2 = [0, 0]) {
  t2 > 89.99999 ? t2 = 89.99999 : t2 < -89.99999 && (t2 = -89.99999);
  const r4 = p(t2);
  return e2[0] = p(n) * t.radius, e2[1] = t.halfSemiMajorAxis * Math.log((1 + Math.sin(r4)) / (1 - Math.sin(r4))), e2;
}
function R(n, t2, e2 = [0, 0], s4 = false) {
  if (n === S[0]) e2[0] = -180;
  else if (n === S[1]) e2[0] = 180;
  else {
    const t3 = f2(n / t.radius);
    e2[0] = s4 ? t3 : t3 - 360 * Math.floor((t3 + 180) / 360);
  }
  return e2[1] = f2(Math.PI / 2 - 2 * Math.atan(Math.exp(-t2 / t.radius))), e2;
}
function j(i3, r4 = false, s4 = a(i3)) {
  return o2(i3), o2(s4), g(i3, d2, f.WebMercator, r4, s4);
}
function S2(i3, r4 = false, s4 = a(i3)) {
  return o2(i3), o2(s4), g(i3, R, f.WGS84, r4, s4);
}

// node_modules/@arcgis/core/geometry/support/pointUtils.js
function e(n, r4) {
  const t2 = n.x - r4.x, e2 = n.y - r4.y, u3 = null != n.z && null != r4.z ? n.z - r4.z : 0;
  return Math.sqrt(t2 * t2 + e2 * e2 + u3 * u3);
}
function u2(n) {
  return i2(n, o3)?.[0] ?? null;
}
function l3(n) {
  return i2(n, o3)?.[1] ?? null;
}
function i2({ x: e2, y: u3, spatialReference: l4 }, i3 = [0, 0]) {
  if (l4) {
    if (O(l4)) return R(e2, u3, i3);
    if (P(l4)) return i3[0] = e2, i3[1] = u3, i3;
  }
  return null;
}
var o3 = [0, 0];

// node_modules/@arcgis/core/geometry/Point.js
var g2;
var w = [0, 0];
function x2(e2) {
  return e2 && ("esri.geometry.SpatialReference" === e2.declaredClass || null != e2.wkid);
}
var _ = g2 = class extends c {
  static copy(e2, r4) {
    r4._set("x", e2._get("x")), r4._set("y", e2._get("y")), r4._set("z", e2._get("z")), r4._set("m", e2._get("m"));
    const s4 = e2._get("spatialReference");
    r4._set("spatialReference", b.isFrozen(s4) ? s4 : s4.clone());
  }
  constructor(...e2) {
    super(...e2), this.x = 0, this.y = 0, this.z = void 0, this.m = void 0, this.type = "point";
  }
  normalizeCtorArgs(e2, t2, s4, i3, o4) {
    let l4;
    if (Array.isArray(e2)) l4 = e2, o4 = t2, e2 = l4[0], t2 = l4[1], s4 = l4[2], i3 = l4[3];
    else if (e2 && "object" == typeof e2) {
      if (l4 = e2, e2 = null != l4.x ? l4.x : l4.longitude, t2 = null != l4.y ? l4.y : l4.latitude, s4 = l4.z, i3 = l4.m, (o4 = l4.spatialReference) && "esri.geometry.SpatialReference" !== o4.declaredClass && (o4 = new f(o4)), null != l4.longitude || null != l4.latitude) {
        if (null == l4.longitude) i.getLogger(this).warn(".longitude=", "Latitude was defined without longitude");
        else if (null == l4.latitude) i.getLogger(this).warn(".latitude=", "Longitude was defined without latitude");
        else if (!l4.declaredClass && o4?.isWebMercator) {
          const r4 = d2(l4.longitude, l4.latitude, w);
          e2 = r4[0], t2 = r4[1];
        }
      }
    } else x2(s4) ? (o4 = s4, s4 = null) : x2(i3) && (o4 = i3, i3 = null);
    const a4 = { x: e2, y: t2 };
    return null == a4.x && null != a4.y ? i.getLogger(this).warn(".y=", "Y coordinate was defined without an X coordinate") : null == a4.y && null != a4.x && i.getLogger(this).warn(".x=", "X coordinate was defined without a Y coordinate"), null != o4 && (a4.spatialReference = o4), null != s4 && (a4.z = s4), null != i3 && (a4.m = i3), a4;
  }
  get cache() {
    return this.commitProperty("x"), this.commitProperty("y"), this.commitProperty("z"), this.commitProperty("m"), this.commitProperty("spatialReference"), {};
  }
  get hasM() {
    return void 0 !== this.m;
  }
  set hasM(e2) {
    e2 !== (void 0 !== this._get("m")) && (this._set("m", e2 ? 0 : void 0), this._set("hasM", e2));
  }
  get hasZ() {
    return void 0 !== this.z;
  }
  set hasZ(e2) {
    e2 !== (void 0 !== this._get("z")) && (this._set("z", e2 ? 0 : void 0), this._set("hasZ", e2));
  }
  get latitude() {
    return l3(this);
  }
  set latitude(e2) {
    const { spatialReference: t2, x: r4 } = this;
    null != e2 && t2 && (t2.isWebMercator ? this._set("y", d2(r4, e2, w)[1]) : t2.isGeographic && this._set("y", e2), this._set("latitude", e2));
  }
  get longitude() {
    return u2(this);
  }
  set longitude(e2) {
    const { y: t2, spatialReference: r4 } = this;
    null != e2 && r4 && (r4.isWebMercator ? this._set("x", d2(e2, t2, w)[0]) : r4.isGeographic && this._set("x", e2), this._set("longitude", e2));
  }
  writeX(e2, t2, r4) {
    t2[r4] = isNaN(e2) ? "NaN" : e2;
  }
  readX(e2) {
    return "string" == typeof e2 ? NaN : e2;
  }
  clone() {
    const e2 = new g2();
    return e2.x = this.x, e2.y = this.y, e2.z = this.z, e2.m = this.m, e2.spatialReference = this.spatialReference, e2;
  }
  copy(e2) {
    return g2.copy(e2, this), this;
  }
  equals(e2) {
    if (null == e2) return false;
    const { x: t2, y: r4, z: s4, m: i3, spatialReference: o4 } = this, { z: l4, m: a4 } = e2;
    let { x: n, y: u3, spatialReference: p2 } = e2;
    if (!o4.equals(p2)) if (o4.isWebMercator && p2.isWGS84) [n, u3] = d2(n, u3), p2 = o4;
    else {
      if (!o4.isWGS84 || !p2.isWebMercator) return false;
      [n, u3] = R(n, u3), p2 = o4;
    }
    return t2 === n && r4 === u3 && s4 === l4 && i3 === a4 && o4.wkid === p2.wkid;
  }
  offset(e2, t2, r4) {
    return this.x += e2, this.y += t2, null != r4 && (this.z = (this.z ?? 0) + r4), this;
  }
  normalize() {
    if (!this.spatialReference) return this;
    const e2 = d(this.spatialReference);
    if (!e2) return this;
    let t2 = this.x;
    const [r4, s4] = e2.valid, i3 = 2 * s4;
    let o4;
    return t2 > s4 ? (o4 = Math.ceil(Math.abs(t2 - s4) / i3), t2 -= o4 * i3) : t2 < r4 && (o4 = Math.ceil(Math.abs(t2 - r4) / i3), t2 += o4 * i3), this._set("x", t2), this;
  }
  distance(e2) {
    return e(this, e2);
  }
  toArray() {
    const e2 = this.hasZ, t2 = this.hasM;
    return e2 && t2 ? [this.x, this.y, this.z, this.m] : e2 ? [this.x, this.y, this.z] : t2 ? [this.x, this.y, this.m] : [this.x, this.y];
  }
  toJSON(e2) {
    return this.write({}, e2);
  }
};
r([m({ readOnly: true })], _.prototype, "cache", null), r([m({ type: Boolean, json: { read: false, write: { enabled: false, overridePolicy: null } } })], _.prototype, "hasM", null), r([m({ type: Boolean, json: { read: false, write: { enabled: false, overridePolicy: null } } })], _.prototype, "hasZ", null), r([m({ type: Number })], _.prototype, "latitude", null), r([m({ type: Number })], _.prototype, "longitude", null), r([m({ type: Number, json: { type: [Number, String], write: { isRequired: true, allowNull: true } } }), s2((e2) => isNaN(e2) ? e2 : a2(e2))], _.prototype, "x", void 0), r([r2("x")], _.prototype, "writeX", null), r([o("x")], _.prototype, "readX", null), r([m({ type: Number, json: { write: true } })], _.prototype, "y", void 0), r([m({ type: Number, json: { write: { overridePolicy() {
  return { enabled: this.hasZ };
} } } })], _.prototype, "z", void 0), r([m({ type: Number, json: { write: { overridePolicy() {
  return { enabled: this.hasM };
} } } })], _.prototype, "m", void 0), _ = g2 = r([a3("esri.geometry.Point")], _), _.prototype.toJSON.isDefaultToJSON = true;

export {
  c,
  o2 as o,
  r3 as r,
  c2,
  h,
  M,
  y,
  d2 as d,
  R,
  j,
  S2 as S,
  e,
  i2 as i,
  _
};
//# sourceMappingURL=chunk-Q6XRAGMA.js.map
