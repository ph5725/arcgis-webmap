import {
  c,
  d,
  e,
  f,
  l as l2,
  m,
  p,
  t as t2
} from "./chunk-XDCUZFJX.js";
import {
  i,
  l,
  r,
  t
} from "./chunk-6KFXWKZZ.js";
import {
  s
} from "./chunk-XWG6QGFK.js";

// node_modules/@arcgis/core/layers/effects/parser.js
var h = class extends SyntaxError {
  constructor(e2, t3, n, r2) {
    super(e2), this.expected = t3, this.found = n, this.location = r2, this.name = "SyntaxError";
  }
  format(e2) {
    let t3 = "Error: " + this.message;
    if (this.location) {
      let n = null;
      const r2 = e2.find((e3) => e3.source === this.location.source);
      r2 && (n = r2.text.split(/\r\n|\n|\r/g));
      const u = this.location.start, o = this.location.source && "function" == typeof this.location.source.offset ? this.location.source.offset(u) : u, c2 = this.location.source + ":" + o.line + ":" + o.column;
      if (n) {
        const e3 = this.location.end, r3 = "".padEnd(o.line.toString().length, " "), a = n[u.line - 1], i2 = (u.line === e3.line ? e3.column : a.length + 1) - u.column || 1;
        t3 += "\n --> " + c2 + "\n" + r3 + " |\n" + o.line + " | " + a + "\n" + r3 + " | " + "".padEnd(u.column - 1, " ") + "".padEnd(i2, "^");
      } else t3 += "\n at " + c2;
    }
    return t3;
  }
  static buildMessage(e2, t3) {
    function n(e3) {
      return e3.codePointAt(0).toString(16).toUpperCase();
    }
    const r2 = Object.prototype.hasOwnProperty.call(RegExp.prototype, "unicode") ? new RegExp("[\\p{C}\\p{Mn}\\p{Mc}]", "gu") : null;
    function u(e3) {
      return r2 ? e3.replace(r2, (e4) => "\\u{" + n(e4) + "}") : e3;
    }
    function o(e3) {
      return u(e3.replace(/\\/g, "\\\\").replace(/"/g, '\\"').replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, (e4) => "\\x0" + n(e4)).replace(/[\x10-\x1F\x7F-\x9F]/g, (e4) => "\\x" + n(e4)));
    }
    function c2(e3) {
      return u(e3.replace(/\\/g, "\\\\").replace(/\]/g, "\\]").replace(/\^/g, "\\^").replace(/-/g, "\\-").replace(/\0/g, "\\0").replace(/\t/g, "\\t").replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/[\x00-\x0F]/g, (e4) => "\\x0" + n(e4)).replace(/[\x10-\x1F\x7F-\x9F]/g, (e4) => "\\x" + n(e4)));
    }
    const a = { literal: (e3) => '"' + o(e3.text) + '"', class(e3) {
      const t4 = e3.parts.map((e4) => Array.isArray(e4) ? c2(e4[0]) + "-" + c2(e4[1]) : c2(e4));
      return "[" + (e3.inverted ? "^" : "") + t4.join("") + "]" + (e3.unicode ? "u" : "");
    }, any: () => "any character", end: () => "end of input", other: (e3) => e3.description };
    function i2(e3) {
      return a[e3.type](e3);
    }
    function l3(e3) {
      const t4 = e3.map(i2);
      if (t4.sort(), t4.length > 0) {
        let e4 = 1;
        for (let n2 = 1; n2 < t4.length; n2++) t4[n2 - 1] !== t4[n2] && (t4[e4] = t4[n2], e4++);
        t4.length = e4;
      }
      switch (t4.length) {
        case 1:
          return t4[0];
        case 2:
          return t4[0] + " or " + t4[1];
        default:
          return t4.slice(0, -1).join(", ") + ", or " + t4[t4.length - 1];
      }
    }
    function s2(e3) {
      return e3 ? '"' + o(e3) + '"' : "end of input";
    }
    return "Expected " + l3(e2) + " but " + s2(t3) + " found.";
  }
};
function m2(e2, t3) {
  const n = {}, r2 = (t3 = void 0 !== t3 ? t3 : {}).grammarSource, u = { start: Qe };
  let o = Qe;
  const c2 = "none", a = ")", i2 = ",", l3 = "(", s2 = "%", f2 = "px", p2 = "cm", m3 = "mm", g2 = "in", d3 = "pt", y2 = "pc", w2 = "deg", x2 = "rad", v2 = "grad", A2 = "turn", b2 = "#", $2 = ".", E2 = "e", F2 = /^[ \t\n\r]/, C2 = /^[a-z\-]/, j2 = /^[0-9a-fA-F]/, P2 = /^[+\-]/, R2 = /^[0-9]/, S2 = Be("none"), q2 = Ue("none", false), M2 = Ue(")", false), z2 = Ue(",", false), I2 = De([" ", "	", "\n", "\r"], false, false, false), O2 = Be("function"), k2 = Ue("(", false), N2 = Be("identifier"), T2 = De([["a", "z"], "-"], false, false, false), U2 = Be("percentage"), D2 = Ue("%", false), L2 = Be("length"), B = Ue("px", false), G = Ue("cm", false), H = Ue("mm", false), J = Ue("in", false), K = Ue("pt", false), Q = Ue("pc", false), V = Be("angle"), W = Ue("deg", false), X = Ue("rad", false), Y = Ue("grad", false), Z = Ue("turn", false), _ = Be("number"), ee = Be("color"), te = Ue("#", false), ne = De([["0", "9"], ["a", "f"], ["A", "F"]], false, false, false), re = De(["+", "-"], false, false, false), ue = De([["0", "9"]], false, false, false), oe = Ue(".", false), ce = Ue("e", false);
  function ae() {
    return [];
  }
  function ie(e3, t4) {
    return { type: "function", name: e3, parameters: t4 || [] };
  }
  function le(e3, t4) {
    return t4.length > 0 ? lt(e3, t4, 3) : [e3];
  }
  function se(e3) {
    return { type: "quantity", value: e3.value, unit: e3.unit };
  }
  function fe(e3) {
    return { type: "color", colorType: e3.type, value: e3.value };
  }
  function pe(e3) {
    return e3;
  }
  function he() {
    return Ne();
  }
  function me(e3) {
    return { value: e3, unit: "%" };
  }
  function ge(e3) {
    return { value: e3, unit: "px" };
  }
  function de(e3) {
    return { value: e3, unit: "cm" };
  }
  function ye(e3) {
    return { value: e3, unit: "mm" };
  }
  function we(e3) {
    return { value: e3, unit: "in" };
  }
  function xe(e3) {
    return { value: e3, unit: "pt" };
  }
  function ve(e3) {
    return { value: e3, unit: "pc" };
  }
  function Ae(e3) {
    return { value: e3, unit: "deg" };
  }
  function be(e3) {
    return { value: e3, unit: "rad" };
  }
  function $e(e3) {
    return { value: e3, unit: "grad" };
  }
  function Ee(e3) {
    return { value: e3, unit: "turn" };
  }
  function Fe(e3) {
    return { value: e3, unit: null };
  }
  function Ce() {
    return { type: "hex", value: Ne() };
  }
  function je(e3) {
    return { type: "function", value: e3 };
  }
  function Pe() {
    return { type: "named", value: Ne() };
  }
  function Re() {
    return parseFloat(Ne());
  }
  let Se = 0 | t3.peg$currPos, qe = Se;
  const Me = [{ line: 1, column: 1 }];
  let ze, Ie = Se, Oe = t3.peg$maxFailExpected || [], ke = 0 | t3.peg$silentFails;
  if (t3.startRule) {
    if (!(t3.startRule in u)) throw new Error(`Can't start parsing from rule "` + t3.startRule + '".');
    o = u[t3.startRule];
  }
  function Ne() {
    return e2.substring(qe, Se);
  }
  function Te(t4 = Se) {
    const n2 = e2.codePointAt(t4);
    return void 0 === n2 ? "" : String.fromCodePoint(n2);
  }
  function Ue(e3, t4) {
    return { type: "literal", text: e3, ignoreCase: t4 };
  }
  function De(e3, t4, n2, r3) {
    return { type: "class", parts: e3, inverted: t4, ignoreCase: n2, unicode: r3 };
  }
  function Le() {
    return { type: "end" };
  }
  function Be(e3) {
    return { type: "other", description: e3 };
  }
  function Ge(t4) {
    let n2, r3 = Me[t4];
    if (r3) return r3;
    if (t4 >= Me.length) n2 = Me.length - 1;
    else for (n2 = t4; !Me[--n2]; ) ;
    for (r3 = Me[n2], r3 = { line: r3.line, column: r3.column }; n2 < t4; ) 10 === e2.charCodeAt(n2) ? (r3.line++, r3.column = 1) : r3.column++, n2++;
    return Me[t4] = r3, r3;
  }
  function He(e3, t4, n2) {
    const u2 = Ge(e3), o2 = Ge(t4);
    return { source: r2, start: { offset: e3, line: u2.line, column: u2.column }, end: { offset: t4, line: o2.line, column: o2.column } };
  }
  function Je(e3) {
    Se < Ie || (Se > Ie && (Ie = Se, Oe = []), Oe.push(e3));
  }
  function Ke(e3, t4, n2) {
    return new h(h.buildMessage(e3, t4), e3, t4, n2);
  }
  function Qe() {
    let e3;
    return e3 = Ve(), e3 === n && (e3 = We()), e3;
  }
  function Ve() {
    let t4, r3;
    return ke++, t4 = Se, _e(), e2.substr(Se, 4) === c2 ? (r3 = c2, Se += 4) : (r3 = n, 0 === ke && Je(q2)), r3 !== n ? (_e(), qe = t4, t4 = ae()) : (Se = t4, t4 = n), ke--, t4 === n && 0 === ke && Je(S2), t4;
  }
  function We() {
    let e3, t4;
    if (e3 = [], t4 = Xe(), t4 !== n) for (; t4 !== n; ) e3.push(t4), t4 = Xe();
    else e3 = n;
    return e3;
  }
  function Xe() {
    let t4, r3, u2, o2;
    return t4 = Se, _e(), r3 = et(), r3 !== n ? (_e(), u2 = Ye(), u2 === n && (u2 = null), _e(), 41 === e2.charCodeAt(Se) ? (o2 = a, Se++) : (o2 = n, 0 === ke && Je(M2)), o2 !== n ? (_e(), qe = t4, t4 = ie(r3, u2)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4;
  }
  function Ye() {
    let t4, r3, u2, o2, c3, a2, l4, s3;
    if (t4 = Se, r3 = Ze(), r3 !== n) {
      for (u2 = [], o2 = Se, c3 = _e(), 44 === e2.charCodeAt(Se) ? (a2 = i2, Se++) : (a2 = n, 0 === ke && Je(z2)), a2 === n && (a2 = null), l4 = _e(), s3 = Ze(), s3 !== n ? (c3 = [c3, a2, l4, s3], o2 = c3) : (Se = o2, o2 = n); o2 !== n; ) u2.push(o2), o2 = Se, c3 = _e(), 44 === e2.charCodeAt(Se) ? (a2 = i2, Se++) : (a2 = n, 0 === ke && Je(z2)), a2 === n && (a2 = null), l4 = _e(), s3 = Ze(), s3 !== n ? (c3 = [c3, a2, l4, s3], o2 = c3) : (Se = o2, o2 = n);
      qe = t4, t4 = le(r3, u2);
    } else Se = t4, t4 = n;
    return t4;
  }
  function Ze() {
    let e3, t4;
    return e3 = Se, t4 = nt(), t4 === n && (t4 = rt(), t4 === n && (t4 = ut(), t4 === n && (t4 = ot()))), t4 !== n && (qe = e3, t4 = se(t4)), e3 = t4, e3 === n && (e3 = Se, t4 = ct(), t4 !== n && (qe = e3, t4 = fe(t4)), e3 = t4), e3;
  }
  function _e() {
    let t4, r3;
    for (ke++, t4 = [], r3 = e2.charAt(Se), F2.test(r3) ? Se++ : (r3 = n, 0 === ke && Je(I2)); r3 !== n; ) t4.push(r3), r3 = e2.charAt(Se), F2.test(r3) ? Se++ : (r3 = n, 0 === ke && Je(I2));
    return ke--, t4;
  }
  function et() {
    let t4, r3, u2;
    return ke++, t4 = Se, r3 = tt(), r3 !== n ? (40 === e2.charCodeAt(Se) ? (u2 = l3, Se++) : (u2 = n, 0 === ke && Je(k2)), u2 !== n ? (qe = t4, t4 = pe(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), ke--, t4 === n && (r3 = n, 0 === ke && Je(O2)), t4;
  }
  function tt() {
    let t4, r3, u2;
    if (ke++, t4 = Se, r3 = [], u2 = e2.charAt(Se), C2.test(u2) ? Se++ : (u2 = n, 0 === ke && Je(T2)), u2 !== n) for (; u2 !== n; ) r3.push(u2), u2 = e2.charAt(Se), C2.test(u2) ? Se++ : (u2 = n, 0 === ke && Je(T2));
    else r3 = n;
    return r3 !== n && (qe = t4, r3 = he()), t4 = r3, ke--, t4 === n && (r3 = n, 0 === ke && Je(N2)), t4;
  }
  function nt() {
    let t4, r3, u2;
    return ke++, t4 = Se, _e(), r3 = at(), r3 !== n ? (37 === e2.charCodeAt(Se) ? (u2 = s2, Se++) : (u2 = n, 0 === ke && Je(D2)), u2 !== n ? (qe = t4, t4 = me(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), ke--, t4 === n && 0 === ke && Je(U2), t4;
  }
  function rt() {
    let t4, r3, u2;
    return ke++, t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === f2 ? (u2 = f2, Se += 2) : (u2 = n, 0 === ke && Je(B)), u2 !== n ? (qe = t4, t4 = ge(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === p2 ? (u2 = p2, Se += 2) : (u2 = n, 0 === ke && Je(G)), u2 !== n ? (qe = t4, t4 = de(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === m3 ? (u2 = m3, Se += 2) : (u2 = n, 0 === ke && Je(H)), u2 !== n ? (qe = t4, t4 = ye(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === g2 ? (u2 = g2, Se += 2) : (u2 = n, 0 === ke && Je(J)), u2 !== n ? (qe = t4, t4 = we(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === d3 ? (u2 = d3, Se += 2) : (u2 = n, 0 === ke && Je(K)), u2 !== n ? (qe = t4, t4 = xe(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, _e(), r3 = at(), r3 !== n ? (e2.substr(Se, 2) === y2 ? (u2 = y2, Se += 2) : (u2 = n, 0 === ke && Je(Q)), u2 !== n ? (qe = t4, t4 = ve(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n)))))), ke--, t4 === n && 0 === ke && Je(L2), t4;
  }
  function ut() {
    let t4, r3, u2;
    return ke++, t4 = Se, r3 = at(), r3 !== n ? (e2.substr(Se, 3) === w2 ? (u2 = w2, Se += 3) : (u2 = n, 0 === ke && Je(W)), u2 !== n ? (qe = t4, t4 = Ae(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, r3 = at(), r3 !== n ? (e2.substr(Se, 3) === x2 ? (u2 = x2, Se += 3) : (u2 = n, 0 === ke && Je(X)), u2 !== n ? (qe = t4, t4 = be(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, r3 = at(), r3 !== n ? (e2.substr(Se, 4) === v2 ? (u2 = v2, Se += 4) : (u2 = n, 0 === ke && Je(Y)), u2 !== n ? (qe = t4, t4 = $e(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n), t4 === n && (t4 = Se, r3 = at(), r3 !== n ? (e2.substr(Se, 4) === A2 ? (u2 = A2, Se += 4) : (u2 = n, 0 === ke && Je(Z)), u2 !== n ? (qe = t4, t4 = Ee(r3)) : (Se = t4, t4 = n)) : (Se = t4, t4 = n)))), ke--, t4 === n && (r3 = n, 0 === ke && Je(V)), t4;
  }
  function ot() {
    let e3, t4;
    return ke++, e3 = Se, _e(), t4 = at(), t4 !== n ? (qe = e3, e3 = Fe(t4)) : (Se = e3, e3 = n), ke--, e3 === n && 0 === ke && Je(_), e3;
  }
  function ct() {
    let t4, r3, u2, o2;
    if (ke++, t4 = Se, 35 === e2.charCodeAt(Se) ? (r3 = b2, Se++) : (r3 = n, 0 === ke && Je(te)), r3 !== n) {
      if (u2 = [], o2 = e2.charAt(Se), j2.test(o2) ? Se++ : (o2 = n, 0 === ke && Je(ne)), o2 !== n) for (; o2 !== n; ) u2.push(o2), o2 = e2.charAt(Se), j2.test(o2) ? Se++ : (o2 = n, 0 === ke && Je(ne));
      else u2 = n;
      u2 !== n ? (qe = t4, t4 = Ce()) : (Se = t4, t4 = n);
    } else Se = t4, t4 = n;
    return t4 === n && (t4 = Se, r3 = Xe(), r3 !== n && (qe = t4, r3 = je(r3)), t4 = r3, t4 === n && (t4 = Se, r3 = tt(), r3 !== n && (qe = t4, r3 = Pe()), t4 = r3)), ke--, t4 === n && (r3 = n, 0 === ke && Je(ee)), t4;
  }
  function at() {
    let t4, r3, u2, o2, c3, a2, i3, l4;
    for (t4 = Se, r3 = e2.charAt(Se), P2.test(r3) ? Se++ : (r3 = n, 0 === ke && Je(re)), r3 === n && (r3 = null), u2 = Se, o2 = [], c3 = e2.charAt(Se), R2.test(c3) ? Se++ : (c3 = n, 0 === ke && Je(ue)); c3 !== n; ) o2.push(c3), c3 = e2.charAt(Se), R2.test(c3) ? Se++ : (c3 = n, 0 === ke && Je(ue));
    if (46 === e2.charCodeAt(Se) ? (c3 = $2, Se++) : (c3 = n, 0 === ke && Je(oe)), c3 !== n) {
      if (a2 = [], i3 = e2.charAt(Se), R2.test(i3) ? Se++ : (i3 = n, 0 === ke && Je(ue)), i3 !== n) for (; i3 !== n; ) a2.push(i3), i3 = e2.charAt(Se), R2.test(i3) ? Se++ : (i3 = n, 0 === ke && Je(ue));
      else a2 = n;
      a2 !== n ? (o2 = [o2, c3, a2], u2 = o2) : (Se = u2, u2 = n);
    } else Se = u2, u2 = n;
    if (u2 === n) if (u2 = [], o2 = e2.charAt(Se), R2.test(o2) ? Se++ : (o2 = n, 0 === ke && Je(ue)), o2 !== n) for (; o2 !== n; ) u2.push(o2), o2 = e2.charAt(Se), R2.test(o2) ? Se++ : (o2 = n, 0 === ke && Je(ue));
    else u2 = n;
    if (u2 !== n) {
      if (o2 = Se, 101 === e2.charCodeAt(Se) ? (c3 = E2, Se++) : (c3 = n, 0 === ke && Je(ce)), c3 !== n) {
        if (a2 = e2.charAt(Se), P2.test(a2) ? Se++ : (a2 = n, 0 === ke && Je(re)), a2 === n && (a2 = null), i3 = [], l4 = e2.charAt(Se), R2.test(l4) ? Se++ : (l4 = n, 0 === ke && Je(ue)), l4 !== n) for (; l4 !== n; ) i3.push(l4), l4 = e2.charAt(Se), R2.test(l4) ? Se++ : (l4 = n, 0 === ke && Je(ue));
        else i3 = n;
        i3 !== n ? (c3 = [c3, a2, i3], o2 = c3) : (Se = o2, o2 = n);
      } else Se = o2, o2 = n;
      o2 === n && (o2 = null), qe = t4, t4 = Re();
    } else Se = t4, t4 = n;
    return t4;
  }
  function it(e3, t4) {
    return e3.map(function(e4) {
      return e4[t4];
    });
  }
  function lt(e3, t4, n2) {
    return [e3].concat(it(t4, n2));
  }
  ze = o();
  const st = ze !== n && Se === e2.length;
  function ft() {
    throw ze !== n && Se < e2.length && Je(Le()), Ke(Oe, Ie < e2.length ? Te(Ie) : null, Ie < e2.length ? He(Ie, Ie + 1) : He(Ie, Ie));
  }
  return t3.peg$library ? { peg$result: ze, peg$currPos: Se, peg$FAILED: n, peg$maxFailExpected: Oe, peg$maxFailPos: Ie, peg$success: st, peg$throw: st ? void 0 : ft } : st ? ze : void ft();
}
function g(e2) {
  if (!e2 || 0 === e2.length) return null;
  if ("string" == typeof e2) {
    const t4 = d2(e2);
    return t4 && 0 !== t4.length ? t4 : null;
  }
  const t3 = e2.map((e3) => {
    if (!Number.isFinite(e3.scale) || e3.scale <= 0) throw new s("effect:invalid-scale", "scale must be finite and greater than 0", { stop: e3 });
    return { scale: e3.scale, effects: d2(e3.value) };
  });
  t3.sort((e3, t4) => t4.effects.length - e3.effects.length);
  for (let n = 0; n < t3.length - 1; n++) {
    if (!t2(t3[n].effects, t3[n + 1].effects)) throw new s("effect:interpolation-impossible", "Cannot interpolate by scale between 2 lists of mixed effects", { a: t3[n].effects, b: t3[n + 1].effects });
    e(t3[n].effects, t3[n + 1].effects);
  }
  return t3.sort((e3, t4) => t4.scale - e3.scale), t3;
}
function d2(e2) {
  let t3;
  if (!e2) return [];
  try {
    t3 = m2(e2);
  } catch (n) {
    throw new s("effect:invalid-syntax", "Invalid effect syntax", { value: e2, error: n });
  }
  return t3.map((e3) => y(e3));
}
function y(e2) {
  try {
    switch (e2.name) {
      case "grayscale":
      case "sepia":
      case "saturate":
      case "invert":
      case "brightness":
      case "contrast":
        return w(e2);
      case "opacity":
        return x(e2);
      case "hue-rotate":
        return v(e2);
      case "blur":
        return A(e2);
      case "drop-shadow":
        return b(e2);
      case "bloom":
        return $(e2);
    }
  } catch (t3) {
    throw t3.details.filter = e2, t3;
  }
  throw new s("effect:unknown-effect", `Effect '${e2.name}' is not supported`, { effect: e2 });
}
function w(e2) {
  let t3 = 1;
  return E(e2.parameters, 1), 1 === e2.parameters.length && (t3 = z(e2.parameters[0])), new p(e2.name, t3);
}
function x(e2) {
  let t3 = 1;
  return E(e2.parameters, 1), 1 === e2.parameters.length && (t3 = z(e2.parameters[0])), new f(t3);
}
function v(e2) {
  let t3 = 0;
  return E(e2.parameters, 1), 1 === e2.parameters.length && (t3 = O(e2.parameters[0])), new m(t3);
}
function A(e2) {
  let t3 = 0;
  return E(e2.parameters, 1), 1 === e2.parameters.length && (t3 = k(e2.parameters[0]), C(t3, e2.parameters[0])), new l2(t3);
}
function b(e2) {
  const t3 = [];
  let n = null;
  for (const r2 of e2.parameters) if ("color" === r2.type) {
    if (t3.length && Object.freeze(t3), n) throw new s("effect:type-error", "Accepts only one color", {});
    n = N(r2);
  } else {
    const e3 = k(r2);
    if (Object.isFrozen(t3)) throw new s("effect:type-error", "<length> parameters not consecutive", { lengths: t3 });
    t3.push(e3), 3 === t3.length && C(e3, r2);
  }
  if (t3.length < 2 || t3.length > 3) throw new s("effect:type-error", `Expected <length>{2,3}, Actual: <length>{${t3.length}}`, { lengths: t3 });
  return new d(t3[0], t3[1], t3[2] || 0, n || T("black"));
}
function $(e2) {
  let t3 = 1, n = 0, r2 = 0;
  return E(e2.parameters, 3), e2.parameters[0] && (t3 = z(e2.parameters[0])), e2.parameters[1] && (n = k(e2.parameters[1]), C(n, e2.parameters[1])), e2.parameters[2] && (r2 = z(e2.parameters[2])), new c(t3, n, r2);
}
function E(e2, t3) {
  if (e2.length > t3) throw new s("effect:type-error", `Function supports up to ${t3} parameters, Actual: ${e2.length}`, { parameters: e2 });
}
function F(e2) {
  if ("color" === e2.type) return "<color>";
  if (e2.unit) {
    if (e2.unit in q) return "<length>";
    if (e2.unit in R) return "<angle>";
    if ("%" === e2.unit) return "<percentage>";
  }
  return "<double>";
}
function C(e2, t3) {
  if (e2 < 0) throw new s("effect:type-error", `Negative values are not allowed, Actual: ${e2}`, { term: t3 });
}
function j(e2) {
  if ("quantity" !== e2.type || null !== e2.unit) throw new s("effect:type-error", `Expected <double>, Actual: ${F(e2)}`, { term: e2 });
}
function P(e2) {
  if ("quantity" !== e2.type || null !== e2.unit && "%" !== e2.unit) throw new s("effect:type-error", `Expected <double> or <percentage>, Actual: ${F(e2)}`, { term: e2 });
}
var R = { deg: 1, grad: 0.9, rad: 180 / Math.PI, turn: 360 };
function S(e2) {
  if ("quantity" !== e2.type || !(0 === e2.value && null === e2.unit || e2.unit && null != R[e2.unit])) throw new s("effect:type-error", `Expected <angle>, Actual: ${F(e2)}`, { term: e2 });
}
var q = { px: 1, cm: 96 / 2.54, mm: 96 / 2.54 / 10, in: 96, pc: 16, pt: 96 / 72 };
function M(e2) {
  if ("quantity" !== e2.type || !(0 === e2.value && null === e2.unit || e2.unit && null != q[e2.unit])) throw new s("effect:type-error", `Expected <length>, Actual: ${F(e2)}`, { term: e2 });
}
function z(e2) {
  P(e2);
  const t3 = e2.value;
  return C(t3, e2), "%" === e2.unit ? 0.01 * t3 : t3;
}
function I(e2) {
  return j(e2), C(e2.value, e2), e2.value;
}
function O(e2) {
  return S(e2), e2.value * R[e2.unit] || 0;
}
function k(e2) {
  return M(e2), e2.value * q[e2.unit] || 0;
}
function N(t3) {
  switch (t3.colorType) {
    case "hex":
      return i(t3.value);
    case "named":
      return T(t3.value);
    case "function":
      return L(t3.value);
  }
}
function T(e2) {
  if (!r(e2)) throw new s("effect:unknown-color", `color '${e2}' isn't valid`, { namedColor: e2 });
  return l(e2);
}
var U = /^rgba?/i;
var D = /^hsla?/i;
function L(e2) {
  if (E(e2.parameters, 4), U.test(e2.name)) return [z(e2.parameters[0]), z(e2.parameters[1]), z(e2.parameters[2]), e2.parameters[3] ? z(e2.parameters[3]) : 1];
  if (D.test(e2.name)) return t(I(e2.parameters[0]), z(e2.parameters[1]), z(e2.parameters[2]), e2.parameters[3] ? z(e2.parameters[3]) : 1);
  throw new s("effect:syntax-error", `Invalid color function '${e2.name}'`, { colorFunction: e2 });
}

export {
  g
};
//# sourceMappingURL=chunk-RGFH75DR.js.map
