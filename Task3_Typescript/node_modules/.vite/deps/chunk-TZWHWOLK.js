import {
  p as p3
} from "./chunk-623AYJP2.js";
import {
  B,
  a as a5,
  a3 as a6,
  e2 as e,
  i2 as i3,
  m as m7,
  n,
  n2,
  o as o4,
  r3 as r5,
  t2 as t,
  u as u4
} from "./chunk-U5MPARPW.js";
import {
  a2 as a7,
  c as c3,
  f2 as f3,
  p2 as p4,
  s as s5,
  s2 as s6
} from "./chunk-NXHGFG67.js";
import {
  r as r4
} from "./chunk-3NJEC7QC.js";
import {
  M,
  N as N2
} from "./chunk-OFHPFWHF.js";
import {
  R
} from "./chunk-X3UT6DT7.js";
import {
  j,
  l as l4
} from "./chunk-M2UZRY7C.js";
import {
  $,
  p as p2
} from "./chunk-VLPG2W66.js";
import {
  f as f2,
  g,
  s as s4,
  v as v2
} from "./chunk-GH7GZNY6.js";
import {
  a as a4,
  m as m6,
  p
} from "./chunk-D443BZKU.js";
import {
  u as u3
} from "./chunk-7DFHXN7Z.js";
import {
  N,
  h
} from "./chunk-7CUBIFKN.js";
import {
  p as p5
} from "./chunk-ZXGBNDYM.js";
import {
  m as m3
} from "./chunk-6TS2ZJL4.js";
import {
  u
} from "./chunk-6QTMK7BB.js";
import {
  d
} from "./chunk-2IMSGFJN.js";
import {
  a as a3
} from "./chunk-KUP5BM5G.js";
import {
  m as m5,
  u as u2
} from "./chunk-HNQNVI5C.js";
import {
  m as m4
} from "./chunk-G34OBNLT.js";
import {
  l as l3
} from "./chunk-KE3WBZYL.js";
import {
  r as r3
} from "./chunk-EOMIFMDH.js";
import {
  o as o3
} from "./chunk-MUKDJQWB.js";
import {
  f,
  v
} from "./chunk-N3A2BVTW.js";
import {
  l as l2
} from "./chunk-IGYEHOTB.js";
import {
  P,
  m as m2
} from "./chunk-52HWRRRQ.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _,
  c as c2
} from "./chunk-Q6XRAGMA.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  s as s3
} from "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  c,
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2,
  s as s2
} from "./chunk-JUAD7TJ6.js";
import {
  x
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i as i2,
  o as o2
} from "./chunk-3NBBZ43U.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/layers/support/RasterFunctionInfo.js
var i4 = class extends l {
  constructor() {
    super(...arguments), this.pixelType = "unknown";
  }
};
r([m({ type: String, json: { write: { isRequired: true } } })], i4.prototype, "name", void 0), r([m({ type: String, json: { write: true } })], i4.prototype, "description", void 0), r([m({ type: x, json: { type: x, write: true, name: "_object_id" } })], i4.prototype, "id", void 0), r([m({ type: String, json: { type: n.jsonValues, read: n.read, write: { writer: n.write, isRequired: true } } })], i4.prototype, "pixelType", void 0), r([m({ type: String, json: { write: { isRequired: true } } })], i4.prototype, "type", void 0), i4 = r([a2("esri.layers.support.RasterFunctionInfo")], i4);
var n3 = i4;

// node_modules/@arcgis/core/layers/support/RasterFunctionVariable.js
var p6 = class extends l {
  constructor() {
    super(...arguments), this.isDataset = false, this.isPublic = false, this.type = "RasterFunctionVariable";
  }
};
r([m({ type: String, json: { write: true } })], p6.prototype, "name", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], p6.prototype, "id", void 0), r([m({ type: Boolean, json: { write: true } })], p6.prototype, "isDataset", void 0), r([m({ type: Boolean, json: { write: true } })], p6.prototype, "isPublic", void 0), r([m({ json: { write: true } })], p6.prototype, "value", void 0), r([m({ type: String, json: { write: true } })], p6.prototype, "type", void 0), p6 = r([a2("esri.layers.support.RasterFunctionVariable")], p6);
var i5 = p6;

// node_modules/@arcgis/core/layers/support/RasterFunctionProperties.js
var i6 = { key: "type", base: null, typeMap: { RasterFunctionVariable: i5 } };
var a8 = class extends l {
};
r([m({ types: i6, json: { types: i6, name: "MatchVariable" } })], a8.prototype, "matchVariable", void 0), r([m({ types: i6, json: { types: i6, name: "UnionDimension" } })], a8.prototype, "unionDimension", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], a8.prototype, "id", void 0), r([m({ type: String, json: { write: true } })], a8.prototype, "type", void 0), a8 = r([a2("esri.layers.support.RasterFunctionProperties")], a8);
var n4 = a8;

// node_modules/@arcgis/core/layers/support/RasterFunctionTemplate.js
var y = new o2({ 0: "mosaic", 1: "item", 2: "item-group" }, { useNumericKeys: true });
var a9 = class extends l {
  constructor() {
    super(...arguments), this.description = "", this.functionType = "mosaic", this.type = "RasterFunctionTemplate";
  }
};
r([m({ type: [String], json: { write: true } })], a9.prototype, "aliases", void 0), r([m({ type: Object, json: { write: { isRequired: true } } })], a9.prototype, "arguments", void 0), r([m({ type: String, json: { write: { isRequired: true } } })], a9.prototype, "description", void 0), r([m({ type: n3, json: { write: { isRequired: true }, name: "function" } })], a9.prototype, "functionInfo", void 0), r([m({ type: y.apiValues, json: { type: [0, 1, 2], read: y.read, write: { writer: y.write, isRequired: true } } })], a9.prototype, "functionType", void 0), r([m({ type: String, json: { write: true } })], a9.prototype, "group", void 0), r([m({ type: String, json: { write: true } })], a9.prototype, "help", void 0), r([m({ type: Number, json: { type: x, write: true, name: "_object_id" } })], a9.prototype, "id", void 0), r([m({ type: String, json: { write: { isRequired: true } } })], a9.prototype, "name", void 0), r([m({ type: String, json: { write: true, name: "definition" } })], a9.prototype, "queryDefinition", void 0), r([m({ type: String, json: { write: true } })], a9.prototype, "tag", void 0), r([m({ type: n4, json: { write: true } })], a9.prototype, "properties", void 0), r([m({ type: String, json: { write: true } })], a9.prototype, "thumbnail", void 0), r([m({ type: String, json: { write: true } })], a9.prototype, "thumbnailEx", void 0), r([m({ json: { type: ["RasterFunctionTemplate"], write: true } })], a9.prototype, "type", void 0), a9 = r([a2("esri.layers.support.RasterFunctionTemplate")], a9);

// node_modules/@arcgis/core/layers/support/RasterFunction.js
var c4;
var p7 = /* @__PURE__ */ new Set(["raster", "raster2", "dem", "fillraster"]);
var m8 = /* @__PURE__ */ new Set(["rasters"]);
var f4 = (t3) => t3?.rasterFunction ? N3.fromJSON(t3) : t3;
var l5 = (t3) => t3 && t3 instanceof N3 ? t3.toJSON() : t3;
var y2 = (t3) => t3?.functionName && !t3.declaredClass;
var F = (t3) => y2(t3) ? new N3(t3) : t3;
var h2 = (t3) => {
  if (null == t3) return null;
  t3 = a(t3);
  const e2 = {};
  for (const n5 of Object.keys(t3)) p7.has(n5.toLowerCase()) ? e2[n5] = f4(t3[n5]) : m8.has(n5.toLowerCase()) && Array.isArray(t3[n5]) ? e2[n5] = t3[n5].map(f4) : e2[n5] = t3[n5];
  return e2;
};
var d2 = (t3) => t3 ? a9.fromJSON({ type: "RasterFunctionTemplate", ...t3 }) : void 0;
var g2 = { types: { key: "type", base: null, typeMap: { RasterFunctionTemplate: a9 } }, json: { write: true, name: "rasterFunctionDefinition", read: d2 } };
var N3 = c4 = class extends l {
  constructor(t3) {
    super(t3), this.functionName = null, this.outputPixelType = "unknown", this.variableName = null, this.functionDefinition = null;
  }
  set functionArguments(t3) {
    if (t3) {
      const e2 = Object.keys(t3);
      if (e2.some((e3) => p7.has(e3.toLowerCase()) && y2(t3[e3])) || e2.some((e3) => m8.has(e3.toLowerCase()) && Array.isArray(t3[e3]) && t3[e3].some((t4) => y2(t4)))) {
        t3 = a(t3);
        for (const n5 of e2) p7.has(n5.toLowerCase()) ? t3[n5] = F(t3[n5]) : m8.has(n5.toLowerCase()) && Array.isArray(t3[n5]) && (t3[n5] = t3[n5].map((t4) => F(t4)));
      }
    }
    this._set("functionArguments", t3);
  }
  readFunctionArguments(t3) {
    return h2(t3);
  }
  writeFunctionArguments(t3, e2, n5) {
    const r6 = {};
    for (const o5 of Object.keys(t3)) p7.has(o5.toLowerCase()) ? r6[o5] = l5(t3[o5]) : m8.has(o5.toLowerCase()) && Array.isArray(t3[o5]) ? r6[o5] = t3[o5].map(l5) : r6[o5] = l5(t3[o5]);
    e2[n5] = r6;
  }
  readFunctionName(t3, e2) {
    const n5 = e2.rasterFunctionInfos, r6 = e2.name;
    return r6 || (n5?.length && "None" !== n5[0].name ? n5[0].name : e2.rasterFunction || e2.rasterFunctionDefinition?.name);
  }
  get rasterFunctionDefinition() {
    return this.functionDefinition?.toJSON();
  }
  set rasterFunctionDefinition(t3) {
    this.functionDefinition = d2(t3);
  }
  get hasClipFunction() {
    return this.rasterFunctionDefinition ? JSON.stringify(this.rasterFunctionDefinition).includes('"type":"ClipFunction"') : JSON.stringify(this).includes('"rasterFunction":"Clip"');
  }
  clone() {
    return new c4({ functionName: this.functionName, functionArguments: a(this.functionArguments), outputPixelType: this.outputPixelType, variableName: this.variableName, rasterFunctionDefinition: a(this.rasterFunctionDefinition) });
  }
};
r([m({ json: { type: Object, name: "rasterFunctionArguments" } })], N3.prototype, "functionArguments", null), r([o("functionArguments")], N3.prototype, "readFunctionArguments", null), r([r2("functionArguments")], N3.prototype, "writeFunctionArguments", null), r([m({ json: { type: String, write: { target: "rasterFunction" } } })], N3.prototype, "functionName", void 0), r([o("functionName", ["rasterFunction", "rasterFunctionInfos", "rasterFunctionDefinition"])], N3.prototype, "readFunctionName", null), r([r3({ C128: "c128", C64: "c64", F32: "f32", F64: "f64", S16: "s16", S32: "s32", S8: "s8", U1: "u1", U16: "u16", U2: "u2", U32: "u32", U4: "u4", U8: "u8", UNKNOWN: "unknown" }, { ignoreUnknown: false, default: "unknown" })], N3.prototype, "outputPixelType", void 0), r([m({ type: String, json: { read: true, write: true } })], N3.prototype, "variableName", void 0), r([m()], N3.prototype, "rasterFunctionDefinition", null), r([m(g2)], N3.prototype, "functionDefinition", void 0), r([m()], N3.prototype, "hasClipFunction", null), N3 = c4 = r([a2("esri.layers.support.RasterFunction")], N3);

// node_modules/@arcgis/core/layers/support/RasterJobHandler.js
var t2 = class {
  constructor() {
    this._workerThread = null, this._destroyed = false;
  }
  async initialize() {
    const e2 = await p5("RasterWorker");
    this._destroyed ? e2.close() : this._workerThread = e2;
  }
  destroy() {
    this._destroyed = true, this._workerThread && (this._workerThread.close(), this._workerThread = null);
  }
  async convertVectorFieldData(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n5 = await this._workerThread.invoke("convertVectorFieldData", { pixelBlock: r6.pixelBlock.toJSON(), type: r6.dataType }, t3);
    return n5 ? new c3(n5) : null;
  }
  computeStatisticsHistograms(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    return this._workerThread.invoke("computeStatisticsHistograms", { pixelBlock: r6.pixelBlock.toJSON() }, o5);
  }
  async decode(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n5 = await this._workerThread.invoke("decode", r6, t3);
    return n5 ? new c3(n5) : null;
  }
  async symbolize(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n5 = { extent: r6.extent?.toJSON(), pixelBlock: r6.pixelBlock?.toJSON(), simpleStretchParams: r6.simpleStretchParams, bandIds: r6.bandIds }, a13 = await this._workerThread.invoke("symbolize", n5, t3);
    return a13 ? new c3(a13) : null;
  }
  async updateSymbolizer(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = r6?.rendererJSON?.histograms;
    await Promise.all(this._workerThread.broadcast("updateSymbolizer", { symbolizerJSON: r6.toJSON(), histograms: t3 }, o5));
  }
  async updateRasterFunction(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    await Promise.all(this._workerThread.broadcast("updateRasterFunction", { rasterFunctionJSON: r6.toJSON() }, o5));
  }
  async process(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const n5 = await this._workerThread.invoke("process", { extent: r6.extent?.toJSON(), primaryPixelSizes: r6.primaryPixelSizes?.map((e2) => null != e2 ? e2.toJSON() : null), primaryPixelBlocks: r6.primaryPixelBlocks.map((e2) => null != e2 ? e2.toJSON() : null), primaryRasterIds: r6.primaryRasterIds }, t3);
    return n5 ? new c3(n5) : null;
  }
  async stretch(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!r6?.pixelBlock) return null;
    const n5 = { srcPixelBlock: r6.pixelBlock.toJSON(), stretchParams: r6.stretchParams }, a13 = await this._workerThread.invoke("stretch", n5, t3);
    return a13 ? new c3(a13) : null;
  }
  async split(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!r6?.pixelBlock) return null;
    const n5 = { srcPixelBlock: r6.pixelBlock.toJSON(), tileSize: r6.tileSize, maximumPyramidLevel: r6.maximumPyramidLevel, useBilinear: r6.useBilinear }, a13 = await this._workerThread.invoke("split", n5, t3);
    return a13 && a13.forEach((e2, r7) => {
      a13.set(r7, e2 ? c3.fromJSON(e2) : null);
    }), a13;
  }
  async clipTile(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!r6?.pixelBlock) return null;
    const n5 = { ...r6, pixelBlock: r6.pixelBlock.toJSON() }, a13 = await this._workerThread.invoke("clipTile", n5, t3);
    return a13 ? c3.fromJSON(a13) : null;
  }
  async estimateStatisticsHistograms(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!r6?.pixelBlock) return null;
    const t3 = { srcPixelBlock: r6.pixelBlock.toJSON() };
    return await this._workerThread.invoke("estimateStatisticsHistograms", t3, o5);
  }
  async mosaicAndTransform(r6, t3) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    if (!r6?.srcPixelBlocks?.length) return { pixelBlock: null };
    const n5 = { ...r6, srcPixelBlocks: r6.srcPixelBlocks.map((e2) => null != e2 ? e2.toJSON() : null) }, a13 = await this._workerThread.invoke("mosaicAndTransform", n5, t3);
    return { pixelBlock: a13.pixelBlock ? new c3(a13.pixelBlock) : null, localNorthDirections: a13.localNorthDirections };
  }
  async createFlowMesh(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = { buffer: r6.flowData.data.buffer, maskBuffer: r6.flowData.mask.buffer, width: r6.flowData.width, height: r6.flowData.height }, { meshType: n5, simulationSettings: a13 } = r6, i10 = await this._workerThread.invoke("createFlowMesh", { meshType: n5, flowData: t3, simulationSettings: a13 }, { ...o5, transferList: [t3.buffer, t3.maskBuffer] });
    return { vertexData: new Float32Array(i10.vertexBuffer), indexData: new Uint32Array(i10.indexBuffer) };
  }
  getProjectionOffsetGrid(r6, o5) {
    if (!this._workerThread) throw new s("raster-jobhandler:no-connection", "no available worker connection");
    const t3 = null != r6.datumTransformation ? r6.datumTransformation.steps.map((e2) => ({ wkid: e2.wkid, wkt: e2.wkt, isInverse: e2.isInverse })) : null, n5 = null != r6.rasterTransform ? r6.rasterTransform.toJSON() : null, a13 = { projectedExtent: r6.projectedExtent.toJSON(), srcBufferExtent: r6.srcBufferExtent.toJSON(), pixelSize: r6.pixelSize, hasWrapAround: r6.hasWrapAround, spacing: r6.spacing, datumTransformationSteps: t3, rasterTransform: n5, isAdaptive: r6.isAdaptive, includeGCSGrid: r6.includeGCSGrid };
    return this._workerThread.invoke("getProjectionOffsetGrid", a13, o5);
  }
};

// node_modules/@arcgis/core/renderers/FlowRenderer.js
var d3;
var h3 = new o2({ flow_from: "flow-from", flow_to: "flow-to" });
var c5 = d3 = class extends v2(l) {
  constructor(o5) {
    super(o5), this.density = 0.8, this.color = new l3([255, 255, 255, 1]), this.maxPathLength = 200, this.trailWidth = 1.5, this.flowSpeed = 10, this.trailLength = 100, this.smoothing = 0, this.flowRepresentation = "flow-from", this.type = "flow", this.authoringInfo = null, this.legendOptions = null, this.trailCap = "butt", this.background = "none";
  }
  clone() {
    const { density: o5, maxPathLength: t3, trailWidth: e2, flowSpeed: r6, trailLength: i10, smoothing: s7, flowRepresentation: n5, trailCap: p11, background: a13 } = this, l9 = this.color.clone(), m12 = (this.visualVariables || []).map((o6) => o6.clone()), h6 = this.authoringInfo?.clone(), c9 = this.legendOptions?.clone();
    return new d3({ density: o5, color: l9, maxPathLength: t3, trailWidth: e2, flowSpeed: r6, trailLength: i10, trailCap: p11, background: a13, smoothing: s7, flowRepresentation: n5, visualVariables: m12, authoringInfo: h6, legendOptions: c9 });
  }
  getSymbol(o5, t3) {
  }
  async getSymbolAsync(o5, t3) {
  }
  getSymbols() {
    return [];
  }
};
r([m({ type: Number, json: { write: true } })], c5.prototype, "density", void 0), r([m({ type: l3, json: { write: { allowNull: true } } })], c5.prototype, "color", void 0), r([m({ type: Number, cast: o3, json: { write: true } })], c5.prototype, "maxPathLength", void 0), r([m({ type: Number, cast: o3, json: { write: true } })], c5.prototype, "trailWidth", void 0), r([m({ type: Number, json: { write: true } })], c5.prototype, "flowSpeed", void 0), r([m({ type: Number, json: { write: true } })], c5.prototype, "trailLength", void 0), r([m({ type: Number, cast: o3, json: { write: false } })], c5.prototype, "smoothing", void 0), r([m({ type: h3.apiValues, json: { type: h3.jsonValues, read: { reader: h3.read }, write: { writer: h3.write } } })], c5.prototype, "flowRepresentation", void 0), r([r3({ flowRenderer: "flow" })], c5.prototype, "type", void 0), r([m({ type: g, json: { write: true } })], c5.prototype, "authoringInfo", void 0), r([m({ type: u3, json: { write: true } })], c5.prototype, "legendOptions", void 0), r([m({ type: String, json: { write: true } })], c5.prototype, "trailCap", void 0), r([m({ type: String, json: { write: true } })], c5.prototype, "background", void 0), c5 = d3 = r([a2("esri.renderers.FlowRenderer")], c5);

// node_modules/@arcgis/core/renderers/support/ColormapInfo.js
var i7 = class extends l {
  constructor() {
    super(...arguments), this.value = null, this.label = null, this.color = null;
  }
};
r([m({ type: Number, json: { write: { isRequired: true } } })], i7.prototype, "value", void 0), r([m({ type: String, json: { write: true } })], i7.prototype, "label", void 0), r([m({ type: l3, json: { type: [x], write: { isRequired: true } } })], i7.prototype, "color", void 0), i7 = r([a2("esri.renderers.support.ColormapInfo")], i7);

// node_modules/@arcgis/core/renderers/RasterColormapRenderer.js
var c6;
var m9 = c6 = class extends l {
  constructor(o5) {
    super(o5), this.colormapInfos = null, this.type = "raster-colormap";
  }
  static createFromColormap(o5, r6) {
    if (!o5) return null;
    const e2 = 5 === o5[0].length, t3 = [...o5].sort((o6, r7) => o6[0] - r7[0]).map((o6) => i7.fromJSON({ value: o6[0], color: e2 ? o6.slice(1, 5) : o6.slice(1, 4).concat([255]), label: r6 ? r6[o6[0]] ?? "" : o6[0] }));
    return new c6({ colormapInfos: t3 });
  }
  static createFromColorramp(o5) {
    const r6 = B(o5);
    return c6.createFromColormap(r6);
  }
  clone() {
    return new c6({ colormapInfos: this.colormapInfos.map((o5) => o5.toJSON()) });
  }
  extractColormap() {
    return this.colormapInfos.map(({ value: o5, color: r6 }) => [o5, r6.r, r6.g, r6.b, r6.a > 1 ? r6.a : 255 * r6.a & 255]).sort((o5, r6) => o5[0] - r6[0]);
  }
};
r([m({ type: [i7], json: { write: { isRequired: true } } })], m9.prototype, "colormapInfos", void 0), r([r3({ rasterColormap: "raster-colormap" }), m({ json: { write: { isRequired: true } } })], m9.prototype, "type", void 0), m9 = c6 = r([a2("esri.renderers.RasterColormapRenderer")], m9);

// node_modules/@arcgis/core/renderers/RasterShadedReliefRenderer.js
var d4;
var c7 = d4 = class extends l {
  constructor(e2) {
    super(e2), this.altitude = 45, this.azimuth = 315, this.colorRamp = null, this.hillshadeType = "traditional", this.pixelSizePower = 0.664, this.pixelSizeFactor = 0.024, this.scalingType = "none", this.type = "raster-shaded-relief", this.zFactor = 1;
  }
  readColorRamp(e2) {
    return p(e2);
  }
  clone() {
    return new d4({ hillshadeType: this.hillshadeType, altitude: this.altitude, azimuth: this.azimuth, zFactor: this.zFactor, scalingType: this.scalingType, pixelSizeFactor: this.pixelSizeFactor, pixelSizePower: this.pixelSizePower, colorRamp: a(this.colorRamp) });
  }
};
r([m({ type: Number, json: { write: { isRequired: true } } })], c7.prototype, "altitude", void 0), r([m({ type: Number, json: { write: { isRequired: true } } })], c7.prototype, "azimuth", void 0), r([m({ types: m6, json: { write: true } })], c7.prototype, "colorRamp", void 0), r([o("colorRamp")], c7.prototype, "readColorRamp", null), r([m({ type: ["traditional", "multi-directional"], json: { write: { isRequired: true } } })], c7.prototype, "hillshadeType", void 0), r([m({ type: Number, json: { write: true } })], c7.prototype, "pixelSizePower", void 0), r([m({ type: Number, json: { write: true } })], c7.prototype, "pixelSizeFactor", void 0), r([m({ type: ["none", "adjusted"], json: { write: { isRequired: true } } })], c7.prototype, "scalingType", void 0), r([r3({ rasterShadedRelief: "raster-shaded-relief" }), m({ json: { write: { isRequired: true } } })], c7.prototype, "type", void 0), r([m({ type: Number, json: { write: { isRequired: true } } })], c7.prototype, "zFactor", void 0), c7 = d4 = r([a2("esri.renderers.RasterShadedReliefRenderer")], c7);

// node_modules/@arcgis/core/renderers/RasterStretchRenderer.js
var l6;
var y3 = l6 = class extends l {
  constructor(t3) {
    super(t3), this.colorRamp = null, this.computeGamma = false, this.dynamicRangeAdjustment = false, this.gamma = [], this.maxPercent = null, this.minPercent = null, this.numberOfStandardDeviations = null, this.outputMax = null, this.outputMin = null, this.sigmoidStrengthLevel = null, this.histograms = null, this.useGamma = false, this.stretchType = "none", this.type = "raster-stretch";
  }
  readColorRamp(t3) {
    if (t3) return p(t3);
  }
  get statistics() {
    return this._get("statistics");
  }
  set statistics(t3) {
    c(i.getLogger(this), "statistics", { replacement: "customStatistics", version: "4.31", warnOnce: true }), this._set("statistics", t3);
  }
  get customStatistics() {
    const t3 = this.statistics;
    return t3 && Array.isArray(t3[0]) ? t3.map((t4) => ({ min: t4[0], max: t4[1], avg: t4[2], stddev: t4[3] })) : t3;
  }
  set customStatistics(t3) {
    this._set("statistics", t3?.map((t4) => [t4.min, t4.max, t4.avg ?? 0, t4.stddev ?? 1]));
  }
  readCustomStatistics(t3) {
    return t3?.map((t4) => ({ min: t4[0], max: t4[1], avg: t4[2], stddev: t4[3] }));
  }
  writeCustomStatistics(t3, e2, r6) {
    t3?.length && (e2[r6] = t3.map((t4) => [t4.min, t4.max, t4.avg ?? 0, t4.stddev ?? 1]));
  }
  readStretchType(t3, e2) {
    let r6 = e2.stretchType;
    return "number" == typeof r6 && (r6 = a6[r6]), n2.read(r6);
  }
  clone() {
    const t3 = new l6({ stretchType: this.stretchType, outputMin: this.outputMin, outputMax: this.outputMax, useGamma: this.useGamma, computeGamma: this.computeGamma, gamma: a(this.gamma), sigmoidStrengthLevel: this.sigmoidStrengthLevel, numberOfStandardDeviations: this.numberOfStandardDeviations, minPercent: this.minPercent, maxPercent: this.maxPercent, colorRamp: a(this.colorRamp), histograms: a(this.histograms), dynamicRangeAdjustment: this.dynamicRangeAdjustment });
    return t3._set("statistics", a(this.statistics)), t3;
  }
};
r([m({ types: m6, json: { write: true } })], y3.prototype, "colorRamp", void 0), r([o("colorRamp")], y3.prototype, "readColorRamp", null), r([m({ type: Boolean, json: { write: true } })], y3.prototype, "computeGamma", void 0), r([m({ type: Boolean, json: { write: { target: "dra" }, read: { source: "dra" } } })], y3.prototype, "dynamicRangeAdjustment", void 0), r([m({ type: [Number], json: { write: true } })], y3.prototype, "gamma", void 0), r([m({ type: Number, json: { write: true } })], y3.prototype, "maxPercent", void 0), r([m({ type: Number, json: { write: true } })], y3.prototype, "minPercent", void 0), r([m({ type: Number, json: { write: true } })], y3.prototype, "numberOfStandardDeviations", void 0), r([m({ type: Number, json: { read: { source: "max" }, write: { target: "max" } } })], y3.prototype, "outputMax", void 0), r([m({ type: Number, json: { read: { source: "min" }, write: { target: "min" } } })], y3.prototype, "outputMin", void 0), r([m({ type: Number, json: { write: true } })], y3.prototype, "sigmoidStrengthLevel", void 0), r([m({})], y3.prototype, "statistics", null), r([m()], y3.prototype, "histograms", void 0), r([m({ json: { type: [[Number]], name: "statistics", write: true } })], y3.prototype, "customStatistics", null), r([o("customStatistics")], y3.prototype, "readCustomStatistics", null), r([r2("customStatistics")], y3.prototype, "writeCustomStatistics", null), r([m({ type: Boolean, json: { write: true } })], y3.prototype, "useGamma", void 0), r([m({ type: n2.apiValues, json: { type: n2.jsonValues, write: n2.write } })], y3.prototype, "stretchType", void 0), r([o("stretchType", ["stretchType"])], y3.prototype, "readStretchType", null), r([r3({ rasterStretch: "raster-stretch" })], y3.prototype, "type", void 0), y3 = l6 = r([a2("esri.renderers.RasterStretchRenderer")], y3);

// node_modules/@arcgis/core/renderers/VectorFieldRenderer.js
var S;
var z2 = /* @__PURE__ */ new Set(["esriMetersPerSecond", "esriKilometersPerHour", "esriKnots", "esriFeetPerSecond", "esriMilesPerHour"]);
var u5 = new o2({ beaufort_ft: "beaufort-ft", beaufort_km: "beaufort-km", beaufort_kn: "beaufort-kn", beaufort_m: "beaufort-m", beaufort_mi: "beaufort-mi", classified_arrow: "classified-arrow", ocean_current_kn: "ocean-current-kn", ocean_current_m: "ocean-current-m", simple_scalar: "simple-scalar", single_arrow: "single-arrow", wind_speed: "wind-barb" });
var Z = new o2({ flow_from: "flow-from", flow_to: "flow-to" });
var b = S = class extends v2(l) {
  constructor(e2) {
    super(e2), this.attributeField = "Magnitude", this.flowRepresentation = "flow-from", this.rotationType = "arithmetic", this.style = "single-arrow", this.symbolTileSize = 50, this.type = "vector-field";
  }
  readInputUnit(e2, M3) {
    return z2.has(e2) ? s5.fromJSON(e2) : null;
  }
  readOutputUnit(e2, M3) {
    return z2.has(e2) ? s5.fromJSON(e2) : null;
  }
  get styleRenderer() {
    const e2 = this.style, M3 = this.attributeField, i10 = this._createStyleRenderer(e2);
    return i10.field = M3, i10;
  }
  get sizeVariables() {
    const e2 = [];
    if (this.visualVariables) for (const M3 of this.visualVariables) "size" === M3.type && e2.push(M3);
    if (0 === e2.length) {
      const M3 = new f2({ field: "Magnitude", minSize: 0.2 * this.symbolTileSize, maxSize: 0.8 * this.symbolTileSize });
      this.visualVariables ? this.visualVariables.push(M3) : this._set("visualVariables", [M3]), e2.push(M3);
    }
    return e2;
  }
  get rotationVariables() {
    const e2 = [];
    if (this.visualVariables) for (const M3 of this.visualVariables) "rotation" === M3.type && e2.push(M3);
    if (0 === e2.length) {
      const M3 = new s4({ field: "Direction", rotationType: this.rotationType });
      this.visualVariables ? this.visualVariables.push(M3) : this._set("visualVariables", [M3]), e2.push(M3);
    }
    return e2;
  }
  clone() {
    return new S({ attributeField: this.attributeField, flowRepresentation: this.flowRepresentation, rotationType: this.rotationType, symbolTileSize: this.symbolTileSize, style: this.style, visualVariables: a(this.visualVariables), inputUnit: this.inputUnit, outputUnit: this.outputUnit });
  }
  async getGraphicsFromPixelData(e2, M3 = false, a13 = []) {
    const t3 = new Array(), I = a7(this.inputUnit, this.outputUnit), r6 = this.rotationVariables[0]?.rotationType || this.rotationType, g3 = M3 ? f3(e2.pixelBlock, "vector-uv", r6, I) : p4(e2.pixelBlock, "vector-magdir", I);
    if (null == g3) return t3;
    const o5 = e2.extent, A2 = null != g3.mask && g3.mask.length > 0;
    let l9 = 0;
    const w2 = (o5.xmax - o5.xmin) / g3.width, y6 = (o5.ymax - o5.ymin) / g3.height;
    for (let n5 = 0; n5 < g3.height; n5++) for (let e3 = 0; e3 < g3.width; e3++, l9++) {
      let M4 = new _({ x: o5.xmin + e3 * w2 + w2 / 2, y: o5.ymax - n5 * y6 - y6 / 2, spatialReference: o5.spatialReference });
      M4 = (await R(M4))[0];
      const I2 = a13.some((e4) => e4.intersects(M4));
      if ((!A2 || g3.mask[l9]) && !I2) {
        const e4 = { Magnitude: g3.pixels[0][l9], Direction: g3.pixels[1][l9] }, a14 = new d({ geometry: new _({ x: M4.x, y: M4.y, spatialReference: o5.spatialReference }), attributes: e4 });
        a14.symbol = this._getVisualVariablesAppliedSymbol(a14), t3.push(a14);
      }
    }
    return t3;
  }
  getSymbol(e2, M3) {
  }
  async getSymbolAsync(e2, M3) {
  }
  getSymbols() {
    return [];
  }
  getClassBreakInfos() {
    return this.styleRenderer?.classBreakInfos;
  }
  getDefaultSymbol() {
    return this.styleRenderer?.defaultSymbol;
  }
  _getDefaultSymbol(e2) {
    return new u2({ path: "M14,32 14,18 9,23 16,3 22,23 17,18 17,32 z", outline: new m4({ width: 0 }), size: 20, color: e2 || new l3([0, 92, 230]) });
  }
  _getVisualVariablesAppliedSymbol(e2) {
    if (!e2) return;
    const M3 = this.styleRenderer?.getSymbol(e2)?.clone(), i10 = this.sizeVariables, a13 = this.rotationVariables;
    if (i10 && i10.length && this.sizeVariables.forEach((i11) => M(M3, N([i11], e2))), a13 && a13.length) {
      const i11 = "flow-to" === this.flowRepresentation === ("ocean-current-kn" === this.style || "ocean-current-m" === this.style) ? 0 : 180;
      e2.attributes.Direction = e2.attributes.Direction + i11, this.rotationVariables.forEach((i12) => N2(M3, h(i12, e2), i12.axis));
    }
    return M3;
  }
  _createStyleRenderer(e2) {
    let M3 = { defaultSymbol: this._getDefaultSymbol(), classBreakInfos: [] };
    switch (e2) {
      case "single-arrow":
        M3 = this._createSingleArrowRenderer();
        break;
      case "beaufort-kn":
        M3 = this._createBeaufortKnotsRenderer();
        break;
      case "beaufort-m":
        M3 = this._createBeaufortMeterRenderer();
        break;
      case "beaufort-ft":
        M3 = this._createBeaufortFeetRenderer();
        break;
      case "beaufort-mi":
        M3 = this._createBeaufortMilesRenderer();
        break;
      case "beaufort-km":
        M3 = this._createBeaufortKilometersRenderer();
        break;
      case "ocean-current-m":
        M3 = this._createCurrentMeterRenderer();
        break;
      case "ocean-current-kn":
        M3 = this._createCurrentKnotsRenderer();
        break;
      case "simple-scalar":
        M3 = this._createSimpleScalarRenderer();
        break;
      case "wind-barb":
        M3 = this._createWindBarbsRenderer();
        break;
      case "classified-arrow":
        M3 = this._createClassifiedArrowRenderer();
    }
    return new j(M3);
  }
  _createSingleArrowRenderer() {
    return { defaultSymbol: this._getDefaultSymbol() };
  }
  _createBeaufortKnotsRenderer() {
    const e2 = [0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 55, 63], i10 = [[40, 146, 199], [89, 162, 186], [129, 179, 171], [160, 194, 155], [191, 212, 138], [218, 230, 119], [250, 250, 100], [252, 213, 83], [252, 179, 102], [250, 141, 52], [247, 110, 42], [240, 71, 29]];
    return { defaultSymbol: this._getDefaultSymbol(new l3([214, 47, 39])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createBeaufortMeterRenderer() {
    const e2 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7], i10 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]];
    return { defaultSymbol: this._getDefaultSymbol(new l3([214, 47, 39])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createBeaufortFeetRenderer() {
    const e2 = this._getDefaultSymbol(new l3([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const a13 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], t3 = 3.28084;
    i10 = i10.map((e3) => e3 * t3);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, a13) };
  }
  _createBeaufortMilesRenderer() {
    const e2 = this._getDefaultSymbol(new l3([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const a13 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], t3 = 2.23694;
    i10 = i10.map((e3) => e3 * t3);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, a13) };
  }
  _createBeaufortKilometersRenderer() {
    const e2 = this._getDefaultSymbol(new l3([214, 47, 39]));
    let i10 = [0, 0.2, 1.8, 3.3, 5.4, 8.5, 11, 14.1, 17.2, 20.8, 24.4, 28.6, 32.7];
    const a13 = [[69, 117, 181], [101, 137, 184], [132, 158, 186], [162, 180, 189], [192, 204, 190], [222, 227, 191], [255, 255, 191], [255, 220, 161], [250, 185, 132], [245, 152, 105], [237, 117, 81], [232, 21, 21]], t3 = 3.6;
    i10 = i10.map((e3) => e3 * t3);
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, a13) };
  }
  _createCurrentMeterRenderer() {
    const e2 = [0, 0.5, 1, 1.5, 2], i10 = [[78, 26, 153], [179, 27, 26], [202, 128, 26], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l3([177, 177, 177])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createCurrentKnotsRenderer() {
    const e2 = [0, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4], i10 = [[0, 0, 0], [0, 37, 100], [78, 26, 153], [151, 0, 100], [179, 27, 26], [177, 78, 26], [202, 128, 26], [177, 179, 52], [177, 177, 177]];
    return { defaultSymbol: this._getDefaultSymbol(new l3([177, 177, 177])), classBreakInfos: this._getClassBreaks(e2, i10) };
  }
  _createClassifiedArrowRenderer() {
    const e2 = this._getDefaultSymbol(new l3([56, 168, 0]));
    let i10 = [0, 1e-6, 3.5, 7, 10.5, 14];
    if (this.sizeVariables?.length) {
      const e3 = this.sizeVariables[0].minDataValue, M3 = this.sizeVariables[0].maxDataValue;
      if (e3 && M3) {
        const a14 = (M3 - e3) / 5;
        i10 = Array.from(Array(6).keys()).map((M4) => e3 + a14 * M4);
      }
    }
    const a13 = [[56, 168, 0], [139, 309, 0], [255, 255, 0], [255, 128, 0], [255, 0, 0]];
    return { defaultSymbol: e2, classBreakInfos: this._getClassBreaks(i10, a13) };
  }
  _createSimpleScalarRenderer() {
    return { defaultSymbol: a3.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACsAAAArCAQAAABLVLlLAAAABGdBTUEAAYagMeiWXwAAAAJiS0dEAACqjSMyAAAACXBIWXMAAABIAAAASABGyWs+AAAC3ElEQVRIx9XXvW4cVRQH8N982btpsIREJECyiCXsxX4DKh6AliqGKCBBE2SlwlHgAbBD/AKmyEYUeQ1KahPZSZQvBCkQLTHZ7KGY8Xodz4w3a1NwbzVzz/znfJ//zbStVC5q3icKak9GAs2QIdDx3PtW/S011NW3p+M5Eomh11ipTIKe6+4LQzHaQ+G+63pIZNJJQXMpljwTwj1brpgx5w1zZlyx5Z4QnllEIm2xeeSUHBf0hV0bejo1Uh09G3aFvgXk7cCJFBc9EdaRVuHJJaOdKyTV2TVhYLMduNR0Q9gxL5GaaTDw8GzejrDRBpxWoGsySRW0dttKuattwNkIlFw2YXgzOdYq4Ox49PlM+JrKd5OusjTWhBuVxUfMX/KXXZ3WEmkuqa67wspR4BTbwtKr/5u4fFgStse/T7EifFPnnYl9zPq4vmUOPrRndgoHjDti1gOPqlyXoifcRNGQzUd31lDyfHmob1Gp35vSr+P6vilcQ5Egtyd8YF/ySg9NhPM+9M/IOaHwp5+PSZayXTvCogEUwlatC3J8LLwYtcWB8EuDXQVuCkV5/B4eNHb7wGBs87LBDS+xjdVSn09wq1G8dFM+9tSUhIGneLvUdniKxKpTYljCpu3j7rVWlHj/P23v4NPGUEyeCQnexe9lJjzEQqMjJs+EzNAX6B98dBZVRmroJx95x/A/6gln18EyfCUsl+qdXb/tjvfbw+mwforpUOBz4XLVoBwAn3aWnfeH246NyBXhrq7TTN5lNSP9RkU+puUJm3W2Tsdq0nZWM07srk7MwQrZSRysjjGWBLRJNsNbfj2JMR4AbxpU1XLAb9Mxfpsq5EjMuuiR8L0JiHOOBX3hiUvOmavN0nMueSzcceFk0BK4pMqLo7vDD1Z0qrtDx7Itt4Xwm9UqbMmk8S0Dtuzb2pvOU99Z1nLTOfleNmvfZfP2pYZmPfajwosKdDBNpacNpVGGsWX9CyDI8Xq/Sj6QAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE0LTExLTEwVDAzOjE3OjU4LTA1OjAwF+tHyQAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNC0xMS0xMFQwMzoxNzo1OC0wNTowMGa2/3UAAAAASUVORK5CYII=", height: 20, width: 20, type: "esriPMS", angle: 0 }) };
  }
  _createWindBarbsRenderer() {
    const e2 = Array.from(Array(31).keys()).map((e3) => 5 * e3), M3 = [{ range: "0-5", path: "M20 20 M5 20 A15 15 0 1 0 35 20 A15 15 0 1 0 5 20 M20 20 M10 20 A10 10 0 1 0 30 20 A10 10 0 1 0 10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTIwIDIwIE01IDIwIEExNSAxNSAwIDEgMCAzNSAyMCBBMTUgMTUgMCAxIDAgNSAyMCBNMjAgMjAgTTEwIDIwIEExMCAxMCAwIDEgMCAzMCAyMCBBMTAgMTAgMCAxIDAgMTAgMjAiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "5-10", path: "M25 0 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "10-15", path: "M25 0 L25 40 L10 45 L25 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNyA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "15-20", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L17.5 37.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjEyIDAgMTUgNDUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxNy41IDM3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "20-25", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "25-30", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB3aWR0aD0iMjAiIGhlaWdodD0iMjAiIHZpZXdCb3g9IjkgMCAyNiA0NiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIj4KICA8cGF0aCBkPSJNMjUgMCBMMjUgNDAgTDEwIDQ1IEwyNSA0MCBNMjUgMzUgTDEwIDQwIEwyNSAzNSBNMjUgMzAgTDE3LjUgMzIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "30-35", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "35-40", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "40-45", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "45-50", path: "M25 0 L25 40 L10 45 L25 40 M25 35 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0NiI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0NSBMMjUgNDAgTTI1IDM1IEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "50-55", path: "M25 0 L25 40 L10 40 L25 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "55-60", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L17.5 32.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyMHB4IiBoZWlnaHQ9IjIwcHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxNy41IDMyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "60-65", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "65-70", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxNy41IDI3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "70-75", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "75-80", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxNy41IDIyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "80-85", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "85-90", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxNy41IDE3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "90-95", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "95-100", path: "M25 0 L25 40 L10 40 L25 35 M25 30 L10 35 L25 30 M25 25 L10 30 L25 25 M25 20 L10 25 L25 20 M25 15 L10 20 L25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTTI1IDMwIEwxMCAzNSBMMjUgMzAgTTI1IDI1IEwxMCAzMCBMMjUgMjUgTTI1IDIwIEwxMCAyNSBMMjUgMjAgTTI1IDE1IEwxMCAyMCBMMjUgMTUgTTI1IDEwIEwxNy41IDEyLjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }, { range: "100-105", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzMnB4IiBoZWlnaHQ9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "105-110", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L17.5 27.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDE3LjUgMjcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "110-115", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "115-120", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L17.5 22.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDE3LjUgMjIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "120-125", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "125-130", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L17.5 17.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDE3LjUgMTcuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "130-135", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "135-140", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDE3LjUgMTIuNSIgc3R5bGU9InN0cm9rZTpyZ2IoMCwwLDApO3N0cm9rZS13aWR0aDoxLjUiLz4KIDwvc3ZnPg==" }, { range: "140-145", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IiBzdHlsZT0ic3Ryb2tlOnJnYigwLDAsMCk7c3Ryb2tlLXdpZHRoOjEuNSIvPgogPC9zdmc+" }, { range: "145-150", path: "M25 0 L25 40 L10 40 L25 35 L10 35 L25 30 M25 25 L10 30 M25 25 M25 20 L10 25 M25 20 M25 15 L10 20 M25 15 M25 10 L17.5 12.5", imageData: "PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGhlaWdodD0iMzJweCIgd2lkdGg9IjMycHgiIHZpZXdCb3g9IjkgMCAyNiA0MSI+CiAgPHBhdGggZD0iTTI1IDAgTDI1IDQwIEwxMCA0MCBMMjUgMzUgTDEwIDM1IEwyNSAzMCBNMjUgMjUgTDEwIDMwIE0yNSAyNSBNMjUgMjAgTDEwIDI1IE0yNSAyMCBNMjUgMTUgTDEwIDIwIE0yNSAxNSBNMjUgMTAgTDEwIDE1IE0yNSAxMCBNMjUgNSBMMTcuNSA3LjUiIHN0eWxlPSJzdHJva2U6cmdiKDAsMCwwKTtzdHJva2Utd2lkdGg6MS41Ii8+CiA8L3N2Zz4=" }], i10 = a3.fromJSON({ imageData: "iVBORw0KGgoAAAANSUhEUgAAACgAAAApCAQAAADtq6NDAAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAK7OHOkAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAJiS0dEAP+Hj8y/AAAACXBIWXMAAA7DAAAOwwHHb6hkAAAEY0lEQVRIx5XXWWxWRRQH8N+d+31tUdGAVjGglYJABFEBY91jfDAg7piYaFTccA++uMQEFRcSXlATtxiXqMQt4G4iisYl0ai4sIQYtVFZ1KIFKdTS0l4f7vRCS5fPebozc+bM/2z/Mzcx0AgSiUxXnKfIdMn875FIhX53U2n/B/s+kKM4UINTjTBZImixxnrv+9a2iL6zEoUBXcoudrWj/OtHm3wt02lfU9Qao9OnHvIhgmww84MEl1qnxfNmGrqHxAizLdPpC6chGcAxKGGcL+30gOERf1BSpUqVslQSV8d5ReZFe8VQ9avufJn31cWwlJV7iafKStGOE/1qvfH9qUxxu8ydUdmuSKbGO8YUdT2inKLG69pM70tliktl5qIkCAJGmusDG7Vqsc0WjZa4UBlBiA5YZIcjYzB7qDtH5kaUJFLs7RGZTZ42W4PRRmtwvbdt1+wGiaS4drEtDttdZYIDNVuAclR3vA3+dI3qHqmVSy7U6Tv1MScCPvPR7nIpFlsdCy3FdTLPGhK92e2CUITjMJ9ocwKxnsZqc3O3JwMma3d6UVLnyVxB4aXemZqvPqLdpJhW3KVVbY4yYImPo6M5Urv50fj+0z/FG9YaEiENs8UtMfXUaTeTePNHlhXfA1UU+2lyD1Il3Gtt9+adfpNG7dNlpg2U/T3KYLZ2dUWFdTgp3/rQ4sK973qnInV5TIf40x3dhvrJPBiqyWUo4wAtLqhQYS71qK+QKOFRywmGK/kpikzV6WMKhh58vGWs4TIJNjiEYLIuP8Tt4/zmLyqk+AyrJSbF+Qq1DgqRUPMxyl+9q3IQhX/rMCJ6tEunriDs1oSyQZKlr9AkhT2ZIARbJfaJS1vtVbHB+Rgi0RK/y1q1BWsEEyLoz40xtGKcARPVWB1BTPO7f4LNtpkUl1aoMbViLyZo0GRjPD3BxnxjqXeLYlvhqYrzMMG3HoyJXa3JjfnGlbYYFlP7Jh3qKsKY4hQ7TY0nG+xwRL61n63mxHtqNHosigyMLmClNwvuecFnOZB88nNBDzNkzhxEZaKMBVoKapggMzvHHXBEpNSSFAvtcFRsVn0bW8LlMmcXs+c0Kne3gRR32+zg4uXwjC6zit6Wt4a8LXVfcp/MtQXHn2ynGbuCmb8GvvFeJLEE82ReU9/n6+dkq2x3buG9Wn94smcgAw631RPR7BTH+kbmHReZoEpOdEe7zWqZl40s0JWs9Hmv7hjBHqPDwsjGKVJnWWqjbdZp1KhJi0aPmxYZsIRhlttgeF+Jlke41QcOQKoqilSb6HJzSvNG3G/UoWnxwsmt+sVaYwd63dRbqdnMyCPVeyRPvpYgdavM22oGKoMUVRbJfOWMwidJ8Zzb1UvmWK/VVUXzHaTjjrVYh1897HT7xxYEVUaa5SWb/WO+YUWa9SrwvigzM8YlzlYv2GSdVCYxxlBtVnnFq5olwp5/BEk/OLsf5LUmG2+inRJdVvjZ97ZH9/zP34ug1O91pf4p+D+JYBpvrKxfbwAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAxNC0xMS0xMFQwMzoxMjowOS0wNTowMB9ViV0AAAAldEVYdGRhdGU6bW9kaWZ5ADIwMTQtMTEtMTBUMDM6MTI6MDktMDU6MDBuCDHhAAAAAElFTkSuQmCC", height: 20, width: 20, type: "esriPMS", angle: 0 }), a13 = e2.map((a14, t3) => {
      let I;
      if (t3 !== e2.length - 1) if (0 === t3) I = { minValue: a14, maxValue: e2[t3 + 1], symbol: i10 };
      else {
        const i11 = a3.fromJSON({ type: "esriPMS", imageData: M3[t3].imageData, contentType: "image/svg+xml", height: 32, width: 32, angle: 0 });
        I = { minValue: a14, maxValue: e2[t3 + 1], symbol: i11 };
      }
      return new l4(I);
    });
    return { defaultSymbol: i10, classBreakInfos: a13 };
  }
  _getClassBreaks(e2, i10) {
    return i10.map((i11, a13) => new l4({ minValue: e2[a13], maxValue: e2[a13 + 1], symbol: this._getDefaultSymbol(new l3(i11)) }));
  }
};
r([m({ type: ["Magnitude"], json: { write: true } })], b.prototype, "attributeField", void 0), r([m({ type: Z.apiValues, json: { type: Z.jsonValues, read: { reader: Z.read }, write: { writer: Z.write } } })], b.prototype, "flowRepresentation", void 0), r([m({ type: ["geographic", "arithmetic"], json: { write: true } })], b.prototype, "rotationType", void 0), r([m({ type: u5.apiValues, json: { type: u5.jsonValues, read: { reader: u5.read }, write: { writer: u5.write } } })], b.prototype, "style", void 0), r([m({ json: { write: true } })], b.prototype, "symbolTileSize", void 0), r([m({ type: s5.apiValues, json: { type: s5.jsonValues, write: { writer: s5.write } } })], b.prototype, "inputUnit", void 0), r([o("inputUnit")], b.prototype, "readInputUnit", null), r([m({ type: s5.apiValues, json: { type: s5.jsonValues, read: { reader: s5.read }, write: { writer: s5.write } } })], b.prototype, "outputUnit", void 0), r([o("outputUnit")], b.prototype, "readOutputUnit", null), r([r3({ vectorField: "vector-field" })], b.prototype, "type", void 0), r([m({ type: j })], b.prototype, "styleRenderer", null), r([m({ type: f2 })], b.prototype, "sizeVariables", null), r([m({ type: s4 })], b.prototype, "rotationVariables", null), b = S = r([a2("esri.renderers.VectorFieldRenderer")], b);

// node_modules/@arcgis/core/renderers/support/rasterRendererHelper.js
var S2 = 0.25;
var k = a4.fromJSON({ type: "multipart", colorRamps: [{ fromColor: [0, 0, 255], toColor: [0, 255, 255] }, { fromColor: [0, 255, 255], toColor: [255, 255, 0] }, { fromColor: [255, 255, 0], toColor: [255, 0, 0] }] });
var F2 = a4.fromJSON(m7[0]);
var L = /* @__PURE__ */ new Set(["scientific", "standard-time", "vector-uv", "vector-magdir", "vector-u", "vector-v", "vector-magnitude", "vector-direction"]);
function q(e2) {
  return e2.presetRenderers?.find(({ method: t3, value: n5 }) => "raster-function-template" === t3 ? n5 === e2.rasterFunctionName : "variable" === t3 && n5 === e2.variableName);
}
function B2(e2, t3) {
  const { attributeTable: n5, colormap: a13 } = e2;
  if (o4(e2)) {
    const t4 = $2(e2);
    if (null != t4) return t4;
  }
  if (t3?.rasterFunctionColorRamp) {
    const n6 = U(e2, t3);
    return n6.colorRamp = t3.rasterFunctionColorRamp, n6;
  }
  if (null != a13) {
    const t4 = K(e2);
    if (null != t4) return t4;
  }
  if (null != n5) {
    const t4 = P2(e2);
    if (null != t4) return t4;
  }
  return U(e2, t3);
}
function E(e2, t3 = false) {
  const n5 = ["raster-stretch"];
  return u4(e2, t3) && n5.push("raster-colormap"), t(e2) && n5.push("unique-value"), r5(e2, t3) && n5.push("class-breaks"), e(e2) && n5.push("raster-shaded-relief"), o4(e2) && n5.push("vector-field"), i3(e2) && n5.push("flow"), n5;
}
function z3(e2) {
  return r4(e2) && "Colormap" === e2.rasterFunction.functionName ? e2.rasterFunction.colorRamp : void 0;
}
function N4(e2, t3, n5) {
  const a13 = ["nearest", "bilinear", "cubic", "majority"], r6 = n5?.toLowerCase().replace("bicubic", "cubic"), l9 = a13.find((e3) => e3 === r6);
  if ("Map" === t3) return l9 ?? "bilinear";
  if ("standard-time" === e2.dataType) return l9 ?? "nearest";
  return "thematic" === e2.dataType || e2.attributeTable || e2.colormap ? "nearest" === l9 || "majority" === l9 ? l9 : "nearest" : l9 ?? "bilinear";
}
function U(e2, t3) {
  e2 = W(e2, t3?.variableName);
  const { bandCount: n5 } = e2;
  let { bandIds: a13, stretchType: r6 } = t3 || {};
  a13?.some((e3) => e3 >= n5) && (a13 = null);
  let l9 = e2.statistics, s7 = e2.histograms;
  n5 > 1 ? (a13 = a13?.length ? a13 : D(e2), l9 = null == l9 ? null : a13?.map((e3) => l9[e3]), s7 = null == s7 ? null : a13?.map((e3) => s7[e3])) : a13 = [0], null == r6 && (r6 = J(e2)), t3?.includeStatisticsInStretch && ("percent-clip" === r6 || "histogram-equalization" === r6) && e2.statistics?.length && (r6 = "min-max");
  let i10 = false;
  switch (r6) {
    case "none":
      i10 = false;
      break;
    case "percent-clip":
      i10 = !s7?.length;
      break;
    default:
      i10 = !l9?.length;
  }
  const { dataType: u8 } = e2, m12 = 1 === a13?.length && L.has(u8) ? k : null, c9 = new y3({ stretchType: r6, dynamicRangeAdjustment: i10, colorRamp: m12, outputMin: 0, outputMax: 255, gamma: 1 === a13?.length ? [1] : [1, 1, 1], useGamma: false });
  return "percent-clip" === r6 ? c9.maxPercent = c9.minPercent = S2 : "standard-deviation" === r6 && (c9.numberOfStandardDeviations = 2), i10 || null == e2.multidimensionalInfo && !t3?.includeStatisticsInStretch || ("percent-clip" === r6 ? c9.histograms = s7 : "min-max" !== r6 && "standard-deviation" !== r6 || (c9.statistics = l9)), c9;
}
function W(e2, t3) {
  const { multidimensionalInfo: n5 } = e2;
  if (!t3 || !n5) return e2;
  const a13 = n5.variables.find((e3) => e3.name === t3);
  if (!a13) return e2;
  if (e2 = e2.clone(), a13) {
    const { statistics: t4, histograms: n6 } = a13;
    t4?.length && (e2.statistics = t4.map((e3) => ({ min: e3.min, max: e3.max, avg: e3.avg, stddev: e3.stddev }))), n6?.length && (e2.histograms = n6);
  }
  return e2;
}
function D(e2) {
  const t3 = e2.bandCount;
  if (1 === t3) return null;
  if (2 === t3) return [0];
  const { bandInfos: n5 } = e2;
  let a13;
  if (n5.length === t3) {
    const { red: e3, green: t4, blue: r6, nir: l9 } = A(n5);
    null != e3 && null != t4 && null != r6 ? a13 = [e3, t4, r6] : null != l9 && null != e3 && null != t4 && (a13 = [l9, e3, t4]);
  }
  return !a13 && t3 >= 3 && (a13 = [0, 1, 2]), a13;
}
function A(e2) {
  const t3 = {};
  for (let n5 = 0; n5 < e2.length; n5++) {
    const a13 = e2[n5], r6 = a13.name.toLowerCase();
    if ("red" === r6) t3.red = n5;
    else if ("green" === r6) t3.green = n5;
    else if ("blue" === r6) t3.blue = n5;
    else if ("nearinfrared" === r6 || "nearinfrared_1" === r6 || "nir" === r6) t3.nir = n5;
    else if (a13.maxWavelength && a13.minWavelength) {
      const e3 = a13.minWavelength, r7 = a13.maxWavelength;
      null == t3.blue && e3 >= 410 && e3 <= 480 && r7 >= 480 && r7 <= 540 ? t3.blue = n5 : null == t3.green && e3 >= 490 && e3 <= 560 && r7 >= 560 && r7 <= 610 ? t3.green = n5 : null == t3.red && e3 >= 595 && e3 <= 670 && r7 >= 660 && r7 <= 730 ? t3.red = n5 : null == t3.nir && e3 >= 700 && e3 <= 860 && r7 >= 800 && r7 <= 950 && (t3.nir = n5);
    }
  }
  return t3;
}
function J(e2) {
  let t3 = "percent-clip";
  const { pixelType: n5, dataType: a13, histograms: r6, statistics: l9, multidimensionalInfo: s7 } = e2, i10 = L.has(a13) || "generic" === a13 && null != s7;
  return "u8" !== n5 || "processed" !== a13 && null != r6 && null != l9 ? "u8" === n5 || "elevation" === a13 || i10 ? t3 = "min-max" : null != r6 ? t3 = "percent-clip" : null != l9 && (t3 = "min-max") : t3 = "none", t3;
}
function P2(t3, n5, a13, r6) {
  if (!t(t3, n5)) return null;
  const { attributeTable: l9, statistics: s7 } = t3, i10 = G(l9, n5), o5 = H(l9, "red"), m12 = H(l9, "green"), f5 = H(l9, "blue"), d7 = new g(), b2 = [], h6 = /* @__PURE__ */ new Set(), v3 = !!(o5 && m12 && f5);
  if (null != l9) l9.features.forEach((t4) => {
    const n6 = t4.attributes[i10.name];
    if (!h6.has(t4.attributes[i10.name]) && null != n6) {
      h6.add(n6);
      const a14 = v3 && ("single" === o5.type || "double" === o5.type) && ("single" === m12.type || "double" === m12.type) && ("single" === f5.type || "double" === f5.type) && !l9.features.some((e2) => e2.attributes[o5.name] > 1 || e2.attributes[m12.name] > 1 || e2.attributes[f5.name] > 1), r7 = a14 ? 255 : 1;
      b2.push(new p2({ value: t4.attributes[i10.name], label: t4.attributes[i10.name] + "", symbol: new m5({ style: "solid", outline: null, color: new l3(v3 ? [t4.attributes[o5.name] * r7, t4.attributes[m12.name] * r7, t4.attributes[f5.name] * r7, 1] : [0, 0, 0, 0]) }) }));
    }
  });
  else if (s7?.[0]) for (let u8 = s7[0].min; u8 <= s7[0].max; u8++) b2.push(new p2({ value: u8, label: u8.toString(), symbol: new m5({ style: "solid", outline: null, color: new l3([0, 0, 0, 0]) }) }));
  if (b2.sort((e2, t4) => e2.value && "string" == typeof e2.value.valueOf() ? 0 : e2.value > t4.value ? 1 : -1), !v3) {
    const t4 = B(F2, { numColors: b2.length });
    b2.forEach((n6, a14) => n6.symbol.color = new l3(t4[a14].slice(1, 4))), d7.colorRamp = F2;
  }
  if (a13 || r6) {
    const t4 = a13 || B(r6, { numColors: b2.length }).map((e2) => e2.slice(1));
    b2.forEach((n6, a14) => n6.symbol.color = new l3(t4[a14])), d7.colorRamp = r6;
  }
  return new $({ field: i10.name, uniqueValueInfos: b2, authoringInfo: d7 });
}
function G(e2, t3, a13) {
  let r6;
  return null != e2 ? (r6 = t3 ? e2.fields.find((e3) => t3.toLowerCase() === e3.name.toLowerCase()) : _2(e2.fields), r6 || (a13 || (r6 = e2.fields.find((e3) => "string" === e3.type)), r6 || (r6 = H(e2, "value")))) : r6 = new m3({ name: "value" }), r6;
}
function _2(e2) {
  let t3;
  for (let n5 = 0; n5 < e2.length; n5++) {
    const a13 = e2[n5].name.toLowerCase();
    if ("string" === e2[n5].type) {
      if (a13.startsWith("class")) {
        t3 = e2[n5];
        break;
      }
      null == t3 && (a13.endsWith("name") || a13.endsWith("type")) && (t3 = e2[n5]);
    }
  }
  return t3;
}
function H(e2, t3) {
  return null == e2 ? null : e2.fields.find((e3) => e3.name.toLowerCase() === t3);
}
function K(e2) {
  if (!u4(e2)) return null;
  let t3;
  const { attributeTable: n5, colormap: a13 } = e2;
  if (null != n5) {
    const e3 = H(n5, "value"), a14 = G(n5, null, true);
    "string" === a14.type && (t3 = {}, n5.features.forEach((n6) => {
      const r6 = n6.attributes;
      t3[r6[e3.name]] = a14 ? r6[a14.name] : r6[e3.name];
    }));
  }
  return m9.createFromColormap(a13, t3);
}
var Z3 = /* @__PURE__ */ new Map([["m/s", "meter-per-second"], ["km/h", "kilometer-per-hour"], ["knots", "knots"], ["ft/s", "feet-per-second"], ["mph", "mile-per-hour"]]);
function $2(e2) {
  if (!o4(e2)) return null;
  let t3;
  if (null != e2.statistics && e2.statistics.length && ("vector-magdir" === e2.dataType || "vector-uv" === e2.dataType)) {
    const { minMagnitude: n6, maxMagnitude: a14 } = ae(e2.dataType, e2.statistics);
    t3 = [new f2({ field: "Magnitude", minSize: 10, maxSize: 40, minDataValue: n6, maxDataValue: a14 })];
  }
  const n5 = null != e2.multidimensionalInfo ? Z3.get(e2.multidimensionalInfo.variables[0].unit) : void 0, a13 = new b({ visualVariables: t3, inputUnit: n5, rotationType: "geographic" });
  return a13.visualVariables = [...a13.sizeVariables, ...a13.rotationVariables], a13;
}
function ee(e2) {
  return { color: e2.symbolLayers[0].material?.color, type: "esriSFS", style: "esriSFSSolid" };
}
function te(e2) {
  if ("uniqueValue" === e2.type) {
    const t3 = e2.uniqueValueInfos, n5 = t3?.[0].symbol;
    return n5?.symbolLayers?.length && (e2.uniqueValueInfos = t3?.map((e3) => ({ value: e3.value, label: e3.label, symbol: e3.symbol ? ee(e3.symbol) : null }))), e2;
  }
  if ("classBreaks" === e2.type) {
    const t3 = e2.classBreakInfos, n5 = t3[0].symbol;
    return n5?.symbolLayers?.length && (e2.classBreakInfos = t3.map((e3) => ({ classMinValue: e3.classMinValue, classMaxValue: e3.classMaxValue, label: e3.label, symbol: e3.symbol ? ee(e3.symbol) : null }))), e2;
  }
  return e2;
}
function ae(e2, t3) {
  let n5, a13;
  if ("vector-magdir" === e2) n5 = t3[0].min, a13 = t3[0].max;
  else {
    const e3 = t3[0].min, r6 = t3[0].max, l9 = t3[1].min, s7 = t3[1].max;
    n5 = 0, a13 = Math.max(Math.abs(e3), Math.abs(l9), Math.abs(r6), Math.abs(s7));
  }
  return { minMagnitude: n5, maxMagnitude: a13 };
}

// node_modules/@arcgis/core/layers/mixins/RasterJobHandlerMixin.js
var i8 = (i10) => {
  let l9 = class extends i10 {
    constructor() {
      super(...arguments), this._rasterJobHandlerConfig = { instance: null, refCount: 0, connectionPromise: null };
    }
    get _rasterJobHandler() {
      return this._rasterJobHandlerConfig.instance;
    }
    increaseRasterJobHandlerUsage() {
      this._rasterJobHandlerConfig.refCount++;
    }
    decreaseRasterJobHandlerUsage() {
      this._rasterJobHandlerConfig.refCount--, this._rasterJobHandlerConfig.refCount <= 0 && this._shutdownJobHandler();
    }
    async convertVectorFieldData(e2, r6, t3) {
      if (null == e2) return null;
      const n5 = this._rasterJobHandler;
      return n5 ? n5.convertVectorFieldData({ pixelBlock: e2, dataType: r6 }, t3) : f3(e2, r6);
    }
    async createFlowMesh(e2, r6) {
      const t3 = this._rasterJobHandler;
      return t3 ? t3.createFlowMesh(e2, r6) : s6(e2.meshType, e2.simulationSettings, e2.flowData, null != r6.signal ? r6.signal : new AbortController().signal);
    }
    _initJobHandler() {
      const { _rasterJobHandlerConfig: e2 } = this;
      if (e2.connectionPromise) return e2.connectionPromise;
      const r6 = new t2();
      return e2.connectionPromise = r6.initialize().then(() => {
        e2.instance = r6, this.notifyChange("_rasterJobHandler");
      }, () => {
      }), e2.connectionPromise;
    }
    _shutdownJobHandler() {
      const { _rasterJobHandlerConfig: e2 } = this;
      e2.instance?.destroy(), e2.instance = null, e2.connectionPromise = null, e2.refCount = 0, this.notifyChange("_rasterJobHandler"), this._cachedRendererJson = void 0;
    }
    async _updateSymbolizer(e2, r6, t3, n5) {
      const o5 = this._rasterJobHandlerConfig.instance;
      if (!o5) return;
      const a13 = te({ ...r6.toJSON(), variableName: t3 });
      JSON.stringify(this._cachedRendererJson) !== JSON.stringify(a13) && (n5 && (e2.rasterInfo = n5), e2.rendererJSON = a13, e2.bind(), await o5.updateSymbolizer(e2), this._cachedRendererJson = r6.toJSON());
    }
    async _symbolize(e2, r6) {
      const { pixelData: t3, bandIds: n5, simpleStretchParams: o5 } = e2, s7 = this._rasterJobHandler;
      if (s7) {
        const e3 = await s7.symbolize({ ...t3, simpleStretchParams: o5, bandIds: n5 }, r6);
        return { extent: t3.extent, pixelBlock: e3 };
      }
      const a13 = e2.symbolizer.symbolize({ ...t3, simpleStretchParams: o5, bandIds: n5 });
      return { extent: t3.extent, pixelBlock: a13 };
    }
  };
  return r([m({ clonable: false })], l9.prototype, "_rasterJobHandler", null), r([m({ clonable: false })], l9.prototype, "_cachedRendererJson", void 0), r([m({ clonable: false })], l9.prototype, "_rasterJobHandlerConfig", void 0), l9 = r([a2("esri.layers.mixins.RasterJobHandlerMixin")], l9), l9;
};

// node_modules/@arcgis/core/layers/support/MosaicRule.js
var m10;
var h4 = i2()({ MT_FIRST: "first", MT_LAST: "last", MT_MIN: "min", MT_MAX: "max", MT_MEAN: "mean", MT_BLEND: "blend", MT_SUM: "sum" });
var w = i2()({ esriMosaicNone: "none", esriMosaicCenter: "center", esriMosaicNadir: "nadir", esriMosaicViewpoint: "viewpoint", esriMosaicAttribute: "attribute", esriMosaicLockRaster: "lock-raster", esriMosaicNorthwest: "northwest", esriMosaicSeamline: "seamline" });
function M2(e2) {
  let t3;
  switch (e2 ? e2.toLowerCase().replace("esrimosaic", "") : "") {
    case "byattribute":
    case "attribute":
      t3 = "esriMosaicAttribute";
      break;
    case "lockraster":
      t3 = "esriMosaicLockRaster";
      break;
    case "center":
      t3 = "esriMosaicCenter";
      break;
    case "northwest":
      t3 = "esriMosaicNorthwest";
      break;
    case "nadir":
      t3 = "esriMosaicNadir";
      break;
    case "viewpoint":
      t3 = "esriMosaicViewpoint";
      break;
    case "seamline":
      t3 = "esriMosaicSeamline";
      break;
    default:
      t3 = "esriMosaicNone";
  }
  return w.fromJSON(t3);
}
var y4 = m10 = class extends l {
  constructor(e2) {
    super(e2), this.ascending = true, this.itemRasterFunction = null, this.lockRasterIds = null, this.method = "none", this.multidimensionalDefinition = null, this.objectIds = null, this.operation = "first", this.sortField = null, this.sortValue = null, this.viewpoint = null, this.where = null;
  }
  readAscending(e2, t3) {
    return null != t3.ascending ? t3.ascending : null == t3.sortAscending || t3.sortAscending;
  }
  readMethod(e2, t3) {
    return M2(t3.mosaicMethod || t3.defaultMosaicMethod);
  }
  writeMultidimensionalDefinition(e2, t3, o5) {
    null != e2 && (e2 = e2.filter(({ variableName: e3, dimensionName: t4 }) => e3 && "*" !== e3 || t4)).length && (t3[o5] = e2.map((e3) => e3.toJSON()));
  }
  readOperation(e2, t3) {
    const o5 = t3.mosaicOperation, i10 = t3.mosaicOperator?.toLowerCase(), r6 = o5 || (i10 ? h4.toJSON(i10) : null);
    return h4.fromJSON(r6) || "first";
  }
  castSortValue(e2) {
    return null == e2 || "string" == typeof e2 || "number" == typeof e2 ? e2 : `${e2}`;
  }
  clone() {
    return new m10({ ascending: this.ascending, itemRasterFunction: a(this.itemRasterFunction), lockRasterIds: a(this.lockRasterIds), method: this.method, multidimensionalDefinition: a(this.multidimensionalDefinition), objectIds: a(this.objectIds), operation: this.operation, sortField: this.sortField, sortValue: this.sortValue, viewpoint: a(this.viewpoint), where: this.where });
  }
};
r([m({ type: Boolean, json: { write: true } })], y4.prototype, "ascending", void 0), r([o("ascending", ["ascending", "sortAscending"])], y4.prototype, "readAscending", null), r([m({ type: N3, json: { name: "itemRenderingRule", write: true } })], y4.prototype, "itemRasterFunction", void 0), r([m({ type: [x], json: { write: { overridePolicy() {
  return { enabled: "lock-raster" === this.method };
} } } })], y4.prototype, "lockRasterIds", void 0), r([m({ type: w.apiValues, json: { type: w.jsonValues, write: { target: "mosaicMethod", writer: w.write, isRequired: true } } })], y4.prototype, "method", void 0), r([o("method", ["mosaicMethod", "defaultMosaicMethod"])], y4.prototype, "readMethod", null), r([m({ type: [p3], json: { write: true } })], y4.prototype, "multidimensionalDefinition", void 0), r([r2("multidimensionalDefinition")], y4.prototype, "writeMultidimensionalDefinition", null), r([m({ type: [x], json: { name: "fids", write: true } })], y4.prototype, "objectIds", void 0), r([m({ type: h4.apiValues, json: { type: h4.jsonValues, read: { reader: h4.read }, write: { target: "mosaicOperation", writer: h4.write } } })], y4.prototype, "operation", void 0), r([o("operation", ["mosaicOperation", "mosaicOperator"])], y4.prototype, "readOperation", null), r([m({ type: String, json: { write: { overridePolicy() {
  return { enabled: "attribute" === this.method };
} } } })], y4.prototype, "sortField", void 0), r([m({ type: [String, Number], json: { write: { allowNull: true, overridePolicy() {
  return { enabled: "attribute" === this.method, allowNull: true };
} } } })], y4.prototype, "sortValue", void 0), r([s3("sortValue")], y4.prototype, "castSortValue", null), r([m({ type: _, json: { write: true } })], y4.prototype, "viewpoint", void 0), r([m({ type: String, json: { write: true } })], y4.prototype, "where", void 0), y4 = m10 = r([a2("esri.layers.support.MosaicRule")], y4);

// node_modules/@arcgis/core/layers/support/MultidimensionalSubset.js
var m11;
var p8 = { base: c2, key: "type", typeMap: { extent: z, polygon: P } };
var u6 = m11 = class extends l {
  constructor(e2) {
    super(e2), this.areaOfInterest = null, this.subsetDefinitions = null;
  }
  get dimensions() {
    const { subsetDefinitions: e2 } = this;
    if (null == e2 || 0 === e2.length) return [];
    const t3 = /* @__PURE__ */ new Map();
    e2.forEach((e3) => {
      if (!e3.dimensionName) return;
      let s8, o5;
      if (Array.isArray(e3.values[0])) {
        const t4 = e3.values;
        s8 = t4[0][0], o5 = t4[e3.values.length - 1][1];
      } else {
        const t4 = e3.values;
        s8 = t4[0], o5 = t4[e3.values.length - 1];
      }
      if (t3.has(e3.dimensionName)) {
        const r6 = t3.get(e3.dimensionName);
        r6[0] = Math.min(s8, r6[0]), r6[1] = Math.max(o5, r6[1]);
      } else t3.set(e3.dimensionName, [s8, o5]);
    });
    const s7 = [];
    for (const o5 of t3) s7.push({ name: o5[0], extent: o5[1] });
    return s7;
  }
  get variables() {
    const { subsetDefinitions: e2 } = this;
    if (null == e2 || 0 === e2.length) return [];
    const t3 = /* @__PURE__ */ new Set();
    return e2.forEach((e3) => {
      e3.variableName && t3.add(e3.variableName);
    }), [...t3];
  }
  clone() {
    const e2 = this.subsetDefinitions?.map((e3) => e3.clone()), t3 = this.areaOfInterest ? this.areaOfInterest.clone() : this.areaOfInterest;
    return new m11({ areaOfInterest: t3, subsetDefinitions: e2 });
  }
};
r([m({ types: p8, json: { read: f, write: true } })], u6.prototype, "areaOfInterest", void 0), r([m({ readOnly: true })], u6.prototype, "dimensions", null), r([m({ readOnly: true })], u6.prototype, "variables", null), r([m({ type: [p3], json: { write: true } })], u6.prototype, "subsetDefinitions", void 0), u6 = m11 = r([a2("esri.layers.support.MultidimensionalSubset")], u6);

// node_modules/@arcgis/core/renderers/support/rasterTypeUtils.js
var l8 = { key: "type", base: null, typeMap: { "unique-value": $, "class-breaks": j, "raster-colormap": m9, "raster-stretch": y3, "vector-field": b, "raster-shaded-relief": c7, flow: c5 } };
var p9 = { ...l8, typeMap: { ...l8.typeMap } };
delete p9.typeMap["vector-field"], delete p9.typeMap.flow;
var d5 = { uniqueValue: $, classBreaks: j, rasterStretch: y3, rasterColormap: m9, vectorField: b, rasterShadedRelief: c7, flowRenderer: c5 };
function u7(e2) {
  return e2 && d5[e2.type] || null;
}
function c8(r6, t3) {
  if (!r6) return null;
  if ("classBreaks" === r6.type && r6.classificationMethod) {
    const e2 = r6.authoringInfo || { classificationMethod: "" };
    e2.classificationMethod = r6.classificationMethod, r6.authoringInfo = e2;
  }
  "vectorField" === r6.type && r6.visualVariables && !Array.isArray(r6.visualVariables) && (r6.visualVariables = [r6.visualVariables]);
  const s7 = u7(r6);
  if (s7) {
    const e2 = new s7();
    return e2.read(r6, t3), e2;
  }
  return t3?.messages && r6 && t3.messages.push(new s2("renderer:unsupported", "Renderers of type '" + (r6.type || "unknown") + "' are not supported", { definition: r6, context: t3 })), null;
}

// node_modules/@arcgis/core/rest/support/ImageHistogramParameters.js
var y5;
var j2 = y5 = class extends l {
  constructor() {
    super(...arguments), this.geometry = null, this.mosaicRule = null, this.rasterFunction = null, this.pixelSize = null, this.raster = void 0, this.timeExtent = null;
  }
  writeGeometry(t3, e2, r6) {
    null != t3 && (e2.geometryType = v(t3), e2[r6] = t3.toJSON());
  }
  clone() {
    return new y5(a({ geometry: this.geometry, mosaicRule: this.mosaicRule, rasterFunction: this.rasterFunction, pixelSize: this.pixelSize, raster: this.raster, timeExtent: this.timeExtent }));
  }
};
r([m({ types: l2, json: { read: f } })], j2.prototype, "geometry", void 0), r([r2("geometry")], j2.prototype, "writeGeometry", null), r([m({ type: y4, json: { write: true } })], j2.prototype, "mosaicRule", void 0), r([m({ type: N3, json: { write: true, name: "renderingRule" } })], j2.prototype, "rasterFunction", void 0), r([m({ type: _, json: { write: true } })], j2.prototype, "pixelSize", void 0), r([m({ json: { write: true } })], j2.prototype, "raster", void 0), r([m({ type: u, json: { read: { source: "time" }, write: { target: "time" } } })], j2.prototype, "timeExtent", void 0), j2 = y5 = r([a2("esri.rest.support.ImageHistogramParameters")], j2);

// node_modules/@arcgis/core/rest/support/ImageSampleParameters.js
var d6;
var h5 = d6 = class extends l {
  constructor() {
    super(...arguments), this.geometry = null, this.interpolation = "nearest", this.mosaicRule = null, this.outFields = null, this.pixelSize = null, this.raster = void 0, this.returnFirstValueOnly = true, this.sampleDistance = null, this.sampleCount = null, this.sliceId = null, this.timeExtent = null;
  }
  writeGeometry(t3, e2, o5) {
    null != t3 && (e2.geometryType = v(t3), e2[o5] = t3.toJSON());
  }
  set locations(t3) {
    if (t3?.length) {
      const e2 = new m2({ spatialReference: t3[0].spatialReference, points: t3.map(({ x: t4, y: e3 }) => [t4, e3]) });
      this._set("locations", t3), this.geometry = e2;
    }
  }
  clone() {
    return new d6(a({ geometry: this.geometry, locations: this.locations, interpolation: this.interpolation, mosaicRule: this.mosaicRule, outFields: this.outFields, raster: this.raster, returnFirstValueOnly: this.returnFirstValueOnly, sampleDistance: this.sampleDistance, sampleCount: this.sampleCount, sliceId: this.sliceId, pixelSize: this.pixelSize, timeExtent: this.timeExtent }));
  }
};
r([m({ types: l2, json: { read: f } })], h5.prototype, "geometry", void 0), r([r2("geometry")], h5.prototype, "writeGeometry", null), r([m({ type: [_] })], h5.prototype, "locations", null), r([m({ type: String, json: { type: a5.jsonValues, read: a5.read, write: a5.write } })], h5.prototype, "interpolation", void 0), r([m({ type: y4, json: { write: true } })], h5.prototype, "mosaicRule", void 0), r([m({ type: [String], json: { write: true } })], h5.prototype, "outFields", void 0), r([m({ type: _, json: { write: true } })], h5.prototype, "pixelSize", void 0), r([m({ type: String, json: { write: true } })], h5.prototype, "raster", void 0), r([m({ type: Boolean, json: { write: true } })], h5.prototype, "returnFirstValueOnly", void 0), r([m({ type: Number, json: { write: true } })], h5.prototype, "sampleDistance", void 0), r([m({ type: Number, json: { write: true } })], h5.prototype, "sampleCount", void 0), r([m({ type: Number, json: { write: true } })], h5.prototype, "sliceId", void 0), r([m({ type: u, json: { read: { source: "time" }, write: { target: "time" } } })], h5.prototype, "timeExtent", void 0), h5 = d6 = r([a2("esri.rest.support.ImageSampleParameters")], h5);

// node_modules/@arcgis/core/rest/support/ImageSample.js
var i9 = class extends l {
  constructor() {
    super(...arguments), this.attributes = null, this.location = null, this.locationId = null, this.rasterId = null, this.resolution = null, this.pixelValue = null;
  }
};
r([m({ json: { write: true } })], i9.prototype, "attributes", void 0), r([m({ type: _, json: { write: true } })], i9.prototype, "location", void 0), r([m({ json: { write: true } })], i9.prototype, "locationId", void 0), r([m({ json: { write: true } })], i9.prototype, "rasterId", void 0), r([m({ json: { write: true } })], i9.prototype, "resolution", void 0), r([m({ json: { write: true } })], i9.prototype, "pixelValue", void 0), i9 = r([a2("esri.rest.support.ImageSample")], i9);

// node_modules/@arcgis/core/rest/support/ImageSampleResult.js
var p10 = class extends l {
  constructor() {
    super(...arguments), this.samples = [];
  }
};
r([m({ type: [i9], json: { write: true } })], p10.prototype, "samples", void 0), p10 = r([a2("esri.rest.support.ImageSampleResult")], p10);

export {
  N3 as N,
  y4 as y,
  u6 as u,
  q,
  B2 as B,
  E,
  z3 as z,
  N4 as N2,
  W,
  D,
  te,
  l8 as l,
  p9 as p,
  c8 as c,
  j2 as j,
  h5 as h,
  i9 as i,
  p10 as p2,
  i8 as i2
};
//# sourceMappingURL=chunk-TZWHWOLK.js.map
