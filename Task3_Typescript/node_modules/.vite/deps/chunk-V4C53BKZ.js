import {
  L
} from "./chunk-SHXYOAIC.js";
import {
  o
} from "./chunk-H5K53FMS.js";
import {
  P
} from "./chunk-BZYXFNL4.js";
import {
  e
} from "./chunk-7FAVUXK2.js";

// node_modules/@arcgis/core/views/3d/support/engineContent/sdfPrimitives.js
var a = 128;
var o2 = 0.5;
var s = e(o2 / 2, o2 / 2, 1 - o2 / 2, 1 - o2 / 2);
function c(t) {
  return "cross" === t || "x" === t;
}
function u(t, r = a, e2 = r * o2, s2 = 0) {
  const { data: c2, parameters: u2 } = i(t, r, e2, s2);
  return new L(c2, u2);
}
function i(t, r = a, n = r * o2, s2 = 0) {
  return { data: f(t, r, n, s2), parameters: { mipmap: false, wrap: { s: P.CLAMP_TO_EDGE, t: P.CLAMP_TO_EDGE }, width: r, height: r, components: 4, noUnpackFlip: true, reloadable: true } };
}
function f(t, r = a, n = r * o2, e2 = 0) {
  switch (t) {
    case "circle":
    default:
      return h(r, n);
    case "square":
      return M(r, n);
    case "cross":
      return l(r, n, e2);
    case "x":
      return p(r, n, e2);
    case "kite":
      return m(r, n);
    case "triangle":
      return b(r, n);
    case "arrow":
      return T(r, n);
  }
}
function h(t, r) {
  const n = t / 2 - 0.5;
  return q(t, R(n, n, r / 2));
}
function M(t, r) {
  return w(t, r, false);
}
function m(t, r) {
  return w(t, r, true);
}
function l(t, r, n = 0) {
  return x(t, r, false, n);
}
function p(t, r, n = 0) {
  return x(t, r, true, n);
}
function b(t, r) {
  return q(t, g(t / 2, r, r / 2));
}
function T(t, r) {
  const n = r, e2 = r / 2, a2 = t / 2, o3 = 0.8 * n, s2 = R(a2, (t - r) / 2 - o3, Math.sqrt(o3 * o3 + e2 * e2)), c2 = g(a2, n, e2);
  return q(t, (t2, r2) => Math.max(c2(t2, r2), -s2(t2, r2)));
}
function w(t, r, n) {
  return n && (r /= Math.SQRT2), q(t, (e2, a2) => {
    let o3 = e2 - 0.5 * t + 0.25, s2 = 0.5 * t - a2 - 0.75;
    if (n) {
      const t2 = (o3 + s2) / Math.SQRT2;
      s2 = (s2 - o3) / Math.SQRT2, o3 = t2;
    }
    return Math.max(Math.abs(o3), Math.abs(s2)) - 0.5 * r;
  });
}
function x(t, r, n, e2 = 0) {
  r -= e2, n && (r *= Math.SQRT2);
  const a2 = 0.5 * r;
  return q(t, (r2, o3) => {
    let s2, c2 = r2 - 0.5 * t, u2 = 0.5 * t - o3 - 1;
    if (n) {
      const t2 = (c2 + u2) / Math.SQRT2;
      u2 = (u2 - c2) / Math.SQRT2, c2 = t2;
    }
    return c2 = Math.abs(c2), u2 = Math.abs(u2), s2 = c2 > u2 ? c2 > a2 ? Math.sqrt((c2 - a2) * (c2 - a2) + u2 * u2) : u2 : u2 > a2 ? Math.sqrt(c2 * c2 + (u2 - a2) * (u2 - a2)) : c2, s2 -= e2 / 2, s2;
  });
}
function R(t, r, n) {
  return (e2, a2) => {
    const o3 = e2 - t, s2 = a2 - r;
    return Math.sqrt(o3 * o3 + s2 * s2) - n;
  };
}
function g(t, r, n) {
  const e2 = Math.sqrt(r * r + n * n);
  return (a2, o3) => {
    const s2 = Math.abs(a2 - t) - n, c2 = o3 - t + r / 2 + 0.75, u2 = (r * s2 + n * c2) / e2, i2 = -c2;
    return Math.max(u2, i2);
  };
}
function q(r, n) {
  const e2 = new Uint8Array(4 * r * r);
  for (let a2 = 0; a2 < r; a2++) for (let o3 = 0; o3 < r; o3++) {
    const s2 = o3 + r * a2;
    let c2 = n(o3, a2);
    c2 = c2 / r + 0.5, o(c2, e2, 4 * s2);
  }
  return e2;
}

export {
  a,
  o2 as o,
  s,
  c,
  u,
  i
};
//# sourceMappingURL=chunk-V4C53BKZ.js.map
