import {
  e,
  i as i3,
  p,
  p2
} from "./chunk-O75YZHXO.js";
import {
  a as a2
} from "./chunk-IY3QUJDS.js";
import {
  s as s3,
  t
} from "./chunk-LW7J7Z4M.js";
import {
  R
} from "./chunk-X3UT6DT7.js";
import {
  g
} from "./chunk-B6C7UPBZ.js";
import {
  m as m5
} from "./chunk-6TS2ZJL4.js";
import {
  f as f2,
  u as u2
} from "./chunk-SYPTUUSZ.js";
import {
  r as r2
} from "./chunk-EOMIFMDH.js";
import {
  P,
  m as m4
} from "./chunk-52HWRRRQ.js";
import {
  y
} from "./chunk-OGOQOMMV.js";
import {
  z
} from "./chunk-O5TPFXRT.js";
import {
  _,
  c
} from "./chunk-Q6XRAGMA.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  b as b2,
  m as m2
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  m
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  i as i2,
  o as o2
} from "./chunk-3NBBZ43U.js";
import {
  n
} from "./chunk-VOLWOTEG.js";
import {
  H,
  s as s2
} from "./chunk-ZWFY3WY5.js";
import {
  b,
  m2 as m3,
  u3 as u
} from "./chunk-GZ2P4SCJ.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  has
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/rest/geoprocessor/GPOptions.js
var c2;
var i4 = c2 = class extends b2 {
  constructor(e16) {
    super(e16), this.outSpatialReference = null, this.processExtent = null, this.processSpatialReference = null, this.returnColumnName = false, this.returnFeatureCollection = false, this.returnM = false, this.returnZ = false;
  }
  static from(e16) {
    return m(c2, e16);
  }
};
r([m2({ type: f })], i4.prototype, "outSpatialReference", void 0), r([m2({ type: z })], i4.prototype, "processExtent", void 0), r([m2({ type: f })], i4.prototype, "processSpatialReference", void 0), r([m2({ nonNullable: true })], i4.prototype, "returnColumnName", void 0), r([m2({ nonNullable: true })], i4.prototype, "returnFeatureCollection", void 0), r([m2({ nonNullable: true })], i4.prototype, "returnM", void 0), r([m2({ nonNullable: true })], i4.prototype, "returnZ", void 0), i4 = c2 = r([a("esri.rest.geoprocessor.GPOptions")], i4);

// node_modules/@arcgis/core/layers/support/MapImage.js
var p3 = class extends l {
  constructor() {
    super(...arguments), this.extent = null, this.height = null, this.href = null, this.opacity = 1, this.rotation = 0, this.scale = null, this.visible = true, this.width = null;
  }
};
r([m2({ type: z })], p3.prototype, "extent", void 0), r([m2()], p3.prototype, "height", void 0), r([m2()], p3.prototype, "href", void 0), r([m2()], p3.prototype, "opacity", void 0), r([m2()], p3.prototype, "rotation", void 0), r([m2()], p3.prototype, "scale", void 0), r([m2()], p3.prototype, "visible", void 0), r([m2()], p3.prototype, "width", void 0), p3 = r([a("esri.layers.support.MapImage")], p3);

// node_modules/@arcgis/core/rest/support/ArealUnit.js
var c3 = class extends l {
  constructor(r7) {
    super(r7), this.area = 0, this.units = null;
  }
};
r([m2({ json: { write: true } })], c3.prototype, "area", void 0), r([r2(s3)], c3.prototype, "units", void 0), c3 = r([a("esri.rest.support.ArealUnit")], c3);

// node_modules/@arcgis/core/rest/support/DataFile.js
var s4 = class extends l {
  constructor(r7) {
    super(r7), this.itemId = null, this.url = null;
  }
};
r([m2({ type: String, json: { read: { source: "itemID" }, write: { target: "itemID" } } })], s4.prototype, "itemId", void 0), r([m2({ type: String, json: { write: true } })], s4.prototype, "url", void 0), s4 = r([a("esri.rest.support.DataFile")], s4);

// node_modules/@arcgis/core/rest/support/LinearUnit.js
var c4 = class extends l {
  constructor(o6) {
    super(o6), this.distance = 0, this.units = null;
  }
};
r([m2({ json: { write: true } })], c4.prototype, "distance", void 0), r([r2(t)], c4.prototype, "units", void 0), c4 = r([a("esri.rest.support.LinearUnit")], c4);

// node_modules/@arcgis/core/rest/support/parameterValueUtils.js
var a3 = "multi-value-";
var t2 = new o2({ GPArealUnit: "areal-unit", GPBoolean: "boolean", GPComposite: "composite", GPDataFile: "data-file", GPDate: "date", GPDouble: "double", GPFeatureRecordSetLayer: "feature-record-set-layer", Field: "field", GPLinearUnit: "linear-unit", GPLong: "long", GPRasterData: "raster-data", GPRasterDataLayer: "raster-data-layer", GPRecordSet: "record-set", GPString: "string", GPValueTable: "value-table", "GPMultiValue:GPArealUnit": `${a3}areal-unit`, "GPMultiValue:GPBoolean": `${a3}boolean`, "GPMultiValue:GPComposite": `${a3}composite`, "GPMultiValue:GPDataFile": `${a3}data-file`, "GPMultiValue:GPDate": `${a3}date`, "GPMultiValue:GPDouble": `${a3}double`, "GPMultiValue:GPFeatureRecordSetLayer": `${a3}feature-record-set-layer`, "GPMultiValue:Field": `${a3}field`, "GPMultiValue:GPLinearUnit": `${a3}linear-unit`, "GPMultiValue:GPLong": `${a3}long`, "GPMultiValue:GPRasterData": `${a3}raster-data`, "GPMultiValue:GPRasterDataLayer": `${a3}raster-data-layer`, "GPMultiValue:GPRecordSet": `${a3}record-set`, "GPMultiValue:GPString": `${a3}string` });

// node_modules/@arcgis/core/rest/support/ParameterValue.js
var a4 = class extends l {
  constructor(r7) {
    super(r7), this.dataType = null, this.paramName = null, this.value = null;
  }
};
r([r2(t2, { ignoreUnknown: false })], a4.prototype, "dataType", void 0), r([m2()], a4.prototype, "paramName", void 0), r([m2()], a4.prototype, "value", void 0), a4 = r([a("esri.rest.support.ParameterValue")], a4);

// node_modules/@arcgis/core/rest/support/RasterData.js
var p4 = class extends l {
  constructor(r7) {
    super(r7), this.format = null, this.itemId = null, this.type = null, this.url = null;
  }
  readType(r7) {
    return "ImageService" === r7 ? "image-service" : null;
  }
};
r([m2()], p4.prototype, "format", void 0), r([m2({ json: { name: "itemID", write: true } })], p4.prototype, "itemId", void 0), r([m2()], p4.prototype, "type", void 0), r([o("type")], p4.prototype, "readType", null), r([m2({ json: { write: true } })], p4.prototype, "url", void 0), p4 = r([a("esri.rest.support.RasterData")], p4);

// node_modules/@arcgis/core/rest/geoprocessor/utils.js
async function S(r7, a9, n7, s10, i12) {
  const u5 = {}, m10 = {}, c9 = [];
  return d(s10, c9, u5), R(c9).then((t21) => {
    const { outSpatialReference: c10, processExtent: p17, processSpatialReference: f7, returnColumnName: l5, returnFeatureCollection: y6, returnM: S3, returnZ: d4 } = n7, { path: N2 } = f2(r7);
    for (const e16 in u5) {
      const [r8, a10] = u5[e16];
      m10[e16] = t21.slice(r8, a10);
    }
    const j3 = c10 ? c10.wkid || c10 : null, g9 = f7 ? f7.wkid || f7 : null, J3 = "execute" === a9 ? { returnColumnName: l5 || void 0, returnFeatureCollection: y6 || void 0, returnM: S3 || void 0, returnZ: d4 || void 0 } : null, O3 = R2({ ...p17 ? { context: { extent: p17, outSR: j3, processSR: g9 } } : { "env:outSR": j3, "env:processSR": g9 }, ...s10, ...J3, f: "json" }, null, m10), v2 = { ...i12, query: O3 };
    return H(`${N2}/${a9}`, v2);
  });
}
function d(e16, r7, t21) {
  for (const a9 in e16) {
    const n7 = e16[a9];
    if (n7 && "object" == typeof n7 && n7 instanceof g) {
      const { features: e17 } = n7;
      t21[a9] = [r7.length, r7.length + e17.length], e17.forEach((e18) => {
        r7.push(e18.geometry);
      });
    }
  }
}
async function N(e16, t21) {
  switch (e16) {
    case "areal-unit":
      return c3.fromJSON(t21);
    case "boolean":
    case "double":
    case "long":
    case "string":
    case "value-table":
      return t21;
    case "date":
      return new Date(t21);
    case "data-file":
      return s4.fromJSON(t21);
    case "linear-unit":
      return c4.fromJSON(t21);
    case "feature-record-set-layer":
      if ("url" in t21) return s4.fromJSON(t21);
      if ("layerDefinition" in t21) {
        const e17 = new (0, (await import("./FeatureLayer-5JKXWSL3.js")).default)(), { layerDefinition: a9, featureSet: n7 } = t21;
        return e17.read({ layerDefinition: a9, featureSet: n7 }, { origin: "portal-item" }), e17.spatialReference = f.fromJSON(n7.spatialReference ?? a9.spatialReference ?? a9.extent.spatialReference), e17;
      }
      return g.fromJSON(t21);
    case "record-set":
      return "url" in t21 ? s4.fromJSON(t21) : g.fromJSON(t21);
    case "raster-data":
    case "raster-data-layer":
      return "mapImage" in t21 ? p3.fromJSON(t21.mapImage) : p4.fromJSON(t21);
    case "field":
      return m5.fromJSON(t21);
  }
}
function j(e16) {
  return e16.startsWith(a3);
}
function g2(e16) {
  return e16.replace(a3, "");
}
async function J(e16, r7) {
  const t21 = g2(e16), a9 = "composite" === t21 ? r7.map((e17) => N(t2.fromJSON(e17.dataType), e17.value)) : r7.map((e17) => N(t21, e17));
  return Promise.all(a9);
}
async function O(e16) {
  const r7 = t2.fromJSON(e16.dataType), { paramName: t21 } = e16, a9 = j(r7) ? await J(r7, e16.value) : await N(r7, e16.value);
  return new a4({ dataType: r7, paramName: t21, value: a9 });
}
function R2(e16, r7, t21) {
  for (const a9 in e16) {
    const r8 = e16[a9];
    Array.isArray(r8) ? e16[a9] = JSON.stringify(r8.map((e17) => R2({ item: e17 }, true).item)) : r8 instanceof Date && (e16[a9] = r8.getTime());
  }
  return u2(e16, r7, t21);
}

// node_modules/@arcgis/core/rest/support/JobInfo.js
var p5;
var h = i2()({ esriJobCancelled: "job-cancelled", esriJobCancelling: "job-cancelling", esriJobDeleted: "job-deleted", esriJobDeleting: "job-deleting", esriJobTimedOut: "job-timed-out", esriJobExecuting: "job-executing", esriJobFailed: "job-failed", esriJobNew: "job-new", esriJobSubmitted: "job-submitted", esriJobSucceeded: "job-succeeded", esriJobWaiting: "job-waiting" }, { ignoreUnknown: false });
var d2 = 1e3;
var _a;
var g3 = (_a = class extends l {
  constructor(e16) {
    super(e16), this.jobId = null, this.jobStatus = null, this.messages = null, this.progress = null, this.requestOptions = null, this.sourceUrl = null, this._cancelJobTimer = void 0, this._jobCompletionTimer = void 0;
  }
  async cancelJob(e16) {
    const { jobId: t21, sourceUrl: s10 } = this, { path: a9 } = f2(s10), c9 = { ...this.requestOptions, ...e16, query: { f: "json" } }, n7 = `${a9}/jobs/${t21}/cancel`, { data: u5 } = await H(n7, c9), { messages: b4, jobStatus: m10, progress: j3 } = p5.fromJSON(u5);
    return this.set({ messages: b4, jobStatus: m10, progress: j3 }), "job-cancelled" === m10 ? this : new Promise((o6, t22) => {
      m3(c9.signal, () => {
        this.clearCancelJobTimer(), t22(u());
      }), this.clearCancelJobTimer();
      const s11 = () => {
        this._cancelJobTimer || t22(u()), this.checkJobStatus(e16).then(({ jobStatus: e17 }) => {
          switch (e17) {
            case "job-cancelling":
            default:
              this._cancelJobTimer = setTimeout(s11, d2);
              break;
            case "job-deleted":
            case "job-deleting":
            case "job-executing":
            case "job-failed":
            case "job-new":
            case "job-submitted":
            case "job-succeeded":
            case "job-timed-out":
            case "job-waiting":
              t22(this);
              break;
            case "job-cancelled":
              o6(this);
          }
        }).catch((e17) => {
          t22(e17);
        });
      };
      this._cancelJobTimer = setTimeout(s11, d2);
    });
  }
  destroy() {
    clearInterval(this._cancelJobTimer), clearInterval(this._jobCompletionTimer);
  }
  async checkJobStatus(e16) {
    const { path: t21 } = f2(this.sourceUrl), s10 = { ...this.requestOptions, ...e16, query: { f: "json" } }, r7 = `${t21}/jobs/${this.jobId}`, { data: i12 } = await H(r7, s10), { messages: a9, jobStatus: c9, progress: n7 } = p5.fromJSON(i12);
    return this.set({ messages: a9, jobStatus: c9, progress: n7 }), this;
  }
  async fetchResultData(e16, t21, s10) {
    t21 = i4.from(t21 || {});
    const { returnColumnName: r7, returnFeatureCollection: i12, returnM: a9, returnZ: c9, outSpatialReference: n7 } = t21, { path: j3 } = f2(this.sourceUrl), p17 = R2({ returnColumnName: r7 || null, returnFeatureCollection: i12 || null, returnM: a9 || null, returnZ: c9 || null, outSR: n7, returnType: "data", f: "json" }, null), h8 = { ...this.requestOptions, ...s10, query: p17 }, d4 = `${j3}/jobs/${this.jobId}/results/${e16}`, { data: g9 } = await H(d4, h8);
    return O(g9);
  }
  async fetchResultImage(e16, t21, s10) {
    const { path: r7 } = f2(this.sourceUrl), i12 = { ...t21.toJSON(), f: "json" }, a9 = R2(i12), c9 = { ...this.requestOptions, ...s10, query: a9 }, n7 = `${r7}/jobs/${this.jobId}/results/${e16}`, { data: u5 } = await H(n7, c9);
    return O(u5);
  }
  async fetchResultMapImageLayer() {
    const { path: e16 } = f2(this.sourceUrl), o6 = e16.indexOf("/GPServer/"), t21 = `${e16.slice(0, Math.max(0, o6))}/MapServer/jobs/${this.jobId}`;
    return new (0, (await import("./MapImageLayer-UVIHFECX.js")).default)({ url: t21 });
  }
  async waitForJobCompletion(e16 = {}) {
    const { interval: o6 = d2, signal: t21, statusCallback: s10 } = e16;
    return new Promise((e17, a9) => {
      m3(t21, () => {
        this.clearJobCompletionTimer(), a9(u());
      }), this.clearJobCompletionTimer();
      const c9 = () => {
        this._jobCompletionTimer || a9(u()), this.checkJobStatus().then(({ jobStatus: t22 }) => {
          switch (t22) {
            case "job-succeeded":
              e17(this);
              break;
            case "job-executing":
            case "job-new":
            case "job-submitted":
            case "job-waiting":
              s10 && s10(this), this._jobCompletionTimer = setTimeout(c9, o6);
              break;
            case "job-cancelled":
            case "job-cancelling":
            case "job-deleted":
            case "job-deleting":
            case "job-failed":
            case "job-timed-out":
              a9(this);
              break;
            default:
              this._jobCompletionTimer = setTimeout(c9, o6);
          }
        }).catch((e18) => {
          a9(e18);
        });
      };
      this._jobCompletionTimer = setTimeout(c9, o6);
    });
  }
  clearCancelJobTimer() {
    clearTimeout(this._cancelJobTimer), this._cancelJobTimer = void 0;
  }
  clearJobCompletionTimer() {
    clearTimeout(this._jobCompletionTimer), this._jobCompletionTimer = void 0;
  }
}, p5 = _a, _a);
r([m2()], g3.prototype, "jobId", void 0), r([r2(h, { ignoreUnknown: false })], g3.prototype, "jobStatus", void 0), r([m2({ type: [a2] })], g3.prototype, "messages", void 0), r([m2()], g3.prototype, "progress", void 0), r([m2()], g3.prototype, "requestOptions", void 0), r([m2({ json: { write: true } })], g3.prototype, "sourceUrl", void 0), g3 = p5 = r([a("esri.rest.support.JobInfo")], g3);

// node_modules/@arcgis/core/rest/geoprocessor/submitJob.js
async function s5(s10, m10, n7, f7) {
  return n7 = i4.from(n7 || {}), S(s10, "submitJob", n7, m10 ?? {}, f7).then(({ data: o6 }) => {
    const r7 = g3.fromJSON(o6);
    return r7.sourceUrl = s10, r7;
  });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResultHeader.js
var t3 = class extends b2 {
  constructor(e16) {
    super(e16), this.headerKeys = [], this.outSpatialReference = null, this.exceededTransferLimit = false;
  }
};
r([m2()], t3.prototype, "headerKeys", void 0), r([m2()], t3.prototype, "outSpatialReference", void 0), r([m2()], t3.prototype, "exceededTransferLimit", void 0), t3 = r([a("esri.rest.knowledgeGraph.GraphQueryResultHeader")], t3);

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js
var p6 = class extends b2 {
  constructor(r7) {
    super(r7), this.resultRows = [], this.resultHeader = new t3();
  }
};
r([m2()], p6.prototype, "resultRows", void 0), r([m2()], p6.prototype, "resultHeader", void 0), p6 = r([a("esri.rest.knowledgeGraph.GraphQueryResult")], p6);

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js
var a5 = class extends b2 {
  constructor(r7) {
    super(r7), this.resultRowsStream = new ReadableStream(), this.resultHeader = new t3();
  }
};
r([m2()], a5.prototype, "resultRowsStream", void 0), r([m2()], a5.prototype, "resultHeader", void 0), a5 = r([a("esri.rest.knowledgeGraph.GraphQueryStreamingResult")], a5);

// node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js
var s6 = class extends l {
  constructor(o6) {
    super(o6), this.name = null, this.unique = null, this.ascending = true, this.description = "", this.fieldNames = [];
  }
};
r([m2({ type: String, json: { write: true } })], s6.prototype, "name", void 0), r([m2({ type: Boolean, json: { write: true } })], s6.prototype, "unique", void 0), r([m2({ type: Boolean, json: { write: true } })], s6.prototype, "ascending", void 0), r([m2({ type: String, json: { write: true } })], s6.prototype, "description", void 0), r([m2({ type: [String], json: { write: true } })], s6.prototype, "fieldNames", void 0), s6 = r([a("esri.rest.knowledgeGraph.FieldIndex")], s6);

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js
var i5 = class extends l {
  constructor(t21) {
    super(t21), this.name = null, this.alias = null, this.fieldType = null, this.geometryType = null, this.hasM = null, this.hasZ = null, this.nullable = null, this.editable = true, this.required = false, this.defaultVisibility = true, this.systemMaintained = null, this.role = "esriGraphPropertyUNSPECIFIED", this.defaultValue = null;
  }
};
r([m2({ type: String, json: { write: true } })], i5.prototype, "name", void 0), r([m2({ type: String, json: { write: true } })], i5.prototype, "alias", void 0), r([m2({ type: String, json: { write: true } })], i5.prototype, "fieldType", void 0), r([m2({ type: String, json: { write: true } })], i5.prototype, "geometryType", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "hasM", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "hasZ", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "nullable", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "editable", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "required", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "defaultVisibility", void 0), r([m2({ type: Boolean, json: { write: true } })], i5.prototype, "systemMaintained", void 0), r([m2({ type: String, json: { write: true } })], i5.prototype, "role", void 0), r([m2({ json: { write: true } })], i5.prototype, "defaultValue", void 0), i5 = r([a("esri.rest.knowledgeGraph.GraphProperty")], i5);

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js
var i6 = class extends l {
  constructor(o6) {
    super(o6), this.name = null, this.alias = null, this.role = "Regular", this.strict = null, this.properties = [], this.fieldIndexes = [], this.type = null;
  }
};
r([m2({ type: String, json: { write: true } })], i6.prototype, "name", void 0), r([m2({ type: String, json: { write: true } })], i6.prototype, "alias", void 0), r([m2({ type: String, json: { write: true } })], i6.prototype, "role", void 0), r([m2({ type: Boolean, json: { write: true } })], i6.prototype, "strict", void 0), r([m2({ type: [i5], json: { write: true } })], i6.prototype, "properties", void 0), r([m2({ type: [s6], json: { write: true } })], i6.prototype, "fieldIndexes", void 0), i6 = r([a("esri.rest.knowledgeGraph.GraphObjectType")], i6);

// node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js
var e2 = class extends i6 {
  constructor(r7) {
    super(r7), this.type = "entity";
  }
};
e2 = r([a("esri.rest.knowledgeGraph.EntityType")], e2);

// node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js
var t4 = class extends i6 {
  constructor(o6) {
    super(o6), this.endPoints = [], this.type = "relationship";
  }
};
r([m2({ json: { write: true } })], t4.prototype, "endPoints", void 0), t4 = r([a("esri.rest.knowledgeGraph.RelationshipType")], t4);

// node_modules/@arcgis/core/rest/knowledgeGraph/SourceTypeValueBehavior.js
var t5 = class extends l {
  constructor(r7) {
    super(r7), this.value = null, this.behavior = null;
  }
};
r([m2({ type: String, json: { write: true } })], t5.prototype, "value", void 0), r([m2({ type: String, json: { write: true } })], t5.prototype, "behavior", void 0), t5 = r([a("esri.rest.knowledgeGraph.SourceTypeValueBehavior")], t5);

// node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js
var a6 = class extends l {
  constructor(e16) {
    super(e16), this.timestamp = null, this.spatialReference = null, this.strict = null, this.objectIdField = null, this.globalIdField = null, this.arcgisManaged = null, this.identifierInfo = null, this.searchIndexes = [], this.entityTypes = [], this.relationshipTypes = [], this.metaEntityTypes = [], this.provenanceSourceTypeValues = [];
  }
};
r([m2({ type: Date, json: { type: Number, write: { writer: (e16, t21) => {
  t21.timestamp = e16?.getTime();
} } } })], a6.prototype, "timestamp", void 0), r([m2({ type: f, json: { write: true } })], a6.prototype, "spatialReference", void 0), r([m2({ type: Boolean, json: { write: true } })], a6.prototype, "strict", void 0), r([m2({ type: String, json: { write: true } })], a6.prototype, "objectIdField", void 0), r([m2({ type: String, json: { write: true } })], a6.prototype, "globalIdField", void 0), r([m2()], a6.prototype, "arcgisManaged", void 0), r([m2()], a6.prototype, "identifierInfo", void 0), r([m2()], a6.prototype, "searchIndexes", void 0), r([m2({ type: [e2], json: { write: true } })], a6.prototype, "entityTypes", void 0), r([m2({ type: [t4], json: { write: true } })], a6.prototype, "relationshipTypes", void 0), r([m2({ type: [e2], json: { write: true } })], a6.prototype, "metaEntityTypes", void 0), r([m2({ type: [t5], json: { write: true } })], a6.prototype, "provenanceSourceTypeValues", void 0), a6 = r([a("esri.rest.knowledgeGraph.DataModel")], a6);

// node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js
var p7 = class extends l {
  constructor(t21) {
    super(t21), this.capabilities = [], this.supportsSearch = false, this.supportedQueryFormats = [], this.allowGeometryUpdates = false, this.searchMaxRecordCount = null, this.serviceCapabilities = null, this.maxRecordCount = null, this.description = "", this.copyrightText = "", this.units = "", this.spatialReference = null, this.currentVersion = null, this.dateFieldsTimeReference = null, this.serviceItemId = "", this.supportsDocuments = false, this.dataEditingNotSupported = false, this.schemaEditingNotSupported = false, this.supportsProvenance = false;
  }
};
r([m2({ type: [String], json: { write: true } })], p7.prototype, "capabilities", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "supportsSearch", void 0), r([m2({ type: [String], json: { write: true } })], p7.prototype, "supportedQueryFormats", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "allowGeometryUpdates", void 0), r([m2({ type: Number, json: { write: true } })], p7.prototype, "searchMaxRecordCount", void 0), r([m2({ type: Object, json: { write: true } })], p7.prototype, "serviceCapabilities", void 0), r([m2({ type: Number, json: { write: true } })], p7.prototype, "maxRecordCount", void 0), r([m2({ type: String, json: { write: true } })], p7.prototype, "description", void 0), r([m2({ type: String, json: { write: true } })], p7.prototype, "copyrightText", void 0), r([m2({ type: String, json: { write: true } })], p7.prototype, "units", void 0), r([m2({ type: f, json: { write: true } })], p7.prototype, "spatialReference", void 0), r([m2({ type: Number, json: { write: true } })], p7.prototype, "currentVersion", void 0), r([m2({ type: Object, json: { write: true } })], p7.prototype, "dateFieldsTimeReference", void 0), r([m2({ type: String, json: { write: true } })], p7.prototype, "serviceItemId", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "supportsDocuments", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "dataEditingNotSupported", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "schemaEditingNotSupported", void 0), r([m2({ type: Boolean, json: { write: true } })], p7.prototype, "supportsProvenance", void 0), p7 = r([a("esri.rest.knowledgeGraph.ServiceDefinition")], p7);

// node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js
var p8 = class extends l {
  constructor(o6) {
    super(o6), this.url = null, this.dataModel = null, this.serviceDefinition = null;
  }
};
r([m2({ type: String, json: { write: true } })], p8.prototype, "url", void 0), r([m2({ type: a6, json: { write: true } })], p8.prototype, "dataModel", void 0), r([m2({ type: p7, json: { write: true } })], p8.prototype, "serviceDefinition", void 0), p8 = r([a("esri.rest.knowledgeGraph.KnowledgeGraph")], p8);

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmUtils.js
function e3(e16, o6, d4) {
  if (0 !== e16.error_code) throw new s(o6, d4, { errorCode: e16.error_code, errorMessage: e16.error_message });
}
function o3(e16) {
  return e16?.error_code ? new s("knowledgeGraphService:server-or-decoding-error", e16.error_message, { errorCode: e16.error_code }) : void 0;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/clientDataToWasmEncodedFactories.js
function t6(t21, r7, a9, o6 = false) {
  const c9 = new a9.ClientDataFetchRequestEncoder();
  c9.deleteLater();
  for (const e16 of t21) {
    const t22 = n2(e16, r7, a9, o6);
    c9.add_client_data_fetch_request_parameter(t22);
  }
  c9.encode();
  const s10 = c9.get_encoding_result();
  return e3(s10.error, "knowledge-graph:fetchClientDataAtKeys-encoding-failed", "Attempting to encode the fetchClientDataAtKeys failed"), structuredClone(s10.get_byte_buffer());
}
function n2(e16, t21, n7, r7) {
  const a9 = new n7.ClientDataKey();
  a9.deleteLater(), a9.key_string = e16;
  const o6 = new n7.ClientDataFetchRequestParameter();
  o6.deleteLater(), o6.set_key(a9);
  const c9 = t21.get(e16);
  return c9 && !r7 && (o6.v_tag = { v_tag: c9.version }), o6;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js
var t7 = "esri/rest/knowledgeGraph/wasmInterface/";
var s7;
var n3 = null;
async function r3() {
  const e16 = n3 ?? s7;
  if (e16) return e16;
  const t21 = !!has("wasm-simd");
  return s7 = o4(t21), s7;
}
async function o4(s10) {
  if (s10) {
    const { default: s11 } = await import("./arcgis-knowledge-client-core-simd-H5WXH3RS.js").then((e16) => e16.a);
    return s11({ locateFile: (s12) => n(t7 + s12) });
  }
  const { default: n7 } = await import("./arcgis-knowledge-client-core-HMAWKQWD.js").then((e16) => e16.a);
  return n7({ locateFile: (s11) => n(t7 + s11) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js
var e4;
var T;
var i7;
!function(e16) {
  e16[e16.OBJECT = 0] = "OBJECT", e16[e16.ENTITY = 1] = "ENTITY", e16[e16.RELATIONSHIP = 2] = "RELATIONSHIP", e16[e16.PATH = 3] = "PATH", e16[e16.ARRAY = 4] = "ARRAY";
}(e4 || (e4 = {})), function(e16) {
  e16[e16.view = 0] = "view", e16[e16.edit = 1] = "edit";
}(T || (T = {})), function(e16) {
  e16[e16.exclude = 0] = "exclude", e16[e16.include = 1] = "include";
}(i7 || (i7 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js
function l2(e16, t21) {
  const n7 = new t21.ArrayValue();
  return n7.deleteLater(), e16.forEach((e17) => {
    n7.add_value(f3(e17, t21));
  }), n7;
}
function s8(e16, t21) {
  const n7 = new t21.ObjectValue();
  n7.deleteLater();
  for (const [o6, r7] of Object.entries(e16)) n7.set_key_value(o6, f3(r7, t21));
  return n7;
}
function u3(t21, i12) {
  if (t21 instanceof m4) return g4(t21, i12);
  if (t21 instanceof _) return h2(t21, i12);
  if (t21 instanceof y || t21 instanceof P) return p9(t21, i12);
  throw new s("knowledge-graph:unsupported-geometry", "Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge", { geometry: t21 });
}
function y2(e16, t21) {
  t21.input_quantization_parameters = { xy_resolution: e16.xyResolution, x_false_origin: e16.xFalseOrigin, y_false_origin: e16.yFalseOrigin, z_resolution: e16.zResolution, z_false_origin: e16.zFalseOrigin, m_resolution: e16.mResolution, m_false_origin: e16.mFalseOrigin };
}
function m6(t21, n7, o6) {
  if (!t21.extent) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization provided to the encoder had an illegal value as part of its extent", t21.extent);
  if (!t21.quantizeMode) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal mode setting", t21.quantizeMode);
  if (!t21.tolerance) throw new s("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal tolerance setting", t21.quantizeMode);
  n7.output_quantization_parameters = { extent: { xmax: t21.extent.xmax, ymax: t21.extent.ymax, xmin: t21.extent.xmin, ymin: t21.extent.ymin }, quantize_mode: o6.esriQuantizeMode[t21.quantizeMode], tolerance: t21.tolerance };
}
function c5(e16, t21) {
  t21.provenance_behavior = { value: i7[e16] };
}
function f3(e16, n7) {
  if (null == e16) return "";
  if ("object" != typeof e16) return e16;
  if (e16 instanceof Date) return e16;
  if (e16 instanceof c) return u3(e16, n7);
  if (Array.isArray(e16)) {
    const t21 = new n7.ArrayValue();
    return t21.deleteLater(), e16.forEach((e17) => {
      t21.add_value(f3(e17, n7));
    }), t21;
  }
  return s8(e16, n7);
}
function p9(e16, t21) {
  const n7 = new t21.GeometryValue();
  n7.deleteLater(), n7.has_z = e16.hasZ, n7.has_m = e16.hasM;
  const o6 = [], i12 = [];
  let l5 = [];
  e16 instanceof y ? (n7.geometry_type = t21.esriGeometryType.esriGeometryPolyline, l5 = e16.paths) : e16 instanceof P && (n7.geometry_type = t21.esriGeometryType.esriGeometryPolygon, l5 = e16.rings);
  let s10 = 0, u5 = 0;
  return l5.forEach((e17) => {
    let t22 = 0;
    e17.forEach((e18) => {
      t22++, e18.forEach((e19) => {
        o6[u5] = e19, u5++;
      });
    }), i12[s10] = t22, s10++;
  }), n7.coords = new Float64Array(o6), n7.lengths = new Uint32Array(i12), n7;
}
function g4(e16, t21) {
  const n7 = new t21.GeometryValue();
  n7.deleteLater(), n7.geometry_type = n7.geometry_type = t21.esriGeometryType.esriGeometryMultipoint, n7.has_z = e16.hasZ, n7.has_m = e16.hasM;
  const o6 = [], r7 = [];
  r7[0] = e16.points.length;
  let a9 = 0;
  return e16.points.forEach((e17) => {
    e17.forEach((e18) => {
      o6[a9] = e18, a9++;
    });
  }), n7.coords = new Float64Array(o6), n7.lengths = new Uint32Array(r7), n7;
}
function h2(e16, t21) {
  const n7 = new t21.GeometryValue();
  n7.deleteLater(), n7.geometry_type = t21.esriGeometryType.esriGeometryPoint, n7.has_z = e16.hasZ, n7.has_m = e16.hasM;
  const o6 = [], r7 = [];
  r7[0] = 1, o6[0] = e16.x, o6[1] = e16.y;
  let a9 = 2;
  return e16.hasZ && (o6[a9] = e16.z, a9++), e16.hasM && (o6[a9] = e16.m, a9++), n7.coords = new Float64Array(o6), n7.lengths = new Uint32Array(r7), n7;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js
var e5;
var r4;
var i8;
var t8;
var o5;
var p10;
var n4;
!function(e16) {
  e16[e16.Regular = 0] = "Regular", e16[e16.Provenance = 1] = "Provenance", e16[e16.Document = 2] = "Document";
}(e5 || (e5 = {})), function(e16) {
  e16[e16.esriFieldTypeSmallInteger = 0] = "esriFieldTypeSmallInteger", e16[e16.esriFieldTypeInteger = 1] = "esriFieldTypeInteger", e16[e16.esriFieldTypeSingle = 2] = "esriFieldTypeSingle", e16[e16.esriFieldTypeDouble = 3] = "esriFieldTypeDouble", e16[e16.esriFieldTypeString = 4] = "esriFieldTypeString", e16[e16.esriFieldTypeDate = 5] = "esriFieldTypeDate", e16[e16.esriFieldTypeOID = 6] = "esriFieldTypeOID", e16[e16.esriFieldTypeGeometry = 7] = "esriFieldTypeGeometry", e16[e16.esriFieldTypeBlob = 8] = "esriFieldTypeBlob", e16[e16.esriFieldTypeRaster = 9] = "esriFieldTypeRaster", e16[e16.esriFieldTypeGUID = 10] = "esriFieldTypeGUID", e16[e16.esriFieldTypeGlobalID = 11] = "esriFieldTypeGlobalID", e16[e16.esriFieldTypeXML = 12] = "esriFieldTypeXML", e16[e16.esriFieldTypeBigInteger = 13] = "esriFieldTypeBigInteger", e16[e16.esriFieldTypeDateOnly = 14] = "esriFieldTypeDateOnly", e16[e16.esriFieldTypeTimeOnly = 15] = "esriFieldTypeTimeOnly", e16[e16.esriFieldTypeTimestampOffset = 16] = "esriFieldTypeTimestampOffset";
}(r4 || (r4 = {})), function(e16) {
  e16[e16.esriGeometryNull = 0] = "esriGeometryNull", e16[e16.esriGeometryPoint = 1] = "esriGeometryPoint", e16[e16.esriGeometryMultipoint = 2] = "esriGeometryMultipoint", e16[e16.esriGeometryPolyline = 3] = "esriGeometryPolyline", e16[e16.esriGeometryPolygon = 4] = "esriGeometryPolygon", e16[e16.esriGeometryEnvelope = 5] = "esriGeometryEnvelope", e16[e16.esriGeometryAny = 7] = "esriGeometryAny", e16[e16.esriGeometryMultiPatch = 9] = "esriGeometryMultiPatch";
}(i8 || (i8 = {})), function(e16) {
  e16[e16.esriMethodHintUNSPECIFIED = 0] = "esriMethodHintUNSPECIFIED", e16[e16.esriUUIDESRI = 1] = "esriUUIDESRI", e16[e16.esriUUIDRFC4122 = 2] = "esriUUIDRFC4122";
}(t8 || (t8 = {})), function(e16) {
  e16[e16.esriTypeUNSPECIFIED = 0] = "esriTypeUNSPECIFIED", e16[e16.esriTypeEntity = 1] = "esriTypeEntity", e16[e16.esriTypeRelationship = 2] = "esriTypeRelationship", e16[e16.esriTypeBoth = 4] = "esriTypeBoth", e16[e16.esriTypeMetaEntityProvenance = 8] = "esriTypeMetaEntityProvenance";
}(o5 || (o5 = {})), function(e16) {
  e16[e16.esriGraphPropertyUNSPECIFIED = 0] = "esriGraphPropertyUNSPECIFIED", e16[e16.esriGraphPropertyRegular = 1] = "esriGraphPropertyRegular", e16[e16.esriGraphPropertyDocumentName = 2] = "esriGraphPropertyDocumentName", e16[e16.esriGraphPropertyDocumentTitle = 3] = "esriGraphPropertyDocumentTitle", e16[e16.esriGraphPropertyDocumentUrl = 4] = "esriGraphPropertyDocumentUrl", e16[e16.esriGraphPropertyDocumentText = 5] = "esriGraphPropertyDocumentText", e16[e16.esriGraphPropertyDocumentKeywords = 6] = "esriGraphPropertyDocumentKeywords", e16[e16.esriGraphPropertyDocumentContentType = 7] = "esriGraphPropertyDocumentContentType", e16[e16.esriGraphPropertyDocumentMetadata = 8] = "esriGraphPropertyDocumentMetadata", e16[e16.esriGraphPropertyDocumentFileExtension = 9] = "esriGraphPropertyDocumentFileExtension", e16[e16.esriGraphPropertyProvenanceInstanceId = 10] = "esriGraphPropertyProvenanceInstanceId", e16[e16.esriGraphPropertyProvenanceSourceType = 11] = "esriGraphPropertyProvenanceSourceType", e16[e16.esriGraphPropertyProvenanceSourceName = 12] = "esriGraphPropertyProvenanceSourceName", e16[e16.esriGraphPropertyProvenanceSource = 13] = "esriGraphPropertyProvenanceSource", e16[e16.esriGraphPropertyProvenanceComment = 14] = "esriGraphPropertyProvenanceComment", e16[e16.esriGraphPropertyProvenanceTypeName = 15] = "esriGraphPropertyProvenanceTypeName", e16[e16.esriGraphPropertyProvenancePropertyName = 16] = "esriGraphPropertyProvenancePropertyName";
}(p10 || (p10 = {})), function(e16) {
  e16[e16.esriIdentifierInfoTypeUNSPECIFIED = 0] = "esriIdentifierInfoTypeUNSPECIFIED", e16[e16.esriIdentifierInfoTypeDatabaseNative = 1] = "esriIdentifierInfoTypeDatabaseNative", e16[e16.esriIdentifierInfoTypeUniformProperty = 2] = "esriIdentifierInfoTypeUniformProperty";
}(n4 || (n4 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js
function s9(t21, n7) {
  if (!t21.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits");
  if (!("originId" in t21)) {
    const e16 = new n7.EntityValue();
    e16.deleteLater(), e16.type_name = t21.typeName;
    for (const [i12, r7] of Object.entries(t21.properties)) e16.set_key_value(i12, w(r7, n7));
    return t21.id && e16.set_id(t21.id), e16;
  }
  if ("originId" in t21 && "destinationId" in t21) {
    const e16 = new n7.RelationshipValue();
    e16.deleteLater(), e16.type_name = t21.typeName;
    for (const [i12, r7] of Object.entries(t21.properties)) e16.set_key_value(i12, w(r7, n7));
    return t21.id && e16.set_id(t21.id), t21.originId && t21.destinationId && e16.set_related_entity_ids(t21.originId, t21.destinationId), e16;
  }
  throw new s("knowledge-graph:applyEdits-encoding-failure", "Could not determine the type of a named graph object passed to the encoder");
}
function l3(e16) {
  return { xy_resolution: e16.xyResolution, x_false_origin: e16.xFalseOrigin, y_false_origin: e16.yFalseOrigin, z_resolution: e16.zResolution, z_false_origin: e16.zFalseOrigin, m_resolution: e16.mResolution, m_false_origin: e16.mFalseOrigin };
}
function d3(e16, t21) {
  const n7 = new t21.EntityType();
  return n7.deleteLater(), g5(e16, t21, n7);
}
function u4(e16, t21) {
  const n7 = new t21.RelationshipType();
  n7.deleteLater();
  for (const i12 of e16.endPoints) {
    const e17 = new t21.EndPoint();
    e17.deleteLater(), e17.origin_entity_type = i12.originEntityType, e17.dest_entity_type = i12.destinationEntityType, n7.add_end_point(e17);
  }
  return g5(e16, t21, n7);
}
function p11(e16, t21) {
  const n7 = new t21.EntityType();
  return n7.deleteLater(), h3(e16, n7);
}
function y3(e16, t21) {
  const n7 = new t21.RelationshipType();
  return n7.deleteLater(), h3(e16, n7);
}
function f4(e16, t21) {
  const n7 = new t21.GraphProperty();
  return n7.deleteLater(), n7.name = e16.name, n7.alias = e16.alias ?? "", n7.field_type = { value: r4[e16.fieldType] }, n7.geometry_type = { value: e16.geometryType ? i8[e16.geometryType] : i8.esriGeometryNull }, n7.has_m = e16.hasM ?? false, n7.has_z = e16.hasZ ?? false, n7.nullable = e16.nullable ?? false, n7.editable = e16.editable, n7.required = e16.required, n7.default_visibility = e16.defaultVisibility, n7.system_maintained = e16.systemMaintained ?? false, n7.role = { value: p10[e16.role] }, n7.default_value = w(e16.defaultValue, t21), n7;
}
function c6(e16, t21) {
  const n7 = new t21.GraphProperty();
  return n7.deleteLater(), e16.hasOwnProperty("alias") && (n7.alias = e16.alias), e16.hasOwnProperty("editable") && (n7.editable = e16.editable), e16.hasOwnProperty("required") && (n7.required = e16.required), e16.hasOwnProperty("defaultVisibility") && (n7.default_visibility = e16.defaultVisibility), e16.hasOwnProperty("defaultValue") && (n7.default_value = w(e16.defaultValue, t21)), n7;
}
function m7(e16, t21) {
  const n7 = new t21.SearchIndexProperties();
  n7.deleteLater();
  for (const i12 of e16.propertyNames) n7.add_search_property_name(i12);
  return n7;
}
function _2(e16, t21) {
  const n7 = new t21.FieldIndex();
  n7.deleteLater(), n7.name = e16.name, n7.unique = e16.unique, n7.ascending = e16.ascending, n7.description = e16.description ?? "";
  for (const i12 of e16.fieldNames) n7.add_field(i12);
  return n7;
}
function g5(e16, t21, n7) {
  n7.name = e16.name, n7.alias = e16.alias ?? "", n7.role = { value: e5[e16.role] }, n7.strict = e16.strict;
  for (const i12 of e16.properties) {
    const e17 = f4(i12, t21);
    n7.add_property(e17);
  }
  return n7;
}
function h3(e16, t21) {
  return e16.hasOwnProperty("alias") && (t21.alias = e16.alias), t21;
}
function w(e16, i12) {
  return null == e16 ? null : "object" != typeof e16 || e16 instanceof Date ? e16 : e16 instanceof c ? u3(e16, i12) : null;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmClientDataInterfaces.js
var e6;
var t9;
var i9;
var n5;
!function(e16) {
  e16[e16.ClientDataKeyTypeUNSPECIFIED = 0] = "ClientDataKeyTypeUNSPECIFIED", e16[e16.ClientDataKeyTypeString = 1] = "ClientDataKeyTypeString";
}(e6 || (e6 = {})), function(e16) {
  e16[e16.ClientDataTypeUNSPECIFIED = 0] = "ClientDataTypeUNSPECIFIED", e16[e16.ClientDataTypeString = 1] = "ClientDataTypeString";
}(t9 || (t9 = {})), function(e16) {
  e16[e16.Unspecified = 0] = "Unspecified", e16[e16.ClientData = 1] = "ClientData", e16[e16.NotModified = 2] = "NotModified";
}(i9 || (i9 = {})), function(e16) {
  e16[e16.Unspecified = 0] = "Unspecified", e16[e16.Error = 1] = "Error", e16[e16.ClientDataValue = 2] = "ClientDataValue";
}(n5 || (n5 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToClientDataFactories.js
function n6(e16, n7, _4, s10 = false) {
  const r7 = /* @__PURE__ */ new Map();
  for (let o6 = 0; o6 < e16.get_results_count(); o6++) {
    const g9 = e16.get_result_at(o6);
    if (g9.get_fetch_result_case().value !== n5.ClientDataValue || 0 !== g9.error().error_code) {
      const e17 = g9.get_key().key_string;
      _4.has(e17) && n7.delete(e17);
      continue;
    }
    const l5 = g9.get_value(), i12 = g9.get_key().key_string, c9 = _4.get(i12);
    let u5;
    if (l5.get_data_case().value === i9.NotModified && c9) u5 = c9.value;
    else {
      if (l5.get_data_case().value !== i9.ClientData) continue;
      {
        u5 = l5.get_data().client_data_string;
        const e17 = g9.get_value().get_v_tag().v_tag;
        s10 || n7.set(i12, { key: i12, version: e17, value: u5 });
      }
    }
    r7.set(i12, u5);
  }
  return r7;
}
function _3(t21) {
  const a9 = t21.get_keys(), n7 = new Array();
  for (let _4 = 0; _4 < a9.get_keys_count(); _4++) {
    const t22 = a9.get_key_at(_4);
    t22.get_client_data_key_type().value === e6.ClientDataKeyTypeString && n7.push(t22.key_string);
  }
  return n7;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphDataModelOperationResult.js
var t10 = class extends b2 {
  constructor(o6) {
    super(o6), this.decoderError = null, this.resultsCount = 0, this.results = [], this.updatedKnowledgeGraph = null;
  }
};
r([m2()], t10.prototype, "decoderError", void 0), r([m2()], t10.prototype, "resultsCount", void 0), r([m2()], t10.prototype, "results", void 0), r([m2()], t10.prototype, "updatedKnowledgeGraph", void 0), t10 = r([a("esri.rest.knowledgeGraph.GraphDataModelOperationResult")], t10);
var p12 = t10;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphAddFieldIndexResult.js
var e7 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e7 = r([a("esri.rest.knowledgeGraph.GraphAddFieldIndexResult")], e7);
var t11 = e7;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphAddNamedTypesResult.js
var r5 = class extends p12 {
  constructor(t21) {
    super(t21), this.entityAddResultsCount = 0, this.relationshipAddResultsCount = 0, this.entityAddResults = [], this.relationshipAddResults = [];
  }
};
r([m2()], r5.prototype, "entityAddResultsCount", void 0), r([m2()], r5.prototype, "relationshipAddResultsCount", void 0), r([m2()], r5.prototype, "entityAddResults", void 0), r([m2()], r5.prototype, "relationshipAddResults", void 0), r5 = r([a("esri.rest.knowledgeGraph.GraphAddNamedTypesResult")], r5);
var p13 = r5;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphAddPropertyResult.js
var e8 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e8 = r([a("esri.rest.knowledgeGraph.GraphAddPropertyResult")], e8);
var t12 = e8;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphDeleteFieldIndexResult.js
var e9 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e9 = r([a("esri.rest.knowledgeGraph.GraphDeleteFieldIndexResult")], e9);
var t13 = e9;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphDeleteNamedTypeResult.js
var e10 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e10 = r([a("esri.rest.knowledgeGraph.GraphDeleteNamedTypeResult")], e10);
var t14 = e10;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphDeletePropertyResult.js
var e11 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e11 = r([a("esri.rest.knowledgeGraph.GraphDeletePropertyResult")], e11);
var t15 = e11;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphUpdateNamedTypesResult.js
var e12 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e12 = r([a("esri.rest.knowledgeGraph.GraphUpdateNamedTypesResult")], e12);
var t16 = e12;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphUpdatePropertyResult.js
var e13 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e13 = r([a("esri.rest.knowledgeGraph.GraphUpdatePropertyResult")], e13);
var t17 = e13;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphUpdateSearchIndexResult.js
var e14 = class extends p12 {
  constructor(r7) {
    super(r7);
  }
};
e14 = r([a("esri.rest.knowledgeGraph.GraphUpdateSearchIndexResult")], e14);
var t18 = e14;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelChangeResponseFactories.js
function c7(r7, e16) {
  const t21 = [];
  for (let s10 = 0; s10 < e16; s10++) {
    const e17 = r7.get_result_at(s10);
    t21.push({ name: e17.get_name(), error: o3(e17.get_error()) });
  }
  return t21;
}
function p14(r7) {
  const t21 = r7.get_results_count(), s10 = r7.get_entity_type_add_results_count(), o6 = r7.get_relationship_type_add_results_count(), n7 = new p13({ resultsCount: t21, results: c7(r7, t21), decoderError: o3(r7.error), entityAddResultsCount: s10, relationshipAddResultsCount: o6 });
  for (let e16 = 0; e16 < s10; e16++) {
    const t22 = r7.get_entity_type_add_results_at(e16), s11 = t22.get_name(), o7 = t22.get_error();
    n7.entityAddResults.push({ name: s11, error: o3(o7) });
  }
  for (let e16 = 0; e16 < o6; e16++) {
    const t22 = r7.get_relationship_type_add_results_at(e16), s11 = t22.get_name(), o7 = t22.get_error();
    n7.relationshipAddResults.push({ name: s11, error: o3(o7) });
  }
  return n7;
}
function i10(r7) {
  const e16 = r7.get_results_count();
  return new t16({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function a7(r7) {
  const e16 = r7.get_results_count();
  return new t14({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function m8(r7) {
  const e16 = r7.get_results_count();
  return new t12({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function f5(r7) {
  const e16 = r7.get_results_count();
  return new t15({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function g6(r7) {
  const e16 = r7.get_results_count();
  return new t17({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function h4(r7) {
  const e16 = r7.get_results_count();
  return new t18({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}
function y4(e16) {
  const t21 = e16.get_results_count();
  return new t11({ resultsCount: t21, results: c7(e16, t21), decoderError: o3(e16.error) });
}
function R3(r7) {
  const e16 = r7.get_results_count();
  return new t13({ resultsCount: e16, results: c7(r7, e16), decoderError: o3(r7.error) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js
var t19 = class extends b2 {
  constructor(r7) {
    super(r7), this.name = null, this.supportedCategory = "esriTypeUNSPECIFIED", this.analyzers = [], this.searchProperties = /* @__PURE__ */ new Map();
  }
};
r([m2()], t19.prototype, "name", void 0), r([m2()], t19.prototype, "supportedCategory", void 0), r([m2()], t19.prototype, "analyzers", void 0), r([m2()], t19.prototype, "searchProperties", void 0), t19 = r([a("esri.rest.knowledgeGraph.SearchIndex")], t19);

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js
var g7 = false;
function h5(r7) {
  r7.deleteLater(), g7 = false;
  const n7 = new a6({ timestamp: r7.timestamp, spatialReference: new f(r7.spatial_reference), strict: r7.strict, objectIdField: r7.objectid_property, globalIdField: r7.globalid_property, arcgisManaged: r7.arcgis_managed, identifierInfo: { identifierMappingInfo: { identifierInfoType: n4[r7.identifier_info?.identifier_mapping_info?.identifier_info_type?.value], databaseNativeIdentifier: r7.identifier_info?.identifier_mapping_info?.database_native_identifier, uniformPropertyIdentifier: { identifierPropertyName: r7.identifier_info?.identifier_mapping_info?.uniform_property_identifier?.identifier_property_name } }, identifierGenerationInfo: { uuidMethodHint: t8[r7.identifier_info?.identifier_generation_info?.uuid_method_hint?.value] } }, searchIndexes: S2(r7.search_indexes), entityTypes: L(r7.entity_types), relationshipTypes: F(r7.relationship_types), metaEntityTypes: L(r7.meta_entity_types), provenanceSourceTypeValues: G(r7.provenance_source_type_values.value_behavior_array) });
  return g7 && i.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("A big integer field was detected in the retrieved data model.  The `big-integer` field type is not fully supported in web clients.  Please see https://developers.arcgis.com/javascript/latest/api-reference/esri-layers-support-Field.html#type"), n7;
}
function v(e16) {
  return e16.deleteLater(), new e2(z2(e16));
}
function b3(e16) {
  return e16.deleteLater(), new s6({ name: e16.name, unique: e16.unique, ascending: e16.ascending, description: e16.description, fieldNames: x(e16.fields) });
}
function z2(e16) {
  return { name: e16.name, alias: e16.alias, role: e5[e16.role.value], strict: e16.strict, properties: M(e16.properties), fieldIndexes: P2(e16.field_indexes) };
}
function T2(e16) {
  return e16.deleteLater(), new i5({ alias: e16.alias, name: e16.name, fieldType: r4[e16.field_type.value] ? r4[e16.field_type.value] : void 0, geometryType: i8[e16.geometry_type.value] ? i8[e16.geometry_type.value] : null, hasM: e16.has_m, hasZ: e16.has_z, nullable: e16.nullable, editable: e16.editable, required: e16.required, defaultVisibility: e16.default_visibility, systemMaintained: e16.system_maintained, role: p10[e16.role.value], defaultValue: e16.default_value });
}
function w2(e16) {
  e16.deleteLater();
  const t21 = z2(e16), i12 = [];
  for (let r7 = 0; r7 < e16.end_points.size(); r7++) {
    const t22 = e16.end_points.get(r7);
    i12.push({ originEntityType: t22.origin_entity_type, destinationEntityType: t22.dest_entity_type });
  }
  return e16.end_points.delete(), new t4(Object.assign({ endPoints: i12 }, t21));
}
function I(e16) {
  return new t5({ behavior: e16.behavior, value: e16.value });
}
function L(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) t21.push(v(e16.get(i12)));
  return e16.delete(), t21;
}
function x(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) t21.push(e16.get(i12));
  return e16.delete(), t21;
}
function M(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) {
    const r7 = T2(e16.get(i12));
    "esriFieldTypeBigInteger" === r7.fieldType && (g7 = true), t21.push(r7);
  }
  return e16.delete(), t21;
}
function P2(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) t21.push(b3(e16.get(i12)));
  return e16.delete(), t21;
}
function F(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) t21.push(w2(e16.get(i12)));
  return e16.delete(), t21;
}
function G(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) {
    const r7 = e16.get(i12);
    r7.deleteLater(), t21.push(I(r7));
  }
  return e16.delete(), t21;
}
function S2(e16) {
  const t21 = [];
  for (let i12 = 0; i12 < e16.size(); i12++) {
    const r7 = new t19(), n7 = e16.get(i12);
    r7.name = n7.name, r7.supportedCategory = o5[n7.supported_category.value];
    const a9 = n7.analyzers.size();
    for (let e17 = 0; e17 < a9; e17++) r7.analyzers.push({ name: n7.analyzers.get(e17).name });
    n7.analyzers.delete();
    for (let e17 = 0; e17 < n7.search_properties.keys().size(); e17++) {
      const t22 = n7.search_properties.keys().get(e17), i13 = n7.search_properties.get(t22), a10 = [];
      for (let e18 = 0; e18 < i13.property_names.size(); e18++) a10.push(i13.property_names.get(e18));
      r7.searchProperties.set(t22, { propertyNames: a10 });
    }
    t21.push(r7);
  }
  return e16.delete(), t21;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js
var E;
!function(E3) {
  E3[E3.ESRI_GEOMETRY_NULL = 0] = "ESRI_GEOMETRY_NULL", E3[E3.ESRI_GEOMETRY_POINT = 1] = "ESRI_GEOMETRY_POINT", E3[E3.ESRI_GEOMETRY_MULTIPOINT = 2] = "ESRI_GEOMETRY_MULTIPOINT", E3[E3.ESRI_GEOMETRY_POLYLINE = 3] = "ESRI_GEOMETRY_POLYLINE", E3[E3.ESRI_GEOMETRY_POLYGON = 4] = "ESRI_GEOMETRY_POLYGON", E3[E3.ESRI_GEOMETRY_ENVELOPE = 5] = "ESRI_GEOMETRY_ENVELOPE", E3[E3.ESRI_GEOMETRY_ANY = 6] = "ESRI_GEOMETRY_ANY", E3[E3.ESRI_GEOMETRY_MULTI_PATCH = 7] = "ESRI_GEOMETRY_MULTI_PATCH";
}(E || (E = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js
function a8(e16, o6) {
  const s10 = { spatialReference: o6 }, r7 = c8(e16, s10), n7 = e16.lengths, a9 = e16.coords, h8 = n7[0];
  s10.points = [];
  let l5 = 0;
  for (let t21 = 0; t21 < h8; t21++) {
    const e17 = [];
    for (let t22 = 0; t22 < r7; t22++) e17[t22] = a9[l5], l5++;
    s10.points.push(e17);
  }
  return new m4(s10);
}
function h6(e16, t21) {
  const s10 = { spatialReference: t21 };
  let r7 = 2;
  c8(e16, s10);
  const n7 = e16.coords;
  return s10.x = n7[0], s10.y = n7[1], e16.has_z && (s10.z = n7[r7], r7++), e16.has_m && (s10.m = n7[r7]), new _(s10);
}
function l4(e16, t21) {
  const { paths: o6, hasM: s10, hasZ: a9 } = p15(e16, E.ESRI_GEOMETRY_POLYLINE);
  return new y({ paths: o6, hasM: s10, hasZ: a9, spatialReference: t21 });
}
function i11(e16, t21) {
  const { paths: o6, hasM: r7, hasZ: a9 } = p15(e16, E.ESRI_GEOMETRY_POLYGON);
  return new P({ rings: o6, hasM: r7, hasZ: a9, spatialReference: t21 });
}
function p15(t21, o6) {
  const s10 = { paths: [], hasM: false, hasZ: false }, r7 = c8(t21, s10), { coords: n7, geometry_type: a9, lengths: h8 } = t21;
  if (a9.value !== o6) throw new s("KnowledgeGraph:illegal-geometry-type", "Illegal Geometry type for multipath conversion");
  let l5 = 0;
  return h8.forEach((e16) => {
    const t22 = [];
    for (let o7 = 0; o7 < e16; o7++) {
      const e17 = [];
      for (let t23 = 0; t23 < r7; t23++) e17[t23] = n7[l5], l5++;
      t22.push(e17);
    }
    s10.paths.push(t22);
  }), s10;
}
function c8(e16, t21) {
  let o6 = 2;
  return e16.has_z ? (t21.hasZ = e16.has_z, o6++) : t21.hasZ = false, e16.has_m ? (t21.hasM = e16.has_m, o6++) : t21.hasM = false, o6;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js
var m9 = () => i.getLogger("esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors");
var f6 = { decodedWasmObjToQueryResponseObj: (e16, t21, r7) => {
  if (null == e16) return null;
  if ("object" != typeof e16) return e16;
  if ("getDate" in e16) return e16;
  if ("geometry_type" in e16) switch (e16.geometry_type.value) {
    case null:
      return null;
    case E.ESRI_GEOMETRY_POINT:
      return h6(e16, r7);
    case E.ESRI_GEOMETRY_MULTIPOINT:
      return a8(e16, r7);
    case E.ESRI_GEOMETRY_POLYLINE:
      return l4(e16, r7);
    case E.ESRI_GEOMETRY_POLYGON:
      return i11(e16, r7);
    case E.ESRI_GEOMETRY_ENVELOPE:
    case E.ESRI_GEOMETRY_MULTI_PATCH:
      return m9().warnOnce("Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null"), null;
    case E.ESRI_GEOMETRY_NULL:
    case E.ESRI_GEOMETRY_ANY:
    default:
      return m9().warnOnce("Unknown or blank geometry type returned - Result interpreted as null"), null;
  }
  else {
    if (!("object_value_type" in e16)) return m9().warnOnce("A decoded value came back of a type that is not supported. Result interpreted as null"), null;
    switch (e16.object_value_type.value) {
      case e4.OBJECT:
        return j2(e16, t21, r7);
      case e4.ENTITY:
        return g8(e16, t21, r7);
      case e4.RELATIONSHIP:
        return h7(e16, t21, r7);
      case e4.PATH:
        return T3(e16, t21, r7);
      case e4.ARRAY:
        return y5(e16, t21, r7);
      default:
        return m9().warnOnce("Unknown graph object type detected!  Result interpreted as null"), null;
    }
  }
} };
function y5(e16, t21, r7) {
  const n7 = [], o6 = e16.count();
  for (let s10 = 0; s10 < o6; s10++) {
    const o7 = e16.get_value_at(s10);
    n7.push(E2(o7, t21, r7));
  }
  return n7;
}
function E2(e16, t21, r7) {
  return f6.decodedWasmObjToQueryResponseObj(e16, t21, r7);
}
function g8(e16, t21, n7) {
  const o6 = e16.type_name, s10 = O2(e16, t21, n7), a9 = e16.get_id();
  return new p(Object.assign({ typeName: o6, id: a9 }, s10));
}
function O2(e16, t21, r7) {
  const n7 = {}, o6 = e16.key_count();
  for (let s10 = 0; s10 < o6; s10++) n7[e16.get_key_at(s10)] = E2(e16.get_value_at(s10), t21, r7);
  return { properties: n7 };
}
function j2(e16, t21, r7) {
  return new e(O2(e16, t21, r7));
}
function T3(e16, t21, r7) {
  const n7 = e16.entity_count(), o6 = e16.relationship_count(), s10 = [];
  for (let a9 = 0; a9 < n7; a9++) s10.push(g8(e16.get_entity_at(a9), t21, r7)), a9 < o6 && s10.push(h7(e16.get_relationship_at(a9), t21, r7));
  return new p2({ path: s10 });
}
function h7(e16, t21, r7) {
  const n7 = e16.type_name, o6 = O2(e16, t21, r7);
  return new i3(Object.assign({ typeName: n7, id: e16.get_id(), originId: e16.get_origin_entity_id(), destinationId: e16.get_destination_entity_id() }, o6));
}
function w3(e16) {
  const r7 = [];
  for (let t21 = 0; t21 < e16.get_header_keys().size(); t21++) r7.push(e16.get_header_keys().get(t21));
  const n7 = new f(e16.get_out_sr());
  return new t3({ headerKeys: r7, outSpatialReference: n7, exceededTransferLimit: e16.exceeded_transfer_limit() });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js
var e15 = class extends b2 {
  constructor(r7) {
    super(r7), this.hasError = false, this.error = null, this.editResults = [];
  }
};
r([m2()], e15.prototype, "hasError", void 0), r([m2()], e15.prototype, "error", void 0), r([m2()], e15.prototype, "editResults", void 0), e15 = r([a("esri.rest.knowledgeGraph.GraphApplyEditsResult")], e15);
var p16 = e15;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js
function r6(r7) {
  const s10 = r7.has_error(), _4 = new p16({ hasError: s10, error: s10 ? o3(r7.error) : null }), o6 = r7.get_edit_results_count();
  for (let t21 = 0; t21 < o6; t21++) {
    const s11 = r7.get_edit_results_at(t21), o7 = r7.get_edit_results_type_name_at(t21), u5 = [], d4 = [], l5 = [], a9 = s11.get_add_results_count(), i12 = s11.get_update_results_count(), n7 = s11.get_delete_results_count();
    for (let t22 = 0; t22 < a9; t22++) {
      const r8 = s11.get_add_result_at(t22);
      u5.push({ id: r8.id, error: o3(r8.error) });
    }
    for (let t22 = 0; t22 < i12; t22++) {
      const r8 = s11.get_update_result_at(t22);
      d4.push({ id: r8.id, error: o3(r8.error) });
    }
    for (let t22 = 0; t22 < n7; t22++) {
      const r8 = s11.get_delete_result_at(t22);
      l5.push({ id: r8.id, error: o3(r8.error) });
    }
    _4.editResults.push({ typeName: o7, adds: u5, updates: d4, deletes: l5 });
  }
  return _4;
}

// node_modules/@arcgis/core/rest/knowledgeGraphService.js
var z3 = /* @__PURE__ */ new Map();
var B = () => new Map(z3.entries());
var J2 = { fetchKnowledgeGraph: async (e16) => {
  const t21 = new p8({ url: e16 }), r7 = [];
  return r7.push(he(t21)), r7.push(we(t21)), await Promise.all(r7), t21;
}, refreshDataModel: async (e16) => {
  e16.dataModel = await Ye(e16);
}, refreshServiceDefinition: async (e16) => {
  const r7 = (await H(e16.url, { query: { f: "json" } })).data;
  return r7.capabilities = r7?.capabilities?.split(","), r7.supportedQueryFormats = r7?.supportedQueryFormats?.split(","), e16.serviceDefinition = new p7(r7), e16.serviceDefinition;
}, executeFindPathsAsynchronous: async (e16, t21) => {
  const a9 = e16.inKnowledgeGraphUrl.split("/rest/services");
  if (a9.length < 2) throw new s("knowledge-graph:invalid-tool-url", "The URL for the KG Service was not correctly formatted.  It should contain /rest/services/");
  const n7 = a9[0], o6 = (await Ge(`${n7}/rest/info`, { query: { f: "json" } })).data.currentVersion, d4 = `/rest/services/${o6 && o6 < 12 ? "System" : "Utilities"}/KnowledgeGraphServerToolsAsync/GPServer/ServerFilteredFindPaths`;
  return await ke(`${n7}${d4}`, { in_knowledge_graph_url: e16.inKnowledgeGraphUrl, config_type: "STRING", config_string: e16.config.toJSON(), result_type: "STRING" }, {}, t21);
}, executeFindPaths: async (e16, t21) => {
  const a9 = e16.inKnowledgeGraphUrl.split("/rest/services");
  if (a9.length < 2) throw new s("knowledge-graph:invalid-tool-url", "The URL for the KG Service was not correctly formatted.  It should contain /rest/services/");
  const n7 = a9[0], o6 = (await Ge(`${n7}/rest/info`, { query: { f: "json" } })).data.currentVersion, d4 = `/rest/services/${o6 && o6 < 12 ? "System" : "Utilities"}/KnowledgeGraphServerTools/GPServer/ServerFilteredFindPaths/execute`, i12 = await Ge(`${n7}${d4}`, { method: "post", query: { f: "pjson", in_knowledge_graph_url: e16.inKnowledgeGraphUrl, config_type: "STRING", config_string: JSON.stringify(e16.config), result_type: "STRING" }, ...t21 });
  if (i12.data.results.length < 1) throw new s("knowledge-graph:no-results", "No results were returned from the FindPaths tool - no results returned", i12);
  let s10;
  for (const r7 of i12.data.results) if ("out_results_string" === r7.paramName) {
    s10 = r7.value;
    break;
  }
  if (!s10) throw new s("knowledge-graph:no-results", "No results were returned from the FindPaths tool - no results were returned on the expected paramater out_results_string", i12);
  return s10;
}, fetchAsynchronousFindPathsResultData: async (e16, t21) => (await e16.fetchResultData("out_results_string", null, t21)).value, executeQueryStreaming: async (e16, t21, a9) => {
  const n7 = "include", o6 = `${e16.url}/graph/query`;
  await be(e16);
  const d4 = await Fe(o6, a9);
  if (!e16.serviceDefinition?.supportsProvenance && t21.provenanceBehavior === n7) throw new s("knowledge-graph:provenance-not-supported", "The Knowledge Graph Service definition indicated that provenance is not supported");
  d4.data.body = await qe(t21, e16);
  const i12 = await _e(d4.data.url, d4.data);
  if (e16.dataModel) {
    const t22 = await Ve(i12, e16.dataModel);
    return new a5({ resultRowsStream: t22.readableStream, resultHeader: t22.resultHeader });
  }
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, executeApplyEdits: async (e16, t21, a9) => {
  if (e16.serviceDefinition?.dataEditingNotSupported) throw new s("knowledge-graph:data-editing-not-supported", "The Knowledge Graph Service definition indicated that data editing is not supported");
  const n7 = `${e16.url}/graph/applyEdits`;
  await be(e16);
  const o6 = await Fe(n7, a9);
  o6.data.body = await Te(t21, e16);
  return je(await _e(o6.data.url, o6.data));
}, executeAddNamedTypes: async (e16, t21, a9) => {
  if (!t21.newEntityTypes?.length && !t21.newRelationshipTypes?.length) throw new s("knowledge-graph:no-arguments", "The operation to add types to the data model contained no values");
  const n7 = `${e16.url}/dataModel/edit/namedTypes/add`;
  await be(e16);
  const o6 = await Fe(n7, a9);
  o6.data.body = await ve(t21);
  const d4 = await _e(o6.data.url, o6.data), i12 = await Ue(d4);
  return i12.updatedKnowledgeGraph = await ue(e16.url), i12;
}, executeDeleteNamedType: async (e16, t21, a9) => {
  if (!t21) throw new s("knowledge-graph:no-arguments", "The operation to delete a named type from the data model contained no value");
  const n7 = `${e16.url}/dataModel/edit/namedTypes/${t21}/delete`;
  await be(e16);
  const o6 = await Fe(n7, a9);
  o6.data.body = "";
  const d4 = await _e(o6.data.url, o6.data), i12 = await Ne(d4);
  return i12.updatedKnowledgeGraph = await ue(e16.url), i12;
}, executeUpdateNamedType: async (e16, t21, a9, n7) => {
  if (!t21 && !Object.keys(a9).length) throw new s("knowledge-graph:no-arguments", "The operation to update types in the data model contained missing or empty values");
  const o6 = `${e16.url}/dataModel/edit/namedTypes/${t21}/update`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Ae(a9, t21, e16.dataModel);
  const i12 = await _e(d4.data.url, d4.data), s10 = await Ke(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeAddGraphProperties: async (e16, t21, a9, n7) => {
  if (!t21 && !a9.length) throw new s("knowledge-graph:no-arguments", "The operation to add properties to the data model contained missing or empty values");
  const o6 = `${e16.url}/dataModel/edit/namedTypes/${t21}/fields/add`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Se(a9);
  const i12 = await _e(d4.data.url, d4.data), s10 = await Qe(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeDeleteGraphProperty: async (e16, t21, a9, n7) => {
  if (!t21 && !a9) throw new s("knowledge-graph:no-arguments", "The operation to delete property contained missing or empty values");
  const o6 = `${e16.url}/dataModel/edit/namedTypes/${t21}/fields/delete`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Pe(a9);
  const i12 = await _e(d4.data.url, d4.data), s10 = await $e(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeUpdateGraphProperty: async (e16, t21, a9, n7, o6) => {
  if (!t21 && !a9 && !Object.keys(n7).length) throw new s("knowledge-graph:no-arguments", "The operation to update properties in the data model contained missing or empty values");
  const d4 = `${e16.url}/dataModel/edit/namedTypes/${t21}/fields/update`;
  await be(e16);
  const i12 = await Fe(d4, o6);
  i12.data.body = await De(a9, n7);
  const s10 = await _e(i12.data.url, i12.data), p17 = await Le(s10);
  return p17.updatedKnowledgeGraph = await ue(e16.url), p17;
}, executeAddGraphFieldIndex: async (e16, t21, a9, n7) => {
  if (!t21) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing named type");
  if (!a9?.length) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing or empty field index values");
  const o6 = `${e16.url}/dataModel/edit/namedTypes/${t21}/indexes/add`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Re(a9);
  const i12 = await _e(d4.data.url, d4.data), s10 = await Oe(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeDeleteGraphFieldIndex: async (e16, t21, a9, n7) => {
  if (!t21) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing named type");
  if (!a9?.length) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing or empty field index values");
  const o6 = `${e16.url}/dataModel/edit/namedTypes/${t21}/indexes/delete`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Ee(a9);
  const i12 = await _e(d4.data.url, d4.data), s10 = await We(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeUpdateSearchIndex: async (e16, t21, a9, n7) => {
  if (!t21) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing named type");
  if (!Object.keys(a9.addSearchProperties ?? {}).length && !Object.keys(a9.removeSearchProperties ?? {}).length) throw new s("knowledge-graph:no-arguments", "The operation to update search index in the data model contained missing or empty properties values");
  const o6 = `${e16.url}/dataModel/searchIndex/update`;
  await be(e16);
  const d4 = await Fe(o6, n7);
  d4.data.body = await Ie(t21, a9);
  const i12 = await _e(d4.data.url, d4.data), s10 = await He(i12);
  return s10.updatedKnowledgeGraph = await ue(e16.url), s10;
}, executeQuery: async (e16, a9, n7) => {
  const o6 = `${e16.url}/graph/query`, d4 = await H(o6, { responseType: "array-buffer", query: { f: "pbf", openCypherQuery: a9.openCypherQuery, ...n7?.query }, signal: n7?.signal, timeout: n7?.timeout }), i12 = d4.getHeader?.("content-type"), p17 = d4.data;
  if (i12?.includes("application/x-protobuf")) {
    const t21 = new (await r3()).GraphQueryDecoder();
    if (t21.deleteLater(), e16.dataModel) {
      const r7 = Je({ wasmQueryDecoder: t21, newArrayBufferToParse: p17, dataModel: e16.dataModel });
      return new p6({ resultRows: r7.resultRows, resultHeader: r7.resultHeader });
    }
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: i12, data: d4.data });
}, executeSearch: async (e16, a9, n7) => {
  const o6 = a9.typeCategoryFilter, d4 = `${e16.url}/graph/search`, i12 = await H(d4, { responseType: "array-buffer", query: { f: "pbf", searchQuery: `"${a9.searchQuery}"`, typeCategoryFilter: o6, ...n7?.query }, signal: n7?.signal, timeout: n7?.timeout }), p17 = i12.getHeader?.("content-type"), c9 = i12.data;
  if (p17?.includes("application/x-protobuf")) {
    const t21 = new (await r3()).GraphQueryDecoder();
    if (t21.deleteLater(), e16.dataModel) {
      const r7 = Je({ wasmQueryDecoder: t21, newArrayBufferToParse: c9, dataModel: e16.dataModel });
      return new p6({ resultRows: r7.resultRows, resultHeader: r7.resultHeader });
    }
    throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: p17, data: i12.data });
}, executeSearchStreaming: async (e16, t21, a9) => {
  const n7 = `${e16.url}/graph/search`;
  await be(e16);
  const o6 = await Fe(n7, a9);
  o6.data.body = await Ce(t21);
  const d4 = await _e(o6.data.url, o6.data);
  if (e16.dataModel) {
    const t22 = await Ve(d4, e16.dataModel);
    return new a5({ resultRowsStream: t22.readableStream, resultHeader: t22.resultHeader });
  }
  throw new s("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, fetchClientDataAtKeys: async (e16, t21, a9 = { ignoreCache: false }) => {
  if (!t21.length) return /* @__PURE__ */ new Map();
  let n7 = z3.get(e16.url || "");
  n7 || (n7 = /* @__PURE__ */ new Map(), z3.set(e16.url || "", n7));
  const o6 = new Map(n7.entries()), d4 = `${e16.url}/clientData/fetch`;
  t21 = Array.from(new Set(t21));
  const i12 = await r3(), s10 = t6(t21, n7, i12, a9.ignoreCache), p17 = await Fe(d4, a9.requestOptions);
  p17.data.body = s10;
  const c9 = await _e(p17.data.url, p17.data), l5 = c9.headers.get("content-type");
  if (l5?.includes("application/x-protobuf")) {
    const e17 = new i12.ClientDataFetchResponseDecoder();
    e17.deleteLater();
    const t22 = await c9.arrayBuffer();
    return e17.decode(new Uint8Array(t22)), e17.has_error() && e3(e17.error, "knowledge-graph:fetchClientDataAtKeys-decoding-error", "An error occurred while decoding the client data keys response"), n6(e17, n7, o6, a9.ignoreCache);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response when fetching client data", { responseType: l5, data: c9 });
}, fetchAllClientDataKeys: async (e16, a9) => {
  const n7 = `${e16.url}/clientData`, o6 = await H(n7, { responseType: "array-buffer", query: { f: "pbf" }, signal: a9?.signal, timeout: a9?.timeout }), d4 = o6.getHeader?.("content-type"), i12 = o6.data;
  if (d4?.includes("application/x-protobuf")) {
    const e17 = new (await r3()).ClientDataKeysResponseDecoder();
    return e17.deleteLater(), e17.decode(new Uint8Array(i12)), e17.has_error() && e3(e17.error, "knowledge-graph:fetchAllClientDataKeys-decoding-error", "An error occurred while decoding the client data keys response"), _3(e17);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: d4, data: o6.data });
}, clearClientDataCache: () => z3.clear(), _fetchWrapper: async (e16, t21) => fetch(e16, t21), _submitJobWrapper: async (e16, t21, r7, a9) => s5(e16, t21, r7, a9), _esriRequestWrapper: async (e16, r7) => H(e16, r7) };
async function V(e16, t21, r7) {
  return J2.executeApplyEdits(e16, t21, r7);
}
async function Y(e16, t21, r7) {
  return J2.executeAddNamedTypes(e16, t21, r7);
}
async function X(e16, t21, r7) {
  return J2.executeDeleteNamedType(e16, t21, r7);
}
async function Z(e16, t21, r7, a9) {
  return J2.executeUpdateNamedType(e16, t21, r7, a9);
}
async function ee(e16, t21, r7, a9) {
  return J2.executeAddGraphProperties(e16, t21, r7, a9);
}
async function te(e16, t21, r7, a9) {
  return J2.executeDeleteGraphProperty(e16, t21, r7, a9);
}
async function re(e16, t21, r7, a9, n7) {
  return J2.executeUpdateGraphProperty(e16, t21, r7, a9, n7);
}
async function ae(e16, t21, r7, a9) {
  return J2.executeAddGraphFieldIndex(e16, t21, r7, a9);
}
async function ne(e16, t21, r7, a9) {
  return J2.executeDeleteGraphFieldIndex(e16, t21, r7, a9);
}
async function oe(e16, t21, r7, a9) {
  return J2.executeUpdateSearchIndex(e16, t21, r7, a9);
}
async function de(e16, t21, r7) {
  return J2.executeQuery(e16, t21, r7);
}
async function ie(e16, t21, r7) {
  return J2.executeQueryStreaming(e16, t21, r7);
}
async function se(e16, t21, r7) {
  return J2.executeSearch(e16, t21, r7);
}
async function pe(e16, t21, r7) {
  return J2.executeSearchStreaming(e16, t21, r7);
}
function ce(e16, t21) {
  return J2.fetchAllClientDataKeys(e16, t21);
}
function le(e16, t21, r7) {
  return J2.fetchClientDataAtKeys(e16, t21, r7);
}
async function ue(e16) {
  return J2.fetchKnowledgeGraph(e16);
}
async function he(e16) {
  return J2.refreshDataModel(e16);
}
async function we(e16) {
  return J2.refreshServiceDefinition(e16);
}
async function ge(e16, t21) {
  return J2.executeFindPathsAsynchronous(e16, t21);
}
async function ye(e16, t21) {
  return J2.executeFindPaths(e16, t21);
}
async function fe(e16, t21) {
  return J2.fetchAsynchronousFindPathsResultData(e16, t21);
}
function me() {
  return J2.clearClientDataCache();
}
async function _e(e16, t21) {
  return J2._fetchWrapper(e16, t21);
}
async function ke(e16, t21, r7, a9) {
  return J2._submitJobWrapper(e16, t21, r7, a9);
}
async function Ge(e16, t21) {
  return J2._esriRequestWrapper(e16, t21);
}
async function be(t21) {
  const r7 = s2?.findCredential(t21.url);
  r7 || (t21.dataModel ? await Ye(t21) : await he(t21));
}
function xe(e16, t21, r7, a9) {
  null == t21 ? r7.set_param_key_value(e16, "") : "object" != typeof t21 || t21 instanceof Date ? r7.set_param_key_value(e16, t21) : t21 instanceof c ? r7.set_param_key_value(e16, u3(t21, a9)) : Array.isArray(t21) ? r7.set_param_key_value(e16, l2(t21, a9)) : r7.set_param_key_value(e16, s8(t21, a9));
}
async function Te(e16, t21) {
  if (t21.dataModel || await he(t21), !t21.dataModel) throw new s("knowledge-graph:data-model-undefined", "Encoding could not proceed because a data model was not provided and it could not be determined from the service");
  const a9 = await r3(), n7 = !!e16.options?.cascadeDelete, o6 = new a9.GraphApplyEditsEncoder(a9.SpatialReferenceUtil.WGS84(), e16.options?.inputQuantizationParameters ? l3(e16.options?.inputQuantizationParameters) : a9.InputQuantizationUtil.WGS84_lossless());
  o6.deleteLater(), o6.cascade_delete = n7;
  try {
    let t22;
    e16.entityAdds?.forEach((e17) => {
      t22 = o6.add_entity(s9(e17, a9)), e3(t22, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), e16.relationshipAdds?.forEach((e17) => {
      if (!e17.originId || !e17.destinationId) throw new s("knowledge-graph:relationship-origin-destination-missing", "When adding a new relationship, you must provide both an origin and destination id on the appropriate class property");
      t22 = o6.add_relationship(s9(e17, a9)), e3(t22, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), e16.entityUpdates?.forEach((e17) => {
      if (!e17.id) throw new s("knowledge-graph:entity-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t22 = o6.update_entity(s9(e17, a9)), e3(t22, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), e16.relationshipUpdates?.forEach((e17) => {
      if (!e17.id) throw new s("knowledge-graph:relationship-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t22 = o6.update_relationship(s9(e17, a9)), e3(t22, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), e16.entityDeletes?.forEach((e17) => {
      if (!e17.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t23 = o6.make_delete_helper(e17.typeName, true);
      t23.deleteLater(), e17.ids?.forEach((e18) => {
        t23.delete_by_id(e18);
      });
    }), e16.relationshipDeletes?.forEach((e17) => {
      if (!e17.typeName) throw new s("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t23 = o6.make_delete_helper(e17.typeName, false);
      e17.ids?.forEach((e18) => {
        t23.delete_by_id(e18);
      });
    }), o6.encode();
  } catch (i12) {
    throw new s("knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed", { error: i12 });
  }
  const d4 = o6.get_encoding_result();
  return e3(d4.error, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed"), structuredClone(d4.get_byte_buffer());
}
async function ve(e16) {
  const t21 = await r3(), a9 = new t21.GraphNamedObjectTypeAddsRequestEncoder();
  a9.deleteLater(), e16.newEntityTypes?.forEach((e17) => {
    a9.add_entity_type(d3(e17, t21));
  }), e16.newRelationshipTypes?.forEach((e17) => {
    a9.add_relationship_type(u4(e17, t21));
  });
  try {
    a9.encode();
  } catch (o6) {
    throw new s("knowledge-graph:addNamedTypes-encoding-failed", "Attempting to encode the addNamedTypes failed", { error: o6 });
  }
  const n7 = a9.get_encoding_result();
  return e3(n7.error, "knowledge-graph:addNamedTypes-encoding-failed", "Attempting to encode the addNamedTypes failed"), structuredClone(n7.get_byte_buffer());
}
async function Ae(e16, t21, a9) {
  const n7 = await r3(), o6 = new n7.GraphNamedObjectTypeUpdateRequestEncoder();
  o6.deleteLater();
  if (a9.entityTypes.some((e17) => e17.name === t21)) o6.update_entity_type(p11(e16, n7));
  else {
    if (!a9.relationshipTypes.some((e17) => e17.name === t21)) throw new s("knowledge-graph:updateNamedType-encoding-failed", "The named type you are trying to update does not exist in the data model");
    o6.update_relationship_type(y3(e16, n7));
  }
  o6.update_alias = e16.hasOwnProperty("alias");
  try {
    o6.encode();
  } catch (i12) {
    throw new s("knowledge-graph:updateNamedType-encoding-failed", "Attempting to encode the updateNamedType failed", { error: i12 });
  }
  const d4 = o6.get_encoding_result();
  return e3(d4.error, "knowledge-graph:updateNamedType-encoding-failed", "Attempting to encode the updateNamedType failed"), structuredClone(d4.get_byte_buffer());
}
async function Se(e16) {
  const t21 = await r3(), a9 = new t21.GraphPropertyAddsRequestEncoder();
  a9.deleteLater(), e16.forEach((e17) => {
    a9.add_graph_property(f4(e17, t21));
  });
  try {
    a9.encode();
  } catch (o6) {
    throw new s("knowledge-graph:addGraphProperties-encoding-failed", "Attempting to encode the addGraphProperties failed", { error: o6 });
  }
  const n7 = a9.get_encoding_result();
  return e3(n7.error, "knowledge-graph:addGraphProperties-encoding-failed", "Attempting to encode the addGraphProperties failed"), structuredClone(n7.get_byte_buffer());
}
async function Pe(e16) {
  const t21 = new (await r3()).GraphPropertyDeleteRequestEncoder();
  t21.deleteLater(), t21.field_name = e16;
  try {
    t21.encode();
  } catch (n7) {
    throw new s("knowledge-graph:deleteGraphProperty-encoding-failed", "Attempting to encode the deleteGraphProperty failed", { error: n7 });
  }
  const a9 = t21.get_encoding_result();
  return e3(a9.error, "knowledge-graph:deleteGraphProperty-encoding-failed", "Attempting to encode the deleteGraphProperty failed"), structuredClone(a9.get_byte_buffer());
}
async function De(e16, t21) {
  const a9 = await r3(), n7 = new a9.GraphPropertyUpdateRequestEncoder();
  n7.deleteLater(), n7.update_graph_property(c6(t21, a9)), n7.set_property_name(e16), n7.update_alias = t21.hasOwnProperty("alias"), n7.update_editable = t21.hasOwnProperty("editable"), n7.update_required = t21.hasOwnProperty("required"), n7.update_visible = t21.hasOwnProperty("defaultVisibility"), n7.update_default_value = t21.hasOwnProperty("defaultValue");
  try {
    n7.encode();
  } catch (d4) {
    throw new s("knowledge-graph:updateGraphProperty-encoding-failed", "Attempting to encode the updateGraphProperty failed", { error: d4 });
  }
  const o6 = n7.get_encoding_result();
  return e3(o6.error, "knowledge-graph:updateGraphProperty-encoding-failed", "Attempting to encode the updateGraphProperty failed"), structuredClone(o6.get_byte_buffer());
}
async function Re(e16) {
  const t21 = await r3(), a9 = new t21.GraphIndexAddsRequestEncoder();
  a9.deleteLater(), e16.forEach((e17) => {
    a9.add_field_index(_2(e17, t21));
  });
  try {
    a9.encode();
  } catch (o6) {
    throw new s("knowledge-graph:addGraphFieldIndex-encoding-failed", "Attempting to encode the addGraphFieldIndex failed", { error: o6 });
  }
  const n7 = a9.get_encoding_result();
  return e3(n7.error, "knowledge-graph:addGraphFieldIndex-encoding-failed", "Attempting to encode the addGraphFieldIndex failed"), structuredClone(n7.get_byte_buffer());
}
async function Ee(e16) {
  const t21 = new (await r3()).GraphIndexDeleteRequestEncoder();
  t21.deleteLater(), e16.forEach((e17) => {
    t21.add_index_name(e17);
  });
  try {
    t21.encode();
  } catch (n7) {
    throw new s("knowledge-graph:deleteGraphFieldIndex-encoding-failed", "Attempting to encode the deleteGraphFieldIndex failed", { error: n7 });
  }
  const a9 = t21.get_encoding_result();
  return e3(a9.error, "knowledge-graph:deleteGraphFieldIndex-encoding-failed", "Attempting to encode the deleteGraphFieldIndex failed"), structuredClone(a9.get_byte_buffer());
}
async function Ie(e16, t21) {
  const a9 = await r3(), n7 = new a9.GraphUpdateSearchIndexRequestEncoder();
  n7.deleteLater(), t21.hasOwnProperty("addSearchProperties") && n7.insert_add_search_property(e16, m7(t21.addSearchProperties, a9)), t21.hasOwnProperty("removeSearchProperties") && n7.insert_delete_search_property(e16, m7(t21.removeSearchProperties, a9));
  try {
    n7.encode();
  } catch (d4) {
    throw new s("knowledge-graph:updateSearchIndex-encoding-failed", "Attempting to encode the updateSearchIndex failed", { error: d4 });
  }
  const o6 = n7.get_encoding_result();
  return e3(o6.error, "knowledge-graph:updateSearchIndex-encoding-failed", "Attempting to encode the updateSearchIndex failed"), structuredClone(o6.get_byte_buffer());
}
async function qe(e16, t21) {
  const a9 = await r3(), n7 = new a9.GraphQueryRequestEncoder();
  if (n7.deleteLater(), e16.outputSpatialReference ? n7.output_spatial_reference = { wkid: e16.outputSpatialReference.wkid, latestWkid: e16.outputSpatialReference.latestWkid, vcsWkid: e16.outputSpatialReference.vcsWkid, latestVcsWkid: e16.outputSpatialReference.latestVcsWkid, wkt: e16.outputSpatialReference.wkt ?? "" } : n7.output_spatial_reference = a9.SpatialReferenceUtil.WGS84(), n7.open_cypher_query = e16.openCypherQuery, e16.bindParameters) for (const [r7, i12] of Object.entries(e16.bindParameters)) xe(r7, i12, n7, a9);
  if (e16.bindGeometryQuantizationParameters) y2(e16.bindGeometryQuantizationParameters, n7);
  else {
    if (t21.dataModel || await he(t21), 4326 !== t21.dataModel?.spatialReference?.wkid) throw new s("knowledge-graph:SR-quantization-mismatch", "If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder");
    n7.input_quantization_parameters = a9.InputQuantizationUtil.WGS84_lossless();
  }
  e16.outputQuantizationParameters && m6(e16.outputQuantizationParameters, n7, a9), e16.provenanceBehavior && c5(e16.provenanceBehavior, n7);
  try {
    n7.encode();
  } catch (d4) {
    throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { error: d4 });
  }
  const o6 = n7.get_encoding_result();
  if (0 !== o6.error.error_code) throw new s("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { errorCode: o6.error.error_code, errorMessage: o6.error.error_message });
  return structuredClone(o6.get_byte_buffer());
}
async function Ce(e16) {
  const t21 = await r3(), a9 = new t21.GraphSearchRequestEncoder();
  if (a9.deleteLater(), a9.search_query = e16.searchQuery, a9.type_category_filter = t21.esriNamedTypeCategory[e16.typeCategoryFilter], true === e16.returnSearchContext && (a9.return_search_context = e16.returnSearchContext), null != e16.start && e16.start > 0 && (a9.start_index = e16.start), null != e16.num && (a9.max_num_results = e16.num), null != e16.idsFilter && Array.isArray(e16.idsFilter) && e16.idsFilter.length > 0) try {
    a9.set_ids_filter(l2(e16.idsFilter, t21));
  } catch (o6) {
    throw new s("knowledge-graph:ids-format-error", "Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string", { error: o6 });
  }
  e16.namedTypesFilter?.forEach((e17) => {
    a9.add_named_type_filter(e17);
  });
  try {
    a9.encode();
  } catch (o6) {
    throw new s("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { error: o6 });
  }
  const n7 = a9.get_encoding_result();
  if (0 !== n7.error.error_code) throw new s("knowledge-graph:search-encoding-failed", "Attempting to get encoding result from the query failed", { errorCode: n7.error.error_code, errorMessage: n7.error.error_message });
  return structuredClone(n7.get_byte_buffer());
}
async function Fe(e16, r7) {
  return H(e16, { responseType: "native-request-init", method: "post", query: { f: "pbf", ...r7?.query }, body: "x", headers: { "Content-Type": "application/octet-stream" }, signal: r7?.signal, timeout: r7?.timeout });
}
async function Me(e16, t21, a9) {
  const n7 = e16.headers.get("content-type");
  if (n7?.includes("application/x-protobuf")) {
    const r7 = await e16.arrayBuffer(), n8 = new t21();
    try {
      return n8.decode(new Uint8Array(r7)), a9(n8);
    } finally {
      n8.deleteLater();
    }
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: n7, data: await e16.text() });
}
async function je(e16) {
  return Me(e16, (await r3()).GraphApplyEditsDecoder, r6);
}
async function Ue(e16) {
  return Me(e16, (await r3()).GraphNamedObjectTypeAddsResponseDecoder, p14);
}
async function Ne(e16) {
  return Me(e16, (await r3()).GraphNamedObjectTypeDeleteResponseDecoder, a7);
}
async function Ke(e16) {
  return Me(e16, (await r3()).GraphNamedObjectTypeUpdateResponseDecoder, i10);
}
async function Qe(e16) {
  return Me(e16, (await r3()).GraphPropertyAddsResponseDecoder, m8);
}
async function $e(e16) {
  return Me(e16, (await r3()).GraphPropertyDeleteResponseDecoder, f5);
}
async function Le(e16) {
  return Me(e16, (await r3()).GraphPropertyUpdateResponseDecoder, g6);
}
async function Oe(e16) {
  return Me(e16, (await r3()).GraphIndexAddsResponseDecoder, y4);
}
async function We(e16) {
  return Me(e16, (await r3()).GraphIndexDeleteResponseDecoder, R3);
}
async function He(e16) {
  return Me(e16, (await r3()).GraphUpdateSearchIndexResponseDecoder, h4);
}
var ze = 50;
function Be(e16) {
  ze = e16;
}
function Je({ wasmQueryDecoder: e16, newArrayBufferToParse: t21, dataModel: a9, decodedHeader: n7, limitMaxProcessingTime: o6 = false }) {
  t21 && e16.push_buffer(new Uint8Array(t21));
  const i12 = [];
  let s10, p17, c9 = 0;
  const l5 = Date.now();
  let u5 = true;
  for (; e16.next_row(); ) {
    s10 && p17 || (s10 = n7 ?? w3(e16), p17 = s10.outSpatialReference ?? new f({ wkid: 4326 })), c9 || (c9 = e16.get_header_keys().size());
    const t22 = new Array(c9);
    for (let r7 = 0; r7 < c9; r7++) {
      const n8 = e16.get_value(r7);
      t22[r7] = E2(n8, a9, p17);
    }
    if (i12.push(t22), o6 && Date.now() - l5 > ze) {
      u5 = false;
      break;
    }
  }
  if (e16.has_error()) throw new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded - inner row decoding", { errorCode: e16.error.error_code, errorMessage: e16.error.error_message });
  return { resultHeader: s10, resultRows: i12, parsedAllResultsFromBuffer: u5 };
}
async function Ve(e16, t21) {
  const o6 = e16.headers.get("content-type");
  if (e16.headers.get("content-length") && i.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined."), o6?.includes("application/x-protobuf")) {
    const o7 = e16.body?.getReader(), d4 = new (await r3()).GraphQueryDecoder();
    let i12, s10, c9;
    d4.deleteLater();
    const l5 = new Promise((e17, t22) => {
      s10 = e17, c9 = t22;
    });
    let u5 = false, h8 = null;
    const g9 = new ReadableStream({ pull: async function e17(l6) {
      if (!o7) {
        const e18 = new s("knowledge-graph:stream-decoding-error", "Error reading from stream - reader is undefined");
        throw c9(e18), e18;
      }
      const { done: w4, value: g10 } = h8 ? { done: false, value: null } : await o7.read().catch((e18) => {
        throw c9(e18), o7.releaseLock(), e18;
      });
      g10 && (h8 = g10);
      try {
        if (w4) {
          let e18;
          if (d4.has_error() ? e18 = new s("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded - query stream done", { errorCode: d4.error.error_code, errorMessage: d4.error.error_message }) : u5 || s10(new t3()), o7.releaseLock(), e18) throw l6.error(e18), c9(e18), e18;
          return void l6.close();
        }
        const { resultHeader: a9, resultRows: n7, parsedAllResultsFromBuffer: y6 } = Je({ wasmQueryDecoder: d4, newArrayBufferToParse: g10, dataModel: t21, decodedHeader: i12, limitMaxProcessingTime: true });
        return y6 && (h8 = null), !i12 && a9 && (i12 = a9, s10(a9), u5 = true), n7.length > 0 ? void l6.enqueue(n7) : await e17(l6);
      } catch (y6) {
        throw i.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").error(y6), c9(y6), o7.releaseLock(), b(y6) ? y6 : new s("knowledge-graph:unexpected-server-response", "Error inside streaming data return parsing", { error: y6 });
      }
    } });
    return { readableStream: g9, resultHeader: await l5 };
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o6, data: e16.text() });
}
async function Ye(e16) {
  const a9 = `${e16.url}/dataModel/queryDataModel`, n7 = await H(a9, { responseType: "array-buffer", query: { f: "pbf" } }), o6 = n7.getHeader?.("content-type"), d4 = n7.data;
  if (o6?.includes("application/x-protobuf")) {
    const e17 = (await r3()).decode_data_model_from_protocol_buffer(new Uint8Array(d4));
    if (!e17) throw new s("knowledge-graph:data-model-decode-failure", "The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)");
    return h5(e17);
  }
  throw new s("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o6, data: n7.data });
}

export {
  r3 as r,
  r4 as r2,
  i8 as i,
  z3 as z,
  B,
  J2 as J,
  V,
  Y,
  X,
  Z,
  ee,
  te,
  re,
  ae,
  ne,
  oe,
  de,
  ie,
  se,
  pe,
  ce,
  le,
  ue,
  he,
  we,
  ge,
  ye,
  fe,
  me,
  _e,
  ke,
  Ge,
  be,
  Be
};
//# sourceMappingURL=chunk-VFUR4QXG.js.map
