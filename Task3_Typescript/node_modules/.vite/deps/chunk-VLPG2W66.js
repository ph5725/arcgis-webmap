import {
  a as a4,
  a3 as a5,
  m as m3,
  n as n2,
  v,
  y
} from "./chunk-GH7GZNY6.js";
import {
  y as y2
} from "./chunk-G5DA3EEG.js";
import {
  u as u3
} from "./chunk-7DFHXN7Z.js";
import {
  i as i2
} from "./chunk-T4QXFCFF.js";
import {
  u2,
  z
} from "./chunk-LYSDGL5S.js";
import {
  r as r3
} from "./chunk-EOMIFMDH.js";
import {
  E,
  e2 as e,
  x
} from "./chunk-VCRP2PLV.js";
import {
  a as a3
} from "./chunk-TVM3SZJR.js";
import {
  l as l2
} from "./chunk-A3VAC24F.js";
import {
  C
} from "./chunk-6PV45IYU.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  s as s2
} from "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2
} from "./chunk-JUAD7TJ6.js";
import {
  u,
  w
} from "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import {
  m as m2,
  p
} from "./chunk-ZWFY3WY5.js";
import {
  i2 as i,
  s
} from "./chunk-XWG6QGFK.js";
import {
  a,
  n
} from "./chunk-GWNLQRNM.js";
import {
  L
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/renderers/support/UniqueValue.js
var l3 = class extends a3.ClonableMixin(l) {
  constructor(o2) {
    super(o2), this.value = null, this.value2 = null, this.value3 = null;
  }
};
r([m(a5)], l3.prototype, "value", void 0), r([m(a5)], l3.prototype, "value2", void 0), r([m(a5)], l3.prototype, "value3", void 0), l3 = r([a2("esri.renderers.support.UniqueValue")], l3);

// node_modules/@arcgis/core/renderers/support/UniqueValueClass.js
var n3 = class extends a3.ClonableMixin(l) {
  constructor(r4) {
    super(r4), this.description = null, this.label = null, this.symbol = null, this.values = null;
  }
  castValues(r4) {
    if (null == r4) return null;
    const o2 = typeof (r4 = Array.isArray(r4) ? r4 : [r4])[0];
    return "string" === o2 || "number" === o2 ? r4.map((r5) => new l3({ value: r5 })) : "object" === o2 ? r4[0] instanceof l3 ? r4 : r4.map((r5) => new l3(r5)) : null;
  }
};
r([m({ type: String, json: { write: true } })], n3.prototype, "description", void 0), r([m({ type: String, json: { write: true } })], n3.prototype, "label", void 0), r([m(y)], n3.prototype, "symbol", void 0), r([m({ type: [l3], json: { type: [[String]], read: { reader: (r4) => r4 ? r4.map((r5) => new l3({ value: r5[0], value2: r5[1], value3: r5[2] })) : null }, write: { writer: (r4, e2) => {
  const t = [];
  for (const s3 of r4) {
    const r5 = [s3.value, s3.value2, s3.value3].filter(L).map((r6) => r6.toString());
    t.push(r5);
  }
  e2.values = t;
} } } })], n3.prototype, "values", void 0), r([s2("values")], n3.prototype, "castValues", null), n3 = r([a2("esri.renderers.support.UniqueValueClass")], n3);

// node_modules/@arcgis/core/renderers/support/UniqueValueGroup.js
var i3 = class extends a3.ClonableMixin(l) {
  constructor(r4) {
    super(r4), this.heading = null, this.classes = null;
  }
};
r([m({ type: String, json: { write: true } })], i3.prototype, "heading", void 0), r([m({ type: [n3], json: { write: { isRequired: true } } })], i3.prototype, "classes", void 0), i3 = r([a2("esri.renderers.support.UniqueValueGroup")], i3);

// node_modules/@arcgis/core/renderers/support/UniqueValueInfo.js
var l4;
var p2 = l4 = class extends l {
  constructor(o2) {
    super(o2), this.description = null, this.label = null, this.symbol = null, this.value = null;
  }
  clone() {
    return new l4({ value: this.value, description: this.description, label: this.label, symbol: this.symbol ? this.symbol.clone() : null });
  }
  getMeshHash() {
    const o2 = JSON.stringify(this.symbol?.toJSON());
    return `${this.value}.${o2}`;
  }
};
r([m({ type: String, json: { write: true } })], p2.prototype, "description", void 0), r([m({ type: String, json: { write: true } })], p2.prototype, "label", void 0), r([m(m3)], p2.prototype, "symbol", void 0), r([m(a5)], p2.prototype, "value", void 0), p2 = l4 = r([a2("esri.renderers.support.UniqueValueInfo")], p2);

// node_modules/@arcgis/core/renderers/UniqueValueRenderer.js
var E2;
var M = "uvInfos-watcher";
var R = "uvGroups-watcher";
var N = ",";
var L2 = w(p2);
function P(e2) {
  const { field1: t, field2: s3, field3: i4, fieldDelimiter: o2, uniqueValueInfos: l5, valueExpression: r4 } = e2, u4 = !(!t || !s3);
  return [{ classes: (l5 ?? []).map((e3) => {
    const { symbol: l6, label: n4, value: a6, description: p3 } = e3, [f, d, c] = u4 ? a6?.toString()?.split(o2 || "") || [] : [a6], h = [];
    return (t || r4) && h.push(f), s3 && h.push(d), i4 && h.push(c), { symbol: l6, label: n4, values: [h], description: p3 };
  }) }];
}
function C2(e2) {
  return null != e2 && "" !== e2 && ("string" != typeof e2 || "" !== e2.trim() && "<null>" !== e2.toLowerCase()) || (e2 = null), e2 + "";
}
var $ = E2 = class extends v(a4) {
  constructor(e2) {
    super(e2), this._valueInfoMap = {}, this._isDefaultSymbolDerived = false, this._isInfosSource = null, this.type = "unique-value", this.backgroundFillSymbol = null, this.orderByClassesEnabled = false, this.valueExpressionTitle = null, this.legendOptions = null, this.defaultLabel = null, this.portal = null, this.styleOrigin = null, this.diff = { uniqueValueInfos(e3, t) {
      if (!e3 && !t) return;
      if (!e3 || !t) return { type: "complete", oldValue: e3, newValue: t };
      let s3 = false;
      const i4 = { type: "collection", added: [], removed: [], changed: [], unchanged: [] };
      for (let o2 = 0; o2 < t.length; o2++) {
        const l5 = e3.find((e4) => e4.value === t[o2].value);
        l5 ? y2(l5, t[o2]) ? (i4.changed.push({ type: "complete", oldValue: l5, newValue: t[o2] }), s3 = true) : i4.unchanged.push({ oldValue: l5, newValue: t[o2] }) : (i4.added.push(t[o2]), s3 = true);
      }
      for (let o2 = 0; o2 < e3.length; o2++) {
        t.find((t2) => t2.value === e3[o2].value) || (i4.removed.push(e3[o2]), s3 = true);
      }
      return s3 ? i4 : void 0;
    } }, this._set("uniqueValueInfos", []), this._set("uniqueValueGroups", []);
  }
  get _cache() {
    return { compiledFunc: null };
  }
  set field(e2) {
    this._set("field", e2), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  castField(e2) {
    return null == e2 || "function" == typeof e2 ? e2 : u(e2);
  }
  writeField(e2, s3, o2, l5) {
    "string" == typeof e2 ? s3[o2] = e2 : l5?.messages ? l5.messages.push(new s("property:unsupported", "UniqueValueRenderer.field set to a function cannot be written to JSON")) : i.getLogger(this).error(".field: cannot write field to JSON since it's not a string value");
  }
  set field2(e2) {
    this._set("field2", e2), this._updateFieldDelimiter(), this._updateUniqueValues();
  }
  set field3(e2) {
    this._set("field3", e2), this._updateUniqueValues();
  }
  set valueExpression(e2) {
    this._set("valueExpression", e2), this._updateUniqueValues();
  }
  set defaultSymbol(e2) {
    this._isDefaultSymbolDerived = false, this._set("defaultSymbol", e2);
  }
  set fieldDelimiter(e2) {
    this._set("fieldDelimiter", e2), this._updateUniqueValues();
  }
  readPortal(e2, t, s3) {
    return s3.portal || C.getDefault();
  }
  readStyleOrigin(e2, t, s3) {
    if (t.styleName) return Object.freeze({ styleName: t.styleName });
    if (t.styleUrl) {
      const e3 = p(t.styleUrl, s3);
      return Object.freeze({ styleUrl: e3 });
    }
  }
  writeStyleOrigin(e2, t, s3, i4) {
    e2.styleName ? t.styleName = e2.styleName : e2.styleUrl && (t.styleUrl = m2(e2.styleUrl, i4));
  }
  set uniqueValueGroups(e2) {
    this.styleOrigin ? i.getLogger(this).error("#uniqueValueGroups=", "Cannot modify unique value groups of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueGroups", e2), this._updateInfosFromGroups(), this._isInfosSource = false, this._watchUniqueValueGroups());
  }
  set uniqueValueInfos(e2) {
    this.styleOrigin ? i.getLogger(this).error("#uniqueValueInfos=", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style") : (this._set("uniqueValueInfos", e2), this._updateValueInfoMap(), this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos());
  }
  addUniqueValueInfo(e2, t) {
    if (this.styleOrigin) return void i.getLogger(this).error("#addUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    let s3;
    s3 = "object" == typeof e2 ? L2(e2) : new p2({ value: e2, symbol: z(t) }), this.uniqueValueInfos?.push(s3), this._valueInfoMap[C2(s3.value)] = s3, this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  removeUniqueValueInfo(e2) {
    if (this.styleOrigin) return void i.getLogger(this).error("#removeUniqueValueInfo()", "Cannot modify unique value infos of a UniqueValueRenderer created from a web style");
    const t = this.uniqueValueInfos;
    if (t) for (let s3 = 0; s3 < t.length; s3++) {
      const i4 = t[s3];
      if (String(i4.value) === String(e2)) {
        delete this._valueInfoMap[C2(e2)], t.splice(s3, 1);
        break;
      }
    }
    this._updateGroupsFromInfos(), this._isInfosSource = true, this._watchUniqueValueInfos();
  }
  async getUniqueValueInfo(e2, t) {
    let s3 = t;
    return this.valueExpression && null == t?.arcade && (s3 = { ...s3, arcade: await e() }), this._getUniqueValueInfo(e2, s3);
  }
  getSymbol(e2, t) {
    if (this.valueExpression && null == t?.arcade) return void i.getLogger(this).error("#getSymbol()", "Please use getSymbolAsync if valueExpression is used");
    const s3 = this._getUniqueValueInfo(e2, t);
    return s3?.symbol || this.defaultSymbol;
  }
  async getSymbolAsync(e2, t) {
    let s3 = t;
    if (this.valueExpression && null == s3?.arcade) {
      const e3 = await e(), { arcadeUtils: t2 } = e3;
      t2.hasGeometryOperations(this.valueExpression) && await t2.enableGeometryOperations(), s3 = { ...s3, arcade: e3 };
    }
    const i4 = this._getUniqueValueInfo(e2, s3);
    return i4?.symbol || this.defaultSymbol;
  }
  get symbols() {
    const e2 = [];
    for (const t of this.uniqueValueInfos ?? []) t.symbol && e2.push(t.symbol);
    return this.defaultSymbol && e2.push(this.defaultSymbol), e2;
  }
  getAttributeHash() {
    return this.visualVariables?.reduce((e2, t) => e2 + t.getAttributeHash(), "") ?? "";
  }
  getMeshHash() {
    const e2 = JSON.stringify(this.backgroundFillSymbol), t = JSON.stringify(this.defaultSymbol), s3 = this.uniqueValueInfos?.reduce((e3, t2) => e3 + t2.getMeshHash(), "");
    return `${e2}.${t}.${s3}.${`${this.field}.${this.field2}.${this.field3}.${this.fieldDelimiter}`}.${this.valueExpression}`;
  }
  clone() {
    const e2 = new E2({ field: this.field, field2: this.field2, field3: this.field3, defaultLabel: this.defaultLabel, defaultSymbol: a(this.defaultSymbol), orderByClassesEnabled: this.orderByClassesEnabled, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle, fieldDelimiter: this.fieldDelimiter, visualVariables: a(this.visualVariables), legendOptions: a(this.legendOptions), authoringInfo: a(this.authoringInfo), backgroundFillSymbol: a(this.backgroundFillSymbol) });
    this._isDefaultSymbolDerived && (e2._isDefaultSymbolDerived = true), e2._set("portal", this.portal);
    const t = a(this.uniqueValueInfos), i4 = a(this.uniqueValueGroups);
    return this.styleOrigin && (e2._set("styleOrigin", Object.freeze(a(this.styleOrigin))), Object.freeze(t), Object.freeze(i4)), e2._set("uniqueValueInfos", t), e2._updateValueInfoMap(), e2._set("uniqueValueGroups", i4), e2._isInfosSource = this._isInfosSource, e2._watchUniqueValueInfosAndGroups(), e2;
  }
  get arcadeRequired() {
    return this.arcadeRequiredForVisualVariables || !!this.valueExpression;
  }
  async collectRequiredFields(e2, t) {
    const s3 = [this.collectVVRequiredFields(e2, t), this.collectSymbolFields(e2, t)];
    await Promise.all(s3);
  }
  async collectSymbolFields(e2, t) {
    const s3 = [...this.symbols.map((s4) => s4.collectRequiredFields(e2, t)), E(e2, t, this.valueExpression)];
    x(e2, t, this.field), x(e2, t, this.field2), x(e2, t, this.field3), await Promise.all(s3);
  }
  populateFromStyle() {
    return i2(this.styleOrigin, { portal: this.portal }).then((e2) => {
      const t = [];
      return this._valueInfoMap = {}, e2?.data && Array.isArray(e2.data.items) && e2.data.items.forEach((s3) => {
        const i4 = new u2({ styleUrl: e2.styleUrl, styleName: e2.styleName, portal: this.portal, name: s3.name });
        this.defaultSymbol || s3.name !== e2.data.defaultItem || (this.defaultSymbol = i4, this._isDefaultSymbolDerived = true);
        const o2 = new p2({ value: s3.name, symbol: i4 });
        t.push(o2), this._valueInfoMap[C2(s3.name)] = o2;
      }), this._set("uniqueValueInfos", Object.freeze(t)), this._updateGroupsFromInfos(true), this._isInfosSource = null, this._watchUniqueValueInfos(), !this.defaultSymbol && this.uniqueValueInfos?.length && (this.defaultSymbol = this.uniqueValueInfos[0].symbol, this._isDefaultSymbolDerived = true), this;
    });
  }
  _updateFieldDelimiter() {
    this.field && this.field2 && !this.fieldDelimiter && this._set("fieldDelimiter", N);
  }
  _updateUniqueValues() {
    null != this._isInfosSource && (this._isInfosSource ? this._updateGroupsFromInfos() : this._updateInfosFromGroups());
  }
  _updateValueInfoMap() {
    this._valueInfoMap = {};
    const { uniqueValueInfos: e2 } = this;
    if (e2) for (const t of e2) this._valueInfoMap[C2(t.value)] = t;
  }
  _watchUniqueValueInfosAndGroups() {
    this._watchUniqueValueInfos(), this._watchUniqueValueGroups();
  }
  _watchUniqueValueInfos() {
    this.removeHandles(M);
    const { uniqueValueInfos: e2 } = this;
    if (e2) {
      const t = [];
      for (const s3 of e2) t.push(l2(() => ({ symbol: s3.symbol, value: s3.value, label: s3.label, description: s3.description }), (e3, t2) => {
        e3 !== t2 && (this._updateGroupsFromInfos(), this._isInfosSource = true);
      }, { sync: true }));
      this.addHandles(t, M);
    }
  }
  _watchUniqueValueGroups() {
    this.removeHandles(R);
    const { uniqueValueGroups: e2 } = this;
    if (e2) {
      const t = [];
      for (const s3 of e2) {
        t.push(l2(() => ({ classes: s3.classes }), (e3, t2) => {
          e3 !== t2 && (this._updateInfosFromGroups(), this._isInfosSource = false);
        }, { sync: true }));
        for (const e3 of s3.classes ?? []) t.push(l2(() => ({ symbol: e3.symbol, values: e3.values, label: e3.label, description: e3.description }), (e4, t2) => {
          e4 !== t2 && (this._updateInfosFromGroups(), this._isInfosSource = false);
        }, { sync: true }));
      }
      this.addHandles(t, R);
    }
  }
  _updateInfosFromGroups() {
    if (!this.uniqueValueGroups) return this._set("uniqueValueInfos", null), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const e2 = [], { field: t, field2: s3, field3: i4, fieldDelimiter: o2, uniqueValueGroups: l5, valueExpression: r4 } = this;
    if (!t && !r4) return this._set("uniqueValueInfos", e2), this._updateValueInfoMap(), void this._watchUniqueValueInfos();
    const u4 = !(!t || !s3);
    for (const n4 of l5) for (const t2 of n4.classes ?? []) {
      const { symbol: l6, label: r5, values: n5, description: a6 } = t2;
      for (const t3 of n5 ?? []) {
        const { value: n6, value2: p3, value3: f } = t3, d = [n6];
        s3 && d.push(p3), i4 && d.push(f);
        const c = u4 ? d.join(o2 || "") : d[0] ?? void 0;
        e2.push(new p2({ symbol: l6, label: r5, value: c, description: a6 }));
      }
    }
    this._set("uniqueValueInfos", e2), this._updateValueInfoMap(), this._watchUniqueValueInfos();
  }
  _updateGroupsFromInfos(e2 = false) {
    if (!this.uniqueValueInfos) return this._set("uniqueValueGroups", null), void this._watchUniqueValueGroups();
    const { field: t, field2: s3, valueExpression: i4, fieldDelimiter: o2, uniqueValueInfos: l5 } = this;
    if (!t && !i4 || !l5.length) return this._set("uniqueValueGroups", []), void this._watchUniqueValueGroups();
    const r4 = !(!t || !s3), u4 = l5.map((e3) => {
      const { symbol: t2, label: s4, value: i5, description: l6 } = e3, [u5, n5, a6] = r4 ? i5?.toString()?.split(o2 || "") || [] : [i5];
      return new n3({ symbol: t2, label: s4, description: l6, values: [new l3({ value: u5, value2: n5, value3: a6 })] });
    }), n4 = [new i3({ classes: u4 })];
    e2 && Object.freeze(n4), this._set("uniqueValueGroups", n4), this._watchUniqueValueGroups();
  }
  _getUniqueValueInfo(e2, t) {
    return this.valueExpression ? this._getUnqiueValueInfoForExpression(e2, t) : this._getUnqiueValueInfoForFields(e2);
  }
  _getUnqiueValueInfoForExpression(e2, t) {
    const { viewingMode: s3, scale: i4, spatialReference: o2, arcade: l5, timeZone: r4 } = t ?? {};
    let u4 = this._cache.compiledFunc;
    const n4 = l5.arcadeUtils;
    if (!u4) {
      const e3 = n4.createSyntaxTree(this.valueExpression);
      u4 = n4.createFunction(e3), this._cache.compiledFunc = u4;
    }
    const a6 = n4.executeFunction(u4, n4.createExecContext(e2, n4.getViewInfo({ viewingMode: s3, scale: i4, spatialReference: o2 }), r4));
    return this._valueInfoMap[C2(a6)];
  }
  _getUnqiueValueInfoForFields(e2) {
    const t = this.field, s3 = e2.attributes;
    let i4;
    if (this.field2) {
      const e3 = this.field2, o2 = this.field3, l5 = [];
      t && l5.push(s3[t]), e3 && l5.push(s3[e3]), o2 && l5.push(s3[o2]), i4 = l5.join(this.fieldDelimiter || "");
    } else t && (i4 = s3[t]);
    return this._valueInfoMap[C2(i4)];
  }
  static fromPortalStyle(e2, t) {
    const s3 = new E2(t?.properties);
    s3._set("styleOrigin", Object.freeze({ styleName: e2 })), s3._set("portal", t?.portal || C.getDefault());
    const o2 = s3.populateFromStyle();
    return o2.catch((t2) => {
      i.getLogger(this.prototype).error(`#fromPortalStyle('${e2}'[, ...])`, "Failed to create unique value renderer from style name", t2);
    }), o2;
  }
  static fromStyleUrl(e2, t) {
    const s3 = new E2(t?.properties);
    s3._set("styleOrigin", Object.freeze({ styleUrl: e2 }));
    const o2 = s3.populateFromStyle();
    return o2.catch((t2) => {
      i.getLogger(this.prototype).error(`#fromStyleUrl('${e2}'[, ...])`, "Failed to create unique value renderer from style URL", t2);
    }), o2;
  }
};
r([m({ readOnly: true })], $.prototype, "_cache", null), r([r3({ uniqueValue: "unique-value" })], $.prototype, "type", void 0), r([m(n2)], $.prototype, "backgroundFillSymbol", void 0), r([m({ value: null, json: { type: String, read: { source: "field1" }, write: { target: "field1" } } })], $.prototype, "field", null), r([s2("field")], $.prototype, "castField", null), r([r2("field")], $.prototype, "writeField", null), r([m({ type: String, value: null, json: { write: true } })], $.prototype, "field2", null), r([m({ type: String, value: null, json: { write: true } })], $.prototype, "field3", null), r([m({ type: Boolean, json: { name: "drawInClassOrder", default: false, write: true, origins: { "web-scene": { write: false } } } })], $.prototype, "orderByClassesEnabled", void 0), r([m({ type: String, value: null, json: { write: true } })], $.prototype, "valueExpression", null), r([m({ type: String, json: { write: true } })], $.prototype, "valueExpressionTitle", void 0), r([m({ type: u3, json: { write: true } })], $.prototype, "legendOptions", void 0), r([m({ type: String, json: { write: true } })], $.prototype, "defaultLabel", void 0), r([m(n({ ...y }, { json: { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} }, origins: { "web-scene": { write: { overridePolicy() {
  return { enabled: !this._isDefaultSymbolDerived };
} } } } } }))], $.prototype, "defaultSymbol", null), r([m({ type: String, value: null, json: { write: true } })], $.prototype, "fieldDelimiter", null), r([m({ type: C, readOnly: true })], $.prototype, "portal", void 0), r([o("portal", ["styleName"])], $.prototype, "readPortal", null), r([m({ readOnly: true, json: { write: { enabled: false, overridePolicy: () => ({ enabled: true }) } } })], $.prototype, "styleOrigin", void 0), r([o("styleOrigin", ["styleName", "styleUrl"])], $.prototype, "readStyleOrigin", null), r([r2("styleOrigin", { styleName: { type: String }, styleUrl: { type: String } })], $.prototype, "writeStyleOrigin", null), r([m({ type: [i3], json: { read: { source: ["uniqueValueGroups", "uniqueValueInfos"], reader: (e2, t, s3) => (t.uniqueValueGroups || P(t)).map((e3) => i3.fromJSON(e3, s3)) }, write: { overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true };
} } } })], $.prototype, "uniqueValueGroups", null), r([m({ type: [p2], json: { read: false, write: { isRequired: true, overridePolicy() {
  return this.styleOrigin ? { enabled: false } : { enabled: true, isRequired: true };
} } } })], $.prototype, "uniqueValueInfos", null), $ = E2 = r([a2("esri.renderers.UniqueValueRenderer")], $);

export {
  p2 as p,
  $
};
//# sourceMappingURL=chunk-VLPG2W66.js.map
