import {
  b,
  v
} from "./chunk-BGR5EVZD.js";
import {
  e,
  r as r2
} from "./chunk-NZPABYQQ.js";
import {
  A,
  g,
  r,
  s,
  u
} from "./chunk-TMFB3DKM.js";
import {
  n as n3
} from "./chunk-7FAVUXK2.js";
import {
  z
} from "./chunk-IVNFIIVI.js";
import {
  n as n2
} from "./chunk-DNZK6PPI.js";
import {
  N,
  n
} from "./chunk-RACDQ3AL.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/IntersectorInterfaces.js
var e2 = class {
  constructor() {
    this.verticalOffset = 0, this.selectionMode = false, this.hud = true, this.selectOpaqueTerrainOnly = true, this.invisibleTerrain = false, this.backfacesTerrain = true, this.isFiltered = false, this.filteredLayerViewUids = [], this.store = i.ALL, this.normalRequired = true, this.excludeLabels = false;
  }
};
var i;
!function(e3) {
  e3[e3.MIN = 0] = "MIN", e3[e3.MINMAX = 1] = "MINMAX", e3[e3.ALL = 2] = "ALL";
}(i || (i = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/IntersectorType.js
var E;
!function(E2) {
  E2[E2.OBJECT = 0] = "OBJECT", E2[E2.HUD = 1] = "HUD", E2[E2.TERRAIN = 2] = "TERRAIN", E2[E2.OVERLAY = 3] = "OVERLAY", E2[E2.I3S = 4] = "I3S", E2[E2.PCL = 5] = "PCL", E2[E2.LOD = 6] = "LOD", E2[E2.VOXEL = 7] = "VOXEL", E2[E2.TILES3D = 8] = "TILES3D";
}(E || (E = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/IntersectorResult.js
var p = class {
  get ray() {
    return this._ray;
  }
  get distanceInRenderSpace() {
    return null == this.distance ? null : (g(u2, this.ray.direction, this.distance), r(u2));
  }
  withinDistance(t) {
    return !!g2(this) && this.distanceInRenderSpace <= t;
  }
  getIntersectionPoint(t) {
    return !!g2(this) && (g(u2, this.ray.direction, this.distance), u(t, this.ray.origin, u2), true);
  }
  getTransformedNormal(t) {
    return s(j, this.normal), j[3] = 0, z(j, j, this.transformation), s(t, j), A(t, t);
  }
  constructor(t) {
    this.intersector = E.OBJECT, this.normal = n(), this.transformation = e(), this._ray = b(), this.init(t);
  }
  init(t) {
    this.distance = this.target = this.drapedLayerOrder = this.renderPriority = null, this.intersector = E.OBJECT, v(t, this._ray);
  }
  set(r3, s2, e3, a, o, c, m) {
    this.intersector = r3, this.distance = e3, s(this.normal, a ?? N), n2(this.transformation, o ?? r2), this.target = s2, this.drapedLayerOrder = c, this.renderPriority = m;
  }
  copy(r3) {
    v(r3.ray, this._ray), this.intersector = r3.intersector, this.distance = r3.distance, this.target = r3.target, this.drapedLayerOrder = r3.drapedLayerOrder, this.renderPriority = r3.renderPriority, s(this.normal, r3.normal), n2(this.transformation, r3.transformation);
  }
};
function g2(t) {
  return null != t?.distance;
}
var u2 = n();
var j = n3();

export {
  e2 as e,
  i,
  E,
  p
};
//# sourceMappingURL=chunk-VOIQQS36.js.map
