import {
  o
} from "./chunk-SWINDW7X.js";
import {
  l
} from "./chunk-R2HTWJLS.js";
import {
  n as n2
} from "./chunk-ZPAWXU2P.js";
import {
  i
} from "./chunk-QNHQE3IL.js";
import {
  n
} from "./chunk-6EOJZ6DP.js";
import {
  a
} from "./chunk-DRLVYVHZ.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Integer2BindUniform.js
var o2 = class extends i {
  constructor(e2, o6) {
    super(e2, "ivec2", a.Bind, (r, i2) => r.setUniform2iv(e2, o6(i2)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/IntegerBindUniform.js
var e = class extends i {
  constructor(o6, e2) {
    super(o6, "int", a.Bind, (r, i2) => r.setUniform1i(o6, e2(i2)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Texture2DUintBindUniform.js
var o3 = class extends i {
  constructor(e2, o6) {
    super(e2, "usampler2D", a.Bind, (r, s) => r.bindTexture(e2, o6(s)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/OutputHighlight.glsl.js
function o4(o6, u) {
  const { fragment: r } = o6, { output: c, draped: n3, hasHighlightMixTexture: s } = u;
  c === n2.Highlight ? (r.uniforms.add(new e("highlightLevel", (i2) => i2.highlightLevel ?? 0), new o2("highlightMixOrigin", (i2) => i2.highlightMixOrigin)), o6.outputs.add("fragHighlight", "uvec2", 0), o6.include(l), s ? r.uniforms.add(new o3("highlightMixTexture", (i2) => i2.highlightMixTexture)).code.add(n`uvec2 getAccumulatedHighlight() {
return texelFetch(highlightMixTexture, ivec2(gl_FragCoord.xy) - highlightMixOrigin, 0).rg;
}
void outputHighlight(bool occluded) {
if (highlightLevel == 0) {
uint bits = occluded ? 3u : 1u;
fragHighlight = uvec2(bits, 0);
} else {
int ll = (highlightLevel & 3) << 1;
int li = (highlightLevel >> 2) & 3;
uint bits;
if (occluded) {
bits = 3u << ll;
} else {
bits = 1u << ll;
}
uvec2 combinedHighlight = getAccumulatedHighlight();
combinedHighlight[li] |= bits;
fragHighlight = combinedHighlight;
}
}`) : r.code.add(n`void outputHighlight(bool occluded) {
uint bits = occluded ? 3u : 1u;
fragHighlight = uvec2(bits, 0);
}`), n3 ? r.code.add(n`bool isHighlightOccluded() {
return false;
}`) : r.uniforms.add(new o("depthTexture", (i2) => i2.mainDepth)).code.add(n`bool isHighlightOccluded() {
float sceneDepth = texelFetch(depthTexture, ivec2(gl_FragCoord.xy), 0).x;
return gl_FragCoord.z > sceneDepth + 5e-7;
}`), r.code.add(n`void calculateOcclusionAndOutputHighlight() {
outputHighlight(isHighlightOccluded());
}`)) : r.code.add(n`void calculateOcclusionAndOutputHighlight() {}`);
}

// node_modules/@arcgis/core/webscene/support/AlphaCutoff.js
var o5 = 1 / 255.5;

export {
  e,
  o4 as o,
  o5 as o2
};
//# sourceMappingURL=chunk-VT5VIQO4.js.map
