import {
  s as s2
} from "./chunk-2LU4NAEM.js";
import {
  i
} from "./chunk-EUGUM3DF.js";
import {
  s
} from "./chunk-NEBU5XJO.js";
import {
  y
} from "./chunk-OGOQOMMV.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  r as r2
} from "./chunk-YFPGM5UE.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";

// node_modules/@arcgis/core/rest/networks/support/Association.js
var d = class extends l {
  constructor(t) {
    super(t), this.globalId = null, this.associationType = null, this.fromNetworkElement = null, this.toNetworkElement = null, this.geometry = null, this.errorMessage = null, this.percentAlong = null, this.errorCode = null, this.isContentVisible = null, this.status = null;
  }
  readFromNetworkElement(t, o2) {
    return o2.fromFirstUnit || o2.fromNumUnits ? new s2({ globalId: o2.fromGlobalId, networkSourceId: o2.fromNetworkSourceId, terminalId: o2.fromTerminalId, firstUnit: o2.fromFirstUnit, numUnits: o2.fromNumUnits }) : new s({ globalId: o2.fromGlobalId, networkSourceId: o2.fromNetworkSourceId, terminalId: o2.fromTerminalId });
  }
  writeFromNetworkElement(t, o2) {
    if (t && (o2.fromGlobalId = t.globalId, o2.fromNetworkSourceId = t.networkSourceId, o2.fromTerminalId = t.terminalId, "telecomNetworkElement" === t.type)) {
      const e = t;
      o2.fromFirstUnit = e.firstUnit, o2.fromNumUnits = e.numUnits;
    }
  }
  readToNetworkElement(t, o2) {
    return o2.toFirstUnit || o2.toNumUnits ? new s2({ globalId: o2.toGlobalId, networkSourceId: o2.toNetworkSourceId, terminalId: o2.toTerminalId, firstUnit: o2.toFirstUnit, numUnits: o2.toNumUnits }) : new s({ globalId: o2.toGlobalId, networkSourceId: o2.toNetworkSourceId, terminalId: o2.toTerminalId });
  }
  writeToNetworkElement(t, o2) {
    if (t && (o2.toGlobalId = t.globalId, o2.toNetworkSourceId = t.networkSourceId, o2.toTerminalId = t.terminalId, "telecomNetworkElement" === t.type)) {
      const e = t;
      o2.toFirstUnit = e.firstUnit, o2.toNumUnits = e.numUnits;
    }
  }
};
r([m({ type: String, json: { write: true } })], d.prototype, "globalId", void 0), r([m({ type: i.apiValues, json: { type: i.jsonValues, read: i.read, write: i.write } })], d.prototype, "associationType", void 0), r([m({ type: s, json: { write: { target: { fromGlobalId: { type: String }, fromNetworkSourceId: { type: Number }, fromTerminalId: { type: Number }, fromFirstUnit: { type: Number }, fromNumUnits: { type: Number } } }, read: { source: ["fromGlobalId", "fromNetworkSourceId", "fromTerminalId", "fromFirstUnit", "fromNumUnits"] } } })], d.prototype, "fromNetworkElement", void 0), r([o("fromNetworkElement")], d.prototype, "readFromNetworkElement", null), r([r2("fromNetworkElement")], d.prototype, "writeFromNetworkElement", null), r([m({ type: s, json: { write: { target: { toGlobalId: { type: String }, toNetworkSourceId: { type: Number }, toTerminalId: { type: Number }, toFirstUnit: { type: Number }, toNumUnits: { type: Number } } }, read: { source: ["toGlobalId", "toNetworkSourceId", "toTerminalId", "toFirstUnit", "toNumUnits"] } } })], d.prototype, "toNetworkElement", void 0), r([o("toNetworkElement")], d.prototype, "readToNetworkElement", null), r([r2("toNetworkElement")], d.prototype, "writeToNetworkElement", null), r([m({ type: y, json: { write: true } })], d.prototype, "geometry", void 0), r([m({ type: String, json: { write: true } })], d.prototype, "errorMessage", void 0), r([m({ type: Number, json: { write: true } })], d.prototype, "percentAlong", void 0), r([m({ type: Number, json: { write: true } })], d.prototype, "errorCode", void 0), r([m({ type: Boolean, json: { write: true } })], d.prototype, "isContentVisible", void 0), r([m({ type: Number, json: { write: true } })], d.prototype, "status", void 0), d = r([a("esri.rest.networks.support.Association")], d);

export {
  d
};
//# sourceMappingURL=chunk-W32FQSGL.js.map
