// node_modules/@arcgis/core/networks/support/networkFieldUtils.js
function e(e2) {
  const t2 = e2?.fieldsIndex, o = "fromnetworksourceid", n = "fromglobalid", r = "fromterminalid", i = "tonetworksourceid", a = "toglobalid", l = "toterminalid", s = "status", m = "associationtype", d = "iscontentvisible", g = "percentalong", u = "globalid";
  return { fromNetworkSourceId: t2?.get(o)?.name ?? o, fromGlobalId: t2?.get(n)?.name ?? n, fromTerminalId: t2?.get(r)?.name ?? r, toNetworkSourceId: t2?.get(i)?.name ?? i, toGlobalId: t2?.get(a)?.name ?? a, toTerminalId: t2?.get(l)?.name ?? l, status: t2?.get(s)?.name ?? s, associationType: t2?.get(m)?.name ?? m, isContentVisible: t2?.get(d)?.name ?? d, percentAlong: t2?.get(g)?.name ?? g, globalId: t2?.get(e2?.globalIdField ?? u)?.name ?? u };
}
function t(e2, t2) {
  if ("feature" !== t2.type && "subtype-group" !== t2.type) return [];
  if (!t2.url) return [];
  const o = "utilityNetworks" in e2.map ? e2.map.utilityNetworks ?? [] : [];
  for (const n of o) if (n.isUtilityLayer(t2)) {
    const e3 = t2.fieldsIndex.get("assetgroup"), o2 = t2.fieldsIndex.get("assettype");
    return [e3?.name, o2?.name].filter((e4) => null != e4);
  }
  return [];
}

export {
  e,
  t
};
//# sourceMappingURL=chunk-XJMFXMGK.js.map
