{
  "version": 3,
  "sources": ["../../@arcgis/core/arcade/deepClone.js", "../../@arcgis/core/arcade/Dictionary.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{ArcadeModule as a}from\"./ArcadeModule.js\";import{e,d as r,h as s,j as o,k as t,l,m as n,n as c,o as d,i as m}from\"../chunks/languageUtils.js\";import{isArray as u}from\"../support/guards.js\";function i(a){p=a}let p;function f(i){return null===i?null:e(i)?i.clone():r(i)?i:s(i)?i.clone():o(i)?i.toArray().map((a=>f(a))):u(i)?i.map((a=>f(a))):t(i)?p.createFromArcadeFeature(i):l(i)||n(i)?i:c(i)||\"esri.arcade.Attachment\"===i?.declaredClass?i.deepClone():(\"esri.arcade.Portal\"===i?.declaredClass||d(i)||i instanceof a||m(i),i)}export{i as configureDeepClone,f as deepClone};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{ArcadeDate as t}from\"./ArcadeDate.js\";import{deepClone as e}from\"./deepClone.js\";import{ArcadeExecutionError as s,ExecutionErrorCodes as r}from\"./executionError.js\";import{i,c as n,a as o,b as a,d as u,e as l,f as c,g as f,h as b}from\"../chunks/languageUtils.js\";import h from\"../geometry/Geometry.js\";import{isNumber as m,isBoolean as d,isString as w,isArray as y}from\"../support/guards.js\";function p(t,e,s=!1,r=!1){if(null==t)return null;if(m(t)||d(t)||w(t)||l(t)||c(t)||f(t))return t;if(y(t)){const i=[];for(const n of t)i.push(p(n,e,s,r));return i}if(r&&b(t))return t;const i=new j;i.immutable=!1;for(const[n,o]of Object.entries(t))void 0!==o&&i.setField(n,p(o,e,s,r));return i.immutable=s,i}class j{constructor(t){this.declaredClass=\"esri.arcade.Dictionary\",this.plain=!1,this.immutable=!0,t instanceof j?this.attributes=t.attributes:null==t?this.attributes=Object.create(null):null!=Object.getPrototypeOf(t)?this.attributes={__proto__:null,...t}:this.attributes=t}static containerEntry(t,e){return new j({__proto__:null,key:t,value:e})}static textFormatting(){const t=new j({__proto__:null,newline:\"\\n\",tab:\"\\t\",singlequote:\"'\",doublequote:'\"',forwardslash:\"/\",backwardslash:\"\\\\\"});return t.immutable=!1,t}field(t){const e=t.toLowerCase(),i=this.attributes[t];if(void 0!==i)return i;for(const s in this.attributes)if(s.toLowerCase()===e)return this.attributes[s];throw new s(null,r.FieldNotFound,null,{key:t})}setField(e,n){if(this.immutable)throw new s(null,r.Immutable,null);if(i(n))throw new s(null,r.NoFunctionInDictionary,null);const o=e.toLowerCase();n instanceof Date&&(n=t.dateJSToArcadeDate(n));if(void 0===this.attributes[e]){for(const t in this.attributes)if(t.toLowerCase()===o)return void(this.attributes[t]=n);this.attributes[e]=n}else this.attributes[e]=n}hasField(t){const e=t.toLowerCase();if(void 0!==this.attributes[t])return!0;for(const s in this.attributes)if(s.toLowerCase()===e)return!0;return!1}keys(){let t=[];for(const e in this.attributes)t.push(e);return t=t.sort(),t}castToText(t=!1){return n(this.attributes,{useNumbersForDates:t})}static convertObjectToArcadeDictionary(t,e,s=!0,r=!1){const i=new j;i.immutable=!1;for(const n in t){const o=t[n];void 0!==o&&i.setField(n.toString(),p(o,e,s,r))}return i.immutable=s,i}static convertJsonToArcade(t,e,s=!1,r=!1){return p(t,e,s,r)}castAsJson(t=null){const e=Object.create(null);for(let s in this.attributes){const r=this.attributes[s];void 0!==r&&(t?.keyTranslate&&(s=t.keyTranslate(s)),e[s]=o(r,t))}return e}async castDictionaryValueAsJsonAsync(t,e,s,r=null,i){const n=await a(s,r,i);return t[e]=n,n}async castAsJsonAsync(e=null,s=null){const r=Object.create(null),i=[];for(let n in this.attributes){const a=this.attributes[n];s?.keyTranslate&&(n=s.keyTranslate(n)),void 0!==a&&(u(a)||a instanceof h||a instanceof t?r[n]=o(a,s):i.push(this.castDictionaryValueAsJsonAsync(r,n,a,e,s)))}return i.length>0&&await Promise.all(i),r}deepClone(){const t=new j;t.immutable=!1;for(const s of this.keys())t.setField(s,e(this.field(s)));return t}}export{j as default};\r\n"],
  "mappings": "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",
  "names": ["a", "i", "p", "t", "e", "s", "r", "i", "n", "o", "a"]
}
