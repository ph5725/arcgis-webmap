import {
  a,
  s,
  t
} from "./chunk-GWNLQRNM.js";

// node_modules/@arcgis/core/core/string.js
var e = /\{([^}]+)\}/g;
function n(t2) {
  return t2 ?? "";
}
function r(r3, o3) {
  return o3 ? r3.replaceAll(e, "object" == typeof o3 ? (e3, r4) => n(t(r4, o3)) : (t2, e3) => n(o3(e3))) : r3;
}
function o(t2, e3) {
  return t2.replaceAll(/([.$?*|{}()[\]\\/+\-^])/g, (t3) => e3?.includes(t3) ? t3 : `\\${t3}`);
}
function l(t2) {
  let e3 = 0;
  for (let n3 = 0; n3 < t2.length; n3++) e3 = (e3 << 5) - e3 + t2.charCodeAt(n3), e3 |= 0;
  return e3;
}
var u;
function c(t2) {
  u ??= new DOMParser();
  return u.parseFromString(t2 || "", "text/html").body.innerText || "";
}
function i(t2, e3) {
  return new RegExp(`{${e3}}`, "ig").test(t2);
}
function f(t2, ...e3) {
  let n3 = t2[0];
  for (let r3 = 0; r3 < e3.length; ++r3) n3 += e3[r3] + t2[r3 + 1];
  return n3;
}

// node_modules/@arcgis/core/core/Logger.js
var r2 = { info: 0, warn: 1, error: 2, none: 3 };
var _i = class _i {
  constructor(e3) {
    this.level = null, this._module = "", this._parent = null, this.writer = null, this._loggedMessages = { error: /* @__PURE__ */ new Map(), warn: /* @__PURE__ */ new Map(), info: /* @__PURE__ */ new Map() }, null != e3.level && (this.level = e3.level), null != e3.writer && (this.writer = e3.writer), this._module = e3.module, _i._loggers.set(this.module, this);
    const t2 = this.module.lastIndexOf(".");
    -1 !== t2 && (this._parent = _i.getLogger(this.module.slice(0, t2)));
  }
  get module() {
    return this._module;
  }
  get parent() {
    return this._parent;
  }
  error(...e3) {
    this._log("error", "always", ...e3);
  }
  warn(...e3) {
    this._log("warn", "always", ...e3);
  }
  info(...e3) {
    this._log("info", "always", ...e3);
  }
  errorOnce(...e3) {
    this._log("error", "once", ...e3);
  }
  warnOnce(...e3) {
    this._log("warn", "once", ...e3);
  }
  infoOnce(...e3) {
    this._log("info", "once", ...e3);
  }
  errorOncePerTick(...e3) {
    this._log("error", "oncePerTick", ...e3);
  }
  warnOncePerTick(...e3) {
    this._log("warn", "oncePerTick", ...e3);
  }
  infoOncePerTick(...e3) {
    this._log("info", "oncePerTick", ...e3);
  }
  get test() {
  }
  static get test() {
  }
  static getLogger(e3) {
    return e3 = "string" != typeof e3 ? e3.declaredClass : e3, _i._loggers.get(e3) || new _i({ module: e3 });
  }
  _log(t2, r3, ...n3) {
    if (!this._matchLevel(t2)) return;
    if ("always" !== r3 && !_i._throttlingDisabled) {
      const e3 = o2(n3), s4 = this._loggedMessages[t2].get(e3);
      if ("once" === r3 && null != s4 || "oncePerTick" === r3 && s4 && s4 >= _i._tickCounter) return;
      this._loggedMessages[t2].set(e3, _i._tickCounter), _i._scheduleTickCounterIncrement();
    }
    for (const i3 of s.log.interceptors) if (i3(t2, this.module, ...n3)) return;
    this._inheritedWriter()(t2, this.module, ...n3);
  }
  _parentWithMember(e3, t2) {
    let r3 = this;
    for (; null != r3; ) {
      const t3 = r3[e3];
      if (null != t3) return t3;
      r3 = r3.parent;
    }
    return t2;
  }
  _inheritedWriter() {
    return this._parentWithMember("writer", n2);
  }
  _matchLevel(t2) {
    const i3 = s.log.level || "warn";
    return r2[this._parentWithMember("level", i3)] <= r2[t2];
  }
  static _scheduleTickCounterIncrement() {
    _i._tickCounterScheduled || (_i._tickCounterScheduled = true, Promise.resolve().then(() => {
      _i._tickCounter++, _i._tickCounterScheduled = false;
    }));
  }
};
_i._loggers = /* @__PURE__ */ new Map();
_i._tickCounter = 0;
_i._tickCounterScheduled = false;
_i._throttlingDisabled = false;
var i2 = _i;
function n2(e3, t2, ...r3) {
  console[e3](`[${t2}]`, ...r3);
}
function o2(...e3) {
  const r3 = (e4, t2) => "object" != typeof t2 || Array.isArray(t2) ? t2 : "[Object]";
  return l(JSON.stringify(e3, r3));
}

// node_modules/@arcgis/core/core/Message.js
function s2(s4, e3) {
  return s4.replaceAll(/\$\{([^\s:}]*)(?::([^\s:}]+))?\}/g, (s5, r3) => {
    if ("" === r3) return "$";
    const i3 = t(r3, e3);
    return (i3 ?? "").toString();
  });
}
var e2 = class {
  constructor(t2, e3, r3 = void 0) {
    this.name = t2, this.details = r3, this.message = (e3 && s2(e3, r3)) ?? "";
  }
  toString() {
    return "[" + this.name + "]: " + this.message;
  }
};

// node_modules/@arcgis/core/core/Error.js
var s3 = class _s extends e2 {
  constructor(e3, t2, r3) {
    super(e3, t2, r3);
  }
  toJSON() {
    if (null != this.details) try {
      return { name: this.name, message: this.message, details: JSON.parse(JSON.stringify(this.details, (t2, r3) => {
        if (r3 && "object" == typeof r3 && "function" == typeof r3.toJSON) return r3;
        try {
          return a(r3);
        } catch (s4) {
          return "[object]";
        }
      })) };
    } catch (r3) {
      throw i2.getLogger("esri.core.Error").error(r3), r3;
    }
    return { name: this.name, message: this.message, details: this.details };
  }
  static fromJSON(e3) {
    return new _s(e3.name, e3.message, e3.details);
  }
};
s3.prototype.type = "error";

export {
  r,
  o,
  l,
  c,
  i,
  f,
  i2,
  e2 as e,
  s3 as s
};
//# sourceMappingURL=chunk-XWG6QGFK.js.map
