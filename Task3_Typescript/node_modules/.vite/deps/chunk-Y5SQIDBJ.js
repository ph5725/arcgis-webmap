import {
  e as e3
} from "./chunk-LRWR245D.js";
import {
  t as t2
} from "./chunk-5MPGCN36.js";
import {
  O
} from "./chunk-B7AMZ4LC.js";
import {
  e as e2
} from "./chunk-UZRZVWLE.js";
import {
  e
} from "./chunk-KKAHMR7F.js";
import {
  A,
  K,
  P,
  _,
  c,
  o,
  p,
  s as s2,
  u
} from "./chunk-TMFB3DKM.js";
import {
  n
} from "./chunk-RACDQ3AL.js";
import {
  b,
  s
} from "./chunk-FPSA4NFH.js";
import {
  r
} from "./chunk-3TBMFSPB.js";
import {
  t
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/bufferLayouts.js
var E = O().vec3f(e2.POSITION).u16(e2.COMPONENTINDEX).freeze();
var I = O().vec2u8(e2.SIDENESS).freeze();
var S = t2(I);
var T = O().vec3f(e2.POSITION0).vec3f(e2.POSITION1).vec2i16(e2.NORMALCOMPRESSED).u16(e2.COMPONENTINDEX).u8(e2.VARIANTOFFSET, { glNormalized: true }).u8(e2.VARIANTSTROKE).u8(e2.VARIANTEXTENSION, { glNormalized: true }).freeze();
var A2 = O().vec3f(e2.POSITION0).vec3f(e2.POSITION1).vec2i16(e2.NORMALCOMPRESSED).vec2i16(e2.NORMAL2COMPRESSED).u16(e2.COMPONENTINDEX).u8(e2.VARIANTOFFSET, { glNormalized: true }).u8(e2.VARIANTSTROKE).u8(e2.VARIANTEXTENSION, { glNormalized: true }).freeze();
var r2 = /* @__PURE__ */ new Map([[e2.POSITION0, 0], [e2.POSITION1, 1], [e2.COMPONENTINDEX, 2], [e2.VARIANTOFFSET, 3], [e2.VARIANTSTROKE, 4], [e2.VARIANTEXTENSION, 5], [e2.NORMALCOMPRESSED, 6], [e2.NORMAL2COMPRESSED, 7], [e2.SIDENESS, 8]]);

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/Edge.js
var s3 = class {
  constructor() {
    this.position0 = n(), this.position1 = n(), this.faceNormal0 = n(), this.faceNormal1 = n(), this.componentIndex = 0, this.cosAngle = 0;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/edgePreprocessing.js
var d = -1;
function p2(e4, t4, o2) {
  const c3 = e4.vertices.position, l2 = e4.vertices.componentIndex, i = y.position0, h2 = y.position1, g3 = y.faceNormal0, u4 = y.faceNormal1, { edges: p5, normals: v2 } = w(e4), V2 = p5.length / 4, j2 = t4.allocate(V2);
  let I3 = 0;
  const N3 = V2, E3 = o2?.allocate(N3);
  let b3 = 0, D2 = 0, k2 = 0;
  x.length = 0;
  for (let s4 = 0; s4 < V2; ++s4) {
    const e5 = 4 * s4;
    c3.getVec(p5.data[e5], i), c3.getVec(p5.data[e5 + 1], h2);
    const t5 = x.pushNew();
    t5.index = 4 * s4, t5.length = p(i, h2);
  }
  x.sort((e5, t5) => t5.length - e5.length);
  const P2 = new Array(), U = new Array();
  x.forAll(({ length: e5, index: n2 }) => {
    const w3 = p5.data[n2], x2 = p5.data[n2 + 1], V3 = p5.data[n2 + 2], N4 = p5.data[n2 + 3], q2 = N4 === d;
    if (c3.getVec(w3, i), c3.getVec(x2, h2), q2) {
      const e6 = 3 * V3;
      o(g3, v2.data[e6], v2.data[e6 + 1], v2.data[e6 + 2]), s2(u4, g3), y.componentIndex = l2.get(w3), y.cosAngle = P(g3, u4);
    } else {
      let e6 = 3 * V3;
      if (o(g3, v2.data[e6], v2.data[e6 + 1], v2.data[e6 + 2]), e6 = 3 * N4, o(u4, v2.data[e6], v2.data[e6 + 1], v2.data[e6 + 2]), y.componentIndex = l2.get(w3), y.cosAngle = P(g3, u4), m(y, M)) return;
      y.cosAngle < -0.9999 && s2(u4, g3);
    }
    D2 += e5, k2++, q2 || f(y, L) ? (t4.write(j2, I3++, y), P2.push(e5)) : A3(y, F) && (E3 && o2 && o2.write(E3, b3++, y), U.push(e5));
  });
  const q = new Float32Array(P2.reverse()), z = new Float32Array(U.reverse()), B2 = E3 && o2 ? { instancesData: E3.slice(0, b3), lodInfo: { lengths: z } } : void 0;
  return { regular: { instancesData: j2.slice(0, I3), lodInfo: { lengths: q } }, silhouette: B2, averageEdgeLength: D2 / k2 };
}
function f(e4, t4) {
  return e4.cosAngle < t4;
}
function m(e4, t4) {
  return e4.cosAngle > t4;
}
function A3(t4, o2) {
  const n2 = b(t4.cosAngle);
  K(N, t4.position1, t4.position0);
  return n2 * (P(_(I2, t4.faceNormal0, t4.faceNormal1), N) > 0 ? -1 : 1) > o2;
}
function w(e4) {
  const t4 = e4.faces.length / 3, o2 = e4.faces, n2 = e4.neighbors, s4 = e4.vertices.position;
  V.length = j.length = 0;
  for (let a2 = 0; a2 < t4; a2++) {
    const e5 = 3 * a2, t5 = n2[e5], r3 = n2[e5 + 1], h2 = n2[e5 + 2], g3 = o2[e5], u4 = o2[e5 + 1], p5 = o2[e5 + 2];
    s4.getVec(g3, E2), s4.getVec(u4, b2), s4.getVec(p5, D), c(b2, b2, E2), c(D, D, E2), _(E2, b2, D), A(E2, E2), j.pushArray(E2), (t5 === d || g3 < u4) && (V.push(g3), V.push(u4), V.push(a2), V.push(t5)), (r3 === d || u4 < p5) && (V.push(u4), V.push(p5), V.push(a2), V.push(r3)), (h2 === d || p5 < g3) && (V.push(p5), V.push(g3), V.push(a2), V.push(h2));
  }
  return { edges: V, normals: j };
}
var v = class {
  constructor() {
    this.index = 0, this.length = 0;
  }
};
var x = new r({ allocator: (e4) => e4 || new v(), deallocator: null });
var V = new r({ deallocator: null });
var j = new r({ deallocator: null });
var y = new s3();
var I2 = n();
var N = n();
var E2 = n();
var b2 = n();
var D = n();
var F = s(4);
var M = Math.cos(F);
var k = s(35);
var L = Math.cos(k);

// node_modules/@arcgis/core/views/3d/support/meshProcessing.js
function t3(t4, o2, n2) {
  const r3 = o2 / 3, c3 = new Uint32Array(n2 + 1), e4 = new Uint32Array(n2 + 1), s4 = (t5, o3) => {
    t5 < o3 ? c3[t5 + 1]++ : e4[o3 + 1]++;
  };
  for (let x2 = 0; x2 < r3; x2++) {
    const o3 = t4[3 * x2], n3 = t4[3 * x2 + 1], r4 = t4[3 * x2 + 2];
    s4(o3, n3), s4(n3, r4), s4(r4, o3);
  }
  let f4 = 0, l2 = 0;
  for (let x2 = 0; x2 < n2; x2++) {
    const t5 = c3[x2 + 1], o3 = e4[x2 + 1];
    c3[x2 + 1] = f4, e4[x2 + 1] = l2, f4 += t5, l2 += o3;
  }
  const i = new Uint32Array(6 * r3), a2 = c3[n2], w3 = (t5, o3, n3) => {
    if (t5 < o3) {
      const r4 = c3[t5 + 1]++;
      i[2 * r4] = o3, i[2 * r4 + 1] = n3;
    } else {
      const r4 = e4[o3 + 1]++;
      i[2 * a2 + 2 * r4] = t5, i[2 * a2 + 2 * r4 + 1] = n3;
    }
  };
  for (let x2 = 0; x2 < r3; x2++) {
    const o3 = t4[3 * x2], n3 = t4[3 * x2 + 1], r4 = t4[3 * x2 + 2];
    w3(o3, n3, x2), w3(n3, r4, x2), w3(r4, o3, x2);
  }
  const y3 = (t5, o3) => {
    const n3 = 2 * t5, r4 = o3 - t5;
    for (let c4 = 1; c4 < r4; c4++) {
      const t6 = i[n3 + 2 * c4], o4 = i[n3 + 2 * c4 + 1];
      let r5 = c4 - 1;
      for (; r5 >= 0 && i[n3 + 2 * r5] > t6; r5--) i[n3 + 2 * r5 + 2] = i[n3 + 2 * r5], i[n3 + 2 * r5 + 3] = i[n3 + 2 * r5 + 1];
      i[n3 + 2 * r5 + 2] = t6, i[n3 + 2 * r5 + 3] = o4;
    }
  };
  for (let x2 = 0; x2 < n2; x2++) y3(c3[x2], c3[x2 + 1]), y3(a2 + e4[x2], a2 + e4[x2 + 1]);
  const A4 = new Int32Array(3 * r3), U = (o3, n3) => o3 === t4[3 * n3] ? 0 : o3 === t4[3 * n3 + 1] ? 1 : o3 === t4[3 * n3 + 2] ? 2 : -1, u4 = (t5, o3) => {
    const n3 = U(t5, o3);
    A4[3 * o3 + n3] = -1;
  }, p5 = (t5, o3, n3, r4) => {
    const c4 = U(t5, o3);
    A4[3 * o3 + c4] = r4;
    const e5 = U(n3, r4);
    A4[3 * r4 + e5] = o3;
  };
  for (let x2 = 0; x2 < n2; x2++) {
    let t5 = c3[x2];
    const o3 = c3[x2 + 1];
    let n3 = e4[x2];
    const r4 = e4[x2 + 1];
    for (; t5 < o3 && n3 < r4; ) {
      const o4 = i[2 * t5], r5 = i[2 * a2 + 2 * n3];
      o4 === r5 ? (p5(x2, i[2 * t5 + 1], r5, i[2 * a2 + 2 * n3 + 1]), t5++, n3++) : o4 < r5 ? (u4(x2, i[2 * t5 + 1]), t5++) : (u4(r5, i[2 * a2 + 2 * n3 + 1]), n3++);
    }
    for (; t5 < o3; ) u4(x2, i[2 * t5 + 1]), t5++;
    for (; n3 < r4; ) {
      u4(i[2 * a2 + 2 * n3], i[2 * a2 + 2 * n3 + 1]), n3++;
    }
  }
  return A4;
}

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/edgeBufferWriters.js
var c2 = 0.7;
var f2 = class {
  updateSettings(t4) {
    this.settings = t4, this._edgeHashFunction = t4.reducedPrecision ? d2 : l;
  }
  write(t4, o2, e4) {
    B.seed = this._edgeHashFunction(e4);
    const i = B.getIntRange(0, 255), r3 = B.getIntRange(0, this.settings.variants - 1), s4 = B.getFloat(), n2 = 255 * (0.5 * y2(-(1 - Math.min(s4 / c2, 1)) + Math.max(0, s4 - c2) / (1 - c2), 1.2) + 0.5);
    t4.position0.setVec(o2, e4.position0), t4.position1.setVec(o2, e4.position1), t4.componentIndex.set(o2, e4.componentIndex), t4.variantOffset.set(o2, i), t4.variantStroke.set(o2, r3), t4.variantExtension.set(o2, n2);
  }
};
var m2 = new Float32Array(6);
var p3 = new Uint32Array(m2.buffer);
var u2 = new Uint32Array(1);
function l(t4) {
  return m2[0] = t4.position0[0], m2[1] = t4.position0[1], m2[2] = t4.position0[2], m2[3] = t4.position1[0], m2[4] = t4.position1[1], m2[5] = t4.position1[2], u2[0] = 31 * (31 * (31 * (31 * (31 * (166811 + p3[0]) + p3[1]) + p3[2]) + p3[3]) + p3[4]) + p3[5], u2[0];
}
function d2(t4) {
  const o2 = m2;
  o2[0] = g(t4.position0[0]), o2[1] = g(t4.position0[1]), o2[2] = g(t4.position0[2]), o2[3] = g(t4.position1[0]), o2[4] = g(t4.position1[1]), o2[5] = g(t4.position1[2]), u2[0] = 5381;
  for (let e4 = 0; e4 < p3.length; e4++) u2[0] = 31 * u2[0] + p3[e4];
  return u2[0];
}
var h = 1e4;
function g(t4) {
  return Math.round(t4 * h) / h;
}
function y2(t4, o2) {
  return Math.abs(t4) ** o2 * Math.sign(t4);
}
var _w = class _w {
  constructor() {
    this._commonWriter = new f2();
  }
  updateSettings(t4) {
    this._commonWriter.updateSettings(t4);
  }
  allocate(t4) {
    return T.createBuffer(t4);
  }
  write(t4, i, r3) {
    this._commonWriter.write(t4, i, r3), u(S2, r3.faceNormal0, r3.faceNormal1), A(S2, S2);
    const { typedBuffer: n2, typedBufferStride: a2 } = t4.normalCompressed;
    e3(n2, i, S2[0], S2[1], S2[2], a2);
  }
};
_w.Layout = T;
_w.glLayout = t2(T, 1);
var w2 = _w;
var _N = class _N {
  constructor() {
    this._commonWriter = new f2();
  }
  updateSettings(t4) {
    this._commonWriter.updateSettings(t4);
  }
  allocate(t4) {
    return A2.createBuffer(t4);
  }
  write(t4, o2, e4) {
    this._commonWriter.write(t4, o2, e4);
    {
      const { typedBuffer: i, typedBufferStride: r3 } = t4.normalCompressed;
      e3(i, o2, e4.faceNormal0[0], e4.faceNormal0[1], e4.faceNormal0[2], r3);
    }
    {
      const { typedBuffer: i, typedBufferStride: r3 } = t4.normal2Compressed;
      e3(i, o2, e4.faceNormal1[0], e4.faceNormal1[1], e4.faceNormal1[2], r3);
    }
  }
};
_N.Layout = A2;
_N.glLayout = t2(A2, 1);
var N2 = _N;
var S2 = n();
var B = new t();

// node_modules/@arcgis/core/views/3d/webgl-engine/lib/edgeRendering/edgeProcessing.js
function f3(e4) {
  const t4 = u3(e4.data, e4.skipDeduplicate, e4.indices, e4.indicesLength);
  return m3.updateSettings(e4.writerSettings), a.updateSettings(e4.writerSettings), p2(t4, m3, a);
}
function u3(r3, s4, n2, o2) {
  if (s4) {
    const e4 = t3(n2, o2, r3.count);
    return new p4(n2, o2, e4, r3);
  }
  const c3 = e(r3.buffer, r3.stride / 4, { originalIndices: n2 }), f4 = t3(c3.indices, o2, c3.uniqueCount);
  return { faces: c3.indices, facesLength: c3.indices.length, neighbors: f4, vertices: E.createView(c3.buffer) };
}
var p4 = class {
  constructor(e4, t4, r3, s4) {
    this.faces = e4, this.facesLength = t4, this.neighbors = r3, this.vertices = s4;
  }
};
var m3 = new w2();
var a = new N2();
var d3 = O().vec3f(e2.POSITION0).vec3f(e2.POSITION1);
var g2 = O().vec3f(e2.POSITION0).vec3f(e2.POSITION1).u16(e2.COMPONENTINDEX);

export {
  E,
  p2 as p,
  f3 as f,
  u3 as u,
  d3 as d,
  g2 as g
};
//# sourceMappingURL=chunk-Y5SQIDBJ.js.map
