import {
  E2 as E,
  s2 as s
} from "./chunk-ENM5QFON.js";
import {
  H
} from "./chunk-TMFB3DKM.js";
import {
  l as l2
} from "./chunk-KE3WBZYL.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";

// node_modules/@arcgis/core/views/interactive/snapping/Settings.js
var o = class extends l {
  constructor() {
    super(...arguments), this.enabled = true;
  }
};
r([m({ type: Boolean })], o.prototype, "enabled", void 0), o = r([a("esri.views.interactive.snapping.Settings.DefaultSnappingAlgorithm")], o);
var l3 = class extends l {
  constructor(e) {
    super(e), this.lineSnapper = new o(), this.parallelLineSnapper = new o(), this.rightAngleSnapper = new o(), this.rightAngleTriangleSnapper = new o(), this.shortLineThreshold = 15, this.distance = 5, this.pointThreshold = 1e-6, this.intersectionParallelLineThreshold = 1e-6, this.parallelLineThreshold = 1e-6, this.verticalLineThresholdMeters = 0.3, this.touchSensitivityMultiplier = 1.5, this.pointOnLineThreshold = 1e-6, this.orange = new l2([255, 127, 0]), this.orangeTransparent = new l2([255, 127, 0, 0.5]), this.lineHintWidthReference = 3, this.lineHintWidthTarget = 3, this.lineHintFadedExtensions = 0.3, this.parallelLineHintWidth = 2, this.parallelLineHintLength = 24, this.parallelLineHintOffset = 1.5, this.rightAngleHintSize = 24, this.rightAngleHintOutlineSize = 1.5, this.satisfiesConstraintScreenThreshold = 1;
  }
};
r([m({ type: o, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "lineSnapper", void 0), r([m({ type: o, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "parallelLineSnapper", void 0), r([m({ type: o, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "rightAngleSnapper", void 0), r([m({ type: o, constructOnly: true, nonNullable: true, json: { write: true } })], l3.prototype, "rightAngleTriangleSnapper", void 0), r([m({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l3.prototype, "shortLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: -1, max: 50, step: 1 }, json: { write: true } })], l3.prototype, "distance", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "pointThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "intersectionParallelLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "parallelLineThreshold", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], l3.prototype, "verticalLineThresholdMeters", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "touchSensitivityMultiplier", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1e-5 }, json: { write: true } })], l3.prototype, "pointOnLineThreshold", void 0), r([m({ type: l2, nonNullable: true })], l3.prototype, "orange", void 0), r([m({ type: l2, nonNullable: true })], l3.prototype, "orangeTransparent", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "lineHintWidthReference", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "lineHintWidthTarget", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 1 }, json: { write: true } })], l3.prototype, "lineHintFadedExtensions", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 10 }, json: { write: true } })], l3.prototype, "parallelLineHintWidth", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 50 }, json: { write: true } })], l3.prototype, "parallelLineHintLength", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 5 }, json: { write: true } })], l3.prototype, "parallelLineHintOffset", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 46 }, json: { write: true } })], l3.prototype, "rightAngleHintSize", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 6 }, json: { write: true } })], l3.prototype, "rightAngleHintOutlineSize", void 0), r([m({ type: Number, nonNullable: true, range: { min: 0, max: 5 }, json: { write: true } })], l3.prototype, "satisfiesConstraintScreenThreshold", void 0), l3 = r([a("esri.views.interactive.snapping.Settings.Defaults")], l3);
var p = new l3();

// node_modules/@arcgis/core/views/interactive/snapping/hints/ParallelSnappingHint.js
var r2 = class _r extends s {
  constructor(t, i, r3, s2 = E.ALL) {
    super(r3, s2), this.lineStart = t, this.lineEnd = i;
  }
  equals(n) {
    return n instanceof _r && (H(this.lineStart, n.lineStart) && H(this.lineEnd, n.lineEnd));
  }
};

export {
  p,
  r2 as r
};
//# sourceMappingURL=chunk-YIOJR4CO.js.map
