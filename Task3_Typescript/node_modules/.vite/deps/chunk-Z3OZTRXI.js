import {
  n,
  s
} from "./chunk-Z6552KW6.js";
import {
  o as o2
} from "./chunk-EUGUM3DF.js";
import {
  a as a2
} from "./chunk-OTCYHWWG.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import {
  r
} from "./chunk-5TPMG26T.js";

// node_modules/@arcgis/core/networks/support/NamedTraceConfiguration.js
var p = class extends a2 {
  constructor(r2) {
    super(r2), this.globalId = null, this.title = null, this.traceConfiguration = null, this.creationDate = null, this.creator = null, this.description = null, this.minStartingPoints = null, this.resultTypes = [], this.tags = [], this.traceType = null;
  }
  readTraceConfiguration(r2, e) {
    return void 0 !== r2.tierName ? n.fromJSON(r2) : s.fromJSON(r2);
  }
};
r([m({ type: String, nonNullable: true, json: { origins: { "web-map": { read: { source: "id" }, write: { target: "id", isRequired: true } }, service: { read: { source: "globalId" }, write: { target: "globalId", isRequired: true } } }, read: false } })], p.prototype, "globalId", void 0), r([m({ type: String, nonNullable: true, json: { origins: { "web-map": { read: { source: "title" }, write: { target: "title", isRequired: true } }, service: { read: { source: "name" }, write: { target: "name", isRequired: true } } }, read: false } })], p.prototype, "title", void 0), r([m({ type: s, json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "traceConfiguration", void 0), r([o("service", "traceConfiguration")], p.prototype, "readTraceConfiguration", null), r([m({ type: Date, json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "creationDate", void 0), r([m({ type: String, json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "creator", void 0), r([m({ type: String, json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "description", void 0), r([m({ type: ["none", "one", "many"], json: { origins: { service: { read: { source: "minNumStartingPoints" }, write: { target: "minNumStartingPoints" } } }, read: false } })], p.prototype, "minStartingPoints", void 0), r([m({ json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "resultTypes", void 0), r([m({ type: [String], json: { origins: { service: { read: true, write: true } }, read: false } })], p.prototype, "tags", void 0), r([m({ type: o2.apiValues, json: { type: o2.jsonValues, origins: { service: { read: o2.read, write: o2.write } }, read: false } })], p.prototype, "traceType", void 0), p = r([a("esri.networks.support.NamedTraceConfiguration")], p);
var d = p;

export {
  d
};
//# sourceMappingURL=chunk-Z3OZTRXI.js.map
