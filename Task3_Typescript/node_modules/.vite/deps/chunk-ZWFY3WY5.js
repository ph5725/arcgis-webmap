import {
  $t,
  A,
  At,
  Bt,
  C,
  F,
  G,
  H,
  Ht,
  I,
  K,
  M,
  N,
  P,
  St,
  T,
  V,
  X,
  Y,
  Z,
  _,
  a as a2,
  jt,
  r,
  tt,
  v,
  vt,
  x,
  zt
} from "./chunk-LQFTAGIV.js";
import {
  u
} from "./chunk-S7IJH524.js";
import {
  b,
  c3 as c,
  m2 as m,
  u3 as u2
} from "./chunk-GZ2P4SCJ.js";
import {
  s as s2
} from "./chunk-XWG6QGFK.js";
import {
  a,
  s
} from "./chunk-GWNLQRNM.js";
import {
  has
} from "./chunk-FXKORAMT.js";

// node_modules/@arcgis/core/support/revision.js
var f = "20250708";
var c2 = "3f313cd890df21896088a60e19e9d26665f8c30f";

// node_modules/@arcgis/core/kernel.js
Symbol.dispose ??= Symbol("Symbol.dispose"), Symbol.asyncDispose ??= Symbol("Symbol.asyncDispose");
var e = "4.33";
var s3;
var r2 = e;
r2 = "4.33.9";
function i(o2) {
  s3 = o2;
}
function t(e3) {
  const r4 = s3?.findCredential(e3);
  return r4?.token ? Bt(e3, "token", r4.token) : e3;
}
has("host-webworker") || globalThis.$arcgis || Object.defineProperty(globalThis, "$arcgis", { configurable: false, enumerable: true, writable: false, value: {} }), has("host-webworker");

// node_modules/@arcgis/core/chunks/persistableUrlUtils.js
function p(e3, t2) {
  const o2 = t2?.url?.path;
  if (e3 && o2 && (e3 = _(e3, o2, { preserveProtocolRelative: true }), t2.portalItem && t2.readResourcePaths)) {
    const r4 = G(e3, t2.portalItem.itemUrl);
    null != r4 && v2.test(r4) && t2.readResourcePaths.push(t2.portalItem.resourceFromPath(r4).path);
  }
  return (e3 = I2(e3, t2?.portal)) && d.test(e3) ? R(e3) : e3;
}
function m2(e3, l2, a5 = y.YES) {
  if (null == (e3 = e3 && d.test(e3) ? w(e3) : e3)) return e3;
  !Y(e3) && l2?.blockedRelativeUrls && l2.blockedRelativeUrls.push(e3);
  let c4 = _(e3);
  if (l2) {
    const t2 = l2.verifyItemRelativeUrls?.rootPath || l2.url?.path;
    if (t2) {
      const r4 = I2(t2, l2.portal), o2 = I2(c4, l2.portal);
      c4 = G(o2, r4, r4);
      null != c4 && c4 !== o2 && c4 !== e3 && l2.verifyItemRelativeUrls && l2.verifyItemRelativeUrls.writtenUrls.push(c4);
    }
  }
  return c4 = x2(c4, l2?.portal), Y(c4) && (c4 = K(c4)), l2?.resources && l2?.portalItem && !Y(c4) && !tt(c4) && a5 === y.YES && l2.resources.toKeep.push({ resource: l2.portalItem.resourceFromPath(c4), compress: false }), c4;
}
function f2(e3, t2, r4) {
  return p(e3, r4);
}
function h(e3, t2, r4, s4) {
  const o2 = m2(e3, s4);
  void 0 !== o2 && (t2[r4] = o2);
}
var d = /\/items\/([^/]+)\/resources\/(.*)/;
var v2 = /^\.\/resources\//;
function U(e3) {
  const t2 = e3?.match(d) ?? null;
  return t2?.[1] ?? null;
}
function g(e3) {
  const t2 = e3?.match(d) ?? null;
  if (null == t2) return null;
  const r4 = t2[2], s4 = r4.lastIndexOf("/");
  if (-1 === s4) {
    const { path: e4, extension: t3 } = zt(r4);
    return { prefix: null, filename: e4, extension: t3 };
  }
  const { path: o2, extension: n2 } = zt(r4.slice(s4 + 1));
  return { prefix: r4.slice(0, s4), filename: o2, extension: n2 };
}
function x2(e3, t2) {
  return t2 && !t2.isPortal && t2.urlKey && t2.customBaseUrl ? At(e3, `${t2.urlKey}.${t2.customBaseUrl}`, t2.portalHostname) : e3;
}
function I2(e3, t2) {
  if (!t2 || t2.isPortal || !t2.urlKey || !t2.customBaseUrl) return e3;
  const r4 = `${t2.urlKey}.${t2.customBaseUrl}`, s4 = C();
  return F(s4, `${s4.scheme}://${r4}`) ? At(e3, t2.portalHostname, r4) : At(e3, r4, t2.portalHostname);
}
function R(t2) {
  if (!t2) return t2 || null;
  let r4 = t2;
  return r4 && s3 && !s3.findCredential(r4) && (r4 = r(r4), r4 = r4.replace(/^https?:\/\/www\.arcgis\.com/, "https://cdn.arcgis.com"), r4 = r4.replace(/^https?:\/\/devext\.arcgis\.com/, "https://cdndev.arcgis.com"), r4 = r4.replace(/^https?:\/\/qaext\.arcgis\.com/, "https://cdnqa.arcgis.com")), r4;
}
function w(t2) {
  if (!t2) return t2 || null;
  let r4 = t2;
  return r4 = r4.replace(/^https?:\/\/cdn\.arcgis\.com/, "https://www.arcgis.com"), r4 = r4.replace(/^https?:\/\/cdndev\.arcgis\.com/, "https://devext.arcgis.com"), r4 = r4.replace(/^https?:\/\/cdnqa\.arcgis\.com/, "https://qaext.arcgis.com"), r4 && s3 && !s3.findCredential(r4) && (r4 = r(r4)), r4;
}
var y;
!function(e3) {
  e3[e3.YES = 0] = "YES", e3[e3.NO = 1] = "NO";
}(y || (y = {}));
var P2 = Object.freeze(Object.defineProperty({ __proto__: null, get MarkKeep() {
  return y;
}, ensureMainOnlineDomain: x2, fromCDNUrl: w, fromJSON: p, itemIdFromResourceUrl: U, prefixAndFilenameFromResourceUrl: g, read: f2, toCDNUrl: R, toJSON: m2, write: h }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/layers/support/arcgisLayerUrl.js
var o = { mapserver: "MapServer", imageserver: "ImageServer", featureserver: "FeatureServer", knowledgegraphserver: "KnowledgeGraphServer", sceneserver: "SceneServer", streamserver: "StreamServer", vectortileserver: "VectorTileServer", "3dtilesserver": "3DTilesServer", videoserver: "VideoServer" };
var a3 = Object.values(o);
var c3 = new RegExp(`^((?:https?:)?\\/\\/\\S+?\\/rest\\/services\\/(.+?)\\/(${a3.join("|")}))(?:\\/(?:layers\\/)?(\\d+))?`, "i");
var v3 = new RegExp(`^((?:https?:)?\\/\\/\\S+?\\/([^/\\n]+)\\/(${a3.join("|")}))(?:\\/(?:layers\\/)?(\\d+))?`, "i");
var f3 = /(.*?)\/(?:layers\/)?(\d+)\/?$/i;
function d2(e3) {
  return c3.test(e3);
}
function p2(r4) {
  if (null == r4) return null;
  const t2 = I(r4), s4 = t2?.path.match(c3) || t2?.path.match(v3);
  if (!s4) return null;
  const [, n2, l2, i3, u4] = s4, a5 = l2.indexOf("/");
  return { title: m3(-1 !== a5 ? l2.slice(a5 + 1) : l2), serverType: o[i3.toLowerCase()], sublayer: null != u4 && "" !== u4 ? parseInt(u4, 10) : null, url: { path: n2 } };
}
function h2(r4) {
  const t2 = I(r4).path.match(f3);
  return t2 ? { serviceUrl: t2[1], sublayerId: Number(t2[2]) } : null;
}
function m3(e3) {
  return (e3 = e3.replaceAll(/\s*[/_]+\s*/g, " "))[0].toUpperCase() + e3.slice(1);
}
function w2(e3, r4) {
  const t2 = [];
  if (e3) {
    const r5 = p2(e3);
    null != r5 && r5.title && t2.push(r5.title);
  }
  if (r4) {
    const e4 = m3(r4);
    t2.push(e4);
  }
  if (2 === t2.length) {
    if (t2[0].toLowerCase().includes(t2[1].toLowerCase())) return t2[0];
    if (t2[1].toLowerCase().includes(t2[0].toLowerCase())) return t2[1];
  }
  return t2.join(" - ");
}
function g2(e3) {
  let t2 = X(e3, true);
  return !!t2 && (t2 = t2.toLowerCase(), t2.endsWith(".arcgis.com") && (t2.startsWith("services") || t2.startsWith("tiles") || t2.startsWith("features") || /^[a-z\d-]+\.svcs[a-z\d-]*\./.test(t2)));
}
function y2(e3, r4) {
  return e3 ? jt(St(e3, r4)) : e3;
}
function S(r4) {
  let { url: n2 } = r4;
  if (!n2) return { url: n2 };
  n2 = St(n2, r4.logger);
  const l2 = I(n2), i3 = p2(l2.path);
  let u4;
  if (null != i3) null != i3.sublayer && null == r4.layer.layerId && (u4 = i3.sublayer), n2 = i3.url.path;
  else if (r4.nonStandardUrlAllowed) {
    const e3 = h2(l2.path);
    null != e3 && (n2 = e3.serviceUrl, u4 = e3.sublayerId);
  }
  return { url: jt(n2), layerId: u4 };
}
function C2(e3, r4, t2, s4, l2) {
  h(r4, s4, "url", l2), s4.url && null != e3.layerId && (s4.url = V(s4.url, t2, e3.layerId.toString()));
}
function b2(e3) {
  if (!e3) return false;
  const r4 = e3.toLowerCase(), t2 = r4.includes("/services/"), s4 = r4.includes("/mapserver/wmsserver"), n2 = r4.includes("/imageserver/wmsserver"), l2 = r4.includes("/wmsserver");
  return t2 && (s4 || n2 || l2);
}
function I3(e3) {
  if (!e3) return false;
  const r4 = new x(_(e3)), t2 = r4.authority?.toLowerCase();
  return "server.arcgisonline.com" === t2 || "services.arcgisonline.com" === t2;
}

// node_modules/@arcgis/core/support/apiKeyUtils.js
var e2 = /* @__PURE__ */ new Set(["elevation3d.arcgis.com", "js.arcgis.com", "jsdev.arcgis.com", "jsqa.arcgis.com", "static.arcgis.com"]);
function r3(t2) {
  if (!a4(t2)) return null;
  const e3 = (s4) => s4 instanceof RegExp ? s4.test(t2) : "string" == typeof s4 && t2.startsWith(s4), r4 = s.apiKeys;
  if (Array.isArray(r4.scopes)) {
    for (const s4 of r4.scopes) if (Array.isArray(s4.urls)) {
      if (s4.urls.some(e3)) return s4.token;
    } else if (e3(s4.urls)) return s4.token;
  }
  return r4.basemapStyles && /^https?:\/\/(i?basemaps|basemapstyles)-api\.arcgis\.com\//i.test(t2) ? r4.basemapStyles : s.apiKey && /^https?:\/\/.+\.arcgis\.com(\/|$)/i.test(t2) ? s.apiKey : null;
}
function i2() {
  return null != s.apiKey || null != s.apiKeys.basemapStyles;
}
function n(s4, t2) {
  return t2 ? a4(s4) : null != r3(s4);
}
function a4(s4) {
  const r4 = X(s4, true);
  return !!r4 && (!e2.has(r4) && !s4.endsWith("/sharing/rest/generateToken"));
}

// node_modules/@arcgis/core/support/requestUtils.js
function u3(r4, o2, t2 = false, n2) {
  return new Promise((s4, i3) => {
    if (c(n2)) return void i3(l());
    let c4 = () => {
      f5(), i3(new Error(`Unable to load ${o2}`));
    }, a5 = () => {
      const e3 = r4;
      f5(), s4(e3);
    }, u4 = () => {
      if (!r4) return;
      const e3 = r4;
      f5(), e3.src = "", i3(l());
    };
    const f5 = () => {
      has("esri-image-decode") || (r4.removeEventListener("error", c4), r4.removeEventListener("load", a5)), c4 = null, a5 = null, r4 = null, null != n2 && n2.removeEventListener("abort", u4), u4 = null, t2 && URL.revokeObjectURL(o2);
    };
    null != n2 && n2.addEventListener("abort", u4), has("esri-image-decode") ? r4.decode().then(a5, c4) : (r4.addEventListener("error", c4), r4.addEventListener("load", a5));
  });
}
function l() {
  try {
    return new DOMException("Aborted", "AbortError");
  } catch {
    const r4 = new Error();
    return r4.name = "AbortError", r4;
  }
}
var f4 = "Timeout exceeded";
function m4() {
  return new Error(f4);
}
function p3(r4) {
  return "object" == typeof r4 && !!r4 && "message" in r4 && r4.message === f4;
}
function d3(e3) {
  s.request.crossOriginNoCorsDomains || (s.request.crossOriginNoCorsDomains = {});
  const t2 = s.request.crossOriginNoCorsDomains;
  for (let r4 of e3) r4 = r4.toLowerCase(), /^https?:\/\//.test(r4) ? t2[X(r4) ?? ""] = 0 : (t2[X("http://" + r4) ?? ""] = 0, t2[X("https://" + r4) ?? ""] = 0);
}
function w3(e3) {
  const n2 = s.request.crossOriginNoCorsDomains;
  if (n2) {
    let r4 = X(e3);
    if (r4) return r4 = r4.toLowerCase(), !F(r4, C()) && n2[r4] < Date.now() - 36e5;
  }
  return false;
}
async function L(e3) {
  const t2 = I(e3);
  e3 = t2.path, "json" === t2.query?.f && (e3 += "?f=json");
  try {
    await fetch(e3, { mode: "no-cors", credentials: "include" });
  } catch {
  }
  const n2 = s.request.crossOriginNoCorsDomains, s4 = X(e3);
  n2 && s4 && (n2[s4.toLowerCase()] = Date.now());
}
var h3 = /* @__PURE__ */ new Map();
function v4(r4, e3) {
  const o2 = e3?.preferredHost;
  if (!o2 || F(r4, `https://${o2}`, true)) return;
  const n2 = p2(r4);
  if (!n2 || "FeatureServer" !== n2.serverType || a2(r4)) return;
  const s4 = n2.url.path.toLowerCase();
  h3.has(s4) || h3.set(s4, o2);
}
function g3(r4) {
  const e3 = p2(r4)?.url.path.toLowerCase();
  if (!e3) return r4;
  const o2 = h3.get(e3);
  return o2 ? vt(r4, o2) : r4;
}

// node_modules/@arcgis/core/request.js
async function H2(e3, r4) {
  e3 instanceof URL && (e3 = e3.toString()), r4?.query instanceof URLSearchParams && (r4.query = A(r4.query.toString().replaceAll("+", " ")));
  const t2 = tt(e3), s4 = Z(e3);
  s4 || t2 || (e3 = K(e3));
  const o2 = { url: e3, requestOptions: { ...r4 } }, a5 = (e4) => ({ data: e4, getAllHeaders: B, getHeader: B, httpStatus: 200, requestOptions: o2.requestOptions, url: o2.url }), i3 = N(e3, _2.internalInterceptors);
  if (i3) {
    const e4 = await Y2(i3, o2);
    if (null != e4) return a5(e4);
  }
  let l2 = N(e3);
  if (l2) {
    const e4 = await Y2(l2, o2);
    if (null != e4) return a5(e4);
    l2.after || l2.error || (l2 = null);
  }
  if (e3 = o2.url, "image" === (r4 = o2.requestOptions).responseType && (has("host-webworker") || has("host-node"))) throw W("request:invalid-parameters", new Error("responseType 'image' is not supported in Web Workers or Node environment"), o2);
  if ("head" === r4.method) {
    if (r4.body) throw W("request:invalid-parameters", new Error("body parameter cannot be set when method is 'head'"), o2);
    if (t2 || s4) throw W("request:invalid-parameters", new Error("data and blob URLs are not supported for method 'head'"), o2);
  }
  if (await G2(), M2) return M2.execute(e3, r4);
  const h4 = new AbortController(), f5 = m(r4, () => h4.abort()), y3 = { controller: h4, credential: void 0, credentialToken: void 0, fetchOptions: void 0, hasToken: false, interceptor: l2, params: o2, redoRequest: false, useIdentity: _2.useIdentity, useProxy: false, useSSL: false, withCredentials: false }, w4 = r4.useRequestQueue ? te(y3) : se(y3), g4 = await w4.finally(() => f5?.remove());
  return l2?.after?.(g4), g4;
}
var M2;
var R2 = false;
var _2 = s.request;
var D = "FormData" in globalThis;
var F2 = /* @__PURE__ */ new Set([499, 498, 403, 401]);
var I4 = /* @__PURE__ */ new Set(["COM_0056", "COM_0057", "SB_0008"]);
var N2 = [/\/arcgis\/tokens/i, /\/sharing(\/rest)?\/generatetoken/i, /\/rest\/info/i];
var B = () => null;
var $ = Symbol();
function z(e3) {
  const r4 = X(e3);
  r4 && !H2._corsServers.includes(r4) && H2._corsServers.push(r4);
}
function Q(e3) {
  const r4 = X(e3);
  return !r4 || r4.endsWith(".arcgis.com") || H2._corsServers.includes(r4) || M(r4);
}
function W(e3, r4, o2, n2) {
  let l2;
  const u4 = { url: o2.url, requestOptions: o2.requestOptions, getAllHeaders: B, getHeader: B, ssl: false };
  if (r4 instanceof s2) return r4.details ? (r4.details = a(r4.details), r4.details.url = o2.url, r4.details.requestOptions = o2.requestOptions) : r4.details = u4, r4;
  if (r4) {
    const e4 = n2 && (() => Array.from(n2.headers)), t2 = n2 && ((e5) => n2.headers.get(e5)), s4 = n2?.status, o3 = r4.message;
    o3 && (l2 = o3), e4 && t2 && (u4.getAllHeaders = e4, u4.getHeader = t2), u4.httpStatus = (null != r4.httpCode ? r4.httpCode : r4.code) || s4 || 0, u4.subCode = r4.subcode, u4.messageCode = r4.messageCode, "string" == typeof r4.details ? (u4.messages = [r4.details], l2 ??= r4.details) : (u4.messages = r4.details, l2 ??= u4.messages?.[0]), u4.raw = $ in r4 ? r4[$] : r4;
  }
  return l2 ??= "Error", b(r4) ? u2() : new s2(e3, l2, u4);
}
async function G2() {
  has("host-webworker") && (!M2 && globalThis.invokeStaticMessage ? M2 = await import("./request-VJFPJYJU.js") : R2 = true);
}
async function J() {
  s3 || await import("./IdentityManager-OQQM6CTR.js");
}
async function K2(e3) {
  const t2 = e3.params.url, s4 = e3.params.requestOptions, o2 = e3.controller.signal, n2 = s4.body;
  let a5 = null, i3 = null;
  if (D && "HTMLFormElement" in globalThis && (n2 instanceof FormData ? a5 = n2 : n2 instanceof HTMLFormElement && (a5 = new FormData(n2))), "string" == typeof n2 && (i3 = n2), e3.fetchOptions = { cache: s4.cacheBust ? "no-cache" : "default", credentials: "same-origin", headers: s4.headers || {}, method: "head" === s4.method ? "HEAD" : "GET", mode: "cors", priority: _2.priority, redirect: "follow", signal: o2 }, (a5 || i3) && (e3.fetchOptions.body = a5 || i3), (R2 || "anonymous" === s4.authMode) && (e3.useIdentity = false), e3.hasToken = !!(/token=/i.test(t2) || s4.query?.token || a5?.get("token")), !e3.hasToken) {
    const r4 = r3(t2);
    r4 && (s4.query ??= {}, s4.query.token = r4, e3.hasToken = true);
  }
  if (e3.useIdentity && !e3.hasToken && !e3.credential && !e3.credentialToken && !X2(t2) && !c(o2)) {
    let n3;
    "immediate" === s4.authMode ? (await J(), n3 = await s3.getCredential(t2, { signal: o2 })) : "no-prompt" === s4.authMode ? (await J(), n3 = await s3.getCredential(t2, { prompt: false, signal: o2 }).catch(() => {
    })) : s3 && (n3 = s3.findCredential(t2)), n3 && (e3.credential = n3, e3.credentialToken = n3.token, e3.useSSL = !!n3.ssl);
  }
}
function X2(e3) {
  return N2.some((r4) => r4.test(e3));
}
async function V2(e3) {
  let t2 = e3.params.url, s4 = g3(t2);
  const o2 = e3.params.requestOptions, n2 = e3.fetchOptions ?? {}, i3 = Z(t2) || tt(t2), l2 = o2.responseType || "json", u4 = i3 ? 0 : null != o2.timeout ? o2.timeout : _2.timeout;
  let p4 = false;
  if (!i3) {
    e3.useSSL && (t2 = $t(t2));
    let a5 = { ...o2.query };
    e3.credentialToken && (a5.token = e3.credentialToken);
    let i4 = v(a5);
    has("esri-url-encodes-apostrophe") && (i4 = i4.replaceAll("'", "%27"));
    const l3 = s4.length + 1 + i4.length;
    let u5;
    p4 = "delete" === o2.method || "post" === o2.method || "put" === o2.method || !!o2.body || l3 > _2.maxUrlLength;
    const c4 = o2.useProxy || !!T(t2);
    if (c4) {
      const e4 = P(t2);
      u5 = e4.path, !p4 && u5.length + 1 + l3 > _2.maxUrlLength && (p4 = true), e4.query && (a5 = { ...e4.query, ...a5 });
    }
    if ("HEAD" === n2.method && (p4 || c4)) {
      if (p4) {
        if (l3 > _2.maxUrlLength) throw W("request:invalid-parameters", new Error("URL exceeds maximum length"), e3.params);
        throw W("request:invalid-parameters", new Error("cannot use POST request when method is 'head'"), e3.params);
      }
      if (c4) throw W("request:invalid-parameters", new Error("cannot use proxy when method is 'head'"), e3.params);
    }
    if (p4 ? (n2.method = "delete" === o2.method ? "DELETE" : "put" === o2.method ? "PUT" : "POST", o2.body ? t2 = Ht(t2, a5) : (n2.body = v(a5), n2.headers || (n2.headers = {}), n2.headers["Content-Type"] = "application/x-www-form-urlencoded")) : t2 = Ht(t2, a5), c4 && (e3.useProxy = true, t2 = `${u5}?${t2}`), a5.token && D && n2.body instanceof FormData && !a2(t2) && n2.body.set("token", a5.token), o2.hasOwnProperty("withCredentials")) e3.withCredentials = o2.withCredentials;
    else if (!F(t2, C())) {
      if (M(t2)) e3.withCredentials = true;
      else if (s3) {
        const s5 = s3.findServerInfo(t2);
        s5?.webTierAuth && (e3.withCredentials = true);
      }
    }
    e3.withCredentials && (n2.credentials = "include", w3(t2) && await L(p4 ? Ht(t2, a5) : t2)), s4 = g3(t2);
  }
  let m5, O, C3 = 0, x3 = false;
  u4 > 0 && (C3 = setTimeout(() => {
    x3 = true, e3.controller.abort();
  }, u4));
  try {
    if ("native-request-init" === o2.responseType) O = n2, O.url = s4, o2.signal ? O.signal = o2.signal : delete O.signal;
    else if ("image" !== o2.responseType || "default" !== n2.cache || "GET" !== n2.method || p4 || Z2(o2.headers) || !i3 && !e3.useProxy && _2.proxyUrl && !Q(t2)) {
      if (H2._beforeFetch && await H2._beforeFetch(t2, n2), m5 = await fetch(s4, n2), H2._afterFetch && await H2._afterFetch(m5), e3.useProxy || z(t2), "native" === o2.responseType) O = m5;
      else if ("HEAD" !== n2.method) if (m5.ok) {
        switch (l2) {
          case "array-buffer":
            O = await m5.arrayBuffer();
            break;
          case "blob":
          case "image":
            O = await m5.blob();
            break;
          default:
            O = await m5.text();
        }
        if (C3 && (clearTimeout(C3), C3 = 0), "json" === l2 || "xml" === l2 || "document" === l2) if (O) switch (l2) {
          case "json":
            O = JSON.parse(O);
            break;
          case "xml":
            O = ee(O, "application/xml");
            break;
          case "document":
            O = ee(O, "text/html");
        }
        else O = null;
        if (O) {
          if ("array-buffer" === l2 || "blob" === l2) {
            const e4 = m5.headers.get("Content-Type");
            if (e4 && /application\/json|text\/plain/i.test(e4) && O["blob" === l2 ? "size" : "byteLength"] <= 750) try {
              const e5 = await new Response(O).json();
              e5.error && (O = e5);
            } catch {
            }
          }
          "image" === l2 && O instanceof Blob && (O = await ne(URL.createObjectURL(O), e3, true));
        }
      } else {
        O = await m5.text();
        try {
          O = JSON.parse(O);
        } catch {
        }
      }
    } else O = await ne(s4, e3);
  } catch (L2) {
    if ("AbortError" === L2.name) {
      if (x3) throw m4();
      throw u2("Request canceled");
    }
    if (!(!m5 && L2 instanceof TypeError && _2.proxyUrl) || o2.body || "delete" === o2.method || "head" === o2.method || "post" === o2.method || "put" === o2.method || e3.useProxy || Q(t2)) throw L2;
    e3.redoRequest = true, H({ proxyUrl: _2.proxyUrl, urlPrefix: X(t2) ?? "" });
  } finally {
    C3 && clearTimeout(C3);
  }
  return [m5, O];
}
async function Y2(e3, r4) {
  if (null != e3.responseData) return e3.responseData;
  if (e3.headers && (r4.requestOptions.headers = { ...r4.requestOptions.headers, ...e3.headers }), e3.query && (r4.requestOptions.query = { ...r4.requestOptions.query, ...e3.query }), e3.before) {
    let o2, n2;
    try {
      n2 = await e3.before(r4);
    } catch (s4) {
      o2 = W("request:interceptor", s4, r4);
    }
    if ((n2 instanceof Error || n2 instanceof s2) && (o2 = W("request:interceptor", n2, r4)), o2) throw e3.error && e3.error(o2), o2;
    return n2;
  }
}
function Z2(e3) {
  if (e3) {
    for (const r4 of Object.getOwnPropertyNames(e3)) if (e3[r4]) return true;
  }
  return false;
}
function ee(e3, r4) {
  let t2;
  try {
    t2 = new DOMParser().parseFromString(e3, r4);
  } catch {
  }
  if (!t2 || t2.getElementsByTagName("parsererror").length) throw new SyntaxError("XML Parse error");
  return t2;
}
H2._corsServers = ["https://server.arcgisonline.com", "https://services.arcgisonline.com"], H2._beforeFetch = void 0, H2._afterFetch = void 0;
var re = /* @__PURE__ */ new Map();
async function te(e3) {
  const r4 = ae(e3.params.url);
  if (!r4) return se(e3);
  const { QueueProcessor: t2 } = await import("./QueueProcessor-R2NMSIQC.js"), s4 = u(re, r4.origin, () => {
    const e4 = r4.isHosted ? has("request-queue-concurrency-hosted") : has("request-queue-concurrency-non-hosted");
    return new t2({ concurrency: e4, process: (e5) => {
      if (c(e5.params.requestOptions)) throw W("", u2("Request canceled"), e5.params);
      return se(e5);
    } });
  });
  return s4.push(e3);
}
async function se(e3) {
  let t2, s4;
  await K2(e3);
  try {
    do {
      [t2, s4] = await V2(e3);
    } while (!await oe(e3, t2, s4));
  } catch (a5) {
    const r4 = W("request:server", a5, e3.params, t2);
    throw r4.details.ssl = e3.useSSL, e3.interceptor?.error && e3.interceptor.error(r4), r4;
  }
  const o2 = e3.params.url;
  if (s4) if (/\/sharing\/rest\/(accounts|portals)\/self/i.test(o2)) {
    if (!e3.hasToken && !e3.credentialToken && s4.user?.username && !M(o2)) {
      const e4 = X(o2, true);
      e4 && _2.trustedServers.push(e4);
    }
    Array.isArray(s4.authorizedCrossOriginNoCorsDomains) && d3(s4.authorizedCrossOriginNoCorsDomains);
  } else {
    "json" === (e3.params.requestOptions.responseType || "json") && v4(o2, s4);
  }
  const n2 = e3.credential;
  if (n2 && s3) {
    const e4 = s3.findServerInfo(n2.server);
    let t3 = e4?.owningSystemUrl;
    if (t3) {
      t3 = t3.replace(/\/?$/, "/sharing");
      const e5 = s3.findCredential(t3, n2.userId);
      e5 && -1 === s3._getIdenticalSvcIdx(t3, e5) && e5.resources.unshift(t3);
    }
  }
  return { data: s4, getAllHeaders: t2 ? () => Array.from(t2.headers) : B, getHeader: t2 ? (e4) => t2.headers.get(e4) : B, httpStatus: t2?.status ?? 200, requestOptions: e3.params.requestOptions, ssl: e3.useSSL, url: e3.params.url };
}
async function oe(e3, t2, s4) {
  if (e3.redoRequest) return e3.redoRequest = false, false;
  const o2 = e3.params.requestOptions;
  if (!t2 || "native" === o2.responseType || "native-request-init" === o2.responseType) return true;
  let n2, a5;
  if (s4 && (s4.error && "object" == typeof s4.error ? n2 = s4.error : "error" === s4.status && Array.isArray(s4.messages) && (n2 = { ...s4 }, n2[$] = s4, n2.details = s4.messages)), !n2 && !t2.ok) throw n2 = new Error(`Unable to load ${t2.url} status: ${t2.status}`), n2[$] = s4, n2;
  let i3, l2 = null;
  n2 && (a5 = Number(n2.code), l2 = n2.hasOwnProperty("subcode") ? Number(n2.subcode) : null, i3 = n2.messageCode, i3 = i3?.toUpperCase());
  const u4 = o2.authMode;
  if (403 === a5 && (4 === l2 || n2.message?.toLowerCase().includes("ssl") && !n2.message.toLowerCase().includes("permission"))) {
    if (!e3.useSSL) return e3.useSSL = true, false;
  } else if (!e3.hasToken && e3.useIdentity && ("no-prompt" !== u4 || 498 === a5) && void 0 !== a5 && F2.has(a5) && !X2(e3.params.url) && (403 !== a5 || (!i3 || !I4.has(i3)) && (null == l2 || 2 === l2 && e3.credentialToken))) {
    await J();
    try {
      const t3 = await s3.getCredential(e3.params.url, { error: W("request:server", n2, e3.params), credential: e3.credential, prompt: "no-prompt" !== u4, signal: e3.controller.signal, token: e3.credentialToken });
      return e3.credential = t3, e3.credentialToken = t3.token, e3.useSSL = e3.useSSL || t3.ssl, false;
    } catch (c4) {
      if ("no-prompt" === u4) return e3.credential = void 0, e3.credentialToken = void 0, false;
      n2 = c4;
    }
  }
  if (n2) throw n2;
  return true;
}
function ne(e3, r4, t2 = false) {
  const s4 = r4.controller.signal, o2 = new Image();
  return r4.withCredentials ? o2.crossOrigin = "use-credentials" : o2.crossOrigin = "anonymous", o2.alt = "", o2.fetchPriority = _2.priority, o2.src = e3, u3(o2, e3, t2, s4);
}
function ae(e3) {
  let r4, t2;
  return "string" == typeof e3 ? (r4 = X(e3, true), t2 = g2(e3)) : (r4 = e3.origin, t2 = g2(e3.toString())), null == r4 ? null : { origin: r4, isHosted: t2 };
}

export {
  f,
  c2 as c,
  e,
  s3 as s,
  r2 as r,
  i,
  t,
  p,
  m2 as m,
  f2,
  h,
  U,
  g,
  x2 as x,
  R,
  y,
  P2 as P,
  d2 as d,
  p2,
  h2,
  m3 as m2,
  w2 as w,
  g2,
  y2,
  S,
  C2 as C,
  b2 as b,
  I3 as I,
  r3 as r2,
  i2,
  n,
  a4 as a,
  u3 as u,
  p3,
  H2 as H
};
//# sourceMappingURL=chunk-ZWFY3WY5.js.map
