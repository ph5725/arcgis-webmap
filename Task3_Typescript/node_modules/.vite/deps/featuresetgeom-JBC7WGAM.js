import {
  l,
  u
} from "./chunk-WNIXFBZS.js";
import "./chunk-4NNCML5U.js";
import {
  a as a2
} from "./chunk-YDAIRKJB.js";
import "./chunk-XMAXGUBN.js";
import {
  H,
  K,
  ae,
  pe,
  we
} from "./chunk-Q7K6M7G6.js";
import "./chunk-EK343S5L.js";
import "./chunk-4J6GMCJZ.js";
import "./chunk-VZZR2ZMJ.js";
import "./chunk-DKS7UUDR.js";
import "./chunk-KDQWOWXR.js";
import "./chunk-JOVQBCRD.js";
import "./chunk-F5BDMX7A.js";
import "./chunk-VNLFNBKT.js";
import "./chunk-KHEIHGIK.js";
import "./chunk-JEYXDNAT.js";
import {
  n
} from "./chunk-NY6S6EMV.js";
import {
  a,
  r
} from "./chunk-AQGMTI4V.js";
import "./chunk-QG7JWSBW.js";
import "./chunk-ZXGBNDYM.js";
import "./chunk-GOWWJ2HE.js";
import "./chunk-6TS2ZJL4.js";
import "./chunk-IBGTNH54.js";
import "./chunk-BNO7HCVD.js";
import "./chunk-VHTQ5H2C.js";
import "./chunk-FKFXOPPT.js";
import "./chunk-EOMIFMDH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-TEXTBDH7.js";
import "./chunk-N3A2BVTW.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-U57T7EQN.js";
import "./chunk-CMHHL5UO.js";
import "./chunk-XHYOFJ4U.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-O5TPFXRT.js";
import "./chunk-Q6XRAGMA.js";
import "./chunk-JUAPMINU.js";
import "./chunk-PK2ZR2SJ.js";
import "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import "./chunk-E3KEUGUG.js";
import "./chunk-N3XLUQJI.js";
import "./chunk-JUAD7TJ6.js";
import "./chunk-VHLUKPRH.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/arcade/functions/featuresetgeom.js
function f(a3) {
  return async (f2, p2, S) => {
    if (ae(S, 2, 2, f2, p2), null === (S = we(S))[0] && null === S[1]) return false;
    if (K(S[0])) {
      if (H(S[1])) return new l({ parentfeatureset: S[0], relation: a3, relationGeom: S[1] });
      if (null === S[1]) return new u({ parentfeatureset: S[0] });
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (H(S[0])) {
      if (H(S[1])) {
        switch (a3) {
          case "esriSpatialRelEnvelopeIntersects": {
            const e = n(S[0]), t = n(S[1]);
            return null != e && null != t && a2("intersects", [e.toJSON(), t.toJSON()]);
          }
          case "esriSpatialRelIntersects":
            return a2("intersects", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelContains":
            return a2("contains", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelOverlaps":
            return a2("overlaps", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelWithin":
            return a2("within", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelTouches":
            return a2("touches", [S[0].toJSON(), S[1].toJSON()]);
          case "esriSpatialRelCrosses":
            return a2("crosses", [S[0].toJSON(), S[1].toJSON()]);
        }
        throw new a(f2, r.InvalidParameter, p2);
      }
      if (K(S[1])) return new l({ parentfeatureset: S[1], relation: a3, relationGeom: S[0] });
      if (null === S[1]) return false;
      throw new a(f2, r.InvalidParameter, p2);
    }
    if (null === S[0]) {
      if (K(S[1])) return new u({ parentfeatureset: S[1] });
      if (H(S[1]) || null === S[1]) return false;
    }
    throw new a(f2, r.InvalidParameter, p2);
  };
}
function p(n2) {
  "async" === n2.mode && (n2.functions.intersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelIntersects"));
  }, n2.functions.envelopeintersects = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelEnvelopeIntersects"));
  }, n2.signatures.push({ name: "envelopeintersects", min: 2, max: 2 }), n2.functions.contains = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelContains"));
  }, n2.functions.overlaps = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelOverlaps"));
  }, n2.functions.within = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelWithin"));
  }, n2.functions.touches = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelTouches"));
  }, n2.functions.crosses = function(e, t) {
    return n2.standardFunctionAsync(e, t, f("esriSpatialRelCrosses"));
  }, n2.functions.relate = function(u2, f2) {
    return n2.standardFunctionAsync(u2, f2, async (n3, p2, S) => {
      if (S = we(S), ae(S, 3, 3, u2, f2), H(S[0]) && H(S[1])) return a2("relate", [S[0].toJSON(), S[1].toJSON(), pe(S[2])]);
      if (H(S[0]) && null === S[1]) return false;
      if (H(S[1]) && null === S[0]) return false;
      if (K(S[0]) && null === S[1]) return new u({ parentfeatureset: S[0] });
      if (K(S[1]) && null === S[0]) return new u({ parentfeatureset: S[1] });
      if (K(S[0]) && H(S[1])) return S[0].relate(S[1], pe(S[2]));
      if (K(S[1]) && H(S[0])) return S[1].relate(S[0], pe(S[2]));
      if (null === S[0] && null === S[1]) return false;
      throw new a(u2, r.InvalidParameter, f2);
    });
  });
}
export {
  p as registerFunctions
};
//# sourceMappingURL=featuresetgeom-JBC7WGAM.js.map
