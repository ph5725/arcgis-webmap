import {
  j,
  w
} from "./chunk-CX3UVD2K.js";
import {
  Be,
  Ie,
  Me,
  Pe
} from "./chunk-MYOG5JEY.js";
import "./chunk-XOCYWQ7P.js";
import "./chunk-2OTCLWRN.js";
import "./chunk-XZOH57EG.js";
import "./chunk-LSL2QL5U.js";
import "./chunk-DDDUQRA2.js";
import "./chunk-XOMXNJJG.js";
import {
  N2 as N
} from "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import {
  L
} from "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/geometry/operators/json/offsetOperator.js
var u = { round: 0, bevel: 1, miter: 2, square: 3 };
function a(t, o, m = {}) {
  const { miterLimit: a2 = 10, flattenError: c2 = 0, joins: f = "round", unit: p } = m, j2 = Ie(t);
  p && j2 && (o = N(o, p, j2));
  const l = Pe(t), x = l.getSpatialReference();
  return Me(w(l.getGeometry(), x, o, u[f], a2, c2), x);
}
function c(e, i, a2 = {}) {
  const { miterLimit: c2 = 10, flattenError: f = 0, joins: p = "round", unit: j2 } = a2, l = Ie(e);
  j2 && l && (i = N(i, j2, l));
  const [x, d] = Be(e);
  return j(x, d, i, u[p], c2, f).map((t) => Me(t, d)).filter(L);
}
export {
  a as execute,
  c as executeMany
};
//# sourceMappingURL=offsetOperator-62RGJ5PT.js.map
