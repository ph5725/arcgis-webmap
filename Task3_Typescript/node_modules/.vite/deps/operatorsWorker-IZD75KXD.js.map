{
  "version": 3,
  "sources": ["../../@arcgis/core/arcade/geometry/operatorsWorker.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{fromJSON as e}from\"../../geometry/support/jsonUtils.js\";function t(e,t){let r;return{loaded:!1,load:()=>r??=t().then((t=>{o[e]={loaded:!0,execute:t}}))}}function r(e){return null==e?null:e.toJSON()}const o={disjoint:t(\"disjoint\",(()=>import(\"../../geometry/operators/json/disjointOperator.js\").then((e=>e.execute)))),intersects:t(\"intersects\",(()=>import(\"../../geometry/operators/json/intersectsOperator.js\").then((e=>e.execute)))),touches:t(\"touches\",(()=>import(\"../../geometry/operators/json/touchesOperator.js\").then((e=>e.execute)))),crosses:t(\"crosses\",(()=>import(\"../../geometry/operators/json/crossesOperator.js\").then((e=>e.execute)))),within:t(\"within\",(()=>import(\"../../geometry/operators/json/withinOperator.js\").then((e=>e.execute)))),contains:t(\"contains\",(()=>import(\"../../geometry/operators/json/containsOperator.js\").then((e=>e.execute)))),overlaps:t(\"overlaps\",(()=>import(\"../../geometry/operators/json/overlapsOperator.js\").then((e=>e.execute)))),equals:t(\"equals\",(async()=>{const t=await import(\"../../geometry/operators/equalsOperator.js\");return(r,o)=>t.execute(e(r),e(o))})),relate:t(\"relate\",(async()=>{const t=await import(\"../../geometry/operators/relateOperator.js\");return(r,o,n)=>t.execute(e(r),e(o),n)})),intersection:t(\"intersection\",(()=>import(\"../../geometry/operators/json/intersectionOperator.js\").then((e=>e.execute)))),union:t(\"union\",(()=>import(\"../../geometry/operators/json/unionOperator.js\").then((e=>e.executeMany)))),difference:t(\"difference\",(async()=>{const t=await import(\"../../geometry/operators/differenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),symmetricDifference:t(\"symmetricDifference\",(async()=>{const t=await import(\"../../geometry/operators/symmetricDifferenceOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),clip:t(\"clip\",(async()=>{const t=await import(\"../../geometry/operators/clipOperator.js\");return(o,n)=>r(t.execute(e(o),e(n)))})),cut:t(\"cut\",(async()=>{const t=await import(\"../../geometry/operators/cutOperator.js\");return(o,n)=>t.execute(e(o),e(n)).map((e=>r(e)))})),area:t(\"area\",(async()=>{const t=await import(\"../../geometry/operators/areaOperator.js\"),{convertFromSpatialReferenceUnit:r,toAreaUnit:o}=await import(\"./unitConversion.js\");return(n,a)=>{const s=t.execute(e(n));return r(n.spatialReference,o(a),s)}})),geodeticArea:t(\"geodeticArea\",(async()=>{const t=await import(\"../../geometry/operators/geodeticAreaOperator.js\"),{convert:r,squareMeters:o,toAreaUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),length:t(\"length\",(async()=>{const e=await import(\"../../geometry/operators/json/lengthOperator.js\"),{convertFromSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n)=>{const a=e.execute(o);return t(o.spatialReference,r(n),a)}})),geodeticLength:t(\"geodeticLength\",(async()=>{const t=await import(\"../../geometry/operators/geodeticLengthOperator.js\"),{convert:r,meters:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return await t.load(),(a,s,i)=>{const c=t.execute(e(a),{curveType:i});return r(o,n(s),c)}})),distance:t(\"distance\",(async()=>{const t=await import(\"../../geometry/operators/distanceOperator.js\"),{convertFromSpatialReferenceUnit:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return(n,a,s)=>{const i=t.execute(e(n),e(a));return r(n.spatialReference,o(s),i)}})),densify:t(\"densify\",(async()=>{const t=await import(\"../../geometry/operators/densifyOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s)))})),geodeticDensify:t(\"geodeticDensify\",(async()=>{const t=await import(\"../../geometry/operators/geodeticDensifyOperator.js\"),{convert:o,meters:n,toLengthUnit:a}=await import(\"./unitConversion.js\");return await t.load(),(s,i,c,p)=>(i=o(a(c),n,i),r(t.execute(e(s),i,{curveType:p})))})),generalize:t(\"generalize\",(async()=>{const t=await import(\"../../geometry/operators/generalizeOperator.js\"),{convertToSpatialReferenceUnit:o,toLengthUnit:n}=await import(\"./unitConversion.js\");return(a,s,i,c)=>(s=o(n(i),a.spatialReference,s),r(t.execute(e(a),s,c)))})),buffer:t(\"buffer\",(async()=>{const e=await import(\"../../geometry/operators/json/bufferOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n))})),geodesicBuffer:t(\"geodesicBuffer\",(async()=>{const e=await import(\"../../geometry/operators/json/geodesicBufferOperator.js\"),{convert:t,meters:r,toLengthUnit:o}=await import(\"./unitConversion.js\");return await e.load(),(n,a,s,i)=>(a=t(o(s),r,a),e.execute(n,a,{curveType:i}))})),offset:t(\"offset\",(async()=>{const e=await import(\"../../geometry/operators/json/offsetOperator.js\"),{convertToSpatialReferenceUnit:t,toLengthUnit:r}=await import(\"./unitConversion.js\");return(o,n,a,s)=>(n=t(r(a),o.spatialReference,n),e.execute(o,n,s))})),rotate:t(\"rotate\",(async()=>{const t=await import(\"../../geometry/operators/affineTransformOperator.js\"),{default:o}=await import(\"../../geometry/operators/support/Transformation.js\");return(n,a,s,i)=>{const c=(new o).rotate(a,s,i);return r(t.execute(e(n),c))}})),centroid:t(\"centroid\",(async()=>{const t=await import(\"../../geometry/operators/centroidOperator.js\");return o=>r(t.execute(e(o)))})),labelPoint:t(\"labelPoint\",(async()=>{const t=await import(\"../../geometry/operators/labelPointOperator.js\");return o=>r(t.execute(e(o)))})),simplify:t(\"simplify\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.execute)))),isSelfIntersecting:t(\"isSelfIntersecting\",(async()=>{const{NonSimpleResult:t}=await import(\"../../chunks/OperatorDefinitions.js\"),r=await import(\"../../geometry/operators/simplifyOGCOperator.js\"),o=new Set([5,6,7,10,11,12]);return n=>{const a=new t;return!r.isSimple(e(n),a)&&o.has(a.m_reason)}})),isSimple:t(\"isSimple\",(()=>import(\"../../geometry/operators/json/simplifyOperator.js\").then((e=>e.isSimple)))),convexHull:t(\"convexHull\",(()=>import(\"../../geometry/operators/json/convexHullOperator.js\").then((e=>e.execute)))),getNearestCoordinate:t(\"getNearestCoordinate\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n,a)=>{const s=t.getNearestCoordinate(e(o),e(n),a);return{...s,coordinate:r(s.coordinate)}}})),getNearestVertex:t(\"getNearestVertex\",(async()=>{const t=await import(\"../../geometry/operators/proximityOperator.js\");return(o,n)=>{const a=t.getNearestVertex(e(o),e(n));return{...a,coordinate:r(a.coordinate)}}}))};function n(e,t){const r=o[e];return r.loaded?r.execute.apply(void 0,t):r.load().then((()=>n(e,t)))}export{n as invokeGeometryOp};\r\n"],
  "mappings": "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",
  "names": ["t", "r", "o", "n"]
}
