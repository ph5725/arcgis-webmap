import {
  t
} from "./chunk-QXLW5W5A.js";
import {
  e
} from "./chunk-UVUJMAAB.js";
import "./chunk-KE3WBZYL.js";
import {
  u
} from "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-VHLUKPRH.js";
import {
  H
} from "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/symbols/support/previewWebStyleSymbol.js
async function o(e2, i, o2) {
  const r = e2.thumbnail?.url;
  if (r) {
    const e3 = s((await H(r, { responseType: "image" })).data, o2);
    return o2?.node ? (o2.node.appendChild(e3), o2.node) : e3;
  }
  const a = await e2.fetchSymbol({ acceptedFormats: e });
  return a ? i(a, o2) : null;
}
function s(t2, n) {
  const o2 = !/\\.svg$/i.test(t2.src) && n?.disableUpsampling, s2 = Math.max(t2.width, t2.height);
  let r = null != n?.maxSize ? u(n.maxSize) : t.maxSize;
  o2 && (r = Math.min(s2, r));
  const a = "number" == typeof n?.size ? n?.size : null, h = Math.min(r, null != a ? u(a) : s2);
  if (h !== s2) {
    const e2 = 0 !== t2.width && 0 !== t2.height ? t2.width / t2.height : 1;
    e2 >= 1 ? (t2.width = h, t2.height = h / e2) : (t2.width = h * e2, t2.height = h);
  }
  return t2;
}
export {
  o as previewWebStyleSymbol
};
//# sourceMappingURL=previewWebStyleSymbol-TK2L2ZCH.js.map
