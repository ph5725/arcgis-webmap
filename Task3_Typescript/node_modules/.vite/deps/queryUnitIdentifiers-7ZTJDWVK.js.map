{
  "version": 3,
  "sources": ["../../@arcgis/core/rest/networks/unitIdentifiers/support/UnitQueryResult.js", "../../@arcgis/core/rest/networks/unitIdentifiers/queryUnitIdentifiers.js"],
  "sourcesContent": ["/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport{_ as r}from\"../../../../chunks/tslib.es6.js\";import t from\"../../../../core/JSONSupport.js\";import{property as o}from\"../../../../core/accessorSupport/decorators/property.js\";import\"../../../../core/has.js\";import\"../../../../core/Logger.js\";import\"../../../../core/RandomLCG.js\";import{reader as e}from\"../../../../core/accessorSupport/decorators/reader.js\";import{subclass as s}from\"../../../../core/accessorSupport/decorators/subclass.js\";let n=class extends t{constructor(r){super(r),this.container=null,this.ranges=null}readContainer(r,t){return{sourceId:t.sourceId,globalId:t.globalId}}readRanges(r,t){return[...t.gaps.map((r=>({firstUnit:r.start,numUnits:r.end-r.start+1,isGap:!0}))),...t.unitIdentifiers.map((r=>({firstUnit:r.firstUnit,numUnits:r.numUnits,isGap:!1,content:{sourceId:r.sourceId,globalId:r.globalId}})))]}};r([o({type:Object})],n.prototype,\"container\",void 0),r([e(\"container\",[\"sourceId\",\"globalId\"])],n.prototype,\"readContainer\",null),r([o({type:[Object]})],n.prototype,\"ranges\",void 0),r([e(\"ranges\",[\"gaps\",\"unitIdentifiers\"])],n.prototype,\"readRanges\",null),n=r([s(\"esri.rest.networks.unitIdentifiers.support.UnitQueryResult\")],n);export{n as default};\r\n", "/*\r\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\r\nSee https://js.arcgis.com/4.33/esri/copyright.txt for details.\r\n*/\r\nimport t from\"../../../request.js\";import{parseUrl as o,encode as s,asValidOptions as r}from\"../../utils.js\";import e from\"./support/UnitQueryResult.js\";async function i(i,n,u){const m=o(i),p=n.toJSON();n.objects&&(p.objects=JSON.stringify(n.objects));const c={...p,f:\"json\"},f=s({...m.query,...c}),j=r(f,{...u,method:\"post\"}),a=`${m.path}/unitIdentifiers/query`,{data:y}=await t(a,j);return y.objects.map((t=>e.fromJSON(t)))}export{i as queryUnitIdentifiers};\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIic,IAAI,IAAE,cAAc,EAAC;AAAA,EAAC,YAAYA,IAAE;AAAC,UAAMA,EAAC,GAAE,KAAK,YAAU,MAAK,KAAK,SAAO;AAAA,EAAI;AAAA,EAAC,cAAcA,IAAE,GAAE;AAAC,WAAM,EAAC,UAAS,EAAE,UAAS,UAAS,EAAE,SAAQ;AAAA,EAAC;AAAA,EAAC,WAAWA,IAAE,GAAE;AAAC,WAAM,CAAC,GAAG,EAAE,KAAK,IAAK,CAAAA,QAAI,EAAC,WAAUA,GAAE,OAAM,UAASA,GAAE,MAAIA,GAAE,QAAM,GAAE,OAAM,KAAE,EAAG,GAAE,GAAG,EAAE,gBAAgB,IAAK,CAAAA,QAAI,EAAC,WAAUA,GAAE,WAAU,UAASA,GAAE,UAAS,OAAM,OAAG,SAAQ,EAAC,UAASA,GAAE,UAAS,UAASA,GAAE,SAAQ,EAAC,EAAG,CAAC;AAAA,EAAC;AAAC;AAAE,EAAE,CAAC,EAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAE,EAAE,WAAU,aAAY,MAAM,GAAE,EAAE,CAAC,EAAE,aAAY,CAAC,YAAW,UAAU,CAAC,CAAC,GAAE,EAAE,WAAU,iBAAgB,IAAI,GAAE,EAAE,CAAC,EAAE,EAAC,MAAK,CAAC,MAAM,EAAC,CAAC,CAAC,GAAE,EAAE,WAAU,UAAS,MAAM,GAAE,EAAE,CAAC,EAAE,UAAS,CAAC,QAAO,iBAAiB,CAAC,CAAC,GAAE,EAAE,WAAU,cAAa,IAAI,GAAE,IAAE,EAAE,CAAC,EAAE,4DAA4D,CAAC,GAAE,CAAC;;;ACAn/B,eAAe,EAAEC,IAAEC,IAAEC,IAAE;AAAC,QAAMC,KAAE,EAAEH,EAAC,GAAE,IAAEC,GAAE,OAAO;AAAE,EAAAA,GAAE,YAAU,EAAE,UAAQ,KAAK,UAAUA,GAAE,OAAO;AAAG,QAAM,IAAE,EAAC,GAAG,GAAE,GAAE,OAAM,GAAEG,KAAE,EAAE,EAAC,GAAGD,GAAE,OAAM,GAAG,EAAC,CAAC,GAAE,IAAE,EAAEC,IAAE,EAAC,GAAGF,IAAE,QAAO,OAAM,CAAC,GAAEG,KAAE,GAAGF,GAAE,IAAI,0BAAyB,EAAC,MAAK,EAAC,IAAE,MAAM,EAAEE,IAAE,CAAC;AAAE,SAAO,EAAE,QAAQ,IAAK,OAAG,EAAE,SAAS,CAAC,CAAE;AAAC;",
  "names": ["r", "i", "n", "u", "m", "f", "a"]
}
