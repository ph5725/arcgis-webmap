import {
  e,
  o,
  u
} from "./chunk-BM2FDZGO.js";
import {
  Be,
  Me,
  Pe
} from "./chunk-MYOG5JEY.js";
import "./chunk-XOCYWQ7P.js";
import "./chunk-2OTCLWRN.js";
import "./chunk-XZOH57EG.js";
import "./chunk-LSL2QL5U.js";
import "./chunk-DDDUQRA2.js";
import "./chunk-XOMXNJJG.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/geometry/operators/json/simplifyOperator.js
function p(e2) {
  const r = Pe(e2), c = r.getSpatialReference();
  return Me(e(r.getGeometry(), c, false), c);
}
function a(e2) {
  const [t, o2] = Be(e2);
  return o(t, o2, false).map((e3) => Me(e3, o2));
}
function i(t) {
  const r = Pe(t);
  return u(r.getGeometry(), r.getSpatialReference(), false);
}
export {
  p as execute,
  a as executeMany,
  i as isSimple
};
//# sourceMappingURL=simplifyOperator-FNTKGP2R.js.map
