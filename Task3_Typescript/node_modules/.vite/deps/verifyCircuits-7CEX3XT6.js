import {
  t
} from "./chunk-NZZBUHYS.js";
import "./chunk-D3RLCXTB.js";
import "./chunk-YWGFBTRS.js";
import "./chunk-BHCIAS6L.js";
import "./chunk-FQ4JUVCN.js";
import "./chunk-3LL6ALVC.js";
import "./chunk-NZPABYQQ.js";
import "./chunk-CCHJ3WNU.js";
import "./chunk-XD64QX5H.js";
import "./chunk-TMFB3DKM.js";
import "./chunk-X3UT6DT7.js";
import "./chunk-JD3UVEVP.js";
import "./chunk-SJHAGLIM.js";
import "./chunk-Z6OMEWWC.js";
import "./chunk-IVNFIIVI.js";
import "./chunk-ROVRMLYN.js";
import {
  f,
  s,
  u
} from "./chunk-SYPTUUSZ.js";
import "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import "./chunk-2IMSGFJN.js";
import "./chunk-VHTQ5H2C.js";
import "./chunk-YX2VTIZR.js";
import "./chunk-LYSDGL5S.js";
import "./chunk-SRJX4QLW.js";
import "./chunk-WPTJIN2M.js";
import "./chunk-KUP5BM5G.js";
import "./chunk-HNQNVI5C.js";
import "./chunk-G34OBNLT.js";
import "./chunk-WJUYGRZY.js";
import "./chunk-FKFXOPPT.js";
import "./chunk-KE3WBZYL.js";
import "./chunk-EOMIFMDH.js";
import "./chunk-45ILJ6ZH.js";
import "./chunk-VCRP2PLV.js";
import "./chunk-BDLVUYG2.js";
import "./chunk-6QA2BVC5.js";
import "./chunk-HWKQJUGY.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import "./chunk-65K4DQAH.js";
import "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import "./chunk-YBJ5GVXQ.js";
import "./chunk-X3R5OB6L.js";
import "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import "./chunk-N3A2BVTW.js";
import "./chunk-IGYEHOTB.js";
import "./chunk-TVM3SZJR.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-HCYE6OE4.js";
import "./chunk-KJSBBQ22.js";
import "./chunk-LMEOPAGQ.js";
import "./chunk-YIV2QKTZ.js";
import "./chunk-A3VAC24F.js";
import "./chunk-FPSA4NFH.js";
import "./chunk-UY6B6IVT.js";
import "./chunk-6PV45IYU.js";
import "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import "./chunk-O5TPFXRT.js";
import {
  c
} from "./chunk-Q6XRAGMA.js";
import {
  o
} from "./chunk-JUAPMINU.js";
import "./chunk-PK2ZR2SJ.js";
import "./chunk-YFPGM5UE.js";
import "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import {
  l
} from "./chunk-E3KEUGUG.js";
import {
  m
} from "./chunk-N3XLUQJI.js";
import {
  a2 as a
} from "./chunk-JUAD7TJ6.js";
import "./chunk-VHLUKPRH.js";
import {
  r
} from "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import {
  H
} from "./chunk-ZWFY3WY5.js";
import "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/rest/networks/circuits/support/CircuitVerifyResult.js
var p = class extends l {
  constructor(r2) {
    super(r2), this.error = null, this.geometry = null, this.name = null;
  }
};
r([m({ type: Object })], p.prototype, "error", void 0), r([m({ type: c })], p.prototype, "geometry", void 0), r([m({ type: String })], p.prototype, "name", void 0), p = r([a("esri.rest.networks.circuits.support.CircuitVerifyResult")], p);
var c2 = p;

// node_modules/@arcgis/core/rest/networks/circuits/support/VerifyCircuitsResult.js
var c3 = class extends l {
  constructor(e) {
    super(e), this.circuits = [], this.moment = null, this.exceededTransferLimit = false, this.serviceEdits = null;
  }
  readServiceEdits(e, r2) {
    return t(e);
  }
};
r([m({ type: [c2], json: { type: [c2], write: true } })], c3.prototype, "circuits", void 0), r([m({ type: Date, json: { type: Number, write: { writer: (e, r2) => {
  r2.moment = e ? e.getTime() : null;
} } } })], c3.prototype, "moment", void 0), r([m({ type: Boolean, json: { type: Boolean, write: true } })], c3.prototype, "exceededTransferLimit", void 0), r([m({ type: [Object], json: { type: [Object], write: true } })], c3.prototype, "serviceEdits", void 0), r([o("serviceEdits")], c3.prototype, "readServiceEdits", null), c3 = r([a("esri.rest.networks.circuits.support.VerifyCircuitsResult")], c3);

// node_modules/@arcgis/core/rest/networks/circuits/verifyCircuits.js
async function c4(c5, u2, e) {
  const f2 = f(c5), m2 = u2.toJSON();
  u2.circuits && (m2.circuits = JSON.stringify(u2.circuits));
  const n = { ...m2, f: "json" }, p2 = u({ ...f2.query, ...n }), a2 = s(p2, { ...e, method: "post" }), y = `${f2.path}/circuits/verify`, { data: j } = await H(y, a2);
  return c3.fromJSON(j);
}
export {
  c4 as verifyCircuits
};
//# sourceMappingURL=verifyCircuits-7CEX3XT6.js.map
