import {
  p
} from "./chunk-P4RYESYB.js";
import {
  i as i2
} from "./chunk-BMFPNVV7.js";
import {
  n,
  o as o2,
  s as s4
} from "./chunk-HCBZZ3ZP.js";
import "./chunk-PXOUV6KP.js";
import {
  n as n2,
  p as p2
} from "./chunk-VOBFRSU5.js";
import {
  o
} from "./chunk-ELSQQIKB.js";
import {
  a
} from "./chunk-OTCYHWWG.js";
import {
  E,
  c,
  i,
  s as s3,
  u
} from "./chunk-UGXCZZ7N.js";
import "./chunk-ROVRMLYN.js";
import "./chunk-SYPTUUSZ.js";
import "./chunk-YZLWQJLF.js";
import "./chunk-7NMH5MM5.js";
import "./chunk-TCIXF7MM.js";
import "./chunk-UGTICYU7.js";
import "./chunk-3MHRDLQO.js";
import {
  k
} from "./chunk-F4KXGA4J.js";
import {
  b,
  d,
  m
} from "./chunk-QVKLS4LH.js";
import "./chunk-2KVNXQA7.js";
import "./chunk-XDCUZFJX.js";
import "./chunk-DNZK6PPI.js";
import "./chunk-7BWCD63N.js";
import "./chunk-MUKDJQWB.js";
import "./chunk-6KFXWKZZ.js";
import {
  k as k2,
  x
} from "./chunk-YBJ5GVXQ.js";
import "./chunk-X3R5OB6L.js";
import "./chunk-RACDQ3AL.js";
import "./chunk-TEXTBDH7.js";
import "./chunk-N3A2BVTW.js";
import "./chunk-52HWRRRQ.js";
import "./chunk-VNTEV3V4.js";
import "./chunk-OGOQOMMV.js";
import "./chunk-7Z3AF3B2.js";
import "./chunk-6GWORUT3.js";
import "./chunk-XHYOFJ4U.js";
import "./chunk-HCYE6OE4.js";
import "./chunk-YIV2QKTZ.js";
import {
  j
} from "./chunk-A3VAC24F.js";
import "./chunk-FPSA4NFH.js";
import {
  C
} from "./chunk-6PV45IYU.js";
import "./chunk-SRQCQD63.js";
import "./chunk-FIRNXFAH.js";
import "./chunk-O5TPFXRT.js";
import {
  S
} from "./chunk-Q6XRAGMA.js";
import "./chunk-JUAPMINU.js";
import {
  f
} from "./chunk-PK2ZR2SJ.js";
import "./chunk-YFPGM5UE.js";
import {
  s as s2
} from "./chunk-OXSERRAR.js";
import "./chunk-7HI4VRVW.js";
import "./chunk-ZX46THLM.js";
import "./chunk-Y2ZIOB7Y.js";
import "./chunk-KTUX3OKX.js";
import "./chunk-E3KEUGUG.js";
import "./chunk-N3XLUQJI.js";
import "./chunk-JUAD7TJ6.js";
import "./chunk-VHLUKPRH.js";
import "./chunk-5TPMG26T.js";
import "./chunk-3NBBZ43U.js";
import "./chunk-VOLWOTEG.js";
import "./chunk-XTNIDRTB.js";
import "./chunk-FGWIXJQY.js";
import "./chunk-TKYAZCMB.js";
import "./chunk-3TBMFSPB.js";
import "./chunk-PSZLDJJA.js";
import {
  I as I2
} from "./chunk-ZWFY3WY5.js";
import {
  I,
  W
} from "./chunk-LQFTAGIV.js";
import "./chunk-S7IJH524.js";
import "./chunk-GZ2P4SCJ.js";
import {
  s
} from "./chunk-XWG6QGFK.js";
import "./chunk-GWNLQRNM.js";
import "./chunk-FXKORAMT.js";
import "./chunk-GNMFMITH.js";

// node_modules/@arcgis/core/webdoc/support/webdocSaveUtils.js
var O = ["NatGeo_World_Map", "Ocean_Basemap", "USA_Topo_Maps", "World_Imagery", "World_Street_Map", "World_Terrain_Base", "World_Topo_Map", "World_Hillshade", "Canvas/World_Light_Gray_Base", "Canvas/World_Light_Gray_Reference", "Canvas/World_Dark_Gray_Base", "Canvas/World_Dark_Gray_Reference", "Ocean/World_Ocean_Base", "Ocean/World_Ocean_Reference", "Reference/World_Boundaries_and_Places", "Reference/World_Reference_Overlay", "Reference/World_Transportation"].map((e) => e.toLowerCase());
async function T(e, t, r) {
  r ??= {}, M(e, t), await j(() => !t.updatingFromView), await t.load(), await k3(t), await o2(t), await E2(e, t);
  const a2 = t.portalItem, { json: i3, jsonContext: n3 } = await U(t, a2, e.origin);
  return s4(n3, { errorName: `${e.name}:save` }, r), await x2(t, a2), await _e(e, t, a2, i3, n3), await Promise.all([t.updateItemThumbnail(), p(t.resourceReferences, n3)]), a2;
}
async function U(e, t, o3) {
  const r = o(t, o3, true), a2 = e.write({}, r);
  return await Promise.all(r.resources.pendingOperations), { json: a2, jsonContext: r };
}
async function C2(e, t, r, a2) {
  a2 ??= {};
  const i3 = V(e, r);
  await j(() => !t.updatingFromView), await t.load(), await k3(t), await o2(t), await E2(e, t);
  const { json: n3, jsonContext: s5 } = await U(t, i3, e.origin);
  s4(s5, { errorName: `${e.name}:save` }, a2), await Z(t, i3);
  const l = t.getThumbnailState();
  return await be(e, t, i3, n3, s5, a2) && (t.resourceReferences.portalItem = i3), t.restoreThumbnailFromState(l), await Promise.all([t.updateItemThumbnail(), p(t.resourceReferences, s5)]), i3;
}
function M(t, o3) {
  if (!o3.portalItem) throw new s(`${t.name}:portal-item-not-set`, "Portal item to save to has not been set on the WebMap");
  D(t, o3.portalItem);
}
function D(t, o3) {
  if (o3.type !== t.itemType) throw new s(`${t.name}:portal-item-wrong-type`, `Portal item needs to have type "${t.itemType}"`);
}
async function E2(t, r) {
  if ("linkchart" === t.name) return;
  if (!r.basemap?.baseLayers.length) throw new s(`${t.name}:save`, "Map does not have a valid basemap with a base layer.");
  let a2 = null;
  if (await j(() => {
    const e = d(r.initialViewProperties, r.basemap);
    return a2 = e.spatialReference, !e.updating;
  }), !s2(a2, r.initialViewProperties.spatialReference)) throw new s(`${t.name}:save`, "The spatial reference of the basemap is not compatible with the one from the map.", { expected: r.initialViewProperties.spatialReference, actual: a2 });
}
function V(e, t) {
  let o3 = k.from(t);
  return o3.id && (o3 = o3.clone(), o3.id = null), o3.type || (o3.type = e.itemType), o3.portal || (o3.portal = C.getDefault()), D(e, o3), o3;
}
function k3(e) {
  const t = [];
  return e.basemap && t.push(e.basemap.load()), e.ground && t.push(e.ground.load()), Promise.allSettled(t).then(() => {
  });
}
async function x2(e, t) {
  t.extent = await me(e.portalItem, e.initialViewProperties.viewpoint.targetGeometry), await ee(e, t);
}
var G = E.JSAPI;
var L = "CollectorDisabled";
var N = "Collector";
var $ = "Data Editing";
var B = "OfflineDisabled";
var F = "Offline";
var H = "Workforce Project";
var K = "Workforce Worker";
var J = "Workforce Dispatcher";
var q = "Offline Map Areas";
var z = "FieldMapsDisabled";
var Q = E.DEVELOPER_BASEMAP;
var X = "UtilityNetwork";
var Y = "IPS";
async function Z(e, t) {
  c(t, L), c(t, z), c(t, E.METADATA), c(t, B), c(t, q), c(t, J), c(t, H), c(t, K), await x2(e, t);
}
async function ee(e, t) {
  i(t, G), await te(e), ie(e, t), ne(e, t), se(e, t), le(e, t), pe(e, t), ce(e, t), ue(e, t), t.typeKeywords && (t.typeKeywords = t.typeKeywords.filter((e2, t2, o3) => o3.indexOf(e2) === t2));
}
function te(e) {
  const t = oe(e).map((e2) => e2.load()).toArray();
  return Promise.allSettled(t).then(() => {
  });
}
function oe(e) {
  return e.allLayers.concat(e.allTables);
}
function re(e) {
  return oe(e).some((e2) => e2.loaded && x(e2) && e2.capabilities.operations.supportsEditing && e2.editingEnabled && ("subtype-group" !== e2.type || e2.sublayers.some((e3) => e3.editingEnabled)));
}
function ae(e) {
  return oe(e).filter((e2) => "group" !== e2.type).every((t) => t.loaded && we(e, t));
}
function ie(e, t) {
  s3(t, L) || s3(t, H) || s3(t, K) || s3(t, J) || !re(e) ? c(t, N) : i(t, N);
}
function ne(e, t) {
  re(e) ? i(t, $) : c(t, $);
}
function se(e, t) {
  !s3(t, B) && ae(e) ? i(t, F) : c(t, F);
}
function le(e, t) {
  m(e.basemap) ? i(t, Q) : c(t, Q);
}
function pe(e, t) {
  e.utilityNetworks?.length ? i(t, X) : c(t, X);
}
function ce(e, t) {
  e.ipsInfo ? i(t, Y) : c(t, Y);
}
function ue(e, t) {
  u(t, E.CHARTS, n(e));
}
async function me(e, t) {
  const o3 = t.clone().normalize();
  let r;
  if (o3.length > 1) for (const a2 of o3) r ? a2.width > r.width && (r = a2) : r = a2;
  else r = o3[0];
  return fe(e, r);
}
async function fe(e, t) {
  const o3 = t.spatialReference;
  if (o3.isWGS84) return t.clone();
  if (o3.isWebMercator) return S(t);
  const { getGeometryServiceURL: r } = await import("./geometryServiceUtils-IXHCDX5A.js"), a2 = await r(e), i3 = new p2({ geometries: [t], outSpatialReference: f.WGS84 });
  return (await n2(a2, i3))[0];
}
function de(e) {
  return k2(e) || "map-notes" === e.type || "route" === e.type;
}
function we(e, t) {
  return x(t) && t.capabilities.operations.supportsSync || de(t) && !t.portalItem || ye(t) && !he(t) && t.spatialReference.equals(e.initialViewProperties.spatialReference);
}
function ye(e) {
  return ("tile" === e.type || "vector-tile" === e.type) && (e.capabilities.operations.supportsExportTiles || ge(e) || b(e));
}
function he(e) {
  return "vector-tile" === e.type && Object.keys(e.sourceNameToSource).length > 1;
}
function ge(e) {
  return "tile" === e.type && (I2(e.url) && O.some((t) => e.url?.toLowerCase().includes("/" + t + "/")));
}
async function _e(e, t, o3, r, a2) {
  await o3.update({ data: r }), ve(e, t, o3, r, a2);
}
async function be(t, o3, r, a2, i3, n3) {
  const s5 = o3.portalItem, l = { item: s5, authenticated: !(!s5?.id || !s5.portal.user) }, p3 = r.portal;
  await p3.signIn();
  const { copyAllowed: c2, itemReloaded: u2 } = await je(l, p3);
  if (l.authenticated ||= u2, !c2) throw new s(`${t.name}:save-as-copy-not-allowed`, "Owner of this map does not allow others to save a copy");
  const m2 = await Re(r, l, a2, n3);
  return o3.portalItem = r, ve(t, o3, r, a2, i3), m2;
}
async function je(e, t) {
  const { item: o3, authenticated: r } = e;
  return o3?.id && o3.typeKeywords?.includes("useOnly") ? o3.portal.portalHostname !== t.portalHostname ? { copyAllowed: false, itemReloaded: false } : (r || await o3.reload(), { copyAllowed: "admin" === o3.itemControl || "update" === o3.itemControl, itemReloaded: true }) : { copyAllowed: true, itemReloaded: false };
}
async function Re(e, t, o3, r) {
  const i3 = e.portal, { item: n3 } = t, { folder: s5, copyAllResources: l } = r;
  let p3 = false;
  if (l && n3?.id && W(n3.portal.url, i3.url) && parseInt(n3.portal.currentVersion, 10) >= 2023) {
    const { total: e2 } = await n3.fetchResources();
    p3 = !!e2;
  }
  if (p3) {
    const t2 = await n3.copy({ copyResources: "all", folder: s5 });
    e.id = t2.id, e.portal = t2.portal;
    const r2 = e.toJSON();
    await e.load(), e.read(r2), await e.update({ data: o3 });
  } else await i3.user.addItem({ item: e, folder: s5, data: o3 });
  return p3;
}
function ve(e, o3, a2, n3, s5) {
  a.prototype.read.call(o3, { version: n3.version, authoringApp: n3.authoringApp, authoringAppVersion: n3.authoringAppVersion }, { origin: e.origin, ignoreDefaults: true, url: a2.itemUrl ? I(a2.itemUrl) : void 0 }), i2(s5), o3.resourceInfo = n3;
}
export {
  U as createJSON,
  Re as initializeNewItem,
  je as isCopyAllowed,
  T as save,
  C2 as saveAs
};
//# sourceMappingURL=webdocSaveUtils-ULOXYDWB.js.map
