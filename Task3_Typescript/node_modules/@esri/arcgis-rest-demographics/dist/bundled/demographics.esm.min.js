/* @preserve
* @esri/arcgis-rest-demographics - v4.0.2 - Apache-2.0
* Copyright (c) 2017-2024 Esri, Inc.
* Sat Jun 15 2024 00:23:21 GMT+0000 (Coordinated Universal Time)
*/
import{appendCustomParams as e,request as a,cleanUrl as r}from"@esri/arcgis-rest-request";const t="https://geoenrich.arcgis.com/arcgis/rest/services/World/geoenrichmentserver",n=`${t}/Geoenrichment`,s=`${t}/StandardGeographyQuery`;function i(t){let s={},i=`${n}/countries`;return t?(t.endpoint&&(i=`${t.endpoint}/countries`),s=e(t,[],{params:Object.assign({},t.params)}),t.countryCode&&(i=`${i}/${t.countryCode}`)):s.params={},a(r(i),s).then((e=>e))}function o(t){let s={},i=`${n}/dataCollections`;return t?(t.endpoint&&(i=`${t.endpoint}/dataCollections`),s=e(t,["addDerivativeVariables","suppressNullValues"],{params:Object.assign({},t.params)}),s.params.addDerivativeVariables&&(s.params.addDerivativeVariables=JSON.stringify(s.params.addDerivativeVariables)),t.countryCode&&(i=`${i}/${t.countryCode}`,t.dataCollection&&(i=`${i}/${t.dataCollection}`))):s.params={},a(`${r(i)}`,s).then((e=>e))}function c(t){let s={},i=`${n}/StandardGeographyLevels`;return t?(t.endpoint&&(i=`${t.endpoint}/StandardGeographyLevels`),s=e(t,[],{params:Object.assign({},t.params)})):s.params={},a(`${r(i)}`,s).then((e=>e))}function u(t){const n=`${t.endpoint||s}/execute`,i=e(t,["sourceCountry","optionalCountryDataset","geographyLayers","geographyIDs","geographyQuery","returnSubGeographyLayer","subGeographyLayer","subGeographyQuery","outSR","returnGeometry","returnCentroids","generalizationLevel","useFuzzySearch","featureLimit","featureOffset","langCode"],{params:Object.assign({},t.params)});return t.authentication?(["geographyLayers","geographyIDs"].forEach((e=>{i.params[e]&&(i.params[e]=JSON.stringify(i.params[e]))})),a(`${r(n)}`,i).then((e=>e))):Promise.reject("Geoenrichment using the ArcGIS service requires authentication")}function p(t){const s=e(t,["studyAreas","dataCollections","analysisVariables","addDerivativeVariables","returnGeometry","inSR","outSR"],{params:Object.assign({},t.params)});return t.authentication?(["dataCollections","analysisVariables"].forEach((e=>{s.params[e]&&(s.params[e]=JSON.stringify(s.params[e]))})),a(`${r(`${t.endpoint||n}/enrich`)}`,s).then((e=>e))):Promise.reject("Geoenrichment using the ArcGIS service requires authentication")}export{i as getAvailableCountries,o as getAvailableDataCollections,c as getAvailableGeographyLevels,u as getGeography,p as queryDemographicData};
//# sourceMappingURL=demographics.esm.min.js.map
