{"version":3,"file":"getAvailableDataCollections.js","sourceRoot":"","sources":["../../src/getAvailableDataCollections.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,mEAImC;AAEnC,6CAGsB;AA2FtB;;;;;;;;;;;;;;;;;;;;;;GAsBG;AACH,SAAgB,2BAA2B,CACzC,cAAoD;IAEpD,IAAI,OAAO,GAAwC,EAAE,CAAC;IACtD,IAAI,QAAQ,GAAG,GAAG,4CAA+B,kBAAkB,CAAC;IAEpE,IAAI,CAAC,cAAc,EAAE;QACnB,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;KACrB;SAAM;QACL,IAAI,cAAc,CAAC,QAAQ,EAAE;YAC3B,QAAQ,GAAG,GAAG,cAAc,CAAC,QAAQ,kBAAkB,CAAC;SACzD;QACD,OAAO,GAAG,IAAA,wCAAkB,EAC1B,cAAc,EACd,CAAC,wBAAwB,EAAE,oBAAoB,CAAC,EAChD,EAAE,MAAM,oBAAO,cAAc,CAAC,MAAM,CAAE,EAAE,CACzC,CAAC;QAEF,IAAI,OAAO,CAAC,MAAM,CAAC,sBAAsB,EAAE;YACzC,OAAO,CAAC,MAAM,CAAC,sBAAsB,GAAG,IAAI,CAAC,SAAS,CACpD,OAAO,CAAC,MAAM,CAAC,sBAAsB,CACtC,CAAC;SACH;QAED,IAAI,cAAc,CAAC,WAAW,EAAE;YAC9B,QAAQ,GAAG,GAAG,QAAQ,IAAI,cAAc,CAAC,WAAW,EAAE,CAAC;YACvD,IAAI,cAAc,CAAC,cAAc,EAAE;gBACjC,QAAQ,GAAG,GAAG,QAAQ,IAAI,cAAc,CAAC,cAAc,EAAE,CAAC;aAC3D;SACF;KACF;IAED,sDAAsD;IACtD,OAAO,IAAA,6BAAO,EAAC,GAAG,IAAA,8BAAQ,EAAC,QAAQ,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,QAAa,EAAE,EAAE;QACtE,OAAO,QAAQ,CAAC;IAClB,CAAC,CAAC,CAAC;AACL,CAAC;AApCD,kEAoCC","sourcesContent":["/* Copyright (c) 2020 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  request,\n  cleanUrl,\n  appendCustomParams\n} from \"@esri/arcgis-rest-request\";\n\nimport {\n  ARCGIS_ONLINE_GEOENRICHMENT_URL,\n  IEndpointOptions\n} from \"./helpers.js\";\n\nexport interface IGetAvailableDataCollectionsOptions extends IEndpointOptions {\n  /**\n   * Optional parameter to specify an array of string values that describe what derivative variables to include in the output.\n   */\n  addDerivativeVariables?: string[];\n  /**\n   * Optional parameter to return only values that are not NULL in the output response.\n   */\n  suppressNullValues?: boolean;\n  /**\n   * View a description for a single data collection within a given country. If not specified, will return a list of data collections that can be run in any country.\n   */\n  countryCode?: string;\n  dataCollection?: string;\n}\n\nexport interface IGetAvailableDataCollectionsResponse {\n  DataCollections?: IDataCollection[] | null;\n}\nexport interface IDataCollection {\n  dataCollectionID: string;\n  metadata: IMetadata;\n  data?: IDataInfo[] | null;\n}\nexport interface IMetadata {\n  title: string;\n  name: string;\n  shortDescription: string;\n  longDescription: string;\n  url: string;\n  keywords: string;\n  creationDate: number;\n  lastRevisionDate: number;\n  webmap: string;\n  author: string;\n  countries?: string | null;\n  IsRoyalties: boolean;\n  categories?: ICategory[] | null;\n  filters?: IFilter[] | null;\n  datasets?: string | null;\n  hierarchies: string;\n  coverage?: string | null;\n  mobileinfographics?: string | null;\n  icon?: string | null;\n}\nexport interface ICategory {\n  id: string;\n  name: string;\n  alias: string;\n  description: string;\n  displayOrder: string;\n}\nexport interface IFilter {\n  id: string;\n  name: string;\n  aliasname: string;\n  type: string;\n  rangeMax?: string | null;\n  rangeMin?: string | null;\n  enumValues?: string | null;\n}\nexport interface IDataInfo {\n  id: string;\n  alias: string;\n  type: string;\n  precision: number;\n  length?: null;\n  averageBase?: null;\n  averageBaseAlias?: null;\n  description: string;\n  fieldCategory: string;\n  indexBase?: number | null;\n  percentBase?: string | null;\n  percentBaseAlias?: string | null;\n  popularity?: number | null;\n  units: string;\n  vintage?: string | null;\n  hideInDataBrowser: boolean;\n  filteringTags?: IFilteringTag[] | null;\n  derivative: boolean;\n  provider: string;\n  indexType?: string | null;\n}\nexport interface IFilteringTag {\n  id: string;\n  name: string;\n  value: string;\n}\n\n/**\n * Used to determine the data collections available for usage with the Geoenrichment service. See the [REST Documentation](https://developers.arcgis.com/rest/geoenrichment/api-reference/data-collections.htm) for more information.\n *\n * ```js\n * import { getAvailableDataCollections } from '@esri/arcgis-rest-demographics';\n *\n * getAvailableDataCollections()\n *   .then((response) => {\n *     response; // => { DataCollections: [ ... ]  }\n *   });\n *\n * getAvailableDataCollections({\n *   countryCode: \"se\",\n *   dataCollection: \"EducationalAttainment\"\n * })\n *   .then((response) => {\n *     response.; // => { DataCollections: [ ... ] }\n *   });\n * ```\n *\n * @param requestOptions Options to pass through to the geoenrichment service.\n * @returns A Promise that will resolve with data collections for the request.\n */\nexport function getAvailableDataCollections(\n  requestOptions?: IGetAvailableDataCollectionsOptions\n): Promise<IGetAvailableDataCollectionsResponse> {\n  let options: IGetAvailableDataCollectionsOptions = {};\n  let endpoint = `${ARCGIS_ONLINE_GEOENRICHMENT_URL}/dataCollections`;\n\n  if (!requestOptions) {\n    options.params = {};\n  } else {\n    if (requestOptions.endpoint) {\n      endpoint = `${requestOptions.endpoint}/dataCollections`;\n    }\n    options = appendCustomParams<IGetAvailableDataCollectionsOptions>(\n      requestOptions,\n      [\"addDerivativeVariables\", \"suppressNullValues\"],\n      { params: { ...requestOptions.params } }\n    );\n\n    if (options.params.addDerivativeVariables) {\n      options.params.addDerivativeVariables = JSON.stringify(\n        options.params.addDerivativeVariables\n      );\n    }\n\n    if (requestOptions.countryCode) {\n      endpoint = `${endpoint}/${requestOptions.countryCode}`;\n      if (requestOptions.dataCollection) {\n        endpoint = `${endpoint}/${requestOptions.dataCollection}`;\n      }\n    }\n  }\n\n  // add spatialReference property to individual matches\n  return request(`${cleanUrl(endpoint)}`, options).then((response: any) => {\n    return response;\n  });\n}\n"]}