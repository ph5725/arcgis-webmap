{"version":3,"file":"createOAuthApp.js","sourceRoot":"","sources":["../../src/createOAuthApp.ts"],"names":[],"mappings":";AAAA;gBACgB;;;AAEhB,iEAKkC;AAElC,4DAAsD;AAEtD,oDAI6B;AAG7B;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;AACI,KAAK,UAAU,cAAc,CAClC,cAAqC;IAErC,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC;IAEnC,wBAAwB;IAExB,MAAM,kBAAkB,GAAG,IAAA,sCAAyB,EAAC,cAAc,CAAC,CAAC;IAErE,MAAM,iBAAiB,GAA0B;QAC/C,YAAY;QACZ,SAAS;QACT,aAAa;QACb,eAAe;QACf,QAAQ;QACR,OAAO;QACP,YAAY;QACZ,SAAS;QACT,kBAAkB;QAClB,MAAM;QACN,OAAO;QACP,MAAM;QACN,cAAc;QACd,KAAK;KACN,CAAC;IAEF,mBAAmB;IACnB,MAAM,gBAAgB,iCACpB,IAAI,kCACC,IAAA,uBAAU,EAAC,cAAqB,EAAE,iBAAiB,CAAC,KACvD,IAAI,EAAE,aAAa,OAElB,kBAAkB,KACrB,cAAc,EAAE,cAAc,CAAC,cAAc,EAC7C,MAAM,EAAE;YACN,CAAC,EAAE,MAAM;SACV,GACF,CAAC;IAEF,MAAM,kBAAkB,GAAG,MAAM,IAAA,+BAAU,EAAC,gBAAgB,CAAC,CAAC;IAE9D,uBAAuB;IACvB,MAAM,iBAAiB,iCACrB,MAAM,EAAE,kBAAkB,CAAC,EAAE,EAC7B,OAAO,EAAE,UAAU,EACnB,aAAa,EAAE,cAAc,CAAC,aAAa,IAAI,EAAE,EACjD,aAAa,EAAE,EAAE,EACjB,UAAU,EAAE,EAAE,IACX,kBAAkB,KACrB,cAAc,EAAE,cAAc,CAAC,cAAc,GAC9C,CAAC;IAEF,MAAM,qBAAqB,GAAG,MAAM,IAAA,4BAAW,EAAC,iBAAiB,CAAC,CAAC;IACnE,MAAM,QAAQ,GAAG,MAAM,IAAA,4BAAO,EAAC,qBAAqB,CAAC,MAAM,kCACtD,kBAAkB,KACrB,cAAc,EAAE,cAAc,CAAC,cAAc,EAC7C,MAAM,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IACrB,CAAC;IAEH,uCACK,IAAA,oCAAuB,EAAC,qBAAqB,CAAC,KACjD,IAAI,EAAE,QAAQ,IACd;AACJ,CAAC;AA/DD,wCA+DC","sourcesContent":["/* Copyright (c) 2023 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  ICreateItemOptions,\n  createItem,\n  getItem,\n  IItemAdd\n} from \"@esri/arcgis-rest-portal\";\n\nimport { registerApp } from \"./shared/registerApp.js\";\nimport { IRegisterAppOptions } from \"./shared/types/appType.js\";\nimport {\n  filterKeys,\n  extractBaseRequestOptions,\n  appToOAuthAppProperties\n} from \"./shared/helpers.js\";\nimport { ICreateOAuthAppOption, IOAuthApp } from \"./shared/types/oAuthType.js\";\n\n/**\n * Used to register an OAuth2.0 app. See the [OAuth2.0](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/oauth-2.0/) for more information.\n *\n * ```js\n * import { createOAuthApp, IOAuthApp } from '@esri/arcgis-rest-developer-credentials';\n * import { ArcGISIdentityManager } from \"@esri/arcgis-rest-request\";\n *\n * const authSession: ArcGISIdentityManager = await ArcGISIdentityManager.signIn({\n *   username: \"xyz_usrName\",\n *   password: \"xyz_pw\"\n * });\n *\n * createOAuthApp({\n *   title: \"xyz_title\",\n *   description: \"xyz_desc\",\n *   tags: [\"xyz_tag1\", \"xyz_tag2\"],\n *   redirect_uris: [\"http://localhost:3000/\"],\n *   authentication: authSession\n * }).then((registeredOAuthApp: IOAuthApp) => {\n *   // => {redirect_uris: [\"http://localhost:3000/\"], item: {tags: [\"xyz_tag1\", \"xyz_tag2\"], ...}, ...}\n * }).catch(e => {\n *   // => an exception object\n * });\n * ```\n *\n * @param requestOptions - Options for {@linkcode createOAuthApp | createOAuthApp()}, including necessary params to register an OAuth app and an {@linkcode ArcGISIdentityManager} authentication session.\n * @returns A Promise that will resolve to an {@linkcode IOAuthApp} object representing the newly registered OAuth app.\n */\nexport async function createOAuthApp(\n  requestOptions: ICreateOAuthAppOption\n): Promise<IOAuthApp> {\n  requestOptions.httpMethod = \"POST\";\n\n  // filter param buckets:\n\n  const baseRequestOptions = extractBaseRequestOptions(requestOptions);\n\n  const itemAddProperties: Array<keyof IItemAdd> = [\n    \"categories\",\n    \"culture\",\n    \"description\",\n    \"documentation\",\n    \"extent\",\n    \"owner\",\n    \"properties\",\n    \"snippet\",\n    \"spatialReference\",\n    \"tags\",\n    \"title\",\n    \"type\",\n    \"typeKeywords\",\n    \"url\"\n  ];\n\n  // step 1: add item\n  const createItemOption: ICreateItemOptions = {\n    item: {\n      ...filterKeys(requestOptions as any, itemAddProperties),\n      type: \"Application\"\n    },\n    ...baseRequestOptions,\n    authentication: requestOptions.authentication,\n    params: {\n      f: \"json\"\n    }\n  };\n\n  const createItemResponse = await createItem(createItemOption);\n\n  // step 2: register app\n  const registerAppOption: IRegisterAppOptions = {\n    itemId: createItemResponse.id,\n    appType: \"multiple\",\n    redirect_uris: requestOptions.redirect_uris || [],\n    httpReferrers: [],\n    privileges: [],\n    ...baseRequestOptions,\n    authentication: requestOptions.authentication\n  };\n\n  const registeredAppResponse = await registerApp(registerAppOption);\n  const itemInfo = await getItem(registeredAppResponse.itemId, {\n    ...baseRequestOptions,\n    authentication: requestOptions.authentication,\n    params: { f: \"json\" }\n  });\n\n  return {\n    ...appToOAuthAppProperties(registeredAppResponse),\n    item: itemInfo\n  };\n}\n"]}