"use strict";
/* Copyright (c) 2023 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApiKey = void 0;
const getRegisteredAppInfo_js_1 = require("./shared/getRegisteredAppInfo.js");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const helpers_js_1 = require("./shared/helpers.js");
/**
 * Used to retrieve the API key with given `itemId`. See the [security and authentication](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/api-keys/) for more information about API key.
 *
 * ```js
 * import { getApiKey, IApiKeyResponse } from '@esri/arcgis-rest-developer-credentials';
 * import { ArcGISIdentityManager } from "@esri/arcgis-rest-request";
 *
 * const authSession: ArcGISIdentityManager = await ArcGISIdentityManager.signIn({
 *   username: "xyz_usrName",
 *   password: "xyz_pw"
 * });
 *
 * getApiKey({
 *   itemId: "xyz_itemId",
 *   authentication: authSession
 * }).then((retrievedAPIKey: IApiKeyResponse) => {
 *   // => {apiKey: "xyz_key", item: {tags: ["xyz_tag1", "xyz_tag2"], ...}, ...}
 * }).catch(e => {
 *   // => an exception object
 * });
 * ```
 *
 * @param requestOptions - Options for {@linkcode getApiKey | getApiKey()}, including `itemId` of which API key to retrieve and an {@linkcode ArcGISIdentityManager} authentication session.
 * @returns A Promise that will resolve to an {@linkcode IApiKeyResponse} object representing successfully retrieved API key.
 */
async function getApiKey(requestOptions) {
    const appResponse = await (0, getRegisteredAppInfo_js_1.getRegisteredAppInfo)(requestOptions);
    const itemInfo = await (0, arcgis_rest_portal_1.getItem)(requestOptions.itemId, Object.assign(Object.assign({}, (0, helpers_js_1.extractBaseRequestOptions)(requestOptions)), { authentication: requestOptions.authentication }));
    return Object.assign(Object.assign({}, (0, helpers_js_1.appToApiKeyProperties)(appResponse)), { item: itemInfo });
}
exports.getApiKey = getApiKey;
//# sourceMappingURL=getApiKey.js.map