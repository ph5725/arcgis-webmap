"use strict";
/* Copyright (c) 2023 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOAuthApp = void 0;
const getRegisteredAppInfo_js_1 = require("./shared/getRegisteredAppInfo.js");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const helpers_js_1 = require("./shared/helpers.js");
/**
 * Used to retrieve the OAuth2.0 app with given `itemId`. See the [OAuth2.0](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/oauth-2.0/) for more information.
 *
 * ```js
 * import { getOAuthApp, IOAuthApp } from '@esri/arcgis-rest-developer-credentials';
 * import { ArcGISIdentityManager } from "@esri/arcgis-rest-request";
 *
 * const authSession: ArcGISIdentityManager = await ArcGISIdentityManager.signIn({
 *   username: "xyz_usrName",
 *   password: "xyz_pw"
 * });
 *
 * getOAuthApp({
 *   itemId: "xyz_itemId",
 *   authentication: authSession
 * }).then((retrievedOAuthApp: IOAuthApp) => {
 *   // => {redirect_uris: ["http://localhost:3000/"], item: {tags: ["xyz_tag1", "xyz_tag2"], ...}, ...}
 * }).catch(e => {
 *   // => an exception object
 * });
 * ```
 *
 * @param requestOptions - Options for {@linkcode getOAuthApp | getOAuthApp()}, including `itemId` of which OAuth app to retrieve and an {@linkcode ArcGISIdentityManager} authentication session.
 * @returns A Promise that will resolve to an {@linkcode IOAuthApp} object representing successfully retrieved OAuth app.
 */
async function getOAuthApp(requestOptions) {
    const appResponse = await (0, getRegisteredAppInfo_js_1.getRegisteredAppInfo)(requestOptions);
    const itemInfo = await (0, arcgis_rest_portal_1.getItem)(requestOptions.itemId, Object.assign(Object.assign({}, (0, helpers_js_1.extractBaseRequestOptions)(requestOptions)), { authentication: requestOptions.authentication }));
    return Object.assign(Object.assign({}, (0, helpers_js_1.appToOAuthAppProperties)(appResponse)), { item: itemInfo });
}
exports.getOAuthApp = getOAuthApp;
//# sourceMappingURL=getOAuthApp.js.map