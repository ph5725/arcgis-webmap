"use strict";
/* Copyright (c) 2023 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.invalidateApiKey = void 0;
const getRegisteredAppInfo_js_1 = require("./shared/getRegisteredAppInfo.js");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
const helpers_js_1 = require("./shared/helpers.js");
/**
 * Used to invalidate an API key.
 *
 * ```js
 * import { invalidateApiKey } from "@esri/arcgis-rest-developer-credentials";
 *
 * invalidateApiKey({
 *   itemId: ITEM_ID,
 *   authentication,
 *   apiKey: 1, // invalidate the key in slot 1
 * }).then((response) => {
 *   // => {success: true}
 * }).catch(e => {
 *   // => an exception object
 * });
 */
async function invalidateApiKey(requestOptions) {
    const portal = (0, arcgis_rest_portal_1.getPortalUrl)(requestOptions);
    const url = `${portal}/oauth2/revokeToken`;
    const appInfo = await (0, getRegisteredAppInfo_js_1.getRegisteredAppInfo)({
        itemId: requestOptions.itemId,
        authentication: requestOptions.authentication
    });
    const params = {
        client_id: appInfo.client_id,
        client_secret: appInfo.client_secret,
        apiToken: (0, helpers_js_1.slotForInvalidationKey)(requestOptions.apiKey),
        regenerateApiToken: true,
        grant_type: "client_credentials"
    };
    // authentication is not being passed to the request because client_secret acts as the auth
    return (0, arcgis_rest_request_1.request)(url, {
        params
    });
}
exports.invalidateApiKey = invalidateApiKey;
//# sourceMappingURL=invalidateApiKey.js.map