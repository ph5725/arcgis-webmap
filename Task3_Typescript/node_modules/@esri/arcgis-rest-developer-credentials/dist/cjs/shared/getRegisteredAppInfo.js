"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegisteredAppInfo = void 0;
/* Copyright (c) 2023 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
const arcgis_rest_request_1 = require("@esri/arcgis-rest-request");
const arcgis_rest_portal_1 = require("@esri/arcgis-rest-portal");
const helpers_js_1 = require("./helpers.js");
/**
 * Used to retrieve registered app info. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/registered-app-info.htm) for more information.
 *
 * ```js
 * import { getRegisteredAppInfo, IApp } from '@esri/arcgis-rest-developer-credentials';
 * import { ArcGISIdentityManager } from "@esri/arcgis-rest-request";
 *
 * const authSession: ArcGISIdentityManager = await ArcGISIdentityManager.signIn({
 *   username: "xyz_usrName",
 *   password: "xyz_pw"
 * });
 *
 * getRegisteredAppInfo({
 *   itemId: "xyz_itemId",
 *   authentication: authSession
 * }).then((registeredApp: IApp) => {
 *   // => {client_id: "xyz_id", client_secret: "xyz_secret", ...}
 * }).catch(e => {
 *   // => an exception object
 * });
 * ```
 *
 * @param requestOptions - Options for {@linkcode getRegisteredAppInfo | getRegisteredAppInfo()}, including an itemId of which app to retrieve and an {@linkcode ArcGISIdentityManager} authentication session.
 * @returns A Promise that will resolve to an {@linkcode IApp} object representing successfully retrieved app.
 */
async function getRegisteredAppInfo(requestOptions) {
    const userName = await requestOptions.authentication.getUsername();
    const url = (0, arcgis_rest_portal_1.getPortalUrl)(requestOptions) +
        `/content/users/${userName}/items/${requestOptions.itemId}/registeredAppInfo`;
    requestOptions.httpMethod = "POST";
    const registeredAppResponse = await (0, arcgis_rest_request_1.request)(url, Object.assign(Object.assign({}, requestOptions), { params: { f: "json" } }));
    return (0, helpers_js_1.registeredAppResponseToApp)(registeredAppResponse);
}
exports.getRegisteredAppInfo = getRegisteredAppInfo;
//# sourceMappingURL=getRegisteredAppInfo.js.map