{"version":3,"file":"generateApiKeyToken.js","sourceRoot":"","sources":["../../../src/shared/generateApiKeyToken.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EAGR,MAAM,2BAA2B,CAAC;AACnC,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;AACjE,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AASxD,MAAM,CAAC,KAAK,UAAU,mBAAmB,CACvC,OAAoC;IAEpC,MAAM,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IACrC,MAAM,GAAG,GAAG,GAAG,MAAM,eAAe,CAAC;IAErC,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC;QACzC,MAAM,EAAE,OAAO,CAAC,MAAM;QACtB,cAAc,EAAE,OAAO,CAAC,cAAc;KACvC,CAAC,CAAC;IAEH,MAAM,MAAM,GAAG;QACb,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,aAAa,EAAE,OAAO,CAAC,aAAa;QACpC,QAAQ,EAAE,OAAO,CAAC,MAAM;QACxB,kBAAkB,EAAE,IAAI;QACxB,UAAU,EAAE,oBAAoB;KACjC,CAAC;IAEF,2FAA2F;IAC3F,OAAO,OAAO,CAAC,GAAG,EAAE;QAClB,MAAM;KACP,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  request,\n  IRequestOptions,\n  IAuthenticationManager\n} from \"@esri/arcgis-rest-request\";\nimport { getRegisteredAppInfo } from \"./getRegisteredAppInfo.js\";\nimport { getPortalUrl } from \"@esri/arcgis-rest-portal\";\n\nexport interface IGenerateApiKeyTokenOptions extends IRequestOptions {\n  itemId: string;\n  apiKey: 1 | 2;\n  portal?: string;\n  authentication: IAuthenticationManager;\n}\n\nexport async function generateApiKeyToken(\n  options: IGenerateApiKeyTokenOptions\n): Promise<{ access_token: string; expires_in: number }> {\n  const portal = getPortalUrl(options);\n  const url = `${portal}/oauth2/token`;\n\n  const appInfo = await getRegisteredAppInfo({\n    itemId: options.itemId,\n    authentication: options.authentication\n  });\n\n  const params = {\n    client_id: appInfo.client_id,\n    client_secret: appInfo.client_secret,\n    apiToken: options.apiKey,\n    regenerateApiToken: true,\n    grant_type: \"client_credentials\"\n  };\n\n  // authentication is not being passed to the request because client_secret acts as the auth\n  return request(url, {\n    params\n  });\n}\n"]}