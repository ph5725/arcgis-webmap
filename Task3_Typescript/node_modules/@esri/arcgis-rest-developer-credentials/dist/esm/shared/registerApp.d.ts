import { IApp, IRegisterAppOptions } from "./types/appType.js";
/**
 * Used to register an app. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/register-app.htm) for more information.
 *
 * Accepted app types:
 * - apikey
 * - multiple
 * - browser
 * - server
 * - native
 *
 * ```js
 * import { registerApp, IApp } from '@esri/arcgis-rest-developer-credentials';
 * import { ArcGISIdentityManager } from "@esri/arcgis-rest-request";
 *
 * const authSession: ArcGISIdentityManager = await ArcGISIdentityManager.signIn({
 *   username: "xyz_usrName",
 *   password: "xyz_pw"
 * });
 *
 * registerApp({
 *   itemId: "xyz_itemId",
 *   appType: "multiple",
 *   redirect_uris: ["http://localhost:3000/"],
 *   httpReferrers: ["http://localhost:3000/"],
 *   privileges: ["premium:user:geocode:temporary", Privileges.FeatureReport],
 *   authentication: authSession
 * }).then((registeredApp: IApp) => {
 *   // => {client_id: "xyz_id", client_secret: "xyz_secret", ...}
 * }).catch(e => {
 *   // => an exception object
 * });
 * ```
 *
 * @param requestOptions - Options for {@linkcode registerApp | registerApp()}, including necessary params to register an app and an {@linkcode ArcGISIdentityManager} authentication session.
 * @returns A Promise that will resolve to an {@linkcode IApp} object representing the newly registered app.
 */
export declare function registerApp(requestOptions: IRegisterAppOptions): Promise<IApp>;
