/* @preserve
* @esri/arcgis-rest-elevation - v1.0.0 - Apache-2.0
* Copyright (c) 2017-2025 Esri, Inc.
* Thu Jan 30 2025 15:44:10 GMT+0000 (Coordinated Universal Time)
*/
import { appendCustomParams, request } from '@esri/arcgis-rest-request';

const baseUrl = "https://elevation-api.arcgis.com/arcgis/rest/services/elevation-service/v1";

/**
 * This method returns the elevation in meters at a given longitude and latitude
 * within the WGS84 coordinate system. By default the elevation is measured with
 * respect to the Earth's mean sea level. It takes into account the local
 * variations in gravity and provides a consistent vertical reference.
 *
 * If the relativeTo query parameter is set to `ellipsoid`, the elevation will be
 * measured with respect to the ellipsoid. This is a mathematical model that
 * approximates the shape of the Earth. It does not consider local variations
 * in gravity and is commonly used in GPS positioning.
 *
 * ```
 * import { findElevationAtPoint } from "@esri/arcgis-rest-elevation";
 * import { ApiKeyManager } from "@esri/arcgis-rest-request";
 *
 * const results = await findElevationAtPoint({
 *   lon: -179.99,
 *   lat: -85.05,
 *   authentication: ApiKeyManager.fromKey("YOUR_ACCESS_TOKEN");
 * });
 *
 * console.log(results)
 * ```
 */
function findElevationAtPoint(requestOptions) {
    const options = appendCustomParams(requestOptions, ["lon", "lat", "relativeTo"], Object.assign({}, requestOptions));
    return request(`${baseUrl}/elevation/at-point`, Object.assign(Object.assign({}, options), { httpMethod: "GET" })).then((response) => {
        const r = Object.assign({}, response);
        return r;
    });
}

/**
 * This method returns elevations in meters at given longitudes and latitudes
 * within the WGS84 coordinate system. The order of the points returned by this
 * request will be the same as the order of the points passed in the coordinates
 * parameter.
 *
 * If the distance between the furthest West and furthest East coordinate or
 * the furthest North and furthest South coordinate exceeds 50km, the service
 * will return a 400 HTTP response as the distance between these points is too
 * large.
 *
 * By default the elevation is measured with respect to the Earth's mean sea level.
 * It takes into account the local variations in gravity and provides a consistent
 * vertical reference.
 *
 * If the relativeTo query parameter is set to `ellipsoid`, the elevation will be
 * measured with respect to the ellipsoid. This is a mathematical model that
 * approximates the shape of the Earth. It does not consider local variations
 * in gravity and is commonly used in GPS positioning.
 *
 * ```
 * import { findElevationAtManyPoints } from "@esri/arcgis-rest-elevation";
 * import { ApiKeyManager } from "@esri/arcgis-rest-request";
 *
 * const results = await findElevationAtManyPoints({
 *   coordinates: [[31.134167, 29.979167], [31.130833, 29.976111], [31.128333, 29.9725]],
 *   authentication: ApiKeyManager.fromKey("YOUR_ACCESS_TOKEN");
 * });
 *
 * console.log(results)
 * ```
 */
function findElevationAtManyPoints(requestOptions) {
    const options = appendCustomParams(requestOptions, ["relativeTo"], Object.assign({}, requestOptions));
    options.params.coordinates = JSON.stringify(requestOptions.coordinates);
    return request(`${baseUrl}/elevation/at-many-points`, Object.assign({}, options)).then((response) => {
        const r = Object.assign({}, response);
        return r;
    });
}

export { findElevationAtManyPoints, findElevationAtPoint };
//# sourceMappingURL=elevation.esm.js.map
