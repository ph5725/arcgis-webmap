import { IRequestOptions } from "@esri/arcgis-rest-request";
import { operations } from "./openapi-types.js";
declare type queryParams = Pick<operations["ElevationAtPointGet"]["parameters"]["query"], "lon" | "lat" | "relativeTo">;
declare type successResponse = operations["ElevationAtPointGet"]["responses"]["200"]["content"]["application/json"];
/**
 * The response format for {@linkcode findElevationAtPoint};
 */
export interface IFindElevationAtPointResponse extends successResponse {
}
/**
 * Options for {@linkcode findElevationAtPoint}.
 */
export interface IFindElevationAtPointOptions extends Omit<IRequestOptions, "httpMethod" | "f">, queryParams {
}
/**
 * This method returns the elevation in meters at a given longitude and latitude
 * within the WGS84 coordinate system. By default the elevation is measured with
 * respect to the Earth's mean sea level. It takes into account the local
 * variations in gravity and provides a consistent vertical reference.
 *
 * If the relativeTo query parameter is set to `ellipsoid`, the elevation will be
 * measured with respect to the ellipsoid. This is a mathematical model that
 * approximates the shape of the Earth. It does not consider local variations
 * in gravity and is commonly used in GPS positioning.
 *
 * ```
 * import { findElevationAtPoint } from "@esri/arcgis-rest-elevation";
 * import { ApiKeyManager } from "@esri/arcgis-rest-request";
 *
 * const results = await findElevationAtPoint({
 *   lon: -179.99,
 *   lat: -85.05,
 *   authentication: ApiKeyManager.fromKey("YOUR_ACCESS_TOKEN");
 * });
 *
 * console.log(results)
 * ```
 */
export declare function findElevationAtPoint(requestOptions: IFindElevationAtPointOptions): Promise<IFindElevationAtPointResponse>;
export {};
