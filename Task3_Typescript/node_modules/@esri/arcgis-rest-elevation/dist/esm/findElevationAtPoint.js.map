{"version":3,"file":"findElevationAtPoint.js","sourceRoot":"","sources":["../../src/findElevationAtPoint.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,OAAO,EACP,kBAAkB,EAEnB,MAAM,2BAA2B,CAAC;AAGnC,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAyBrC;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,UAAU,oBAAoB,CAClC,cAA4C;IAE5C,MAAM,OAAO,GAAG,kBAAkB,CAChC,cAAc,EACd,CAAC,KAAK,EAAE,KAAK,EAAE,YAAY,CAAC,oBAEvB,cAAc,EAEpB,CAAC;IAEF,OACE,OAAO,CAAC,GAAG,OAAO,qBAAqB,kCAClC,OAAO,KACV,UAAU,EAAE,KAAK,IAEpB,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;QAClB,MAAM,CAAC,qBACF,QAAQ,CACZ,CAAC;QAEF,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import {\n  request,\n  appendCustomParams,\n  IRequestOptions\n} from \"@esri/arcgis-rest-request\";\n\nimport { operations } from \"./openapi-types.js\";\nimport { baseUrl } from \"./utils.js\";\n\n// determine the list of allowed params we want to allow as options\n// this should match the array given to appendCustomParams below\ntype queryParams = Pick<\n  operations[\"ElevationAtPointGet\"][\"parameters\"][\"query\"],\n  \"lon\" | \"lat\" | \"relativeTo\"\n>;\n\n// get the correct type of the response format\ntype successResponse =\n  operations[\"ElevationAtPointGet\"][\"responses\"][\"200\"][\"content\"][\"application/json\"];\n\n/**\n * The response format for {@linkcode findElevationAtPoint};\n */\nexport interface IFindElevationAtPointResponse extends successResponse {}\n\n/**\n * Options for {@linkcode findElevationAtPoint}.\n */\nexport interface IFindElevationAtPointOptions\n  extends Omit<IRequestOptions, \"httpMethod\" | \"f\">,\n    queryParams {}\n\n/**\n * This method returns the elevation in meters at a given longitude and latitude\n * within the WGS84 coordinate system. By default the elevation is measured with\n * respect to the Earth's mean sea level. It takes into account the local\n * variations in gravity and provides a consistent vertical reference.\n *\n * If the relativeTo query parameter is set to `ellipsoid`, the elevation will be\n * measured with respect to the ellipsoid. This is a mathematical model that\n * approximates the shape of the Earth. It does not consider local variations\n * in gravity and is commonly used in GPS positioning.\n *\n * ```\n * import { findElevationAtPoint } from \"@esri/arcgis-rest-elevation\";\n * import { ApiKeyManager } from \"@esri/arcgis-rest-request\";\n *\n * const results = await findElevationAtPoint({\n *   lon: -179.99,\n *   lat: -85.05,\n *   authentication: ApiKeyManager.fromKey(\"YOUR_ACCESS_TOKEN\");\n * });\n *\n * console.log(results)\n * ```\n */\nexport function findElevationAtPoint(\n  requestOptions: IFindElevationAtPointOptions\n): Promise<IFindElevationAtPointResponse> {\n  const options = appendCustomParams<IFindElevationAtPointOptions>(\n    requestOptions,\n    [\"lon\", \"lat\", \"relativeTo\"],\n    {\n      ...requestOptions\n    }\n  );\n\n  return (\n    request(`${baseUrl}/elevation/at-point`, {\n      ...options,\n      httpMethod: \"GET\"\n    }) as Promise<successResponse>\n  ).then((response) => {\n    const r: IFindElevationAtPointResponse = {\n      ...response\n    };\n\n    return r;\n  });\n}\n"]}