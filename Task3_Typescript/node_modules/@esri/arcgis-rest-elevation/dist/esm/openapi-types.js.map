{"version":3,"file":"openapi-types.js","sourceRoot":"","sources":["../../src/openapi-types.ts"],"names":[],"mappings":"AAAA;;;GAGG","sourcesContent":["/**\n * This file was auto-generated by openapi-typescript.\n * Do not make direct changes to the file.\n */\n\nexport interface paths {\n  \"/elevation/at-point\": {\n    /**\n     * Returns the elevation in meters at a given longitude and latitude within the WGS84 coordinate system.\n     *\n     * By default the elevation is measured with respect to the Earth's mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n     *\n     * If the `relativeTo` query parameter is set to `ellipsoid`, the elevation will be measured with respect to the ellipsoid. This is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n     *\n     * Note: You cannot permanently store elevations. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).\n     */\n    get: operations[\"ElevationAtPointGet\"];\n  };\n  \"/elevation/at-many-points\": {\n    /**\n     * Returns elevations in meters at given longitudes and latitudes within the WGS84 coordinate system.\n     *\n     * The order of the points returned by this request will be the same as the order of the points passed in the\n     * `coordinates` parameter.\n     *\n     * If the distance between the furthest West and furthest East coordinate exceeds 50km, the service will return a `400` HTTP response as the distance between these points is too large.\n     *\n     * If the distance between the furthest North and furthest South coordinate exceeds 50km, the service will return a `400` HTTP response as the distance between these points is too large.\n     *\n     * If any of the points are otherwise invalid, a `400` HTTP response will be returned.\n     *\n     * By default the elevation is measured with respect to the Earth's mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n     *\n     * If the `relativeTo` parameter in the body is set to `ellipsoid`, the elevation will be measured with respect to the ellipsoid. This is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n     *\n     * Note: You cannot permanently store elevations. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).\n     *\n     * The Post Body content type must be either:\n     * - JSON with content type of `application/json`, or\n     * - form URL encoded key-value pairs with content type `application/x-www-form-urlencoded`.\n     *\n     * The following parameters are used to fetch elevations for multiple coordinates:\n     *\n     * **coordinates**\n     *   - (Required) Array of (longitude, latitude) pairs in the WGS84 spatial reference. Maximum size of 100 coordinates. The order of each pair must be\n     *     - longitude in the range `-179.99` to `179.99` representing the east/west or x-axis\n     *     - latitude in the range `-85.05` to `85.05` representing the north/south or y-axis\n     *   - For example: `[[31.134167, 29.979167], [31.130833, 29.976111], [31.128333, 29.9725]]`\n     *\n     * **f**\n     *   - (Optional) Case-sensitive parameter to specify the format in which responses are given. Can either be `json` or `pjson`.\n     *\n     * **relativeTo**\n     *   - (Optional) The reference position (datum) from which to measure elevation. The valid values are:\n     *\n     *     - **meanSeaLevel**: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n     *     - **ellipsoid**: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n     *\n     * **token**\n     *   - (Optional) The authentication token, used to access the elevation service. Alternatively, you can supply a token in the request header with either the `Authorization` or `X-Esri-Authorization` key, using the \"Bearer\" scheme.\n     */\n    post: operations[\"ElevationAtManyPointsPost\"];\n  };\n}\n\nexport interface components {\n  schemas: {\n    /** @description A geometry point referring to a location on a map. */\n    Point: {\n      /** @description The spatial reference system the point is relative to. */\n      spatialReference: {\n        /**\n         * @description The Well-Known ID (WKID) value of the spatial reference.\n         * @example 4326\n         */\n        wkid: number;\n      };\n      /**\n       * @description The X coordinate which is measured along the east/west axis.\n       * @example 86.925278\n       */\n      x: number;\n      /**\n       * @description The Y coordinate which is measured along the north/south axis.\n       * @example 27.988333\n       */\n      y: number;\n      /**\n       * @description The Z coordinate represents the vertical position of a point above or below a reference level, such as sea level (in meters, rounded to the nearest meter).\n       * @example 8744\n       */\n      z: number;\n    };\n    /** @description A structure containing human readable metadata about the specified point. */\n    ElevationInfo: {\n      /**\n       * @description The reference position (datum) from which to measure elevation.\n       * The valid values are:\n       * - meanSeaLevel: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level.\n       *                 It takes into account the local variations in gravity and provides a consistent vertical reference.\n       * - ellipsoid: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth.\n       *               It does not consider local variations in gravity and is commonly used in GPS positioning.\n       *\n       * @default meanSeaLevel\n       * @example meanSeaLevel\n       * @enum {string}\n       */\n      relativeTo: \"meanSeaLevel\" | \"ellipsoid\";\n    };\n    /** @description A structure containing a point including an elevation value (defined as Z). */\n    Elevation: {\n      /** @description The point containing the elevation. */\n      point: components[\"schemas\"][\"Point\"];\n    };\n    /**\n     * @description A structure containing a collection of points which contain elevation values (defined as Z). When returned from\n     * a request to the `/elevation/at-many-points` endpoint, the order of the points will match the order of the\n     * points in the request.\n     */\n    Elevations: {\n      points: components[\"schemas\"][\"Point\"][];\n    };\n    Error: {\n      /** @description Error information */\n      error: {\n        /**\n         * @description A code identifying the type of error, either an HTTP error code, `498` (signifying invalid or expired token), or `499` (signifying missing token).\n         * @example 400\n         * @enum {integer}\n         */\n        code: 400 | 401 | 403 | 404 | 413 | 415 | 498 | 499 | 500;\n        /** @description A message describing the error. */\n        message: string;\n        /** @description List of details about the error. */\n        details?: string[];\n        /**\n         * @description URL that provides the elevation service information.\n         * @example https://elevation-api.arcgis.com/arcgis/rest/info\n         */\n        restInfoUrl?: string;\n      };\n    };\n    /**\n     * @description Optional, case-sensitive parameter to specify the format in which responses are given. Can either be `json` or `pjson`.\n     * @enum {string}\n     */\n    Format: \"json\" | \"pjson\";\n  };\n  responses: {\n    /** Response to a request for the elevation at a specified point. */\n    ElevationResponse: {\n      content: {\n        \"application/json\": {\n          elevationInfo: components[\"schemas\"][\"ElevationInfo\"];\n          result: components[\"schemas\"][\"Elevation\"];\n        };\n      };\n    };\n    /**\n     * Response to a request for the elevations at specified points. There will be one response point for each point\n     * in the request. The order of these points will match the order of the points in the request.\n     */\n    MultipleElevationsResponse: {\n      content: {\n        \"application/json\": {\n          elevationInfo: components[\"schemas\"][\"ElevationInfo\"];\n          result: components[\"schemas\"][\"Elevations\"];\n        };\n      };\n    };\n    /** Authentication Error. The API key or token is missing, invalid or expired. */\n    UnauthorizedErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** An error occurred on the server. */\n    ServerErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** Invalid query parameters / Incorrect portal item type. */\n    InvalidQueryErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** The supplied authentication information is valid but does not have permission to access the service. */\n    PermissionMissingErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** The requested resource cannot be accessed because of incorrect sharing permissions. */\n    ResourcePermissionErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** The request body was larger than limits defined by the service. */\n    ContentTooLargeErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n    /** The request's message content is of a media-type that the service does not support. */\n    UnsupportedMediaTypeErrorResponse: {\n      content: {\n        \"application/json\": components[\"schemas\"][\"Error\"];\n      };\n    };\n  };\n  parameters: {\n    /** @description Optional, case-sensitive parameter to specify the format in which responses are given. Can either be `json` or `pjson`. */\n    FormatParam: components[\"schemas\"][\"Format\"];\n    /**\n     * @description The authentication token, used to access the elevation service.\n     *\n     * The `token` parameter can be either an API Key or short-lived token.\n     *\n     * Alternatively, you can supply a token in the request header with one of\n     * the following keys using the \"Bearer\" scheme:\n     *\n     * - `Authorization: Bearer <YOUR_TOKEN>`\n     * - `X-Esri-Authorization: Bearer <YOUR_TOKEN>`\n     *\n     * The provided `token` must be created from an ArcGIS Location Platform account and have the necessary `premium:user:elevation` privilege to use the elevation service.\n     *\n     * **Developer guide**: To learn more, go to [Security and authentication](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/).\n     */\n    TokenParam: string;\n    /** @description The longitude of the specified point. */\n    LongitudeParam: number;\n    /** @description The latitude of the specified point. */\n    LatitudeParam: number;\n    /**\n     * @description The reference position (datum) from which to measure elevation.\n     * The valid values are:\n     * - meanSeaLevel: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level.\n     *                 It takes into account the local variations in gravity and provides a consistent vertical reference.\n     * - ellipsoid: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth.\n     *               It does not consider local variations in gravity and is commonly used in GPS positioning.\n     */\n    RelativeToParam: \"meanSeaLevel\" | \"ellipsoid\";\n  };\n}\n\nexport interface operations {\n  /**\n   * Returns the elevation in meters at a given longitude and latitude within the WGS84 coordinate system.\n   *\n   * By default the elevation is measured with respect to the Earth's mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n   *\n   * If the `relativeTo` query parameter is set to `ellipsoid`, the elevation will be measured with respect to the ellipsoid. This is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n   *\n   * Note: You cannot permanently store elevations. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).\n   */\n  ElevationAtPointGet: {\n    parameters: {\n      query: {\n        /** The longitude of the specified point. */\n        lon: components[\"parameters\"][\"LongitudeParam\"];\n        /** The latitude of the specified point. */\n        lat: components[\"parameters\"][\"LatitudeParam\"];\n        /**\n         * The reference position (datum) from which to measure elevation.\n         * The valid values are:\n         * - meanSeaLevel: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level.\n         *                 It takes into account the local variations in gravity and provides a consistent vertical reference.\n         * - ellipsoid: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth.\n         *               It does not consider local variations in gravity and is commonly used in GPS positioning.\n         */\n        relativeTo?: components[\"parameters\"][\"RelativeToParam\"];\n        /**\n         * The authentication token, used to access the elevation service.\n         *\n         * The `token` parameter can be either an API Key or short-lived token.\n         *\n         * Alternatively, you can supply a token in the request header with one of\n         * the following keys using the \"Bearer\" scheme:\n         *\n         * - `Authorization: Bearer <YOUR_TOKEN>`\n         * - `X-Esri-Authorization: Bearer <YOUR_TOKEN>`\n         *\n         * The provided `token` must be created from an ArcGIS Location Platform account and have the necessary `premium:user:elevation` privilege to use the elevation service.\n         *\n         * **Developer guide**: To learn more, go to [Security and authentication](https://developers.arcgis.com/documentation/mapping-apis-and-services/security/).\n         */\n        token?: components[\"parameters\"][\"TokenParam\"];\n        /** Optional, case-sensitive parameter to specify the format in which responses are given. Can either be `json` or `pjson`. */\n        f?: components[\"parameters\"][\"FormatParam\"];\n      };\n    };\n    responses: {\n      200: components[\"responses\"][\"ElevationResponse\"];\n      400: components[\"responses\"][\"InvalidQueryErrorResponse\"];\n      401: components[\"responses\"][\"UnauthorizedErrorResponse\"];\n      403: components[\"responses\"][\"ResourcePermissionErrorResponse\"];\n      \"5XX\": components[\"responses\"][\"ServerErrorResponse\"];\n    };\n  };\n  /**\n   * Returns elevations in meters at given longitudes and latitudes within the WGS84 coordinate system.\n   *\n   * The order of the points returned by this request will be the same as the order of the points passed in the\n   * `coordinates` parameter.\n   *\n   * If the distance between the furthest West and furthest East coordinate exceeds 50km, the service will return a `400` HTTP response as the distance between these points is too large.\n   *\n   * If the distance between the furthest North and furthest South coordinate exceeds 50km, the service will return a `400` HTTP response as the distance between these points is too large.\n   *\n   * If any of the points are otherwise invalid, a `400` HTTP response will be returned.\n   *\n   * By default the elevation is measured with respect to the Earth's mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n   *\n   * If the `relativeTo` parameter in the body is set to `ellipsoid`, the elevation will be measured with respect to the ellipsoid. This is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n   *\n   * Note: You cannot permanently store elevations. Please see the [Terms of use](https://developers.arcgis.com/documentation/mapping-apis-and-services/deployment/terms-of-use/).\n   *\n   * The Post Body content type must be either:\n   * - JSON with content type of `application/json`, or\n   * - form URL encoded key-value pairs with content type `application/x-www-form-urlencoded`.\n   *\n   * The following parameters are used to fetch elevations for multiple coordinates:\n   *\n   * **coordinates**\n   *   - (Required) Array of (longitude, latitude) pairs in the WGS84 spatial reference. Maximum size of 100 coordinates. The order of each pair must be\n   *     - longitude in the range `-179.99` to `179.99` representing the east/west or x-axis\n   *     - latitude in the range `-85.05` to `85.05` representing the north/south or y-axis\n   *   - For example: `[[31.134167, 29.979167], [31.130833, 29.976111], [31.128333, 29.9725]]`\n   *\n   * **f**\n   *   - (Optional) Case-sensitive parameter to specify the format in which responses are given. Can either be `json` or `pjson`.\n   *\n   * **relativeTo**\n   *   - (Optional) The reference position (datum) from which to measure elevation. The valid values are:\n   *\n   *     - **meanSeaLevel**: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level. It takes into account the local variations in gravity and provides a consistent vertical reference.\n   *     - **ellipsoid**: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth. It does not consider local variations in gravity and is commonly used in GPS positioning.\n   *\n   * **token**\n   *   - (Optional) The authentication token, used to access the elevation service. Alternatively, you can supply a token in the request header with either the `Authorization` or `X-Esri-Authorization` key, using the \"Bearer\" scheme.\n   */\n  ElevationAtManyPointsPost: {\n    responses: {\n      200: components[\"responses\"][\"MultipleElevationsResponse\"];\n      400: components[\"responses\"][\"InvalidQueryErrorResponse\"];\n      401: components[\"responses\"][\"UnauthorizedErrorResponse\"];\n      403: components[\"responses\"][\"ResourcePermissionErrorResponse\"];\n      413: components[\"responses\"][\"ContentTooLargeErrorResponse\"];\n      415: components[\"responses\"][\"UnsupportedMediaTypeErrorResponse\"];\n      \"5XX\": components[\"responses\"][\"ServerErrorResponse\"];\n    };\n    requestBody: {\n      content: {\n        \"application/json\": {\n          /**\n           * @description The authentication token, used to access the elevation service.\n           *\n           * The `token` parameter can be either an API Key or short-lived token.\n           *\n           * Alternatively, you can supply a token in the request header with one of\n           * the following keys using the \"Bearer\" scheme:\n           *\n           * - `Authorization: Bearer <YOUR_TOKEN>`\n           * - `X-Esri-Authorization: Bearer <YOUR_TOKEN>`\n           *\n           * The provided `token` must be created from an ArcGIS Location Platform account and have the necessary `premium:user:elevation` privilege to use the elevation service.\n           *\n           * **Developer guide**: To learn more, go to [Security and authentication](https://developers.arcgis.com/documentation/security-and-authentication/).\n           *\n           * @example My token\n           */\n          token?: string;\n          /**\n           * @description The reference position (datum) from which to measure elevation.\n           * The valid values are:\n           * - meanSeaLevel: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level.\n           *                 It takes into account the local variations in gravity and provides a consistent vertical reference.\n           * - ellipsoid: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth.\n           *               It does not consider local variations in gravity and is commonly used in GPS positioning.\n           *\n           * @default meanSeaLevel\n           * @example meanSeaLevel\n           * @enum {string}\n           */\n          relativeTo?: \"meanSeaLevel\" | \"ellipsoid\";\n          f?: components[\"schemas\"][\"Format\"];\n          /**\n           * @description Array of (longitude, latitude) pairs in the WGS84 spatial reference. Maximum size of 100 coordinates. The order of each pair must be\n           *   - longitude in the range `-179.99` to `179.99` representing the east/west or x-axis\n           *   - latitude in the range `-85.05` to `85.05` representing the north/south or y-axis\n           *\n           * For example: `[[31.134167, 29.979167], [31.130833, 29.976111], [31.128333, 29.9725]]`\n           *\n           * @example [\n           *   [\n           *     31.134167,\n           *     29.979167\n           *   ],\n           *   [\n           *     31.130833,\n           *     29.976111\n           *   ],\n           *   [\n           *     31.128333,\n           *     29.9725\n           *   ]\n           * ]\n           */\n          coordinates: number[][];\n        };\n        \"application/x-www-form-urlencoded\": {\n          /**\n           * @description The authentication token, used to access the elevation service.\n           *\n           * The `token` parameter can be either an API Key or short-lived token.\n           *\n           * Alternatively, you can supply a token in the request header with one of\n           * the following keys using the \"Bearer\" scheme:\n           *\n           * - `Authorization: Bearer <YOUR_TOKEN>`\n           * - `X-Esri-Authorization: Bearer <YOUR_TOKEN>`\n           *\n           * The provided `token` must be created from an ArcGIS Location Platform account and have the necessary `premium:user:elevation` privilege to use the elevation service.\n           *\n           * **Developer guide**: To learn more, go to [Security and authentication](https://developers.arcgis.com/documentation/security-and-authentication/).\n           *\n           * @example My token\n           */\n          token?: string;\n          /**\n           * @description The reference position (datum) from which to measure elevation.\n           * The valid values are:\n           * - meanSeaLevel: The elevation above or below the WGS84 geoid reference surface, which is approximately the mean sea level.\n           *                 It takes into account the local variations in gravity and provides a consistent vertical reference.\n           * - ellipsoid: Ellipsoidal height is measured with respect to an ellipsoid, which is a mathematical model that approximates the shape of the Earth.\n           *               It does not consider local variations in gravity and is commonly used in GPS positioning.\n           *\n           * @default meanSeaLevel\n           * @example meanSeaLevel\n           * @enum {string}\n           */\n          relativeTo?: \"meanSeaLevel\" | \"ellipsoid\";\n          f?: components[\"schemas\"][\"Format\"];\n          /**\n           * @description Array of (longitude, latitude) pairs in the WGS84 spatial reference. Maximum size of 100 coordinates. The order of each pair must be\n           *   - longitude in the range `-179.99` to `179.99` representing the east/west or x-axis\n           *   - latitude in the range `-85.05` to `85.05` representing the north/south or y-axis\n           *\n           * For example: `[[31.134167, 29.979167], [31.130833, 29.976111], [31.128333, 29.9725]]`\n           *\n           * @example [\n           *   [\n           *     31.134167,\n           *     29.979167\n           *   ],\n           *   [\n           *     31.130833,\n           *     29.976111\n           *   ],\n           *   [\n           *     31.128333,\n           *     29.9725\n           *   ]\n           * ]\n           */\n          coordinates: number[][];\n        };\n      };\n    };\n  };\n}\n\nexport interface external {}\n"]}