"use strict";
/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.
 * Apache-2.0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.determineUsername = void 0;
/**
 * Used to determine the username to use in a request. Will use the `username` passed in the
 * `requestOptions` if present, otherwise will use the username from the `authentication` option.
 * This method is used internally to determine the username to use in a request and is async to
 * support the case where the username is not immediately available.
 *
 * @param requestOptions the requests options
 * @returns the authentecated users username encoded for use in a URL.
 */
async function determineUsername(requestOptions) {
    var _a;
    if (requestOptions.username) {
        return encodeURIComponent(requestOptions.username);
    }
    if ((_a = requestOptions.authentication) === null || _a === void 0 ? void 0 : _a.username) {
        return encodeURIComponent(requestOptions.authentication.username);
    }
    if (requestOptions.authentication) {
        return requestOptions.authentication.getUsername().then(encodeURIComponent);
    }
}
exports.determineUsername = determineUsername;
//# sourceMappingURL=determine-username.js.map