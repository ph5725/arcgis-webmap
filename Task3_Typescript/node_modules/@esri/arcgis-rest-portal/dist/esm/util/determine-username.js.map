{"version":3,"file":"determine-username.js","sourceRoot":"","sources":["../../../src/util/determine-username.ts"],"names":[],"mappings":"AAAA;gBACgB;AAYhB;;;;;;;;GAQG;AACH,MAAM,CAAC,KAAK,UAAU,iBAAiB,CACrC,cAA0C;;IAE1C,IAAI,cAAc,CAAC,QAAQ,EAAE;QAC3B,OAAO,kBAAkB,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;KACpD;IACD,IAAI,MAAC,cAAc,CAAC,cAAsB,0CAAE,QAAQ,EAAE;QACpD,OAAO,kBAAkB,CAAE,cAAc,CAAC,cAAsB,CAAC,QAAQ,CAAC,CAAC;KAC5E;IACD,IAAI,cAAc,CAAC,cAAc,EAAE;QACjC,OAAO,cAAc,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;KAC7E;AACH,CAAC","sourcesContent":["/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n\nimport {\n  IAuthenticationManager,\n  IRequestOptions\n} from \"@esri/arcgis-rest-request\";\n\ninterface RequestOptionsWithUsername extends Partial<IRequestOptions> {\n  username?: string;\n  authentication?: IAuthenticationManager;\n}\n\n/**\n * Used to determine the username to use in a request. Will use the `username` passed in the\n * `requestOptions` if present, otherwise will use the username from the `authentication` option.\n * This method is used internally to determine the username to use in a request and is async to\n * support the case where the username is not immediately available.\n *\n * @param requestOptions the requests options\n * @returns the authentecated users username encoded for use in a URL.\n */\nexport async function determineUsername(\n  requestOptions: RequestOptionsWithUsername\n): Promise<string> {\n  if (requestOptions.username) {\n    return encodeURIComponent(requestOptions.username);\n  }\n  if ((requestOptions.authentication as any)?.username) {\n    return encodeURIComponent((requestOptions.authentication as any).username);\n  }\n  if (requestOptions.authentication) {\n    return requestOptions.authentication.getUsername().then(encodeURIComponent);\n  }\n}\n"]}